// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:3.1.0.0
//      SpecFlow Generator Version:3.1.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Cmc.Engage.UIAutomation.SpecFlow.Features.TestScore
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.1.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class TestScoreFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
        private Microsoft.VisualStudio.TestTools.UnitTesting.TestContext _testContext;
        
        private string[] _featureTags = ((string[])(null));
        
#line 1 "TestScore.feature"
#line hidden
        
        public virtual Microsoft.VisualStudio.TestTools.UnitTesting.TestContext TestContext
        {
            get
            {
                return this._testContext;
            }
            set
            {
                this._testContext = value;
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "TestScore", null, ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((testRunner.FeatureContext != null) 
                        && (testRunner.FeatureContext.FeatureInfo.Title != "TestScore")))
            {
                global::Cmc.Engage.UIAutomation.SpecFlow.Features.TestScore.TestScoreFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<Microsoft.VisualStudio.TestTools.UnitTesting.TestContext>(_testContext);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void _01CreateTestScore(string testCaseID, string studentAdvisor, string area, string subArea, string lastName, string subGridName, string subGridButton, string testDate, string testSource, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Apply"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("01 Create Test Score", null, @__tags);
#line 4
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
testRunner.Given(string.Format("I have logged in as a {0}", studentAdvisor), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 6
testRunner.And(string.Format("I navigate to main Area and SubArea {0}", subArea), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 7
testRunner.And("I have clicked New command in View", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 8
testRunner.And(string.Format("I have set {0} to lastname text field uniquely in the Form", lastName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 9
testRunner.When("I scroll in to view of INITIAL SOURCE section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 10
testRunner.Then("I select Recommender options in mshied_contacttype_i multivalue optionset", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 11
testRunner.When("I press Save in the form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 12
testRunner.Then("the Entity should be saved", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 13
testRunner.And("I wait for 2000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 14
testRunner.Given("I select the tab Student Records in the form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 16
testRunner.And(string.Format("I click {0} command on {1} SubGrid when available", subGridButton, subGridName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 17
 testRunner.And(string.Format("I click More Commands button on {0} SubGrid only if available", subGridName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 18
testRunner.And(string.Format("I click {0} SubGrid option on More Commands SubGrid when available", subGridButton), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 19
testRunner.When("I select SAT Form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 20
testRunner.Then("I click Discard changes in Confirmation dialog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 21
testRunner.When("I wait for 3000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 23
testRunner.When(string.Format("I have set date value {0} to Test Date field in the Form", testDate), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 24
testRunner.And("I wait for 3000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 25
testRunner.And("I set Official option to mshied_testsource PCF control field in General section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 26
testRunner.And("I wait for 2000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 27
testRunner.And("I scroll in to view of TEST COMPONENTS section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table50 = new TechTalk.SpecFlow.Table(new string[] {
                            "Type",
                            "sectionLabel",
                            "FieldName",
                            "FieldValue"});
                table50.AddRow(new string[] {
                            "Field",
                            "General",
                            "Include in Score Calculations",
                            "true"});
                table50.AddRow(new string[] {
                            "Field",
                            "General",
                            "Evidence-Based Reading and Writing Section",
                            ""});
                table50.AddRow(new string[] {
                            "Field",
                            "General",
                            "Math Section",
                            ""});
                table50.AddRow(new string[] {
                            "Field",
                            "General",
                            "SAT Essay - Analysis",
                            ""});
                table50.AddRow(new string[] {
                            "Field",
                            "General",
                            "SAT Essay - Reading",
                            ""});
                table50.AddRow(new string[] {
                            "Field",
                            "General",
                            "SAT Essay - Writing",
                            ""});
                table50.AddRow(new string[] {
                            "Field",
                            "General",
                            "Total Score",
                            ""});
                table50.AddRow(new string[] {
                            "Field",
                            "General",
                            "ACT Equivalent Score",
                            ""});
#line 28
testRunner.Then("I verify below fields", ((string)(null)), table50, "Then ");
#line hidden
#line 39
testRunner.When("I have set Bangalore to mshied_testlocation text field in the Form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 40
testRunner.And("I have set 600 to mshied_satevidencebasedreadingandwritingsection numeric field i" +
                        "n the Form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 41
testRunner.And("I have set 700 to mshied_satmathsection numeric field in the Form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 42
testRunner.And("I have set 6 to mshied_satessayanalysis numeric field in the Form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 43
testRunner.And("I have set 6 to mshied_satessayreading numeric field in the Form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 44
testRunner.And("I have set 6 to mshied_satessaywriting numeric field in the Form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 45
testRunner.And("I have set 1100 to mshied_sattotalscore numeric field in the Form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 46
testRunner.When("I press Save in the form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 47
testRunner.Then("the Entity should be saved", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 48
testRunner.And("mshied_actequivalentscore field value should not be empty", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 49
testRunner.And("I click mshied_studentid locked lookup field in General section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 50
testRunner.Given("I select the tab Student Records in the form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 51
testRunner.And(string.Format("I click {0} command on {1} SubGrid when available", subGridButton, subGridName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 52
 testRunner.And(string.Format("I click More Commands button on {0} SubGrid only if available", subGridName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 53
testRunner.And(string.Format("I click {0} SubGrid option on More Commands SubGrid when available", subGridButton), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 54
testRunner.When("I select ACT Form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 55
testRunner.Then("I click Discard changes in Confirmation dialog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 56
testRunner.When("I wait for 2000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table51 = new TechTalk.SpecFlow.Table(new string[] {
                            "Type",
                            "sectionLabel",
                            "FieldName",
                            "FieldValue"});
                table51.AddRow(new string[] {
                            "Field",
                            "General",
                            "Contact",
                            ""});
                table51.AddRow(new string[] {
                            "Field",
                            "General",
                            "Test Date",
                            ""});
                table51.AddRow(new string[] {
                            "Field",
                            "General",
                            "Test Source",
                            ""});
                table51.AddRow(new string[] {
                            "Field",
                            "General",
                            "Test Location",
                            ""});
                table51.AddRow(new string[] {
                            "Field",
                            "General",
                            "Composite",
                            ""});
                table51.AddRow(new string[] {
                            "Field",
                            "General",
                            "SAT Equivalent Score",
                            ""});
#line 57
testRunner.Then("I verify below fields", ((string)(null)), table51, "Then ");
#line hidden
#line 65
testRunner.And("I scroll in to view of TEST COMPONENTS section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table52 = new TechTalk.SpecFlow.Table(new string[] {
                            "Type",
                            "sectionLabel",
                            "FieldName",
                            "FieldValue"});
                table52.AddRow(new string[] {
                            "Field",
                            "General",
                            "Math",
                            ""});
                table52.AddRow(new string[] {
                            "Field",
                            "General",
                            "Science",
                            ""});
                table52.AddRow(new string[] {
                            "Field",
                            "General",
                            "Include in Score Calculations",
                            ""});
                table52.AddRow(new string[] {
                            "Field",
                            "General",
                            "English",
                            ""});
                table52.AddRow(new string[] {
                            "Field",
                            "General",
                            "Reading",
                            ""});
                table52.AddRow(new string[] {
                            "Field",
                            "General",
                            "Writing",
                            ""});
                table52.AddRow(new string[] {
                            "Field",
                            "General",
                            "STEM",
                            ""});
                table52.AddRow(new string[] {
                            "Field",
                            "General",
                            "ELA",
                            ""});
#line 66
testRunner.Then("I verify below fields", ((string)(null)), table52, "Then ");
#line hidden
#line 76
testRunner.And("I verify in General section Locked SAT Equivalent Score field is locked", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 78
testRunner.When("I wait for 3000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 79
testRunner.When(string.Format("I have set date value {0} to Test Date field in the Form", testDate), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 80
testRunner.And("I wait for 4000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 81
testRunner.And("I set Self - Reported option to mshied_testsource PCF control field in General se" +
                        "ction", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 82
testRunner.And("I wait for 3000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 83
testRunner.And("I have set Bangalore to mshied_testlocation text field in the Form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 84
testRunner.And("I have set 32 to mshied_actmath numeric field in the Form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 85
testRunner.And("I have set 32 to mshied_actscience numeric field in the Form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 86
testRunner.And("I have set 32 to mshied_actenglish numeric field in the Form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 87
testRunner.And("I have set 32 to mshied_actreading numeric field in the Form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 88
testRunner.And("I have set 30 to mshied_actcomposite numeric field in the Form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 89
testRunner.When("I press Save in the form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 90
testRunner.Then("the Entity should be saved", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 91
testRunner.And("I wait for 2000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 92
testRunner.And("cmc_satequivalentscore field value should not be empty", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 94
testRunner.And("I have clicked New command in View", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 95
testRunner.And("I select ACT Form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 96
testRunner.Then("I click Discard changes in Confirmation dialog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 97
testRunner.When("I wait for 3000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table53 = new TechTalk.SpecFlow.Table(new string[] {
                            "Type",
                            "sectionLabel",
                            "FieldName",
                            "FieldValue"});
                table53.AddRow(new string[] {
                            "Field",
                            "General",
                            "Contact",
                            ""});
                table53.AddRow(new string[] {
                            "Field",
                            "General",
                            "Test Date",
                            ""});
                table53.AddRow(new string[] {
                            "Field",
                            "General",
                            "Test Source",
                            ""});
                table53.AddRow(new string[] {
                            "Field",
                            "General",
                            "Test Location",
                            ""});
                table53.AddRow(new string[] {
                            "Field",
                            "General",
                            "Composite",
                            ""});
                table53.AddRow(new string[] {
                            "Field",
                            "General",
                            "SAT Equivalent Score",
                            ""});
#line 98
testRunner.Then("I verify below fields", ((string)(null)), table53, "Then ");
#line hidden
#line 106
testRunner.And("I scroll in to view of TEST COMPONENTS section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table54 = new TechTalk.SpecFlow.Table(new string[] {
                            "Type",
                            "sectionLabel",
                            "FieldName",
                            "FieldValue"});
                table54.AddRow(new string[] {
                            "Field",
                            "General",
                            "Math",
                            ""});
                table54.AddRow(new string[] {
                            "Field",
                            "General",
                            "Science",
                            ""});
                table54.AddRow(new string[] {
                            "Field",
                            "General",
                            "Include in Score Calculations",
                            ""});
                table54.AddRow(new string[] {
                            "Field",
                            "General",
                            "English",
                            ""});
                table54.AddRow(new string[] {
                            "Field",
                            "General",
                            "Reading",
                            ""});
                table54.AddRow(new string[] {
                            "Field",
                            "General",
                            "Writing",
                            ""});
                table54.AddRow(new string[] {
                            "Field",
                            "General",
                            "STEM",
                            ""});
                table54.AddRow(new string[] {
                            "Field",
                            "General",
                            "ELA",
                            ""});
#line 107
testRunner.Then("I verify below fields", ((string)(null)), table54, "Then ");
#line hidden
#line 117
testRunner.And("I verify in General section Locked SAT Equivalent Score field is locked", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 119
testRunner.When("I select IELTS Form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 120
testRunner.Then("I click Discard changes in Confirmation dialog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 121
testRunner.When("I wait for 3000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table55 = new TechTalk.SpecFlow.Table(new string[] {
                            "Type",
                            "sectionLabel",
                            "FieldName",
                            "FieldValue"});
                table55.AddRow(new string[] {
                            "Field",
                            "General",
                            "Contact",
                            ""});
                table55.AddRow(new string[] {
                            "Field",
                            "General",
                            "Test Date",
                            ""});
                table55.AddRow(new string[] {
                            "Field",
                            "General",
                            "Test Source",
                            ""});
                table55.AddRow(new string[] {
                            "Field",
                            "General",
                            "Test Location",
                            ""});
                table55.AddRow(new string[] {
                            "Field",
                            "General",
                            "Overall Band Score",
                            ""});
                table55.AddRow(new string[] {
                            "Field",
                            "General",
                            "CEFR",
                            ""});
#line 122
testRunner.And("I verify below fields", ((string)(null)), table55, "And ");
#line hidden
#line 130
testRunner.And("I scroll in to view of TEST COMPONENTS section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table56 = new TechTalk.SpecFlow.Table(new string[] {
                            "Type",
                            "sectionLabel",
                            "FieldName",
                            "FieldValue"});
                table56.AddRow(new string[] {
                            "Field",
                            "General",
                            "Listening",
                            ""});
                table56.AddRow(new string[] {
                            "Field",
                            "General",
                            "Reading",
                            ""});
                table56.AddRow(new string[] {
                            "Field",
                            "General",
                            "Writing",
                            ""});
                table56.AddRow(new string[] {
                            "Field",
                            "General",
                            "Speaking Score",
                            ""});
#line 131
testRunner.Then("I verify below fields", ((string)(null)), table56, "Then ");
#line hidden
#line 138
testRunner.When("I select GMAT Form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 139
testRunner.Then("I click Discard changes in Confirmation dialog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 140
testRunner.When("I wait for 3000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table57 = new TechTalk.SpecFlow.Table(new string[] {
                            "Type",
                            "sectionLabel",
                            "FieldName",
                            "FieldValue"});
                table57.AddRow(new string[] {
                            "Field",
                            "General",
                            "Contact",
                            ""});
                table57.AddRow(new string[] {
                            "Field",
                            "General",
                            "Test Date",
                            ""});
                table57.AddRow(new string[] {
                            "Field",
                            "General",
                            "Test Source",
                            ""});
                table57.AddRow(new string[] {
                            "Field",
                            "General",
                            "Test Location",
                            ""});
                table57.AddRow(new string[] {
                            "Field",
                            "General",
                            "Total",
                            ""});
#line 141
testRunner.And("I verify below fields", ((string)(null)), table57, "And ");
#line hidden
#line 148
testRunner.And("I scroll in to view of TEST COMPONENTS section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table58 = new TechTalk.SpecFlow.Table(new string[] {
                            "Type",
                            "sectionLabel",
                            "FieldName",
                            "FieldValue"});
                table58.AddRow(new string[] {
                            "Field",
                            "General",
                            "Analytical Writing",
                            ""});
                table58.AddRow(new string[] {
                            "Field",
                            "General",
                            "Integrated Reasoning",
                            ""});
                table58.AddRow(new string[] {
                            "Field",
                            "General",
                            "Quantitative Reasoning",
                            ""});
                table58.AddRow(new string[] {
                            "Field",
                            "General",
                            "Verbal Reasoning",
                            ""});
#line 149
testRunner.Then("I verify below fields", ((string)(null)), table58, "Then ");
#line hidden
#line 156
testRunner.When("I select GRE Form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 157
testRunner.Then("I click Discard changes in Confirmation dialog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 158
testRunner.When("I wait for 3000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table59 = new TechTalk.SpecFlow.Table(new string[] {
                            "Type",
                            "sectionLabel",
                            "FieldName",
                            "FieldValue"});
                table59.AddRow(new string[] {
                            "Field",
                            "General",
                            "Contact",
                            ""});
                table59.AddRow(new string[] {
                            "Field",
                            "General",
                            "Test Date",
                            ""});
                table59.AddRow(new string[] {
                            "Field",
                            "General",
                            "Test Source",
                            ""});
                table59.AddRow(new string[] {
                            "Field",
                            "General",
                            "Test Location",
                            ""});
                table59.AddRow(new string[] {
                            "Field",
                            "General",
                            "Total Score",
                            ""});
#line 159
testRunner.And("I verify below fields", ((string)(null)), table59, "And ");
#line hidden
#line 166
testRunner.And("I scroll in to view of TEST COMPONENTS section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table60 = new TechTalk.SpecFlow.Table(new string[] {
                            "Type",
                            "sectionLabel",
                            "FieldName",
                            "FieldValue"});
                table60.AddRow(new string[] {
                            "Field",
                            "General",
                            "Analytical Reasoning",
                            ""});
                table60.AddRow(new string[] {
                            "Field",
                            "General",
                            "Quantitative Reasoning",
                            ""});
                table60.AddRow(new string[] {
                            "Field",
                            "General",
                            "Verbal Reasoning",
                            ""});
#line 167
testRunner.Then("I verify below fields", ((string)(null)), table60, "Then ");
#line hidden
#line 174
testRunner.When("I select TOEFL Form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 175
testRunner.Then("I click Discard changes in Confirmation dialog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 176
testRunner.When("I wait for 3000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table61 = new TechTalk.SpecFlow.Table(new string[] {
                            "Type",
                            "sectionLabel",
                            "FieldName",
                            "FieldValue"});
                table61.AddRow(new string[] {
                            "Field",
                            "General",
                            "Contact",
                            ""});
                table61.AddRow(new string[] {
                            "Field",
                            "General",
                            "Test Date",
                            ""});
                table61.AddRow(new string[] {
                            "Field",
                            "General",
                            "Test Source",
                            ""});
                table61.AddRow(new string[] {
                            "Field",
                            "General",
                            "Test Location",
                            ""});
                table61.AddRow(new string[] {
                            "Field",
                            "General",
                            "Total Score",
                            ""});
#line 177
testRunner.And("I verify below fields", ((string)(null)), table61, "And ");
#line hidden
#line 184
testRunner.And("I scroll in to view of TEST COMPONENTS section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table62 = new TechTalk.SpecFlow.Table(new string[] {
                            "Type",
                            "sectionLabel",
                            "FieldName",
                            "FieldValue"});
                table62.AddRow(new string[] {
                            "Field",
                            "General",
                            "Listening Section",
                            ""});
                table62.AddRow(new string[] {
                            "Field",
                            "General",
                            "Reading Section",
                            ""});
                table62.AddRow(new string[] {
                            "Field",
                            "General",
                            "Speaking Section",
                            ""});
                table62.AddRow(new string[] {
                            "Field",
                            "General",
                            "Writing Section",
                            ""});
#line 185
testRunner.Then("I verify below fields", ((string)(null)), table62, "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("01 Create Test Score: 803241")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "TestScore")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Apply")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "803241")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Test Case ID", "803241")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:StudentAdvisor", "StudentAdvisor")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Area", "Constituents")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SubArea", "Contacts")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:LastName", "YashiTest")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:subGridName", "TEST SCORES")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:subGridButton", "New Test Score")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:TestDate", "04/09/2020")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:TestSource", "494280000")]
        public virtual void _01CreateTestScore_803241()
        {
#line 4
this._01CreateTestScore("803241", "StudentAdvisor", "Constituents", "Contacts", "YashiTest", "TEST SCORES", "New Test Score", "04/09/2020", "494280000", ((string[])(null)));
#line hidden
        }
    }
}
#pragma warning restore
#endregion
