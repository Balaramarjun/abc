// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:3.1.0.0
//      SpecFlow Generator Version:3.1.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Cmc.Engage.UIAutomation.SpecFlow.Features.Contact
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.1.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class ContactFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
        private Microsoft.VisualStudio.TestTools.UnitTesting.TestContext _testContext;
        
        private string[] _featureTags = new string[] {
                "Contactfeature"};
        
#line 1 "Contact.feature"
#line hidden
        
        public virtual Microsoft.VisualStudio.TestTools.UnitTesting.TestContext TestContext
        {
            get
            {
                return this._testContext;
            }
            set
            {
                this._testContext = value;
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Contact", null, ProgrammingLanguage.CSharp, new string[] {
                        "Contactfeature"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((testRunner.FeatureContext != null) 
                        && (testRunner.FeatureContext.FeatureInfo.Title != "Contact")))
            {
                global::Cmc.Engage.UIAutomation.SpecFlow.Features.Contact.ContactFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<Microsoft.VisualStudio.TestTools.UnitTesting.TestContext>(_testContext);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void _01ContactFormVerification(string testCaseID, string persona, string area, string subArea, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Contact"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("01 Contact Form Verification", null, @__tags);
#line 5
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 6
                testRunner.Given(string.Format("I have logged in as a {0}", persona), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 7
    testRunner.And(string.Format("I navigate to main Area and SubArea {0}", subArea), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 8
                testRunner.And("I switch the view to Active Contacts", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 9
    testRunner.And("I wait for 2000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 10
                testRunner.And("I search UIAuto Contact-844969 in the grid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 11
                testRunner.And("I open the first record in the grid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 12
    testRunner.And("I wait for 2000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 13
                testRunner.And("I select the tab Key Information in the form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 14
    testRunner.Then("I click activity button Phone Call in INTERACTION OVERVIEW Timeline Section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 15
    testRunner.And("I switch back to default frame", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 16
    testRunner.And("I click Internal connections button in Connections section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 17
                testRunner.When("I have set Mr to cmc_title optionset field in the Form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 18
                testRunner.And("I have clicked More commands command on HOLD ASSIGNMENTS SubGrid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 19
                testRunner.And("I verify in INITIAL SOURCE section Locked Originating Inbound Interest field is l" +
                        "ocked", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 20
                testRunner.And("I have clicked More Commands command on CONNECTIONS LIST SubGrid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 22
                testRunner.Given("I select the tab Contact Overview in the form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 23
                testRunner.When("I have set American to mshied_nationality optionset field in the Form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 24
                testRunner.And("I have set Male to gendercode optionset field in the Form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 25
    testRunner.And("I scroll in to view of CONTACT PREFERENCES section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 26
                testRunner.And("I have set Any to preferredcontactmethodcode optionset field in the Form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 27
                testRunner.And("I have clicked More Commands command on PRIVATE NOTES SubGrid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 28
                testRunner.And("I have set test to nickname text field in the Form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 29
                testRunner.And("I have clicked More Commands command on ADDRESS SubGrid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 31
 testRunner.Given("I select the tab Inbound Interest & Lifecycle in the form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 32
 testRunner.When("I verify in MARKETING section Locked Source email field is locked", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 33
 testRunner.And("I have clicked More Commands command on INBOUND INTERESTS SubGrid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 34
 testRunner.And("I have clicked More Commands command on LIFECYCLES SubGrid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 35
 testRunner.And("I wait for 2000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 36
 testRunner.Given("I select the tab Student Records in the form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 37
 testRunner.When("I wait for 2000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 39
 testRunner.And("I have clicked More Commands command on TEST SCORES SubGrid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 40
 testRunner.And("I verify in STUDENT LOGIN section Locked External Identifier field is locked", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 41
 testRunner.And("I have clicked More Commands command on AREA OF INTEREST SubGrid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 42
 testRunner.And("I have clicked More Commands command on EXTRA CURRICULAR PARTICIPANTS SubGrid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 43
 testRunner.And("I have clicked More Commands command on PREVIOUS EDUCATION SubGrid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 44
 testRunner.And("I scroll in to view of SCORES section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 45
 testRunner.And("I verify in SCORES section Locked ACT Superscore field is locked", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 46
 testRunner.And("I scroll in to view of PREVIOUS EDUCATION section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 47
 testRunner.Given("I select the tab Student Progress in the form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 48
 testRunner.When("I wait for 2000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 49
 testRunner.When("I have clicked More Commands command on ENROLLMENT SubGrid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 50
 testRunner.And("I have clicked More Commands command on SUCCESS NETWORK SubGrid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 51
 testRunner.And("I have clicked More Commands command on ACADEMIC PROGRESS SubGrid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 52
 testRunner.And("I have clicked More Commands command on CLASS SCHEDULE SubGrid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 53
 testRunner.Then("I select Contact(Reach) Form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 55
 testRunner.Given("I select the tab Student Success Profile in the form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 56
 testRunner.When("I wait for 2000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 57
 testRunner.When("I have clicked More Commands command on SUCCESS PLANS SubGrid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 58
 testRunner.And("I have clicked More Commands command on TO DOs SubGrid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 59
 testRunner.And("I have clicked More Commands command on POSITIVE ACKNOWLEDGEMENTS SubGrid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 60
 testRunner.And("I have clicked More Commands command on FEEDBACK SubGrid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 61
 testRunner.Then("I select Contact(Reach) Form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 63
 testRunner.Given("I select the tab Events in the form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 64
 testRunner.When("I wait for 2000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 65
 testRunner.When("I have clicked More Commands command on REGISTERED EVENTS SubGrid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 66
 testRunner.And("I have clicked More Commands command on REGISTERED SESSIONS SubGrid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 67
 testRunner.And("I have clicked More Commands command on CHECKED-IN EVENTS SubGrid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 68
 testRunner.And("I have clicked More Commands command on CHECKED-IN SESSIONS SubGrid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("01 Contact Form Verification: 844969")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Contact")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Contactfeature")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Contact")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "844969")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Test Case ID", "844969")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Persona", "StudentAdvisor")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Area", "Constituents")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SubArea", "Contacts")]
        public virtual void _01ContactFormVerification_844969()
        {
#line 5
this._01ContactFormVerification("844969", "StudentAdvisor", "Constituents", "Contacts", ((string[])(null)));
#line hidden
        }
        
        public virtual void _02ValidateContactTypeField(string testCaseID, string persona, string area, string subArea, string lastName, string contactType, string contactType1, string contactType2, string contactType3, string contactType4, string contactType5, string contactType6, string method, string category, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Contact"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("02 Validate \'Contact Type\' field", null, @__tags);
#line 75
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 76
 testRunner.Given(string.Format("I have logged in as a {0}", persona), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 77
 testRunner.And(string.Format("I navigate to main Area and SubArea {0}", subArea), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 78
 testRunner.And("I wait for 2000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 79
 testRunner.And("I have clicked New command in View", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 80
 testRunner.And(string.Format("I have set {0} to lastname text field uniquely in the Form", lastName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 81
 testRunner.Then("I press Save in the form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 82
 testRunner.And("I click Ignore And Save button in dialog only if available", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 83
 testRunner.And("I wait for 1000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 84
 testRunner.And("I scroll in to view of INITIAL SOURCE section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 85
 testRunner.And("I wait for 1000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 86
 testRunner.Then(string.Format("I select {0} options in mshied_contacttype_i multivalue optionset", contactType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 87
 testRunner.And(string.Format("I select {0} options in mshied_contacttype_i multivalue optionset", contactType1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 88
 testRunner.And(string.Format("I select {0} options in mshied_contacttype_i multivalue optionset", contactType2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 89
 testRunner.And(string.Format("I select {0} options in mshied_contacttype_i multivalue optionset", contactType3), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 90
 testRunner.And(string.Format("I select {0} options in mshied_contacttype_i multivalue optionset", contactType4), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 91
 testRunner.And(string.Format("I select {0} options in mshied_contacttype_i multivalue optionset", contactType5), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 92
 testRunner.And(string.Format("I select {0} options in mshied_contacttype_i multivalue optionset", contactType6), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 93
 testRunner.When("I wait for 2000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 94
 testRunner.Then("I press Save in the form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 95
 testRunner.And("the Entity should be saved", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 96
 testRunner.When("I wait for 3000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 97
 testRunner.And("I scrolldown to End of INITIAL SOURCE section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 98
 testRunner.When("I verify in INITIAL SOURCE section Locked Method field is locked", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 99
 testRunner.And("I verify in INITIAL SOURCE section Locked Category field is locked", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 100
 testRunner.And("I scroll in to view of INITIAL SOURCE section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 101
 testRunner.And("I have set ALS to parentcustomerid lookup item in the Form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 102
 testRunner.Then("I select Student options in mshied_contacttype_i multivalue optionset by removing" +
                        " existing selections", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 103
 testRunner.And("I press Save in the form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 104
 testRunner.And("the Entity should be saved", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 105
 testRunner.When("I wait for 3000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 106
 testRunner.And("I scrolldown to End of INITIAL SOURCE section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 107
 testRunner.When("I verify in INITIAL SOURCE section Locked Method field is locked", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 108
 testRunner.And("I verify in INITIAL SOURCE section Locked Category field is locked", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 109
 testRunner.And("I select the tab Inbound Interest & Lifecycle in the form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 110
 testRunner.When("I wait for 1000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 111
 testRunner.When("I click available command New Inbound Interest on INBOUND INTERESTS SubGrid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 112
 testRunner.And("I click New Inbound Interest SubGrid option on More Commands SubGrid when availab" +
                        "le", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 114
 testRunner.When("I wait for 10000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 116
 testRunner.And("I scrolldown to End of SOURCE section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 117
 testRunner.And(string.Format("I have set {0} to cmc_sourcemethodid lookup item in the Form", method), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 118
 testRunner.When("I wait for 2000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 121
 testRunner.When("I wait for 2000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 122
 testRunner.And(string.Format("I have set {0} to cmc_sourcecategoryid lookup item in the Form", category), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 123
 testRunner.When("I wait for 2000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 124
 testRunner.Then("I press Save in the form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 125
 testRunner.And("the Entity should be saved", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 126
 testRunner.When("I wait for 3000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table34 = new TechTalk.SpecFlow.Table(new string[] {
                            "Type",
                            "sectionLabel",
                            "FieldName",
                            "FieldValue"});
                table34.AddRow(new string[] {
                            "Field",
                            "GENERAL",
                            "Primary",
                            "true"});
#line 127
 testRunner.And("I verify below fields", ((string)(null)), table34, "And ");
#line hidden
#line 130
 testRunner.Then("I click customerid locked lookup field in GENERAL section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 132
 testRunner.Then("I switch to browser tab 2 if available", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 134
 testRunner.Given("I select the tab Inbound Interest & Lifecycle in the form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 135
 testRunner.When("I click available command New Inbound Interest on INBOUND INTERESTS SubGrid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 136
 testRunner.And("I click New Inbound Interest SubGrid option on More Commands SubGrid when availab" +
                        "le", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 137
 testRunner.When("I wait for 2000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 140
 testRunner.And("I scroll to SOURCE section having Method field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 141
 testRunner.And(string.Format("I have set {0} to cmc_sourcemethodid lookup item in the Form", method), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 142
 testRunner.When("I wait for 2000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 144
 testRunner.And("I scroll to SOURCE section having Category field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 145
 testRunner.And(string.Format("I have set {0} to cmc_sourcecategoryid lookup item in the Form", category), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 146
  testRunner.When("I wait for 2000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 147
 testRunner.Then("I press Save in the form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 148
 testRunner.And("the Entity should be saved", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("02 Validate \'Contact Type\' field: 887114")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Contact")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Contactfeature")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Contact")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "887114")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Test Case ID", "887114")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Persona", "StudentAdvisor")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Area", "Engage")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SubArea", "Contacts")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:LastName", "TestLast")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ContactType", "HS Contact")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ContactType1", "College Contact")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ContactType2", "Employer Contact(Inter/externship)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ContactType3", "Parent")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ContactType4", "Education Partner Contact")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ContactType5", "Referral Contact")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ContactType6", "Emergency Contact")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Method", "Email")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Category", "Application")]
        public virtual void _02ValidateContactTypeField_887114()
        {
#line 75
this._02ValidateContactTypeField("887114", "StudentAdvisor", "Engage", "Contacts", "TestLast", "HS Contact", "College Contact", "Employer Contact(Inter/externship)", "Parent", "Education Partner Contact", "Referral Contact", "Emergency Contact", "Email", "Application", ((string[])(null)));
#line hidden
        }
        
        public virtual void _03CreateConnectionAndValidateConnectionsGrid(string testCaseID, string persona, string lastName, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "testcase03contact"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("03 Create connection and validate Connections Grid", null, @__tags);
#line 156
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 157
    testRunner.Given(string.Format("I have logged in as a {0}", persona), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 158
    testRunner.And("I have navigated to the Area Engage and SubArea Contacts", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 159
 testRunner.And("I navigate to main Area and SubArea Contacts", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 160
 testRunner.And("I switch the view to Active Students", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 161
    testRunner.And("I search UIAuto Contact-846742-1 in the grid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 162
    testRunner.And("I open the first record in the grid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 163
    testRunner.When("I wait for 2000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 164
 testRunner.And("I scroll in to view of CONNECTIONS LIST section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 165
  testRunner.When("I wait for 2000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 166
 testRunner.And("I open Connection-GridList list item in CONNECTIONS LIST section only if availabl" +
                        "e", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 167
    testRunner.And("I click first record in the grid in CONNECTIONS LIST section only if available", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 170
    testRunner.When("I wait for 4000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table35 = new TechTalk.SpecFlow.Table(new string[] {
                            "Type",
                            "sectionLabel",
                            "FieldName",
                            "FieldValue"});
                table35.AddRow(new string[] {
                            "Field",
                            "Connect To",
                            "Name",
                            ""});
                table35.AddRow(new string[] {
                            "Field",
                            "Connect To",
                            "As this role",
                            ""});
                table35.AddRow(new string[] {
                            "Field",
                            "Description",
                            "Description",
                            ""});
#line 171
    testRunner.And("I verify below fields", ((string)(null)), table35, "And ");
#line hidden
#line 176
   testRunner.When("I wait for 2000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 177
  testRunner.Given("I select the tab Details in the form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 178
    testRunner.When("I wait for 1000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table36 = new TechTalk.SpecFlow.Table(new string[] {
                            "Type",
                            "sectionLabel",
                            "FieldName",
                            "FieldValue"});
                table36.AddRow(new string[] {
                            "Field",
                            "Connected From",
                            "Connected from",
                            "AbhiTestD"});
                table36.AddRow(new string[] {
                            "Field",
                            "Connected From",
                            "As this role",
                            ""});
#line 179
    testRunner.And("I verify below fields", ((string)(null)), table36, "And ");
#line hidden
#line 183
    testRunner.And("I navigate to main Area and SubArea Contacts", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 184
 testRunner.And("I switch the view to Active Students", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 185
    testRunner.And("I search UIAuto Contact-846742-1 in the grid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 186
    testRunner.And("I open the first record in the grid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 187
    testRunner.And("I have clicked New command in View", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 188
    testRunner.When(string.Format("I have set {0} to lastname text field uniquely in the Form", lastName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 189
  testRunner.And("I scroll in to view of INITIAL SOURCE section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 190
  testRunner.And("I wait for 2000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 191
    testRunner.Then("I select Student options in mshied_contacttype_i multivalue optionset by removing" +
                        " existing selections", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 192
 testRunner.And("I scrolldown to End of INITIAL SOURCE section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 193
   testRunner.When("I have set Appointment to cmc_sourcemethodid lookup item in the Form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 194
    testRunner.And("I wait for 2000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 195
    testRunner.And("I have set Application to cmc_sourcecategoryid lookup item in the Form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 196
    testRunner.And("I wait for 2000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 197
    testRunner.When("I press Save in the form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 198
    testRunner.Then("the Entity should be saved", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 199
    testRunner.When("I wait for 4100 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 200
    testRunner.And("I have clicked Connect command in View", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 201
 testRunner.Then("I switch to browser tab 2 if available", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 202
    testRunner.When("I have set UIAuto Contact-846742-2 to record2id lookup item in the Form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 203
    testRunner.When("I wait for 2000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 204
    testRunner.And("I have set Alumni to record2roleid lookup item in the Form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 205
    testRunner.When("I wait for 2000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 206
    testRunner.When("I press Save in the form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 207
    testRunner.Then("the Entity should be saved", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 209
    testRunner.And("I navigate to main Area and SubArea Contacts", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 210
   testRunner.Then("I switch to browser tab 3 if available", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 212
 testRunner.When("I wait for 2000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 214
 testRunner.And("I switch the view to Active Students", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 215
    testRunner.When(string.Format("I search {0} in the grid", lastName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 216
    testRunner.And("I open the first record in the grid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 217
testRunner.And("I scroll in to view of CONNECTIONS LIST section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 218
testRunner.When("I wait for 2000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 219
testRunner.And("I open Connection-GridList list item in CONNECTIONS LIST section only if availabl" +
                        "e", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 220
    testRunner.And("I click first record in the grid in CONNECTIONS LIST section only if available", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 222
testRunner.When("I wait for 4000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table37 = new TechTalk.SpecFlow.Table(new string[] {
                            "Type",
                            "sectionLabel",
                            "FieldName",
                            "FieldValue"});
                table37.AddRow(new string[] {
                            "Field",
                            "Connect To",
                            "Name",
                            "UIAuto Contact-846742-2"});
                table37.AddRow(new string[] {
                            "Field",
                            "Connect To",
                            "As this role",
                            "Alumni"});
#line 224
    testRunner.And("I verify below fields", ((string)(null)), table37, "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("03 Create connection and validate Connections Grid: 846742")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Contact")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Contactfeature")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("testcase03contact")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "846742")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Test Case ID", "846742")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Persona", "StudentAdvisor")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:LastName", "Contact-1-846742")]
        public virtual void _03CreateConnectionAndValidateConnectionsGrid_846742()
        {
#line 156
this._03CreateConnectionAndValidateConnectionsGrid("846742", "StudentAdvisor", "Contact-1-846742", ((string[])(null)));
#line hidden
        }
        
        public virtual void _04ValidateContactPlugins(string testCaseID, string persona, string[] exampleTags)
        {
            string[] tagsOfScenario = exampleTags;
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("04 Validate Contact Plugins", null, exampleTags);
#line 238
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 239
                testRunner.Given(string.Format("I have logged in as a {0}", persona), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 240
               testRunner.And("I navigate to main Area and SubArea Contacts", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 241
    testRunner.And("I switch the view to Active Students", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 242
                testRunner.And("I search UIAuto Contact-724258 in the grid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 243
    testRunner.When("I wait for 4000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 244
                testRunner.And("I open the first record in the grid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table38 = new TechTalk.SpecFlow.Table(new string[] {
                            "Type",
                            "sectionLabel",
                            "FieldName",
                            "FieldValue"});
                table38.AddRow(new string[] {
                            "Field",
                            "CONTACT SUMMARY",
                            "Contact Type",
                            "Student"});
#line 245
                testRunner.And("I verify below fields", ((string)(null)), table38, "And ");
#line hidden
#line 248
                testRunner.And("I select the tab Student Progress in the form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 249
    testRunner.When("I wait for 2000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 250
    testRunner.And("I scroll in to view of SUCCESS NETWORK section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 251
    testRunner.And("I open GridList list item in SUCCESS NETWORK section only if available", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 252
     testRunner.When("I wait for 2000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 253
               testRunner.And("I click first record in the grid in SUCCESS NETWORK section only if available", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 256
                testRunner.When("I wait for 4000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 257
                testRunner.And("I navigate to main Area and SubArea Contacts", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 258
    testRunner.And("I switch the view to Active Students", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 259
                testRunner.And("I search UIAuto Contact-724258 in the grid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 260
    testRunner.When("I wait for 4000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 261
                testRunner.And("I open the first record in the grid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 262
     testRunner.And("I scroll in to view of INITIAL SOURCE section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 263
                testRunner.Then("I select Parent options in mshied_contacttype_i multivalue optionset by removing " +
                        "existing selections", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 264
                testRunner.When("I press Save in the form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 265
                testRunner.Then("the Entity should be saved", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 266
    testRunner.And("I wait for 3000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 267
                testRunner.And("I click Ignore And Save button in dialog only if available", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 268
                testRunner.And("I select the tab Student Progress in the form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 269
    testRunner.And("I click GridList locked lookup field in SUCCESS NETWORK section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 270
                testRunner.When("I wait for 4000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("04 Validate Contact Plugins: 724258")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Contact")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Contactfeature")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "724258")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Test Case ID", "724258")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Persona", "StudentAdvisor")]
        public virtual void _04ValidateContactPlugins_724258()
        {
#line 238
this._04ValidateContactPlugins("724258", "StudentAdvisor", ((string[])(null)));
#line hidden
        }
        
        public virtual void _05ValidationOfMergingContactWhenAnApplicationExist_BothContactCreatedInEngage(string testCaseID, string persona, string searchTerm, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "mytag",
                    "Regression",
                    "pre-requisite"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("05 Validation of merging contact when an application exist. Both contact created " +
                    "in Engage", null, @__tags);
#line 284
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 287
 testRunner.Given(string.Format("I have logged in as a {0}", persona), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 288
 testRunner.And("I navigate to main Area and SubArea Contacts", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 289
 testRunner.And("I switch the view to Active Contacts", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 290
  testRunner.And(string.Format("I search {0} in the grid", searchTerm), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 291
   testRunner.When("I wait for 2000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 293
 testRunner.Then("I select record no. 0 in the grid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 294
 testRunner.Then("I select record no. 1 in the grid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 295
 testRunner.When("I wait for 2000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 296
 testRunner.And("I have clicked Merge command in View", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 297
 testRunner.When("I wait for 7000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 298
testRunner.Then("I click OK button in dialog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 299
testRunner.And("I wait for 5000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("05 Validation of merging contact when an application exist. Both contact created " +
            "in Engage: 1046961")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Contact")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Contactfeature")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("mytag")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("pre-requisite")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "1046961")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Test Case ID", "1046961")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Persona", "Advisor")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:searchTerm", "Contact-record-1046961")]
        public virtual void _05ValidationOfMergingContactWhenAnApplicationExist_BothContactCreatedInEngage_1046961()
        {
#line 284
this._05ValidationOfMergingContactWhenAnApplicationExist_BothContactCreatedInEngage("1046961", "Advisor", "Contact-record-1046961", ((string[])(null)));
#line hidden
        }
        
        public virtual void _06AbilityToDetermineAndMaintainOneMostRecentPreviousEducationRecord(string testCaseID, string persona, string area, string subArea, string lastName, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "VerifyMostRecentPreviousEducation"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("06 Ability to determine and maintain one Most recent previous Education record", null, @__tags);
#line 311
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 312
 testRunner.Given(string.Format("I have logged in as a {0}", persona), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 313
 testRunner.And("I navigate to main Area and SubArea Contacts", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 314
 testRunner.When("I switch the view to All Contacts(Reach)", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 315
 testRunner.And("I wait for 2000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 316
 testRunner.And("I search UIAuto Contact-1024950 in the grid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 317
 testRunner.And("I open the first record in the grid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 318
 testRunner.And("I wait for 3000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 319
 testRunner.Given("I select the tab Student Records in the form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 320
 testRunner.When("I wait for 2000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 321
 testRunner.And("I click New Previous Education command on PREVIOUS EDUCATION SubGrid when availab" +
                        "le", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 322
 testRunner.And("I click More Commands button on PREVIOUS EDUCATION SubGrid only if available", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 323
 testRunner.And("I click New Previous Education SubGrid option on More Commands SubGrid when avail" +
                        "able", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 326
 testRunner.And("I wait for 3000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 327
 testRunner.And("I have set Account-1024950 to mshied_schoolnameid field in the lookup dialog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 328
  testRunner.And("I wait for 3000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 330
 testRunner.And("I have set UIAuto-EduLevel-1024950-1 to mshied_educationlevelid field in the look" +
                        "up dialog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 331
 testRunner.And("I wait for 2000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 333
 testRunner.When("I have set date value 07/09/2012 to Date of Enrollment field in the Form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 334
 testRunner.And("I have set 07/09/2012 to Date of Enrollment datetime field in the Form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 335
  testRunner.When("I press Save in QuickCreate", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 336
 testRunner.Then("the QuickCreate should be saved", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 337
 testRunner.When("I wait for 2000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 338
    testRunner.And("I click New Previous Education command on PREVIOUS EDUCATION SubGrid when availab" +
                        "le", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 339
 testRunner.And("I click More Commands button on PREVIOUS EDUCATION SubGrid only if available", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 340
 testRunner.And("I click New Previous Education SubGrid option on More Commands SubGrid when avail" +
                        "able", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 343
 testRunner.And("I wait for 3000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 344
 testRunner.And("I have set Account-1024950 to mshied_schoolnameid field in the lookup dialog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 345
 testRunner.And("I have set UIAuto-EduLevel-1024950-2 to mshied_educationlevelid field in the look" +
                        "up dialog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 346
 testRunner.When("I have set date value 04/12/2013 to Date of Enrollment field in the Form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 347
 testRunner.When("I press Save in QuickCreate", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 348
 testRunner.Then("the QuickCreate should be saved", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 350
 testRunner.When("I wait for 2000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 351
 testRunner.And("I click New Previous Education command on PREVIOUS EDUCATION SubGrid when availab" +
                        "le", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 352
 testRunner.And("I click More Commands button on PREVIOUS EDUCATION SubGrid only if available", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 353
 testRunner.And("I click New Previous Education SubGrid option on More Commands SubGrid when avail" +
                        "able", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 356
 testRunner.And("I wait for 3000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 357
 testRunner.And("I have set Account-1024950 to mshied_schoolnameid field in the lookup dialog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 358
 testRunner.And("I have set UIAuto-EduLevel-1024950-3 to mshied_educationlevelid field in the look" +
                        "up dialog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 359
 testRunner.When("I have set date value 04/12/2014 to Date of Enrollment field in the Form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 360
 testRunner.When("I press Save in QuickCreate", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 361
 testRunner.Then("the QuickCreate should be saved", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 363
 testRunner.When("I wait for 2000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 364
 testRunner.And("I click New Previous Education command on PREVIOUS EDUCATION SubGrid when availab" +
                        "le", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 365
 testRunner.And("I click More Commands button on PREVIOUS EDUCATION SubGrid only if available", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 366
 testRunner.And("I click New Previous Education SubGrid option on More Commands SubGrid when avail" +
                        "able", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 369
 testRunner.And("I wait for 3000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 370
 testRunner.And("I have set Account-1024950 to mshied_schoolnameid field in the lookup dialog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 371
 testRunner.And("I have set UIAuto-EduLevel-1024950-4 to mshied_educationlevelid field in the look" +
                        "up dialog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 372
 testRunner.When("I have set date value 04/12/2020 to Date of Enrollment field in the Form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 373
 testRunner.When("I press Save in QuickCreate", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 374
 testRunner.Then("the QuickCreate should be saved", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 375
 testRunner.When("I wait for 2000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 377
 testRunner.And("I navigate to main Area and SubArea Contacts", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 378
 testRunner.And("I switch the view to Active Students", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 379
 testRunner.When("I wait for 2000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 380
 testRunner.When("I search UIAuto Contact-1024950 in the grid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 381
 testRunner.And("I open the first record in the grid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 382
 testRunner.Given("I select the tab Student Records in the form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 383
 testRunner.And("I click cmc_mostrecentpreviouseducationid locked lookup field in SCHOOL DETAILS s" +
                        "ection", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 384
 testRunner.When("I wait for 2000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table39 = new TechTalk.SpecFlow.Table(new string[] {
                            "Type",
                            "sectionLabel",
                            "FieldName",
                            "FieldValue"});
                table39.AddRow(new string[] {
                            "Field",
                            "EDUCATION",
                            "Date of Enrollment",
                            "04/12/2020"});
#line 385
 testRunner.And("I verify below fields", ((string)(null)), table39, "And ");
#line hidden
#line 390
 testRunner.When("I wait for 2000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 391
 testRunner.And("I navigate to main Area and SubArea Contacts", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 392
 testRunner.And("I switch the view to Active Students", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 393
 testRunner.And("I wait for 2000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 394
 testRunner.When("I search UIAuto Contact-1024950 in the grid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 395
 testRunner.And("I open the first record in the grid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 396
 testRunner.Given("I select the tab Student Records in the form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 397
 testRunner.And("I wait for 2000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 398
 testRunner.And("I open the first record in the grid in PREVIOUS EDUCATION section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 399
 testRunner.And("I have clicked Deactivate command in View", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 400
 testRunner.And("I click Deactivate button in dialog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 401
 testRunner.And("I wait for 2000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 402
 testRunner.And("I navigate to main Area and SubArea Contacts", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 403
 testRunner.And("I switch the view to Active Students", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 404
 testRunner.When(string.Format("I search {0} in the grid", lastName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 405
 testRunner.And("I open the first record in the grid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 406
 testRunner.Given("I select the tab Student Records in the form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 408
 testRunner.When("I wait for 2000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 409
 testRunner.And("I open the first record in the grid in PREVIOUS EDUCATION section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 410
 testRunner.And("I have clicked Deactivate command in View", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 411
 testRunner.And("I click Deactivate button in dialog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 413
 testRunner.When("I wait for 2000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 414
 testRunner.And("I navigate to main Area and SubArea Contacts", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 415
 testRunner.And("I switch the view to Active Students", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 416
 testRunner.When("I wait for 2000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 417
 testRunner.When("I search UIAuto Contact-1024950 in the grid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 418
 testRunner.And("I open the first record in the grid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 419
 testRunner.Given("I select the tab Student Records in the form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 420
 testRunner.And("I click cmc_mostrecentpreviouseducationid locked lookup field in SCHOOL DETAILS s" +
                        "ection", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table40 = new TechTalk.SpecFlow.Table(new string[] {
                            "Type",
                            "sectionLabel",
                            "FieldName",
                            "FieldValue"});
                table40.AddRow(new string[] {
                            "Field",
                            "EDUCATION",
                            "Date of Enrollment",
                            "04/12/2013"});
#line 421
 testRunner.And("I verify below fields", ((string)(null)), table40, "And ");
#line hidden
#line 426
 testRunner.And("I navigate to main Area and SubArea Contacts", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 427
 testRunner.And("I switch the view to Active Students", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 428
 testRunner.When("I wait for 2000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 429
 testRunner.When("I search UIAuto Contact-1024950 in the grid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 430
 testRunner.When("I wait for 2000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 431
 testRunner.And("I open the first record in the grid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 432
 testRunner.When("I wait for 2000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 433
 testRunner.Given("I select the tab Student Records in the form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 434
 testRunner.When("I wait for 2000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 435
 testRunner.And("I click New Previous Education command on PREVIOUS EDUCATION SubGrid when availab" +
                        "le", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 436
 testRunner.And("I click More Commands button on PREVIOUS EDUCATION SubGrid only if available", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 437
 testRunner.And("I click New Previous Education SubGrid option on More Commands SubGrid when avail" +
                        "able", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 440
 testRunner.And("I wait for 3000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 441
 testRunner.And("I have set Account-1024950 to mshied_schoolnameid field in the lookup dialog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 442
 testRunner.And("I have set UIAuto-EduLevel-1024950-5 to mshied_educationlevelid field in the look" +
                        "up dialog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 443
 testRunner.When("I have set date value 04/12/2020 to Date of Enrollment field in the Form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 445
 testRunner.When("I press Save in QuickCreate", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 446
 testRunner.Then("the QuickCreate should be saved", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 447
 testRunner.And("I wait for 2000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 448
 testRunner.And("I navigate to main Area and SubArea Contacts", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 449
 testRunner.And("I switch the view to Active Students", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 450
 testRunner.When("I wait for 2000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 451
 testRunner.When("I search UIAuto Contact-1024950 in the grid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 452
  testRunner.And("I wait for 2000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 454
 testRunner.And("I open the first record in the grid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 455
 testRunner.Given("I select the tab Student Records in the form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 456
 testRunner.And("I click cmc_mostrecentpreviouseducationid locked lookup field in SCHOOL DETAILS s" +
                        "ection", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table41 = new TechTalk.SpecFlow.Table(new string[] {
                            "Type",
                            "sectionLabel",
                            "FieldName",
                            "FieldValue"});
                table41.AddRow(new string[] {
                            "Field",
                            "EDUCATION",
                            "Date of Enrollment",
                            "04/12/2020"});
#line 457
 testRunner.And("I verify below fields", ((string)(null)), table41, "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("06 Ability to determine and maintain one Most recent previous Education record: 1" +
            "024950")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Contact")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Contactfeature")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("VerifyMostRecentPreviousEducation")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "1024950")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Test Case ID", "1024950")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Persona", "StudentAdvisor")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Area", "Engage")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SubArea", "Contacts")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:LastName", "UIAuto Contact-1024950")]
        public virtual void _06AbilityToDetermineAndMaintainOneMostRecentPreviousEducationRecord_1024950()
        {
#line 311
this._06AbilityToDetermineAndMaintainOneMostRecentPreviousEducationRecord("1024950", "StudentAdvisor", "Engage", "Contacts", "UIAuto Contact-1024950", ((string[])(null)));
#line hidden
        }
    }
}
#pragma warning restore
#endregion
