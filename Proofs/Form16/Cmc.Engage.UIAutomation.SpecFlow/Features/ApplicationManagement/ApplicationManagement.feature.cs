// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:3.1.0.0
//      SpecFlow Generator Version:3.1.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Cmc.Engage.UIAutomation.SpecFlow.Features.ApplicationManagement
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.1.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class ApplicationRequirementFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
        private Microsoft.VisualStudio.TestTools.UnitTesting.TestContext _testContext;
        
        private string[] _featureTags = new string[] {
                "ApplicationRequirement"};
        
#line 1 "ApplicationManagement.feature"
#line hidden
        
        public virtual Microsoft.VisualStudio.TestTools.UnitTesting.TestContext TestContext
        {
            get
            {
                return this._testContext;
            }
            set
            {
                this._testContext = value;
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "ApplicationRequirement", null, ProgrammingLanguage.CSharp, new string[] {
                        "ApplicationRequirement"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((testRunner.FeatureContext != null) 
                        && (testRunner.FeatureContext.FeatureInfo.Title != "ApplicationRequirement")))
            {
                global::Cmc.Engage.UIAutomation.SpecFlow.Features.ApplicationManagement.ApplicationRequirementFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<Microsoft.VisualStudio.TestTools.UnitTesting.TestContext>(_testContext);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void _01CreateRequirementDefinition(string testCaseID, string persona, string requirementName, string applicationStatus, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Requirement"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("01 Create Requirement Definition", null, @__tags);
#line 6
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 8
testRunner.Given(string.Format("I have logged in as a {0}", persona), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 9
  testRunner.And("I have navigated to the Area Process Config and SubArea Requirement Definitions", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 10
  testRunner.And("I have clicked New command in View", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 11
  testRunner.And(string.Format("I have set {0} to cmc_applicationrequirementdefinitionname text field uniquely in" +
                            " the Form", requirementName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 13
  testRunner.When("I press Save in the form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 14
  testRunner.Then("the Entity should be saved", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("01 Create Requirement Definition: 839631")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "ApplicationRequirement")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("ApplicationRequirement")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Requirement")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "839631")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:TestCase ID", "839631")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Persona", "ApplicationAdmin")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:RequirementName", "Application Requirement")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ApplicationStatus", "175490001")]
        public virtual void _01CreateRequirementDefinition_839631()
        {
#line 6
this._01CreateRequirementDefinition("839631", "ApplicationAdmin", "Application Requirement", "175490001", ((string[])(null)));
#line hidden
        }
        
        public virtual void _03CreateValidateRecommendationDefinitionDefinitionDetailsForms(string testCaseID, string persona, string area, string subArea, string fieldName, string recommendationDefinitionName, string invitationWorkFlow, string thankyouWorkflow, string subGridButtonName, string subGridName, string recommendationType, string noOfRecommendations, string[] exampleTags)
        {
            string[] tagsOfScenario = exampleTags;
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("03 Create & Validate \'Recommendation Definition & Definition Details\' forms", null, exampleTags);
#line 84
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 86
     testRunner.Given(string.Format("I have logged in as a {0}", persona), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 87
 testRunner.And(string.Format("I have navigated to the Area {0} and SubArea {1}", area, subArea), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 88
  testRunner.And("I have clicked New command in View", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                            "Type",
                            "sectionLabel",
                            "FieldName",
                            "FieldValue"});
                table6.AddRow(new string[] {
                            "Field",
                            "General",
                            "Recommendation Definition Name",
                            ""});
                table6.AddRow(new string[] {
                            "Field",
                            "General",
                            "Recommendation Invitation Workflow",
                            ""});
                table6.AddRow(new string[] {
                            "Field",
                            "General",
                            "Recommendation Thank You Workflow",
                            ""});
                table6.AddRow(new string[] {
                            "Field",
                            "General",
                            "Send on Behalf of Student",
                            ""});
#line 89
     testRunner.Then("I verify below fields", ((string)(null)), table6, "Then ");
#line hidden
#line 95
  testRunner.When(string.Format("I have set {0} to cmc_applicationrecommendationdefinitionname text field uniquely" +
                            " in the Form", recommendationDefinitionName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 96
  testRunner.And(string.Format("I have set {0} to cmc_recommendationinvitationworkflow lookup item in the Form", invitationWorkFlow), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 97
  testRunner.And("I wait for 2000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 98
  testRunner.And(string.Format("I have set {0} to cmc_recommendationthankyouworkflow lookup item in the Form", thankyouWorkflow), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 99
  testRunner.And("I wait for 2000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 100
  testRunner.And("I press Save in the form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 101
  testRunner.Then("the Entity should be saved", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 102
  testRunner.When("I wait for 2000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 103
  testRunner.And("The handle live assist pop-up only if available", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 104
  testRunner.When(string.Format("I have clicked {0} command on {1} SubGrid", subGridButtonName, subGridName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 105
  testRunner.And(string.Format("I verify in General section {0} field is locked", fieldName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 106
  testRunner.And(string.Format("I have set {0} to cmc_recommendationtype optionset field in the Form", recommendationType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 107
  testRunner.And(string.Format("I have set {0} to cmc_noofrecommendations numeric field in the Form", noOfRecommendations), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 108
  testRunner.And("I press Save in the form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 109
  testRunner.Then("the Entity should be saved", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("03 Create & Validate \'Recommendation Definition & Definition Details\' forms: 8408" +
            "42")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "ApplicationRequirement")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("ApplicationRequirement")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "840842")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:TestCaseID", "840842")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Persona", "ApplicationAdmin")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Area", "Process Config")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SubArea", "Recommendation Definitions")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FieldName", "Locked Recommendation Definition")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:RecommendationDefinitionName", "Application Recommendation")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:InvitationWorkFlow", "cmc_RecInviteWorkflow")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ThankyouWorkflow", "Recommendation_Thankyou")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:subGridButtonName", "New Recommendation Definition Detail")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:subGridName", "RECOMMENDATION DEFINITION DETAILS")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:RecommendationType", "175490001")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:NoOfRecommendations", "3")]
        public virtual void _03CreateValidateRecommendationDefinitionDefinitionDetailsForms_840842()
        {
#line 84
this._03CreateValidateRecommendationDefinitionDefinitionDetailsForms("840842", "ApplicationAdmin", "Process Config", "Recommendation Definitions", "Locked Recommendation Definition", "Application Recommendation", "cmc_RecInviteWorkflow", "Recommendation_Thankyou", "New Recommendation Definition Detail", "RECOMMENDATION DEFINITION DETAILS", "175490001", "3", ((string[])(null)));
#line hidden
        }
        
        public virtual void _04ApplicationRecommendationBusinessLogicRules_SendResendRequest(string testCaseID, string applicationAdmin, string area, string subArea, string application, string recommendationType, string recommendBy, string[] exampleTags)
        {
            string[] tagsOfScenario = exampleTags;
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("04 Application Recommendation business logic/rules - Send & Resend Request", null, exampleTags);
#line 117
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 122
     testRunner.Given(string.Format("I have logged in as a {0}", applicationAdmin), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 123
  testRunner.And(string.Format("I navigate to main Area and SubArea {0}", subArea), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 124
  testRunner.When(string.Format("I search {0} in the grid", application), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 125
  testRunner.When("I wait for 4000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 126
  testRunner.And("I open the first record in the grid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 127
  testRunner.And("I wait for 2000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 128
  testRunner.Given("I select the tab Recommendations in the form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 129
  testRunner.When("I wait for 2000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 131
  testRunner.And("I click New Recommendation command on RECOMMENDATIONS SubGrid when available", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 132
  testRunner.And("I click More commands for Recommendation button on RECOMMENDATIONS SubGrid only i" +
                        "f available", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 133
  testRunner.And("I click New Recommendation SubGrid option on More Commands SubGrid when available" +
                        "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 135
  testRunner.And(string.Format("I have set {0} to cmc_recommendationtype optionset field in the Form", recommendationType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 137
  testRunner.When("I wait for 10000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 138
  testRunner.And(string.Format("I have set {0} to cmc_recommendedbyid lookup item in the Form", recommendBy), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 139
  testRunner.And("I press Save in the form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 140
  testRunner.Then("the Entity should be saved", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 141
  testRunner.When("I wait for 3000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 142
  testRunner.Given("I have clicked Send Request command in View", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 144
  testRunner.When("I wait for 2000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 145
 testRunner.And("I handle the dialog action button okButton only if available", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 146
  testRunner.When("I wait for 2000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("04 Application Recommendation business logic/rules - Send & Resend Request: 84565" +
            "3")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "ApplicationRequirement")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("ApplicationRequirement")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "845653")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:TestCaseID", "845653")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ApplicationAdmin", "ApplicationAdmin")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Area", "Reach")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SubArea", "Applications")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Application", "UIAuto Contact- 845653")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:RecommendationType", "175490001")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:RecommendBy", "CMC Mansa")]
        public virtual void _04ApplicationRecommendationBusinessLogicRules_SendResendRequest_845653()
        {
#line 117
this._04ApplicationRecommendationBusinessLogicRules_SendResendRequest("845653", "ApplicationAdmin", "Reach", "Applications", "UIAuto Contact- 845653", "175490001", "CMC Mansa", ((string[])(null)));
#line hidden
        }
        
        public virtual void _05UploadDocumentForRecommendation(string testCaseID, string applicationAdmin, string area, string subArea, string application, string recommendationType, string recommendBy, string filePath, string[] exampleTags)
        {
            string[] tagsOfScenario = exampleTags;
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("05 Upload document for Recommendation", null, exampleTags);
#line 156
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 160
  testRunner.Given(string.Format("I have logged in as a {0}", applicationAdmin), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 161
  testRunner.And(string.Format("I navigate to main Area and SubArea {0}", subArea), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 162
  testRunner.And(string.Format("I search {0} in the grid", application), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 163
  testRunner.When("I wait for 2000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 164
  testRunner.And("I open the first record in the grid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 165
  testRunner.When("I wait for 2000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 166
  testRunner.And("I select the tab Recommendations in the form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 167
  testRunner.And("I click New Recommendation command on RECOMMENDATIONS SubGrid when available", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 168
  testRunner.And("I click More commands for Recommendation button on RECOMMENDATIONS SubGrid only i" +
                        "f available", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 169
  testRunner.And("I click New Recommendation SubGrid option on More Commands SubGrid when available" +
                        "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 171
  testRunner.And(string.Format("I have set {0} to cmc_recommendationtype optionset field in the Form", recommendationType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 172
 testRunner.And("I wait for 2000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 173
 testRunner.And(string.Format("I have set {0} to cmc_recommendedbyid lookup item in the Form", recommendBy), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 174
     testRunner.When("I press Save in the form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 175
  testRunner.Then("the Entity should be saved", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 176
  testRunner.And("I wait for 4000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 177
  testRunner.And("I scroll in to view of ATTACHMENTS section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 178
  testRunner.And("I wait for 4000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 179
     testRunner.Then(string.Format("I browse {0} File in ATTACHMENTS section", filePath), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 180
  testRunner.And("I scrolldown to End of ATTACHMENTS section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 181
  testRunner.And("I click Add button in Note section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 182
  testRunner.When("I press Save in the form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 183
  testRunner.Then("the Entity should be saved", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 184
  testRunner.And("I handle the dialog action button Ok only if available", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("05 Upload document for Recommendation: 846115")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "ApplicationRequirement")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("ApplicationRequirement")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "846115")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:TestCaseID", "846115")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ApplicationAdmin", "ApplicationAdmin")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Area", "Engage")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SubArea", "Applications")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Application", "UIAuto Contact-846115-")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:RecommendationType", "175490001")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:RecommendBy", "CMC Mansa")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FilePath", "SampleAcceptanceLetter.docx")]
        public virtual void _05UploadDocumentForRecommendation_846115()
        {
#line 156
this._05UploadDocumentForRecommendation("846115", "ApplicationAdmin", "Engage", "Applications", "UIAuto Contact-846115-", "175490001", "CMC Mansa", "SampleAcceptanceLetter.docx", ((string[])(null)));
#line hidden
        }
        
        public virtual void _06UploadDocumentForRequirements(string testCaseID, string applicationAdmin, string area, string subArea, string application, string subGridButtonName, string subGridName, string requirementName, string requirementType, string recommendBy, string filePath, string[] exampleTags)
        {
            string[] tagsOfScenario = exampleTags;
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("06 Upload document for Requirements", null, exampleTags);
#line 190
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 194
  testRunner.Given(string.Format("I have logged in as a {0}", applicationAdmin), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 195
  testRunner.And(string.Format("I navigate to main Area and SubArea {0}", subArea), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 196
  testRunner.And(string.Format("I search {0} in the grid", application), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 197
  testRunner.And("I open the first record in the grid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 198
  testRunner.When("I wait for 2000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 199
  testRunner.And("I select the tab Requirements in the form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 200
  testRunner.When("I wait for 2000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 201
     testRunner.When(string.Format("I have clicked {0} command on {1} SubGrid", subGridButtonName, subGridName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 202
  testRunner.And(string.Format("I click {0} command on {1} SubGrid when available", subGridButtonName, subGridName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 203
  testRunner.And("I click More commands for Requirements button on REQUIREMENTS SubGrid only if ava" +
                        "ilable", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 204
  testRunner.And("I click New Requirement SubGrid option on More Commands SubGrid when available", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 207
  testRunner.When("I wait for 2000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 208
     testRunner.And(string.Format("I have set {0} to cmc_applicationrequirementname text field uniquely in the Form", requirementName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 209
     testRunner.And(string.Format("I have set {0} to cmc_requirementtype optionset field in the Form", requirementType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 210
     testRunner.When("I press Save in the form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 211
     testRunner.Then("the Entity should be saved", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 212
  testRunner.And("I wait for 3000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 213
  testRunner.And("I scroll in to view of ATTACHMENTS section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 214
  testRunner.And("I wait for 1000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 215
     testRunner.Then(string.Format("I browse {0} File in ATTACHMENTS section", filePath), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 216
  testRunner.And("I scrolldown to End of ATTACHMENTS section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 217
  testRunner.And("I wait for 1000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 218
  testRunner.And("I click Add button in Note section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 219
  testRunner.And("I press Save in the form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 220
  testRunner.Then("the Entity should be saved", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("06 Upload document for Requirements: 846499")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "ApplicationRequirement")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("ApplicationRequirement")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "846499")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:TestCaseID", "846499")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ApplicationAdmin", "ApplicationAdmin")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Area", "Reach")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SubArea", "Applications")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Application", "UIAuto Contact-846499-")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:subGridButtonName", "New Requirement")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:subGridName", "REQUIREMENTS")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:RequirementName", "Test Upload Req")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:RequirementType", "175490001")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:RecommendBy", "CMC Mansa")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FilePath", "SampleAcceptanceLetter.docx")]
        public virtual void _06UploadDocumentForRequirements_846499()
        {
#line 190
this._06UploadDocumentForRequirements("846499", "ApplicationAdmin", "Reach", "Applications", "UIAuto Contact-846499-", "New Requirement", "REQUIREMENTS", "Test Upload Req", "175490001", "CMC Mansa", "SampleAcceptanceLetter.docx", ((string[])(null)));
#line hidden
        }
        
        public virtual void _08VerifyMassDecisionIsCreatedOnlyIfRecordsFromTheSameAppDefnVersionAreSelected(string testCaseID, string applicationAdmin, string area, string subArea, string applicationName, string windowName, string[] exampleTags)
        {
            string[] tagsOfScenario = exampleTags;
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("08 Verify mass decision is created only if records from the same App Defn Version" +
                    " are selected", null, exampleTags);
#line 228
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 229
        testRunner.Given(string.Format("I have logged in as a {0}", applicationAdmin), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 230
  testRunner.And(string.Format("I navigate to main Area and SubArea {0}", subArea), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 231
  testRunner.And(string.Format("I search {0} in the grid", applicationName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 232
  testRunner.And("I select record no. 0 in the grid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 233
  testRunner.And("I select record no. 1 in the grid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 234
  testRunner.And("I select record no. 2  in the grid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 235
  testRunner.And("I select record no. 3  in the grid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 236
  testRunner.And("I select record no. 4  in the grid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 237
  testRunner.And("I have clicked Create Decision command in View", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 238
  testRunner.Then("I wait for 5000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 239
  testRunner.And(string.Format("I switch to {0} window", windowName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 240
  testRunner.And("I switch to FullPageWebResource frame", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 241
     testRunner.And("I wait for 3000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 242
 testRunner.And("I have set Admit to decisionStatusTemplates Kendo text field in dialog window", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 243
     testRunner.And("I click Create button in the window", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 244
  testRunner.And("I wait for 2000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 245
  testRunner.And("I switch back to main window", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 246
  testRunner.And("I have clicked Create Decision command in View", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 247
  testRunner.Then(string.Format("I switch to {0} window", windowName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 248
  testRunner.When("I wait for 1000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 249
     testRunner.Then("I switch to FullPageWebResource frame", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 250
  testRunner.And("I have set Admit With Conditions to decisionStatusTemplates Kendo text field in d" +
                        "ialog window", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 251
  testRunner.When("I wait for 1000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 252
  testRunner.Then("I click Create button in the window", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 253
  testRunner.And("I wait for 2000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 254
  testRunner.And("I switch back to main window", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("08 Verify mass decision is created only if records from the same App Defn Version" +
            " are selected: 1012488")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "ApplicationRequirement")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("ApplicationRequirement")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "1012488")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:TestCaseID", "1012488")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ApplicationAdmin", "ApplicationAdmin")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Area", "Reach")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SubArea", "Applications")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ApplicationName", "UIAuto Contact-1012488")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WindowName", "CreateDecision.html - Dynamics 365")]
        public virtual void _08VerifyMassDecisionIsCreatedOnlyIfRecordsFromTheSameAppDefnVersionAreSelected_1012488()
        {
#line 228
this._08VerifyMassDecisionIsCreatedOnlyIfRecordsFromTheSameAppDefnVersionAreSelected("1012488", "ApplicationAdmin", "Reach", "Applications", "UIAuto Contact-1012488", "CreateDecision.html - Dynamics 365", ((string[])(null)));
#line hidden
        }
        
        public virtual void _09VerifyTheDecisionShouldNotBeAppliedToApplicationIfExistingDecisionIsPublished_(string testCaseID, string applicationAdmin, string area, string subArea, string applicationName, string windowName, string decision, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Testcase09"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("09 Verify the decision should not be applied to application if existing decision " +
                    "is published.", null, @__tags);
#line 260
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 261
        testRunner.Given(string.Format("I have logged in as a {0}", applicationAdmin), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 262
  testRunner.And(string.Format("I navigate to main Area and SubArea {0}", subArea), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 263
  testRunner.And(string.Format("I search {0} in the grid", applicationName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 264
  testRunner.And("I select record no. 0 in the grid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 265
  testRunner.And("I have clicked Create Decision command in View", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 266
  testRunner.Then(string.Format("I switch to {0} window", windowName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 267
  testRunner.When("I wait for 4000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 268
  testRunner.Then("I switch to FullPageWebResource frame", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 269
  testRunner.And("I wait for 2000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 270
  testRunner.And("I have set Admit to decisionStatusTemplates Kendo text field in dialog window", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 271
  testRunner.Then("I have clear text in dpDecisionPublishDate Kendo text field in dialog window", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 272
  testRunner.When("I wait for 5000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 273
     testRunner.Then("I click Create button in the window", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 274
  testRunner.And("I wait for 2000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 275
  testRunner.Then("I switch back to main window", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 276
  testRunner.And("I wait for 5000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 279
  testRunner.When("I open the first record in the grid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 281
  testRunner.And("I select the sub tab Decisions of tab Related in the form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 282
  testRunner.And("I open the first record in the grid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 283
  testRunner.When("I wait for 8000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 286
  testRunner.Then("I press Save in the form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 287
  testRunner.And("the Entity should be saved", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 288
     testRunner.Given(string.Format("I navigate to main Area and SubArea {0}", subArea), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 289
  testRunner.And(string.Format("I search {0} in the grid", applicationName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 290
  testRunner.And("I select record no. 0 in the grid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 291
        testRunner.And("I have clicked Create Decision command in View", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 292
     testRunner.Then(string.Format("I switch to {0} window", windowName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 293
  testRunner.When("I wait for 2000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 294
  testRunner.Then("I switch to FullPageWebResource frame", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 295
  testRunner.And("I have set Rejected to decisionStatusTemplates Kendo text field in dialog window", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 296
  testRunner.When("I wait for 2000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 297
  testRunner.Then("I click Create button in the window", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 298
  testRunner.And("I wait for 2000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 299
  testRunner.And("I switch back to main window", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 300
  testRunner.When("I open the first record in the grid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 301
  testRunner.And("I select the sub tab Decisions of tab Related in the form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 302
     testRunner.And(string.Format("I search {0} in the grid", decision), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 303
  testRunner.Then("I should not see any records listed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("09 Verify the decision should not be applied to application if existing decision " +
            "is published.: 1014038")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "ApplicationRequirement")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("ApplicationRequirement")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Testcase09")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "1014038")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:TestCaseID", "1014038")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ApplicationAdmin", "ApplicationAdmin")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Area", "Reach")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SubArea", "Applications")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ApplicationName", "UIAuto Contact-1014038")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WindowName", "CreateDecision.html - Dynamics 365")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Decision", "UIAuto Contact-1014038- - Rejected")]
        public virtual void _09VerifyTheDecisionShouldNotBeAppliedToApplicationIfExistingDecisionIsPublished__1014038()
        {
#line 260
this._09VerifyTheDecisionShouldNotBeAppliedToApplicationIfExistingDecisionIsPublished_("1014038", "ApplicationAdmin", "Reach", "Applications", "UIAuto Contact-1014038", "CreateDecision.html - Dynamics 365", "UIAuto Contact-1014038- - Rejected", ((string[])(null)));
#line hidden
        }
        
        public virtual void _10ToValidateTheDiscountCodeFunctionalityUIChecks(string testCaseID, string advisor, string area, string subArea, string[] exampleTags)
        {
            string[] tagsOfScenario = exampleTags;
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("10 To validate the Discount Code functionality UI checks", null, exampleTags);
#line 310
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 312
  testRunner.Given(string.Format("I have logged in as a {0}", advisor), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 313
  testRunner.And(string.Format("I navigate to main Area and SubArea {0}", subArea), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 314
  testRunner.And("I have clicked New command in View", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 315
        testRunner.When("I select Application Fee Invoice Form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 316
  testRunner.And("I wait for 2000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 318
   testRunner.And("I handle the dialog action button cancelButton only if available", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 319
  testRunner.And("I have set Invoice1-905176 to name text field in the Form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 320
  testRunner.And("I wait for 2000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                            "Type",
                            "sectionLabel",
                            "FieldName",
                            "FieldValue"});
                table7.AddRow(new string[] {
                            "Field",
                            "INVOICE INFORMATION",
                            "Name",
                            ""});
                table7.AddRow(new string[] {
                            "Field",
                            "INVOICE INFORMATION",
                            "Application",
                            ""});
                table7.AddRow(new string[] {
                            "Field",
                            "INVOICE INFORMATION",
                            "Decision",
                            ""});
                table7.AddRow(new string[] {
                            "Field",
                            "INVOICE INFORMATION",
                            "Customer",
                            ""});
                table7.AddRow(new string[] {
                            "Field",
                            "INVOICE INFORMATION",
                            "Price List",
                            ""});
                table7.AddRow(new string[] {
                            "Field",
                            "INVOICE INFORMATION",
                            "Due Date",
                            ""});
#line 321
  testRunner.Then("I verify below fields", ((string)(null)), table7, "Then ");
#line hidden
#line 330
    testRunner.And("I scroll to Product Line Item Totals section having Detail Amount field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 331
    testRunner.And("I verify in Product Line Item Totals section Detail Amount field is locked", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 332
    testRunner.And("I verify in Product Line Item Totals section Discount Code field is locked", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 333
    testRunner.And("I verify in Product Line Item Totals section Invoice Discount Amount field is loc" +
                        "ked", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 334
    testRunner.And("I verify in Product Line Item Totals section Total Amount field is locked", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 335
    testRunner.When("I have set UIAuto Contact 905176 to cmc_applicationid lookup item in the Form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                            "Type",
                            "sectionLabel",
                            "FieldName",
                            "FieldValue"});
                table8.AddRow(new string[] {
                            "Field",
                            "Product Line Item Totals",
                            "Discount Code",
                            ""});
#line 336
    testRunner.And("I verify below fields", ((string)(null)), table8, "And ");
#line hidden
#line 339
    testRunner.And("I wait for 2000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 340
    testRunner.And("I have set UIAuto DiscountCode1-905176 to cmc_discountcodeid lookup item in the F" +
                        "orm", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 341
    testRunner.And("I wait for 2000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 342
    testRunner.And("I verify in Product Line Item Totals section Discount Code Amount field is locked" +
                        "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 343
    testRunner.And("I press Save in the form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 344
    testRunner.Then("the Entity should be saved", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 346
    testRunner.When("I have clicked New command in View", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 347
    testRunner.And("I have set Invoice2-905176 to name text field in the Form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 348
    testRunner.And("I have set UIAuto Contact 905176 to cmc_applicationid lookup item in the Form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 349
    testRunner.And("I have set UIAuto DiscountCode2-905176 to cmc_discountcodeid lookup item in the F" +
                        "orm", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 350
    testRunner.And("I verify in Product Line Item Totals section Discount Code % field is locked", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 351
    testRunner.And("I press Save in the form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 352
    testRunner.Then("the Entity should be saved", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("10 To validate the Discount Code functionality UI checks: 905176")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "ApplicationRequirement")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("ApplicationRequirement")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "905176")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:TestCaseID", "905176")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Advisor", "Advisor")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Area", "Reach")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SubArea", "Invoices")]
        public virtual void _10ToValidateTheDiscountCodeFunctionalityUIChecks_905176()
        {
#line 310
this._10ToValidateTheDiscountCodeFunctionalityUIChecks("905176", "Advisor", "Reach", "Invoices", ((string[])(null)));
#line hidden
        }
        
        public virtual void _15AssociatingMultipleProgramToOneApplicationType(string testCaseID, string applicationAdmin, string area, string subArea, string applicationTypeName, string applicationGroup, string subGridName, string lookupDialogValue1, string lookupDialogValue2, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Smoke",
                    "Regression"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("15 Associating Multiple Program to One Application Type", null, @__tags);
#line 361
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 362
        testRunner.Given(string.Format("I have logged in as a {0}", applicationAdmin), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 363
  testRunner.And(string.Format("I have navigated to the Area {0} and SubArea {1}", area, subArea), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 364
  testRunner.And("I wait for 2000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 365
  testRunner.And("I have clicked New command in View", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 366
  testRunner.When(string.Format("I have set {0} to cmc_applicationtypename text field uniquely in the Form", applicationTypeName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 367
  testRunner.When(string.Format("I have set {0} to cmc_applicationgroup optionset field in the Form", applicationGroup), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 368
  testRunner.When("I press Save in the form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 369
  testRunner.Then("the Entity should be saved", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 372
  testRunner.And("I click Add Existing Program command on <subGridName> SubGrid when available", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 374
  testRunner.And("I choose to click Add Existing Program command in applicationtypeprogram SubGrid " +
                        "out of multiple sections in Application Type div if available", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 375
  testRunner.And("I wait for 3000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 376
  testRunner.And(string.Format("I have set {0} to lookupDialogLookup field in the lookup SearchBox", lookupDialogValue1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 377
  testRunner.And("I wait for 2000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 378
  testRunner.And(string.Format("I have set {0} to lookupDialogLookup field in the lookup SearchBox", lookupDialogValue2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 379
  testRunner.And("I click true button in the lookup dialog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 380
  testRunner.And("I wait for 5000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 381
  testRunner.And("I select record no.0 in the grid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 382
        testRunner.And("I select record no.1 in the grid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("15 Associating Multiple Program to One Application Type: 895173")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "ApplicationRequirement")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("ApplicationRequirement")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Smoke")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "895173")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:TestCaseID", "895173")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ApplicationAdmin", "ApplicationAdmin")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Area", "Process Config")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SubArea", "Application Types")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Application Type Name", "Gdt Appl")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ApplicationGroup", "175490001")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SubGridName", "GENERAL")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:lookupDialogValue1", "UIAuto-Program-895173-1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:lookupDialogValue2", "UIAuto-Program-895173-2")]
        public virtual void _15AssociatingMultipleProgramToOneApplicationType_895173()
        {
#line 361
this._15AssociatingMultipleProgramToOneApplicationType("895173", "ApplicationAdmin", "Process Config", "Application Types", "Gdt Appl", "175490001", "GENERAL", "UIAuto-Program-895173-1", "UIAuto-Program-895173-2", ((string[])(null)));
#line hidden
        }
        
        public virtual void _16VerifyEngageUserAbleToModifyPublishAndDeleteTheDecisionsOfOtherOwner_(string testCaseID, string applicationAdmin, string area, string subArea, string application, string tabName, string decision, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Smoke",
                    "Regression"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("16 Verify Engage user able to Modify, Publish and Delete the decisions of other o" +
                    "wner.", null, @__tags);
#line 392
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 393
        testRunner.Given(string.Format("I have logged in as a {0}", applicationAdmin), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 394
  testRunner.And(string.Format("I navigate to main Area and SubArea {0}", subArea), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 395
  testRunner.And(string.Format("I search {0} in the grid", application), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 396
  testRunner.When("I wait for 2000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 397
  testRunner.And("I open the first record in the grid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 398
  testRunner.And("I select the sub tab Decisions of tab Related in the form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 399
  testRunner.And(string.Format("I search {0} in the grid", decision), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 400
  testRunner.When("I wait for 2000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 401
  testRunner.And("I open the first record in the grid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 402
  testRunner.And("I have clicked Delete command in View", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 403
  testRunner.Then("I verify <warningmessage> in Confirmation dialog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 404
  testRunner.And("I handle dialog with button cancelButton", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("16 Verify Engage user able to Modify, Publish and Delete the decisions of other o" +
            "wner.: 1018665")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "ApplicationRequirement")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("ApplicationRequirement")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Smoke")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "1018665")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:TestCaseID", "1018665")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ApplicationAdmin", "ApplicationAdmin")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Area", "Reach")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SubArea", "Applications")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Application", "UIAuto Contact-1018665")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:TabName", "Decisions")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Decision", "UIAuto-Decision-1018665")]
        public virtual void _16VerifyEngageUserAbleToModifyPublishAndDeleteTheDecisionsOfOtherOwner__1018665()
        {
#line 392
this._16VerifyEngageUserAbleToModifyPublishAndDeleteTheDecisionsOfOtherOwner_("1018665", "ApplicationAdmin", "Reach", "Applications", "UIAuto Contact-1018665", "Decisions", "UIAuto-Decision-1018665", ((string[])(null)));
#line hidden
        }
        
        public virtual void ValidateEmptyRecordsAppearUnderApplicationRequirementsIfTheRequirementDefinitionRecordIsNotHavingAnyRequirementDefinitionDetailRecordsUnderIt(string testCaseID, string applicationAdmin, string area, string subArea, string application, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Smoke",
                    "Regression"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Validate Empty records appear under Application requirements,if the Requirement d" +
                    "efinition record is not having any requirement definition detail records under i" +
                    "t", null, @__tags);
#line 413
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 419
        testRunner.Given(string.Format("I have logged in as a {0}", applicationAdmin), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 420
  testRunner.And(string.Format("I navigate to main Area and SubArea {0}", subArea), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 421
  testRunner.And(string.Format("I search {0} in the grid", application), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 422
  testRunner.When("I wait for 2000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 423
  testRunner.And("I open the first record in the grid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 424
  testRunner.Given("I select the tab Requirements in the form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 426
  testRunner.Then("I verify there are no records in the grid in REQUIREMENTS section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Validate Empty records appear under Application requirements,if the Requirement d" +
            "efinition record is not having any requirement definition detail records under i" +
            "t: 847062")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "ApplicationRequirement")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("ApplicationRequirement")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Smoke")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "847062")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:TestCaseID", "847062")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ApplicationAdmin", "ApplicationAdmin")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Area", "Reach")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SubArea", "Applications")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Application", "UIAuto Contact-846115-")]
        public virtual void ValidateEmptyRecordsAppearUnderApplicationRequirementsIfTheRequirementDefinitionRecordIsNotHavingAnyRequirementDefinitionDetailRecordsUnderIt_847062()
        {
#line 413
this.ValidateEmptyRecordsAppearUnderApplicationRequirementsIfTheRequirementDefinitionRecordIsNotHavingAnyRequirementDefinitionDetailRecordsUnderIt("847062", "ApplicationAdmin", "Reach", "Applications", "UIAuto Contact-846115-", ((string[])(null)));
#line hidden
        }
        
        public virtual void _17ToValidateStartAndEndDatesInApplicationDefinitionVersionDetailAndCutoffDateInApplicationPeriodProgramForms(string testCaseID, string persona, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "ToValidateDate"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("17 To validate \'Start and End dates\' in \'Application Definition version detail\' a" +
                    "nd \'Cutoff date\' in \'Application Period Program\' forms", null, @__tags);
#line 435
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 436
                testRunner.Given(string.Format("I have logged in as a {0}", persona), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 437
                testRunner.And("I have navigated to the Area Process Config and SubArea Application Definition Ve" +
                        "rsions", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 438
                testRunner.When("I wait for 2000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 439
                testRunner.And("I search UIAuto-ADV-904484 in the grid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 440
    testRunner.When("I wait for 2000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 441
                testRunner.And("I open the first record in the grid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 442
                testRunner.When("I wait for 2000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 443
                testRunner.And("I select the sub tab Application Definition Version Details of tab Related in the" +
                        " form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 444
                testRunner.When("I wait for 3000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 446
                testRunner.And("I click New Application Definition Version Detail command in associated View", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 447
                testRunner.When("I wait for 3000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 448
                testRunner.And("I have set UIAuto-ApplicationPeriod-904484 to cmc_applicationperiod lookup item i" +
                        "n the Form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 449
                testRunner.When("I wait for 3000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 451
                testRunner.When("I have set 04/20/2019 to cmc_startdate datetime field in the Form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 452
                testRunner.When("I wait for 3000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 453
                testRunner.When("I have set 04/01/2019 to cmc_enddate datetime field in the Form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 454
                testRunner.When("I press Save in the form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 455
                testRunner.Then("the Entity should be saved", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 456
                testRunner.When("I have set 04/20/2019 to cmc_enddate datetime field in the Form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 457
                testRunner.When("I press Save in the form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 458
                testRunner.Then("the Entity should be saved", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 459
                testRunner.When("I have set 04/01/2019 to cmc_startdate datetime field in the Form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 460
                testRunner.When("I wait for 3000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 461
                testRunner.When("I have set 04/20/2019 to cmc_enddate datetime field in the Form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 462
                testRunner.When("I press Save in the form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 463
                testRunner.Then("the Entity should be saved", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 464
                testRunner.When("I wait for 2000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 466
                testRunner.And("I select the sub tab Application Period Programs of tab Related in the form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 467
    testRunner.When("I wait for 2000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 469
                testRunner.And("I open the first record in the grid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 472
                testRunner.When("I wait for 3000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 473
                testRunner.When("I have set 04/20/2019 to cmc_cutoffdate datetime field in the Form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 474
                testRunner.When("I press Save in the form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 475
                testRunner.Then("the Entity should be saved", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 477
                testRunner.When("I wait for 3000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 478
                testRunner.When("I have set 03/31/2019 to cmc_cutoffdate datetime field in the Form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 479
                testRunner.When("I press Save in the form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 480
                testRunner.Then("the Entity should be saved", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 481
                testRunner.When("I wait for 3000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 482
                testRunner.When("I have set 03/31/2019 to cmc_cutoffdate datetime field in the Form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 483
                testRunner.When("I press Save in the form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 484
                testRunner.Then("the Entity should be saved", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 485
                testRunner.When("I wait for 3000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 486
                testRunner.When("I have set 04/21/2019 to cmc_cutoffdate datetime field in the Form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 487
                testRunner.When("I press Save in the form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 488
                testRunner.Then("the Entity should be saved", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 489
                testRunner.When("I wait for 3000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 490
                testRunner.When("I have set 04/15/2019 to cmc_cutoffdate datetime field in the Form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 491
                testRunner.When("I press Save in the form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 492
                testRunner.Then("the Entity should be saved", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 493
                testRunner.And("I have navigated to the Area Process Config and SubArea Application Definition Ve" +
                        "rsions", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 494
                testRunner.When("I search UIAuto-ADV-904484 in the grid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 495
                testRunner.And("I open the first record in the grid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 496
    testRunner.When("I wait for 3000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 498
                testRunner.And("I select the sub tab Application Definition Version Details of tab Related in the" +
                        " form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 499
                testRunner.When("I wait for 2000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 500
    testRunner.And("I open the first record in the grid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 501
                testRunner.When("I wait for 3000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 502
                testRunner.When("I have set 03/01/2019 to cmc_startdate datetime field in the Form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 503
                testRunner.When("I press Save in the form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 504
                testRunner.Then("the Entity should be saved", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 505
                testRunner.When("I have set 04/11/2019 to cmc_startdate datetime field in the Form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 506
                testRunner.When("I press Save in the form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 507
                testRunner.Then("the Entity should be saved", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 508
                testRunner.When("I have set 04/20/2019 to cmc_enddate datetime field in the Form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 509
                testRunner.When("I press Save in the form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 510
                testRunner.Then("the Entity should be saved", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("17 To validate \'Start and End dates\' in \'Application Definition version detail\' a" +
            "nd \'Cutoff date\' in \'Application Period Program\' forms: 904484")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "ApplicationRequirement")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("ApplicationRequirement")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("ToValidateDate")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "904484")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Test Case ID", "904484")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Persona", "StudentAdvisor")]
        public virtual void _17ToValidateStartAndEndDatesInApplicationDefinitionVersionDetailAndCutoffDateInApplicationPeriodProgramForms_904484()
        {
#line 435
this._17ToValidateStartAndEndDatesInApplicationDefinitionVersionDetailAndCutoffDateInApplicationPeriodProgramForms("904484", "StudentAdvisor", ((string[])(null)));
#line hidden
        }
        
        public virtual void _18VerifyEngageUserAbleToCreateModifyPublishAndDeleteTheDecisionsWithoutAnyError_(string testCaseID, string persona, string subArea, string[] exampleTags)
        {
            string[] tagsOfScenario = exampleTags;
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("18 Verify Engage user able to Create, Modify, Publish and Delete the decisions wi" +
                    "thout any error.", null, exampleTags);
#line 520
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 521
    testRunner.Given(string.Format("I have logged in as a {0}", persona), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 522
   testRunner.And(string.Format("I navigate to main Area and SubArea {0}", subArea), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 523
    testRunner.And("I search UIAuto Contact-1017531 in the grid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 524
 testRunner.When("I wait for 2000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 525
    testRunner.And("I open the first record in the grid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 526
 testRunner.And("I wait for 2000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 527
    testRunner.And("I select the sub tab Decisions of tab Related in the form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 529
   testRunner.And("I click New Decision command in associated View", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 530
   testRunner.And("I wait for 1000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 531
    testRunner.And("I have set Decision1 to cmc_decisionname text field in the Form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 532
    testRunner.And("I have set Admit to cmc_decisionstatus optionset field in the Form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 533
    testRunner.When("I press Save in the form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 534
    testRunner.Then("the Entity should be saved", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 535
     testRunner.Given(string.Format("I navigate to main Area and SubArea {0}", subArea), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 536
    testRunner.And("I search UIAuto Contact-1017531 in the grid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 537
 testRunner.When("I wait for 2000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 538
    testRunner.And("I open the first record in the grid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 539
    testRunner.Given("I select the sub tab Decisions of tab Related in the form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 540
 testRunner.When("I wait for 2000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 541
    testRunner.And("I open the first record in the grid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 542
    testRunner.And("I have set Decisionupdate1 to cmc_decisionname text field in the Form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 544
 testRunner.Then("I select option Published in cmc_publishstatus field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 545
    testRunner.When("I press Save in the form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 546
    testRunner.Then("the Entity should be saved", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 547
 testRunner.And("I navigate to main Area and SubArea Applications", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 548
         testRunner.When("I search UIAuto Contact-1017531 in the grid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 549
    testRunner.And("I open the first record in the grid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 550
    testRunner.Given("I select the sub tab Decisions of tab Related in the form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 551
 testRunner.When("I wait for 2000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 552
    testRunner.And("I open the first record in the grid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 553
    testRunner.And("I have clicked Delete command in View", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 555
 testRunner.And("I handle dialog with button confirmButton", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 556
 testRunner.And("I wait for 2000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("18 Verify Engage user able to Create, Modify, Publish and Delete the decisions wi" +
            "thout any error.: 1017531")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "ApplicationRequirement")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("ApplicationRequirement")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "1017531")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Test Case ID", "1017531")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Persona", "ApplicationAdmin")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SubArea", "Applications")]
        public virtual void _18VerifyEngageUserAbleToCreateModifyPublishAndDeleteTheDecisionsWithoutAnyError__1017531()
        {
#line 520
this._18VerifyEngageUserAbleToCreateModifyPublishAndDeleteTheDecisionsWithoutAnyError_("1017531", "ApplicationAdmin", "Applications", ((string[])(null)));
#line hidden
        }
        
        public virtual void _19VerifyMassDecisionShouldBeCreatedToApplicationIfNewDecisionIsDifferentFromExisting_(string testCaseID, string applicationAdmin, string applicationName, string windowName, string decisionName, string decisionStatus, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "decision"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("19 Verify mass decision should be created to application if new decision is diffe" +
                    "rent from existing.", null, @__tags);
#line 568
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 569
testRunner.Given(string.Format("I have logged in as a {0}", applicationAdmin), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 570
       testRunner.And("I navigate to main Area and SubArea Applications", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 571
        testRunner.And(string.Format("I search {0} in the grid", applicationName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 572
        testRunner.And("I select record no. 0 in the grid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 573
        testRunner.And("I select record no. 1 in the grid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 574
        testRunner.And("I select record no. 2  in the grid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 575
        testRunner.And("I select record no. 3  in the grid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 576
        testRunner.And("I select record no. 4  in the grid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 577
        testRunner.And("I have clicked Create Decision command in View", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 578
  testRunner.And("I wait for 4000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 579
        testRunner.Then(string.Format("I switch to {0} window", windowName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 580
  testRunner.And("I wait for 3000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 581
        testRunner.And("I switch to FullPageWebResource frame", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 582
  testRunner.And("I wait for 5000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 583
        testRunner.And(string.Format("I have set {0} to decisionStatusTemplates Kendo text field in dialog window", decisionStatus), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 584
  testRunner.Then("I have clear text in dpDecisionPublishDate Kendo text field in dialog window", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 585
  testRunner.And("I wait for 2000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 586
        testRunner.And("I click Create button in the window", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 587
        testRunner.And("I switch back to main window", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 588
        testRunner.When("I wait for 8000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 589
        testRunner.And("I open the first record in the grid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 590
        testRunner.Then("I click Advanced Find global command", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 591
        testRunner.When("I wait for 6000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 592
        testRunner.Then("I switch to contentIFrame0 frame", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 593
        testRunner.When("I wait for 6000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 594
        testRunner.And("I select slctPrimaryEntity dropdown filter value as Applications", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 595
    testRunner.When("I wait for 2000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 596
    testRunner.And("I select sub filter option as Application Name from Fields option group in row 0", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 597
    testRunner.And("I wait for 3000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 599
    testRunner.And("I enter UIAuto Contact-1012496- in Enter Text field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 600
    testRunner.And("I select sub filter option as Decisions (Application) from Related option group i" +
                        "n row 0", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 601
    testRunner.And("I wait for 3000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 602
    testRunner.And("I select sub filter option as Decision Name from Fields option group in row 1", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 603
    testRunner.And("I wait for 3000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 605
    testRunner.And("I wait for 3000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 606
    testRunner.And(string.Format("I enter {0} in Enter Text field", decisionName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 607
    testRunner.And("I wait for 3000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 608
 testRunner.Then("I switch back to default frame", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 609
    testRunner.And("I click Results in Show group of advanced find ribbon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 610
    testRunner.And("I wait for 3000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 611
 testRunner.Then("I verify UIAuto Contact-1012496-  in advanced find results", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 612
 testRunner.And("I close the Advanced Find Window", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("19 Verify mass decision should be created to application if new decision is diffe" +
            "rent from existing.: 1012496")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "ApplicationRequirement")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("ApplicationRequirement")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("decision")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "1012496")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:TestCaseID", "1012496")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ApplicationAdmin", "ApplicationAdmin")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ApplicationName", "UIAuto Contact-1012496")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WindowName", "CreateDecision.html - Dynamics 365")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DecisionName", "UIAuto Contact-1012496- - Admit")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DecisionStatus", "Admit")]
        public virtual void _19VerifyMassDecisionShouldBeCreatedToApplicationIfNewDecisionIsDifferentFromExisting__1012496()
        {
#line 568
this._19VerifyMassDecisionShouldBeCreatedToApplicationIfNewDecisionIsDifferentFromExisting_("1012496", "ApplicationAdmin", "UIAuto Contact-1012496", "CreateDecision.html - Dynamics 365", "UIAuto Contact-1012496- - Admit", "Admit", ((string[])(null)));
#line hidden
        }
        
        public virtual void _20UI_ToValidateTheApplicationManagementUIUpdates_Part2(string testCaseID, string persona, string queryName, string baseEntity, string[] exampleTags)
        {
            string[] tagsOfScenario = exampleTags;
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("20 UI- To validate the Application Management UI Updates- Part2", null, exampleTags);
#line 624
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 626
testRunner.Given(string.Format("I have logged in as a {0}", persona), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 627
testRunner.And("I have navigated to the Area Process Config and SubArea Queries", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 628
testRunner.When("I wait for 4000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 629
 testRunner.And("I navigate to main Area and SubArea Application Registrations", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 630
testRunner.And("I wait for 4000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 631
testRunner.And("I open the first record in the grid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 632
testRunner.And("I wait for 2000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 633
testRunner.And("I have clicked More Commands command on APPLICATIONS SubGrid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 634
testRunner.When("I wait for 2000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 635
testRunner.And("I have navigated to the Area Process Config and SubArea Queries", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 636
testRunner.And("I have clicked New command in View", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 637
testRunner.When("I wait for 2000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 638
testRunner.And(string.Format("I have set {0} to cmc_queryname text field uniquely in the Form", queryName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 639
testRunner.And(string.Format("I have set {0} view/Entity to cmc_baseentity Picker in General section", baseEntity), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 641
testRunner.When("I press Save in the form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 642
testRunner.Then("the Entity should be saved", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 643
testRunner.When("I wait for 2000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 644
testRunner.And("I select the tab Query Condition in the form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 645
testRunner.And("I select the tab Query in the form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 646
testRunner.And("I have clicked More Commands command on Query Conditions SubGrid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 647
testRunner.And("I wait for 2000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 648
testRunner.And("I have clicked More Commands command on Query Condition Groups SubGrid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("20 UI- To validate the Application Management UI Updates- Part2: 915628")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "ApplicationRequirement")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("ApplicationRequirement")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "915628")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Test Case ID", "915628")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Persona", "ApplicationAdmin")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:QueryName", "Query-1-915628")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:BaseEntity", "Contact")]
        public virtual void _20UI_ToValidateTheApplicationManagementUIUpdates_Part2_915628()
        {
#line 624
this._20UI_ToValidateTheApplicationManagementUIUpdates_Part2("915628", "ApplicationAdmin", "Query-1-915628", "Contact", ((string[])(null)));
#line hidden
        }
        
        public virtual void _22FilterTheApplicationPeriodBasedOnTheProgram(string testCaseID, string persona, string[] exampleTags)
        {
            string[] tagsOfScenario = exampleTags;
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("22 Filter the Application Period based on the Program", null, exampleTags);
#line 677
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 678
testRunner.Given(string.Format("I have logged in as a {0}", persona), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 679
testRunner.And("I navigate to main Area and SubArea Applications", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 680
    testRunner.And("I have clicked New command in View", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 681
 testRunner.And("I have set UIAuto-ADV-899056 - UIAuto Contact- 899056 to cmc_applicationregistrat" +
                        "ion lookup item in the Form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 682
 testRunner.And("I wait for 2000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 683
 testRunner.And("I have set UIAuto-Program-899056-2 to cmc_programid lookup item in the Form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 684
 testRunner.And("I wait for 2000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 685
 testRunner.And("I have set UIAuto-ApplicationPeriodSpring22-899056 to cmc_applicationperiodid loo" +
                        "kup item in the Form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 686
 testRunner.And("I wait for 3000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 687
 testRunner.Then("I clear existing values in cmc_applicationperiodid lookup field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 688
 testRunner.And("I wait for 3000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 689
 testRunner.Given("I Verify lookup Value UIAuto-ApplicationPeriodSpring21-899056 is not available in" +
                        " cmc_applicationperiodid lookup item in the Form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 690
 testRunner.And("I wait for 2000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 691
 testRunner.Then("I clear existing values in cmc_applicationperiodid lookup field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 692
 testRunner.When("I have set UIAuto-ApplicationPeriodSpring22-899056 to cmc_applicationperiodid loo" +
                        "kup item in the Form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 693
 testRunner.And("I wait for 2000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 694
 testRunner.And("I press Save in the form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 695
 testRunner.Then("the Entity should be saved", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("22 Filter the Application Period based on the Program: 899056")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "ApplicationRequirement")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("ApplicationRequirement")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "899056")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Test Case ID", "899056")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Persona", "ApplicationAdmin")]
        public virtual void _22FilterTheApplicationPeriodBasedOnTheProgram_899056()
        {
#line 677
this._22FilterTheApplicationPeriodBasedOnTheProgram("899056", "ApplicationAdmin", ((string[])(null)));
#line hidden
        }
        
        public virtual void _23ValidateApplicationRequirementFormFunctionality(string testCaseID, string persona, string[] exampleTags)
        {
            string[] tagsOfScenario = exampleTags;
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("23 Validate \'Application Requirement\' Form functionality", null, exampleTags);
#line 701
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 705
 testRunner.Given(string.Format("I have logged in as a {0}", persona), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 706
 testRunner.And("I navigate to main Area and SubArea Applications", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 707
    testRunner.And("I search UIAuto Contact- 843875-UIAuto-Program-843875 in the grid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 708
 testRunner.When("I wait for 2000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 709
 testRunner.And("I open the first record in the grid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 710
 testRunner.And("I wait for 2000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 711
 testRunner.And("I select the tab Requirements in the form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 712
 testRunner.And("I wait for 2000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 714
 testRunner.And("I click New Requirement command on REQUIREMENTS SubGrid when available", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 715
 testRunner.And("I click More commands for Requirement button on REQUIREMENTS SubGrid only if avai" +
                        "lable", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 716
 testRunner.And("I click New Requirement SubGrid option on More Commands SubGrid when available", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 719
 testRunner.And("I wait for 2000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                            "Type",
                            "sectionLabel",
                            "FieldName",
                            "FieldValue"});
                table9.AddRow(new string[] {
                            "Field",
                            "General",
                            "Requirement Name",
                            ""});
                table9.AddRow(new string[] {
                            "Field",
                            "General",
                            "Application",
                            ""});
                table9.AddRow(new string[] {
                            "Field",
                            "General",
                            "Requirement Type",
                            ""});
                table9.AddRow(new string[] {
                            "Field",
                            "General",
                            "Description",
                            ""});
                table9.AddRow(new string[] {
                            "Field",
                            "General",
                            "Deadline Date/Time",
                            ""});
                table9.AddRow(new string[] {
                            "Field",
                            "General",
                            "Required",
                            ""});
                table9.AddRow(new string[] {
                            "Field",
                            "General",
                            "Requirement Status",
                            ""});
                table9.AddRow(new string[] {
                            "Field",
                            "General",
                            "Received Date",
                            ""});
#line 720
 testRunner.Then("I verify below fields", ((string)(null)), table9, "Then ");
#line hidden
#line 730
 testRunner.And("I scrolldown to End of General section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 731
  testRunner.And("I wait for 1000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                            "Type",
                            "sectionLabel",
                            "FieldName",
                            "FieldValue"});
                table10.AddRow(new string[] {
                            "Field",
                            "General",
                            "Source of Record",
                            ""});
                table10.AddRow(new string[] {
                            "Field",
                            "General",
                            "Owner",
                            ""});
#line 732
 testRunner.Then("I verify below fields", ((string)(null)), table10, "Then ");
#line hidden
#line 736
 testRunner.And("I wait for 2000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 739
 testRunner.When("I have set Unofficial Transcript to cmc_requirementtype optionset field in the Fo" +
                        "rm", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 740
 testRunner.And("I verify in General section Previous Education field is present", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 741
 testRunner.And("I wait for 2000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 742
 testRunner.When("I have set General to cmc_requirementtype optionset field in the Form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 743
 testRunner.And("I verify the Previous Education field is not present in the General section of th" +
                        "e form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 746
 testRunner.When("I have set Official Transcript to cmc_requirementtype optionset field in the Form" +
                        "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 747
 testRunner.And("I verify in General section Previous Education field is present", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 748
 testRunner.And("I wait for 2000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 749
 testRunner.When("I have set General to cmc_requirementtype optionset field in the Form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 750
 testRunner.And("I verify the Previous Education field is not present in the General section of th" +
                        "e form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 753
 testRunner.When("I have set Recommendation to cmc_requirementtype optionset field in the Form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 754
 testRunner.And("I verify in General section Recommendation field is present", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 755
 testRunner.And("I wait for 2000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 756
 testRunner.When("I have set General to cmc_requirementtype optionset field in the Form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 757
 testRunner.And("I verify the Recommendation field is not present in the General section of the fo" +
                        "rm", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 762
 testRunner.When("I have set Upload to cmc_requirementtype optionset field in the Form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 763
 testRunner.And("I wait for 2000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 764
 testRunner.And("I verify the Recommendation field is not present in the General section of the fo" +
                        "rm", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 765
 testRunner.And("I verify the Previous Education field is not present in the General section of th" +
                        "e form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 766
 testRunner.And("I verify the Test Score field is not present in the General section of the form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 769
 testRunner.When("I have set General to cmc_requirementtype optionset field in the Form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 770
 testRunner.And("I wait for 2000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 771
 testRunner.And("I verify the Recommendation field is not present in the General section of the fo" +
                        "rm", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 772
 testRunner.And("I verify the Previous Education field is not present in the General section of th" +
                        "e form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 773
 testRunner.And("I verify the Test Score field is not present in the General section of the form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 776
 testRunner.When("I have set Test Score to cmc_requirementtype optionset field in the Form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 777
 testRunner.And("I wait for 2000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 778
 testRunner.And("I verify in General section Test Score field is present", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 779
 testRunner.And("I wait for 2000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 780
 testRunner.When("I have set General to cmc_requirementtype optionset field in the Form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 781
 testRunner.And("I wait for 2000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 782
 testRunner.And("I verify the Test Score field is not present in the General section of the form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 783
 testRunner.And("I wait for 2000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 784
 testRunner.When("I have set Test Score to cmc_requirementtype optionset field in the Form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 785
 testRunner.And("I have set SAT to cmc_testscoreid field in the lookup dialog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 786
 testRunner.And("I press Save in the form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 787
 testRunner.And("I wait for 7000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 788
 testRunner.And("I verify in General section Application field is locked", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 789
 testRunner.When("I click cmc_applicationid locked lookup field in General section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 790
 testRunner.And("I select the tab Requirements in the form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 791
 testRunner.And("I wait for 2000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 792
 testRunner.When("I have clicked New Requirement command on REQUIREMENTS SubGrid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 793
 testRunner.When("I have set Recommendation to cmc_requirementtype optionset field in the Form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 794
 testRunner.And("I have set UIAuto Recommender- 843875 - Pending to cmc_recommendationid field in " +
                        "the lookup dialog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 795
 testRunner.And("I press Save in the form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("23 Validate \'Application Requirement\' Form functionality: 843875")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "ApplicationRequirement")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("ApplicationRequirement")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "843875")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Test Case ID", "843875")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Persona", "ApplicationAdmin")]
        public virtual void _23ValidateApplicationRequirementFormFunctionality_843875()
        {
#line 701
this._23ValidateApplicationRequirementFormFunctionality("843875", "ApplicationAdmin", ((string[])(null)));
#line hidden
        }
        
        public virtual void _24ValidateCompleteQueryUIChecksIncludingLaunchingAdvancedQueryBuilderFunctionality(string testCaseID, string persona, string queryName, string baseEntity, string[] exampleTags)
        {
            string[] tagsOfScenario = exampleTags;
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("24 Validate complete \'Query\' UI checks including launching \'Advanced Query builde" +
                    "r\' functionality", null, exampleTags);
#line 803
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 806
 testRunner.Given(string.Format("I have logged in as a {0}", persona), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 807
 testRunner.And("I have navigated to the Area Process Config and SubArea Queries", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 808
 testRunner.When("I wait for 2000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 809
 testRunner.And("I have clicked New command in View", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 810
 testRunner.When("I wait for 1000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 811
 testRunner.And(string.Format("I have set {0} to cmc_queryname text field uniquely in the Form", queryName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 812
 testRunner.And(string.Format("I have set {0} view/Entity to cmc_baseentity Picker in General section", baseEntity), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 813
 testRunner.When("I press Save in the form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 814
 testRunner.Then("the Entity should be saved", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 815
 testRunner.When("I wait for 2000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 816
 testRunner.And("I select the tab Query Condition in the form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 817
 testRunner.And("I wait for 2000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 818
 testRunner.And("I click Create/Edit Query button in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 819
 testRunner.And("I wait for 3000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 820
 testRunner.Then("I switch to Advanced Find - Microsoft Dynamics 365 window", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 821
 testRunner.And("I click HideDetails in Query group of advanced find ribbon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 822
 testRunner.And("I wait for 3000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 823
 testRunner.Then("I switch to contentIFrame0 frame", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 824
 testRunner.And("I select sub filter option as Application Name from Fields option group in row 0", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 825
 testRunner.And("I switch back to default frame", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 826
 testRunner.And("I wait for 8000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 827
 testRunner.Given("I click Save in the Advanced Find Window", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 828
 testRunner.And("I close the Advanced Find Window", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 829
 testRunner.And("I wait for 1000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 830
 testRunner.Then("I switch back to default frame", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 831
 testRunner.And("I wait for 2000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 835
 testRunner.Then("I switch to browser tab 1 if available", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 836
    testRunner.Then("I handle dialog with button okButton", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 838
 testRunner.And("I press Save in the form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 839
 testRunner.Then("the Entity should be saved", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 840
 testRunner.And("I wait for 3000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 841
 testRunner.And("I click Use Existing View button in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 843
 testRunner.And("I wait for 5000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 846
 testRunner.Given("I select Active Applications view in View Picker in Query section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 847
 testRunner.And("I wait for 1000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 848
 testRunner.And("I click Use Query button in the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 850
 testRunner.And("I wait for 2000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 851
 testRunner.When("I press Save in the form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 852
 testRunner.And("I wait for 2000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 855
 testRunner.And("I have navigated to the Area Process Config and SubArea Queries", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 856
 testRunner.When("I wait for 4000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 857
 testRunner.And("I have navigated to the Area Process Config and SubArea Requirement Definitions", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 858
 testRunner.When("I wait for 2000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 859
 testRunner.And("I have clicked New command in View", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 860
 testRunner.And("I have set UIAuto requirement to cmc_applicationrequirementdefinitionname text fi" +
                        "eld uniquely in the Form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 861
 testRunner.When("I press Save in the form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 862
 testRunner.Then("the Entity should be saved", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 863
 testRunner.When("I wait for 3000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 866
 testRunner.And("I click New Requirement Definition Detail command on APPLICATION REQUIREMENT DEFI" +
                        "NITION DETAILS SubGrid when available", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 867
 testRunner.And("I click More commands for Requirement Definition Detail button on APPLICATION REQ" +
                        "UIREMENT DEFINITION DETAILS SubGrid only if available", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 868
 testRunner.And("I click New Requirement Definition Detail SubGrid option on More Commands SubGrid" +
                        " when available", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 871
 testRunner.When("I have set General to cmc_requirementtype optionset field in the Form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 872
 testRunner.And("I have set UIAutoRDD to cmc_name text field uniquely in the Form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 873
 testRunner.And("I scrolldown to End of General section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 875
    testRunner.And("I select option Yes in cmc_conditional field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 876
 testRunner.And("I wait for 2000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 877
 testRunner.Given(string.Format("I have set {0} to cmc_queryid lookup item in the Form", queryName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 878
 testRunner.And("I wait for 2000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 879
 testRunner.When("I press Save in the form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 880
 testRunner.Then("the Entity should be saved", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("24 Validate complete \'Query\' UI checks including launching \'Advanced Query builde" +
            "r\' functionality: 1015579")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "ApplicationRequirement")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("ApplicationRequirement")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "1015579")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Test Case ID", "1015579")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Persona", "ApplicationAdmin")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:QueryName", "UIAuto-QueryApplication")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:BaseEntity", "Application")]
        public virtual void _24ValidateCompleteQueryUIChecksIncludingLaunchingAdvancedQueryBuilderFunctionality_1015579()
        {
#line 803
this._24ValidateCompleteQueryUIChecksIncludingLaunchingAdvancedQueryBuilderFunctionality("1015579", "ApplicationAdmin", "UIAuto-QueryApplication", "Application", ((string[])(null)));
#line hidden
        }
        
        public virtual void _25ValidateOnSelectingPaymentGatewayOptionItsRelatedCofigurationFieldsAppear(string testCaseID, string persona, string[] exampleTags)
        {
            string[] tagsOfScenario = exampleTags;
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("25 Validate on selecting Payment Gateway option its related cofiguration fields a" +
                    "ppear", null, exampleTags);
#line 888
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 890
 testRunner.Given(string.Format("I have logged in as a {0}", persona), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 891
 testRunner.And("I have navigated to the Area Settings and SubArea Payment Gateway Configurations", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 892
 testRunner.When("I wait for 2000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 893
 testRunner.And("I have clicked New command in View", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 894
 testRunner.When("I wait for 1000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 895
 testRunner.And("I have set PayPal to cmc_paymentgateway optionset field in the Form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 896
 testRunner.And("I wait for 2000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                            "Type",
                            "sectionLabel",
                            "FieldName",
                            "FieldValue"});
                table11.AddRow(new string[] {
                            "Field",
                            "General",
                            "Username",
                            ""});
                table11.AddRow(new string[] {
                            "Field",
                            "General",
                            "Password",
                            ""});
#line 897
 testRunner.Then("I verify below fields", ((string)(null)), table11, "Then ");
#line hidden
#line 903
 testRunner.And("I scroll in to view of PayPal section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 904
 testRunner.And("I wait for 2000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                            "Type",
                            "sectionLabel",
                            "FieldName",
                            "FieldValue"});
                table12.AddRow(new string[] {
                            "Field",
                            "PayPal",
                            "Payment Url",
                            ""});
                table12.AddRow(new string[] {
                            "Field",
                            "PayPal",
                            "Hosted Url",
                            ""});
                table12.AddRow(new string[] {
                            "Field",
                            "PayPal",
                            "Vendor",
                            ""});
#line 905
 testRunner.Then("I verify below fields", ((string)(null)), table12, "Then ");
#line hidden
#line 911
 testRunner.When("I wait for 1000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 912
 testRunner.And("I have set Cashnet to cmc_paymentgateway optionset field in the Form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                            "Type",
                            "sectionLabel",
                            "FieldName",
                            "FieldValue"});
                table13.AddRow(new string[] {
                            "Field",
                            "General",
                            "Username",
                            ""});
                table13.AddRow(new string[] {
                            "Field",
                            "General",
                            "Password",
                            ""});
#line 913
 testRunner.Then("I verify below fields", ((string)(null)), table13, "Then ");
#line hidden
#line 917
 testRunner.And("I scrolldown to End of Cashnet section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 918
 testRunner.And("I wait for 1000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                            "Type",
                            "sectionLabel",
                            "FieldName",
                            "FieldValue"});
                table14.AddRow(new string[] {
                            "Field",
                            "Cashnet",
                            "URL",
                            ""});
                table14.AddRow(new string[] {
                            "Field",
                            "Cashnet",
                            "Item Code",
                            ""});
                table14.AddRow(new string[] {
                            "Field",
                            "Cashnet",
                            "Encryption Key",
                            ""});
                table14.AddRow(new string[] {
                            "Field",
                            "Cashnet",
                            "Digest Parameter",
                            ""});
                table14.AddRow(new string[] {
                            "Field",
                            "Cashnet",
                            "Authentication Method (Digest)",
                            ""});
#line 919
 testRunner.Then("I verify below fields", ((string)(null)), table14, "Then ");
#line hidden
#line 927
 testRunner.When("I wait for 1000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 928
 testRunner.And("I have set Touchnet to cmc_paymentgateway optionset field in the Form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 929
 testRunner.And("I wait for 2000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
                            "Type",
                            "sectionLabel",
                            "FieldName",
                            "FieldValue"});
                table15.AddRow(new string[] {
                            "Field",
                            "General",
                            "Username",
                            ""});
                table15.AddRow(new string[] {
                            "Field",
                            "General",
                            "Password",
                            ""});
#line 930
 testRunner.Then("I verify below fields", ((string)(null)), table15, "Then ");
#line hidden
#line 934
 testRunner.And("I scrolldown to End of Touchnet section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 935
 testRunner.And("I wait for 1000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table16 = new TechTalk.SpecFlow.Table(new string[] {
                            "Type",
                            "sectionLabel",
                            "FieldName",
                            "FieldValue"});
                table16.AddRow(new string[] {
                            "Field",
                            "Touchnet",
                            "Site ID",
                            ""});
                table16.AddRow(new string[] {
                            "Field",
                            "Touchnet",
                            "uPay URL",
                            ""});
                table16.AddRow(new string[] {
                            "Field",
                            "Touchnet",
                            "Webservice URL",
                            ""});
#line 936
 testRunner.Then("I verify below fields", ((string)(null)), table16, "Then ");
#line hidden
#line 942
 testRunner.When("I wait for 1000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 943
 testRunner.And("I have set AuthorizeNet to cmc_paymentgateway optionset field in the Form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 944
 testRunner.And("I wait for 2000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table17 = new TechTalk.SpecFlow.Table(new string[] {
                            "Type",
                            "sectionLabel",
                            "FieldName",
                            "FieldValue"});
                table17.AddRow(new string[] {
                            "Field",
                            "General",
                            "API LoginID",
                            ""});
                table17.AddRow(new string[] {
                            "Field",
                            "General",
                            "API TransactionKey",
                            ""});
#line 945
 testRunner.Then("I verify below fields", ((string)(null)), table17, "Then ");
#line hidden
#line 949
 testRunner.And("I scrolldown to End of AuthorizeNet section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 950
 testRunner.And("I wait for 1000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table18 = new TechTalk.SpecFlow.Table(new string[] {
                            "Type",
                            "sectionLabel",
                            "FieldName",
                            "FieldValue"});
                table18.AddRow(new string[] {
                            "Field",
                            "AuthorizeNet",
                            "API Endpoint",
                            ""});
                table18.AddRow(new string[] {
                            "Field",
                            "AuthorizeNet",
                            "Form Post Url",
                            ""});
                table18.AddRow(new string[] {
                            "Field",
                            "AuthorizeNet",
                            "Webhook Url",
                            ""});
#line 951
 testRunner.Then("I verify below fields", ((string)(null)), table18, "Then ");
#line hidden
#line 957
 testRunner.When("I wait for 1000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 958
 testRunner.And("I have set ACI Funding Portal to cmc_paymentgateway optionset field in the Form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table19 = new TechTalk.SpecFlow.Table(new string[] {
                            "Type",
                            "sectionLabel",
                            "FieldName",
                            "FieldValue"});
                table19.AddRow(new string[] {
                            "Field",
                            "General",
                            "Username",
                            ""});
                table19.AddRow(new string[] {
                            "Field",
                            "General",
                            "Password",
                            ""});
#line 959
 testRunner.Then("I verify below fields", ((string)(null)), table19, "Then ");
#line hidden
#line 963
 testRunner.And("I scrolldown to End of ACI section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 964
 testRunner.And("I wait for 1000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table20 = new TechTalk.SpecFlow.Table(new string[] {
                            "Type",
                            "sectionLabel",
                            "FieldName",
                            "FieldValue"});
                table20.AddRow(new string[] {
                            "Field",
                            "ACI",
                            "Business ID",
                            ""});
                table20.AddRow(new string[] {
                            "Field",
                            "ACI",
                            "Make Payment URL",
                            ""});
                table20.AddRow(new string[] {
                            "Field",
                            "ACI",
                            "Add Funding URL",
                            ""});
#line 965
 testRunner.Then("I verify below fields", ((string)(null)), table20, "Then ");
#line hidden
#line 971
 testRunner.When("I wait for 1000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 972
 testRunner.And("I have set Nelnet to cmc_paymentgateway optionset field in the Form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table21 = new TechTalk.SpecFlow.Table(new string[] {
                            "Type",
                            "sectionLabel",
                            "FieldName",
                            "FieldValue"});
                table21.AddRow(new string[] {
                            "Field",
                            "General",
                            "Username",
                            ""});
                table21.AddRow(new string[] {
                            "Field",
                            "General",
                            "Password",
                            ""});
#line 973
 testRunner.Then("I verify below fields", ((string)(null)), table21, "Then ");
#line hidden
#line 977
 testRunner.And("I scrolldown to End of Nelnet section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 978
 testRunner.And("I wait for 1000 specific time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table22 = new TechTalk.SpecFlow.Table(new string[] {
                            "Type",
                            "sectionLabel",
                            "FieldName",
                            "FieldValue"});
                table22.AddRow(new string[] {
                            "Field",
                            "Nelnet",
                            "Access Token URL",
                            ""});
                table22.AddRow(new string[] {
                            "Field",
                            "Nelnet",
                            "Client ID",
                            ""});
                table22.AddRow(new string[] {
                            "Field",
                            "Nelnet",
                            "Client Secret",
                            ""});
                table22.AddRow(new string[] {
                            "Field",
                            "Nelnet",
                            "Tenant ID",
                            ""});
                table22.AddRow(new string[] {
                            "Field",
                            "Nelnet",
                            "Checkout Profile ID",
                            ""});
                table22.AddRow(new string[] {
                            "Field",
                            "Nelnet",
                            "Payment Profile ID",
                            ""});
                table22.AddRow(new string[] {
                            "Field",
                            "Nelnet",
                            "Checkout URL",
                            ""});
#line 979
 testRunner.Then("I verify below fields", ((string)(null)), table22, "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("25 Validate on selecting Payment Gateway option its related cofiguration fields a" +
            "ppear: 917118")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "ApplicationRequirement")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("ApplicationRequirement")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "917118")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Test Case ID", "917118")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Persona", "SystemAdministrator")]
        public virtual void _25ValidateOnSelectingPaymentGatewayOptionItsRelatedCofigurationFieldsAppear_917118()
        {
#line 888
this._25ValidateOnSelectingPaymentGatewayOptionItsRelatedCofigurationFieldsAppear("917118", "SystemAdministrator", ((string[])(null)));
#line hidden
        }
    }
}
#pragma warning restore
#endregion
