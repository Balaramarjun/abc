{
	"info": {
		"_postman_id": "2cafcd64-44c4-45e8-94c5-2db3474a3e37",
		"name": "UIAutomation_Create_Pre-requisiteScript",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Pre-requisites",
			"item": [
				{
					"name": "GetToken",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody);",
									"postman.setGlobalVariable('gaccess_token', data.access_token);",
									"",
									"//pm.environment.set(\"Eaccess_token\", data.access_token);",
									"console.log(pm.globals.get(\"gaccess_token\"));",
									"",
									"",
									"",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "grant_type",
									"value": "client_credentials",
									"type": "text"
								},
								{
									"key": "client_id",
									"value": "{{Esystemadmin_id}}",
									"type": "text"
								},
								{
									"key": "client_secret",
									"value": "{{Esystemadmin_secret}}",
									"type": "text"
								},
								{
									"key": "resource",
									"value": "{{Eresource}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "https://login.microsoftonline.com/{{Eredirectid}}/oauth2/token",
							"protocol": "https",
							"host": [
								"login",
								"microsoftonline",
								"com"
							],
							"path": [
								"{{Eredirectid}}",
								"oauth2",
								"token"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "AddressConfigurations",
			"item": [
				{
					"name": "Get Configurations",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var configurationid;",
									"",
									"pm.test(\"ApplicantType Created\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
									"    var jsonData = JSON.parse(responseBody);",
									"    configurationid = jsonData.value[0].cmc_configurationid;",
									"    console.log(\"configurationid: \"+configurationid);",
									"});",
									"",
									"pm.globals.set('gconfigurationid', configurationid);",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Prefer",
								"value": "return=representation"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{gaccess_token}}"
							}
						],
						"url": {
							"raw": "{{Eresource_URL}}cmc_configurations",
							"host": [
								"{{Eresource_URL}}cmc_configurations"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Address Configurations",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var configurationid;",
									"",
									"pm.test(\"ApplicantType Created\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
									"    var jsonData = JSON.parse(responseBody);",
									"    ",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Prefer",
								"value": "return=representation"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{gaccess_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"cmc_addressautocomplete\": true,\r\n    \"cmc_autocompletecountrymappings\": \"{\\\"USA\\\":175490231}\",\r\n    \"cmc_enabledforcountry\": \"US,IN\"\r\n}"
						},
						"url": {
							"raw": "{{Eresource_URL}}cmc_configurations({{gconfigurationid}})",
							"host": [
								"{{Eresource_URL}}cmc_configurations({{gconfigurationid}})"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "ApplicationManagementFeature",
			"item": [
				{
					"name": "TestCase -845653",
					"item": [
						{
							"name": "Create ApplicationType",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var applicationtypeid;",
											"",
											"pm.test(\"ApplicantType Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    applicationtypeid = jsonData.cmc_applicationtypeid;",
											"    var applicationTypeName = jsonData.cmc_applicationtypename;",
											"    console.log(\"Application Type name is: \" + applicationTypeName);",
											"",
											"});",
											"",
											"pm.globals.set('gapplicationtypeid1', applicationtypeid);",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_applicationtypename\": \"UIAuto-ApplicationType-845653\",\r\n    \"cmc_applicationgroup\": \"175490001\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applicationtypes",
									"host": [
										"{{Eresource_URL}}cmc_applicationtypes"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create AcademicPeriod",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var academicPeriodid;",
											"",
											"pm.test(\"Academic Period Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    academicPeriodid = jsonData.mshied_academicperiodid;",
											"    var academicPeriodName = jsonData.mshied_name;",
											"",
											"    console.log(\"Academic Period Name is: \" + academicPeriodName);",
											"",
											"});",
											"",
											"pm.globals.set('gacademicPeriodid1', academicPeriodid);",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var moment = require('moment');\r",
											"pm.environment.set(\"timestamp\", moment().add(1, 'days').format(\"YYYY-MM-DD\"));\r",
											"pm.environment.set(\"timestampEndDate\", moment().add(100, 'days').format(\"YYYY-MM-DD\"));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"mshied_enddate\": \"{{timestampEndDate}}\",\r\n    \"mshied_startdate\": \"{{timestamp}}\",\r\n    \"mshied_code\": \"UI-845653\",\r\n    \"mshied_name\": \"UIAuto-AcademicPer-845653\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}mshied_academicperiods",
									"host": [
										"{{Eresource_URL}}mshied_academicperiods"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create ApplicationPeriod",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var applicationPeriodid;",
											"",
											"pm.test(\"ApplicantPeriod Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    applicationPeriodid = jsonData.cmc_applicationperiodid;",
											"    var applicationPeriodName = jsonData.cmc_applicationperiodname;",
											"",
											"    console.log(\"Application Period Name is: \" + applicationPeriodName);",
											"",
											"});",
											"",
											"pm.globals.set('gapplicationPeriodid1', applicationPeriodid);",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\r\n\"cmc_AcademicPeriodId@odata.bind\": \"/mshied_academicperiods({{gacademicPeriodid1}})\",\r\n\"cmc_applicationperiodname\": \"UIAuto-ApplicationPeriod-845653\"\r\n\r\n}\r\n\r\n"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applicationperiods",
									"host": [
										"{{Eresource_URL}}cmc_applicationperiods"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Application Definition",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var applicationdefinitionid;",
											"",
											"pm.test(\"Application Requirment Definition Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    applicationdefinitionid = jsonData.cmc_applicationdefinitionid;",
											"    var applicationDefinitionName = jsonData.cmc_applicationdefinitionname;",
											"",
											"    console.log(\"Application Definition name is: \" + applicationDefinitionName);",
											"",
											"});",
											"",
											"pm.globals.set('gappdefid1', applicationdefinitionid);",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"cmc_applicationdefinitionname\":\"UIAuto-ApplicationDefinition-845653\"\r\n\r\n\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applicationdefinitions",
									"host": [
										"{{Eresource_URL}}cmc_applicationdefinitions"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Application Definition Version",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var applicationdefinitionverid, applicationdefinitionvername;",
											"",
											"pm.test(\"Application Requirment Definition Version Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    applicationdefinitionverid = jsonData.cmc_applicationdefinitionversionid;",
											"    applicationdefinitionvername = jsonData.cmc_applicationdefinitionversionname;",
											"    console.log(\"Application Definition version name is: \" + applicationdefinitionvername);",
											"});",
											"",
											"pm.globals.set('gappdefverid1', applicationdefinitionverid);",
											"pm.globals.set('gapplicationdefinitionvername1', applicationdefinitionvername);",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_applicationdefinitionversionname\": \"UIAuto-ADV-845653\",\r\n    \"cmc_applicationtype@odata.bind\": \"/cmc_applicationtypes({{gapplicationtypeid1}})\",\r\n    \"cmc_applicationdefinitionid@odata.bind\": \"/cmc_applicationdefinitions({{gappdefid1}})\",\r\n    \"cmc_createlifecycle\": false\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applicationdefinitionversions",
									"host": [
										"{{Eresource_URL}}cmc_applicationdefinitionversions"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get SourceCategory",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var sourceCategoryid;",
											"",
											"pm.test(\"Source category record Fetched\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    sourceCategoryid = jsonData.value[0].cmc_sourcecategoryid;",
											"    var sourceCategoryName = jsonData.value[0].cmc_sourcecategoryname;",
											"    console.log('SourceCategory Name is: ' + sourceCategoryName);",
											"",
											"});",
											"",
											"pm.globals.set('gsourceCategoryid1', sourceCategoryid);",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"url": {
									"raw": "{{Eresource_URL}}cmc_sourcecategories",
									"host": [
										"{{Eresource_URL}}cmc_sourcecategories"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get SourceMethod",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var sourceMethodid;",
											"",
											"pm.test(\"Source Method record Fetched\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    sourceMethodid = jsonData.value[0].cmc_sourcemethodid;",
											"    var sourceMethodName = jsonData.value[0].cmc_sourcemethodname;",
											"    console.log('SourceMethod Name is: ' + sourceMethodName);",
											"",
											"});",
											"",
											"pm.globals.set('gsourceMethodid1', sourceMethodid);",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"url": {
									"raw": "{{Eresource_URL}}cmc_sourcemethods",
									"host": [
										"{{Eresource_URL}}cmc_sourcemethods"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Contact",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Contact Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    var contactid = jsonData.contactid;",
											"    var contactName = jsonData.fullname;",
											"    console.log(\"Contact name is: \" + contactName);",
											"",
											"    pm.globals.set('gcontactid1', contactid);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"lastname\": \"Contact- 845653\",\r\n    \"firstname\": \"UIAuto\",\r\n    \"mshied_contacttype\": \"494280011\",\r\n    \"cmc_sourcecategoryid@odata.bind\": \"/cmc_sourcecategories({{gsourceCategoryid1}})\",\r\n    \"cmc_sourcemethodid@odata.bind\": \"/cmc_sourcemethods({{gsourceMethodid1}})\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}contacts",
									"host": [
										"{{Eresource_URL}}contacts"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Contact_CMCMansa",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Contact Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    var contactid = jsonData.contactid;",
											"    var contactName = jsonData.fullname;",
											"    console.log(\"Contact name is: \" + contactName);",
											"",
											"    pm.globals.set('gcontactid1a', contactid);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"lastname\": \"CMC Mansa\",\r\n    \"emailaddress1\": \"mansas@campusmgmt.com\",\r\n    \"mshied_contacttype\": \"494280011\",\r\n    \"cmc_sourcecategoryid@odata.bind\": \"/cmc_sourcecategories({{gsourceCategoryid1}})\",\r\n    \"cmc_sourcemethodid@odata.bind\": \"/cmc_sourcemethods({{gsourceMethodid1}})\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}contacts",
									"host": [
										"{{Eresource_URL}}contacts"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Application Registration",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Application Registration Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    var applicationRegId = jsonData.cmc_applicationregistrationid;",
											"    var applicationRegName = jsonData.cmc_applicationregistration;",
											"    console.log(\"Application Registration name is: \" +applicationRegName);",
											"",
											"    pm.globals.set('gapplicationRegId1', applicationRegId);",
											"    pm.globals.set('gapplicationRegName1', applicationRegName);",
											"",
											"});",
											"",
											"",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_contactid@odata.bind\": \"/contacts({{gcontactid1}})\",\r\n    \"cmc_applicationdefinitionversionid@odata.bind\": \"/cmc_applicationdefinitionversions({{gappdefverid1}})\",\r\n    \"cmc_applicationstatus\": 175490000,\r\n    \"cmc_applicationsubmitted\": false\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applicationregistrations",
									"host": [
										"{{Eresource_URL}}cmc_applicationregistrations"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Application",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Application Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    var applicationId = jsonData.cmc_applicationid;",
											"    var applicationName = jsonData.cmc_applicationname;",
											"    console.log(\"Application name is: \" + applicationName);",
											"",
											"    pm.globals.set('gapplicationId1', applicationId);",
											"    pm.globals.set('gapplicationName1', applicationName);",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_applicationstatus\": 175490001,\r\n    \"cmc_contactid@odata.bind\": \"/contacts({{gcontactid1}})\",\r\n    \"cmc_applicationperiodid@odata.bind\": \"/cmc_applicationperiods({{gapplicationPeriodid1}})\",\r\n    \"cmc_applicationregistration@odata.bind\": \"/cmc_applicationregistrations({{gapplicationRegId1}})\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applications",
									"host": [
										"{{Eresource_URL}}cmc_applications"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "TestCase -846115",
					"item": [
						{
							"name": "Create ApplicationType",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var applicationtypeid;",
											"",
											"pm.test(\"ApplicantType Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    applicationtypeid = jsonData.cmc_applicationtypeid;",
											"    var applicationTypeName = jsonData.cmc_applicationtypename;",
											"    console.log(\"Application Type name is: \" + applicationTypeName);",
											"",
											"});",
											"",
											"pm.globals.set('gapplicationtypeid2', applicationtypeid);",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"cmc_applicationtypename\":\"UIAuto-ApplicationType-846115\",\r\n\"cmc_applicationgroup\":\"175490001\"\r\n\r\n}\r\n\r\n"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applicationtypes",
									"host": [
										"{{Eresource_URL}}cmc_applicationtypes"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create AcademicPeriod",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var academicPeriodid;",
											"",
											"pm.test(\"Academic Period Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    academicPeriodid = jsonData.mshied_academicperiodid;",
											"    var academicPeriodName = jsonData.mshied_name;",
											"    console.log(\"Academic Period Name is: \" + academicPeriodName);",
											"});",
											"pm.globals.set('gacademicPeriodid2', academicPeriodid);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var moment = require('moment');\r",
											"pm.environment.set(\"timestamp\", moment().add(1, 'days').format(\"YYYY-MM-DD\"));\r",
											"pm.environment.set(\"timestampEndDate\", moment().add(100, 'days').format(\"YYYY-MM-DD\"));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"mshied_enddate\": \"{{timestampEndDate}}\",\r\n    \"mshied_startdate\": \"{{timestamp}}\",\r\n    \"mshied_code\": \"UI-846115\",\r\n    \"mshied_name\": \"UIAuto-AcademicPer-846115\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}mshied_academicperiods",
									"host": [
										"{{Eresource_URL}}mshied_academicperiods"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create ApplicationPeriod",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var applicationPeriodid;",
											"",
											"pm.test(\"ApplicantPeriod Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    applicationPeriodid = jsonData.cmc_applicationperiodid;",
											"    var applicationPeriodName = jsonData.cmc_applicationperiodname;",
											"    console.log(\"Application Period Name is: \" + applicationPeriodName);",
											"});",
											"",
											"pm.globals.set('gapplicationPeriodid2', applicationPeriodid);",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_AcademicPeriodId@odata.bind\": \"/mshied_academicperiods({{gacademicPeriodid2}})\",\r\n    \"cmc_applicationperiodname\": \"UIAuto-ApplicationPeriod-846115\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applicationperiods",
									"host": [
										"{{Eresource_URL}}cmc_applicationperiods"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Application Definition",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var applicationdefinitionid;",
											"",
											"pm.test(\"Application Requirment Definition Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    applicationdefinitionid = jsonData.cmc_applicationdefinitionid;",
											"    var applicationDefinitionName = jsonData.cmc_applicationdefinitionname;",
											"    console.log(\"Application Definition name is: \" + applicationDefinitionName);",
											"",
											"});",
											"pm.globals.set('gappdefid2', applicationdefinitionid);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_applicationdefinitionname\": \"UIAuto-ApplicationDefinition-846115\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applicationdefinitions",
									"host": [
										"{{Eresource_URL}}cmc_applicationdefinitions"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Application Definition Version",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var applicationdefinitionverid, applicationdefinitionvername;",
											"",
											"pm.test(\"Application Requirment Definition Version Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    applicationdefinitionverid = jsonData.cmc_applicationdefinitionversionid;",
											"    applicationdefinitionvername = jsonData.cmc_applicationdefinitionversionname;",
											"    console.log(\"Application Definition version name is: \" + applicationdefinitionvername);",
											"});",
											"",
											"pm.globals.set('gappdefverid2', applicationdefinitionverid);",
											"pm.globals.set('gapplicationdefinitionvername2', applicationdefinitionvername);",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_applicationdefinitionversionname\": \"UIAuto-ADV-846115\",\r\n    \"cmc_applicationtype@odata.bind\": \"/cmc_applicationtypes({{gapplicationtypeid2}})\",\r\n    \"cmc_applicationdefinitionid@odata.bind\": \"/cmc_applicationdefinitions({{gappdefid2}})\",\r\n    \"cmc_createlifecycle\": false\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applicationdefinitionversions",
									"host": [
										"{{Eresource_URL}}cmc_applicationdefinitionversions"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get SourceCategory",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var sourceCategoryid;",
											"",
											"pm.test(\"Source category record Fetched\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    sourceCategoryid = jsonData.value[0].cmc_sourcecategoryid;",
											"    var sourceCategoryName = jsonData.value[0].cmc_sourcecategoryname;",
											"    console.log('SourceCategory Name is: ' + sourceCategoryName);",
											"",
											"});",
											"pm.globals.set('gsourceCategoryid2', sourceCategoryid);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"url": {
									"raw": "{{Eresource_URL}}cmc_sourcecategories",
									"host": [
										"{{Eresource_URL}}cmc_sourcecategories"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get SourceMethod",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var sourceMethodid;",
											"",
											"pm.test(\"Source Method record Fetched\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    sourceMethodid = jsonData.value[0].cmc_sourcemethodid;",
											"    var sourceMethodName = jsonData.value[0].cmc_sourcemethodname;",
											"    console.log('SourceMethod Name is: ' + sourceMethodName);",
											"",
											"});",
											"",
											"pm.globals.set('gsourceMethodid2', sourceMethodid);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"url": {
									"raw": "{{Eresource_URL}}cmc_sourcemethods",
									"host": [
										"{{Eresource_URL}}cmc_sourcemethods"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Contact",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Contact Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    var contactid = jsonData.contactid;",
											"    var contactName = jsonData.fullname;",
											"    console.log(\"Contact name is: \" + contactName);",
											"",
											"    pm.globals.set('gcontactid2', contactid);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"lastname\": \"Contact-846115\",\r\n    \"firstname\": \"UIAuto\",\r\n    \"mshied_contacttype\": \"494280011\",\r\n    \"cmc_sourcecategoryid@odata.bind\": \"/cmc_sourcecategories({{gsourceCategoryid2}})\",\r\n    \"cmc_sourcemethodid@odata.bind\": \"/cmc_sourcemethods({{gsourceMethodid2}})\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}contacts",
									"host": [
										"{{Eresource_URL}}contacts"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Application Registration",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Application Registration Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    var applicationRegId = jsonData.cmc_applicationregistrationid;",
											"    var applicationRegName = jsonData.cmc_applicationregistration;",
											"    console.log(\"Application Registration name is: \" + applicationRegName);",
											"",
											"    pm.globals.set('gapplicationRegId2', applicationRegId);",
											"    pm.globals.set('gapplicationRegName2', applicationRegName);",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_contactid@odata.bind\": \"/contacts({{gcontactid2}})\",\r\n    \"cmc_applicationdefinitionversionid@odata.bind\": \"/cmc_applicationdefinitionversions({{gappdefverid2}})\",\r\n    \"cmc_applicationstatus\": 175490000,\r\n    \"cmc_applicationsubmitted\": false\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applicationregistrations",
									"host": [
										"{{Eresource_URL}}cmc_applicationregistrations"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Application",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Application Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    var applicationId = jsonData.cmc_applicationid;",
											"    var applicationName = jsonData.cmc_applicationname;",
											"    console.log(\"Application name is: \" + applicationName);",
											"",
											"    pm.globals.set('gapplicationId2', applicationId);",
											"    pm.globals.set('gapplicationName2', applicationName);",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_applicationstatus\": 175490001,\r\n    \"cmc_contactid@odata.bind\": \"/contacts({{gcontactid2}})\",\r\n    \"cmc_applicationperiodid@odata.bind\": \"/cmc_applicationperiods({{gapplicationPeriodid2}})\",\r\n    \"cmc_applicationregistration@odata.bind\": \"/cmc_applicationregistrations({{gapplicationRegId2}})\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applications",
									"host": [
										"{{Eresource_URL}}cmc_applications"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "TestCase -846499",
					"item": [
						{
							"name": "Create ApplicationType",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var applicationtypeid;",
											"",
											"pm.test(\"ApplicantType Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    applicationtypeid = jsonData.cmc_applicationtypeid;",
											"    var applicationTypeName = jsonData.cmc_applicationtypename;",
											"    console.log(\"Application Type name is: \" + applicationTypeName);",
											"",
											"});",
											"",
											"pm.globals.set('gapplicationtypeid3', applicationtypeid);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_applicationtypename\": \"UIAuto-ApplicationType-846499\",\r\n    \"cmc_applicationgroup\": \"175490001\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applicationtypes",
									"host": [
										"{{Eresource_URL}}cmc_applicationtypes"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create AcademicPeriod",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var academicPeriodid;",
											"",
											"pm.test(\"Academic Period Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    academicPeriodid = jsonData.mshied_academicperiodid;",
											"    var academicPeriodName = jsonData.mshied_name;",
											"    console.log(\"Academic Period Name is: \" + academicPeriodName);",
											"",
											"});",
											"pm.globals.set('gacademicPeriodid3', academicPeriodid);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var moment = require('moment');\r",
											"pm.environment.set(\"timestamp\", moment().add(1, 'days').format(\"YYYY-MM-DD\"));\r",
											"pm.environment.set(\"timestampEndDate\", moment().add(100, 'days').format(\"YYYY-MM-DD\"));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"mshied_enddate\": \"{{timestampEndDate}}\",\r\n\"mshied_startdate\": \"{{timestamp}}\",\r\n\"mshied_code\": \"UI-846499\",\r\n\"mshied_name\": \"UIAuto-AcademicPer-846499\"\r\n\r\n}\r\n\r\n"
								},
								"url": {
									"raw": "{{Eresource_URL}}mshied_academicperiods",
									"host": [
										"{{Eresource_URL}}mshied_academicperiods"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create ApplicationPeriod",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var applicationPeriodid;",
											"",
											"pm.test(\"ApplicantPeriod Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    applicationPeriodid = jsonData.cmc_applicationperiodid;",
											"    var applicationPeriodName = jsonData.cmc_applicationperiodname;",
											"",
											"    console.log(\"Application Period Name is: \" + applicationPeriodName);",
											"",
											"});",
											"pm.globals.set('gapplicationPeriodid3', applicationPeriodid);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_AcademicPeriodId@odata.bind\": \"/mshied_academicperiods({{gacademicPeriodid3}})\",\r\n    \"cmc_applicationperiodname\": \"UIAuto-ApplicationPeriod-846499\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applicationperiods",
									"host": [
										"{{Eresource_URL}}cmc_applicationperiods"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Application Definition",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var applicationdefinitionid;",
											"",
											"pm.test(\"Application Requirment Definition Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    applicationdefinitionid = jsonData.cmc_applicationdefinitionid;",
											"    var applicationDefinitionName = jsonData.cmc_applicationdefinitionname;",
											"",
											"    console.log(\"Application Definition name is: \" + applicationDefinitionName);",
											"",
											"});",
											"",
											"pm.globals.set('gappdefid3', applicationdefinitionid);",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_applicationdefinitionname\": \"UIAuto-ApplicationDefinition-846499\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applicationdefinitions",
									"host": [
										"{{Eresource_URL}}cmc_applicationdefinitions"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Application Definition Version",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var applicationdefinitionverid, applicationdefinitionvername;",
											"",
											"pm.test(\"Application Requirment Definition Version Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    applicationdefinitionverid = jsonData.cmc_applicationdefinitionversionid;",
											"    applicationdefinitionvername = jsonData.cmc_applicationdefinitionversionname;",
											"    console.log(\"Application Definition version name is: \" + applicationdefinitionvername);",
											"});",
											"",
											"pm.globals.set('gappdefverid3', applicationdefinitionverid);",
											"pm.globals.set('gapplicationdefinitionvername3', applicationdefinitionvername);",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_applicationdefinitionversionname\": \"UIAuto-ADV-846499\",\r\n    \"cmc_applicationtype@odata.bind\": \"/cmc_applicationtypes({{gapplicationtypeid3}})\",\r\n    \"cmc_applicationdefinitionid@odata.bind\": \"/cmc_applicationdefinitions({{gappdefid3}})\",\r\n    \"cmc_createlifecycle\": false\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applicationdefinitionversions",
									"host": [
										"{{Eresource_URL}}cmc_applicationdefinitionversions"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get SourceCategory",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var sourceCategoryid;",
											"",
											"pm.test(\"Source category record Fetched\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    sourceCategoryid = jsonData.value[0].cmc_sourcecategoryid;",
											"    var sourceCategoryName = jsonData.value[0].cmc_sourcecategoryname;",
											"    console.log('SourceCategory Name is: ' + sourceCategoryName);",
											"",
											"});",
											"",
											"pm.globals.set('gsourceCategoryid3', sourceCategoryid);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"url": {
									"raw": "{{Eresource_URL}}cmc_sourcecategories",
									"host": [
										"{{Eresource_URL}}cmc_sourcecategories"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get SourceMethod",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var sourceMethodid;",
											"",
											"pm.test(\"Source Method record Fetched\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    sourceMethodid = jsonData.value[0].cmc_sourcemethodid;",
											"    var sourceMethodName = jsonData.value[0].cmc_sourcemethodname;",
											"    console.log('SourceMethod Name is: ' + sourceMethodName);",
											"",
											"});",
											"",
											"pm.globals.set('gsourceMethodid3', sourceMethodid);",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"url": {
									"raw": "{{Eresource_URL}}cmc_sourcemethods",
									"host": [
										"{{Eresource_URL}}cmc_sourcemethods"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Contact",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Contact Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    var contactid = jsonData.contactid;",
											"    var contactName = jsonData.fullname;",
											"    console.log(\"Contact name is: \" + contactName);",
											"",
											"    pm.globals.set('gcontactid3', contactid);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"lastname\": \"Contact-846499\",\r\n    \"firstname\": \"UIAuto\",\r\n    \"mshied_contacttype\": \"494280011\",\r\n    \"cmc_sourcecategoryid@odata.bind\": \"/cmc_sourcecategories({{gsourceCategoryid3}})\",\r\n    \"cmc_sourcemethodid@odata.bind\": \"/cmc_sourcemethods({{gsourceMethodid3}})\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}contacts",
									"host": [
										"{{Eresource_URL}}contacts"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Application Registration",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Application Registration Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    var applicationRegId = jsonData.cmc_applicationregistrationid;",
											"    var applicationRegName = jsonData.cmc_applicationregistration;",
											"    console.log(\"Application Registration name is: \" + applicationRegName);",
											"",
											"    pm.globals.set('gapplicationRegId3', applicationRegId);",
											"    pm.globals.set('gapplicationRegName3', applicationRegName);",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_contactid@odata.bind\": \"/contacts({{gcontactid3}})\",\r\n    \"cmc_applicationdefinitionversionid@odata.bind\": \"/cmc_applicationdefinitionversions({{gappdefverid3}})\",\r\n    \"cmc_applicationstatus\": 175490000,\r\n    \"cmc_applicationsubmitted\": false\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applicationregistrations",
									"host": [
										"{{Eresource_URL}}cmc_applicationregistrations"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Application",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Application Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    var applicationId = jsonData.cmc_applicationid;",
											"    var applicationName = jsonData.cmc_applicationname;",
											"    console.log(\"Application name is: \" + applicationName);",
											"",
											"    pm.globals.set('gapplicationId3', applicationId);",
											"    pm.globals.set('gapplicationName3', applicationName);",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_applicationstatus\": 175490001,\r\n    \"cmc_contactid@odata.bind\": \"/contacts({{gcontactid3}})\",\r\n    \"cmc_applicationperiodid@odata.bind\": \"/cmc_applicationperiods({{gapplicationPeriodid3}})\",\r\n    \"cmc_applicationregistration@odata.bind\": \"/cmc_applicationregistrations({{gapplicationRegId3}})\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applications",
									"host": [
										"{{Eresource_URL}}cmc_applications"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "TestCase -1012488",
					"item": [
						{
							"name": "5 Application Records for 1 App Reg record",
							"item": [
								{
									"name": "Create ApplicationType",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var applicationtypeid;",
													"",
													"pm.test(\"ApplicantType Created\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
													"    var jsonData = JSON.parse(responseBody);",
													"    applicationtypeid = jsonData.cmc_applicationtypeid;",
													"    var applicationTypeName = jsonData.cmc_applicationtypename;",
													"    console.log(\"Application Type name is: \" + applicationTypeName);",
													"",
													"});",
													"",
													"pm.globals.set('gapplicationtypeid4', applicationtypeid);",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"cmc_applicationtypename\": \"UIAuto-ApplicationType-1012488\",\r\n    \"cmc_applicationgroup\": \"175490001\"\r\n}"
										},
										"url": {
											"raw": "{{Eresource_URL}}cmc_applicationtypes",
											"host": [
												"{{Eresource_URL}}cmc_applicationtypes"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create AcademicPeriod",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var academicPeriodid;",
													"",
													"pm.test(\"Academic Period Created\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
													"    var jsonData = JSON.parse(responseBody);",
													"    academicPeriodid = jsonData.mshied_academicperiodid;",
													"    var academicPeriodName=jsonData.mshied_name;",
													"    console.log(\"Academic Period Name is: \" +academicPeriodName);",
													"",
													"});",
													"pm.globals.set('gacademicPeriodid4', academicPeriodid);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var moment = require('moment');\r",
													"pm.environment.set(\"timestamp\", moment().add(1, 'days').format(\"YYYY-MM-DD\"));\r",
													"pm.environment.set(\"timestampEndDate\", moment().add(100, 'days').format(\"YYYY-MM-DD\"));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"mshied_enddate\": \"{{timestampEndDate}}\",\r\n    \"mshied_startdate\": \"{{timestamp}}\",\r\n    \"mshied_code\": \"UI-1012488\",\r\n    \"mshied_name\": \"UIAuto-AcademicPer-1012488\"\r\n}"
										},
										"url": {
											"raw": "{{Eresource_URL}}mshied_academicperiods",
											"host": [
												"{{Eresource_URL}}mshied_academicperiods"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create ApplicationPeriod-1",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var applicationPeriodid;",
													"",
													"pm.test(\"ApplicantPeriod Created\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
													"    var jsonData = JSON.parse(responseBody);",
													"    applicationPeriodid = jsonData.cmc_applicationperiodid;",
													"    var applicationPeriodName = jsonData.cmc_applicationperiodname;",
													"",
													"    console.log(\"Application Period Name is: \" + applicationPeriodName);",
													"",
													"});",
													"pm.globals.set('gapplicationPeriodid4a', applicationPeriodid);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"cmc_AcademicPeriodId@odata.bind\": \"/mshied_academicperiods({{gacademicPeriodid4}})\",\r\n    \"cmc_applicationperiodname\": \"UIAuto-ApplicationPeriod-1012488-1a\"\r\n}"
										},
										"url": {
											"raw": "{{Eresource_URL}}cmc_applicationperiods",
											"host": [
												"{{Eresource_URL}}cmc_applicationperiods"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create ApplicationPeriod-2",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var applicationPeriodid;",
													"",
													"pm.test(\"ApplicantPeriod Created\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
													"    var jsonData = JSON.parse(responseBody);",
													"    applicationPeriodid = jsonData.cmc_applicationperiodid;",
													"    var applicationPeriodName = jsonData.cmc_applicationperiodname;",
													"",
													"    console.log(\"Application Period Name is: \" + applicationPeriodName);",
													"",
													"});",
													"",
													"pm.globals.set('gapplicationPeriodid4b', applicationPeriodid);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"cmc_AcademicPeriodId@odata.bind\": \"/mshied_academicperiods({{gacademicPeriodid4}})\",\r\n    \"cmc_applicationperiodname\": \"UIAuto-ApplicationPeriod-1012488-2a\"\r\n}"
										},
										"url": {
											"raw": "{{Eresource_URL}}cmc_applicationperiods",
											"host": [
												"{{Eresource_URL}}cmc_applicationperiods"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create ApplicationPeriod-3",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var applicationPeriodid;",
													"",
													"pm.test(\"ApplicantPeriod Created\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
													"    var jsonData = JSON.parse(responseBody);",
													"    applicationPeriodid = jsonData.cmc_applicationperiodid;",
													"    var applicationPeriodName = jsonData.cmc_applicationperiodname;",
													"",
													"    console.log(\"Application Period Name is: \" + applicationPeriodName);",
													"",
													"});",
													"",
													"pm.globals.set('gapplicationPeriodid4c', applicationPeriodid);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"cmc_AcademicPeriodId@odata.bind\": \"/mshied_academicperiods({{gacademicPeriodid4}})\",\r\n    \"cmc_applicationperiodname\": \"UIAuto-ApplicationPeriod-1012488-3a\"\r\n}"
										},
										"url": {
											"raw": "{{Eresource_URL}}cmc_applicationperiods",
											"host": [
												"{{Eresource_URL}}cmc_applicationperiods"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create ApplicationPeriod-4",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var applicationPeriodid;",
													"",
													"pm.test(\"ApplicantPeriod Created\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
													"    var jsonData = JSON.parse(responseBody);",
													"    applicationPeriodid = jsonData.cmc_applicationperiodid;",
													"    var applicationPeriodName = jsonData.cmc_applicationperiodname;",
													"    console.log(\"Application Period Name is: \" + applicationPeriodName);",
													"",
													"});",
													"",
													"pm.globals.set('gapplicationPeriodid4d', applicationPeriodid);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"cmc_AcademicPeriodId@odata.bind\": \"/mshied_academicperiods({{gacademicPeriodid4}})\",\r\n    \"cmc_applicationperiodname\": \"UIAuto-ApplicationPeriod-1012488-4a\"\r\n}"
										},
										"url": {
											"raw": "{{Eresource_URL}}cmc_applicationperiods",
											"host": [
												"{{Eresource_URL}}cmc_applicationperiods"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create ApplicationPeriod-5",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var applicationPeriodid;",
													"",
													"pm.test(\"ApplicantPeriod Created\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
													"    var jsonData = JSON.parse(responseBody);",
													"    applicationPeriodid = jsonData.cmc_applicationperiodid;",
													"    var applicationPeriodName = jsonData.cmc_applicationperiodname;",
													"",
													"    console.log(\"Application Period Name is: \" + applicationPeriodName);",
													"",
													"});",
													"",
													"pm.globals.set('gapplicationPeriodid4e', applicationPeriodid);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"cmc_AcademicPeriodId@odata.bind\": \"/mshied_academicperiods({{gacademicPeriodid4}})\",\r\n    \"cmc_applicationperiodname\": \"UIAuto-ApplicationPeriod-1012488-5a\"\r\n}"
										},
										"url": {
											"raw": "{{Eresource_URL}}cmc_applicationperiods",
											"host": [
												"{{Eresource_URL}}cmc_applicationperiods"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Decision Definition",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var applicationDecDefid;",
													"",
													"pm.test(\"Application Decision Definition Created\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
													"    var jsonData = JSON.parse(responseBody);",
													"    applicationDecDefid = jsonData.cmc_applicationdecisiondefinitionid;",
													"    var applicationDecDefName = jsonData.cmc_applicationdecisiondefinitionname;",
													"    console.log(\"Decision Definition record name is: \" + applicationDecDefName);",
													"",
													"});",
													"pm.globals.set('gapplicationDecDefid4', applicationDecDefid);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var current_timestamp = new Date();\r",
													"postman.setEnvironmentVariable(\"current_timestamp\", current_timestamp.toISOString());"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"cmc_applicationdecisiondefinitionname\": \"UIAuto-ApplicationDecDef-1012488\",\r\n    \"cmc_decisionpublishdate\": \"{{current_timestamp}}\"\r\n}"
										},
										"url": {
											"raw": "{{Eresource_URL}}cmc_applicationdecisiondefinitions",
											"host": [
												"{{Eresource_URL}}cmc_applicationdecisiondefinitions"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Decision Definition Detail -Admit",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var applicationDecDefDetailid;",
													"",
													"pm.test(\"Application Decision Definition Detail Created\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
													"    var jsonData = JSON.parse(responseBody);",
													"    applicationDecDefDetailid = jsonData.cmc_applicationdecisiondefinitiondetailid;",
													"    var applicationDecDefDetailName = jsonData.cmc_applicationdecisiondefinitiondetailname;",
													"    console.log(\"Decision Definition Detail record name is: \" + applicationDecDefDetailName);",
													"",
													"});",
													"",
													"pm.globals.set('gapplicationDecDefDetailid4a', applicationDecDefDetailid);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"cmc_decisionstatus\": 175490000,\r\n    \"cmc_applicationdecisiondefinitiondetailname\": \"UIAuto-ApplicationDecDefDetail-1012488-1\",\r\n    \"cmc_applicationdecisiondefinition@odata.bind\": \"/cmc_applicationdecisiondefinitions({{gapplicationDecDefid4}})\"\r\n}"
										},
										"url": {
											"raw": "{{Eresource_URL}}cmc_applicationdecisiondefinitiondetails",
											"host": [
												"{{Eresource_URL}}cmc_applicationdecisiondefinitiondetails"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Decision Definition Detail-Admit with Conditions",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var applicationDecDefDetailid;",
													"",
													"pm.test(\"Application Decision Definition Detail Created\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
													"    var jsonData = JSON.parse(responseBody);",
													"    applicationDecDefDetailid = jsonData.cmc_applicationdecisiondefinitiondetailid;",
													"    var applicationDecDefDetailName = jsonData.cmc_applicationdecisiondefinitiondetailname;",
													"    console.log(\"Decision Definition Detail record name is: \" + applicationDecDefDetailName);",
													"",
													"});",
													"pm.globals.set('gapplicationDecDefDetailid4b', applicationDecDefDetailid);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"cmc_decisionstatus\": 175490005,\r\n    \"cmc_applicationdecisiondefinitiondetailname\": \"UIAuto-ApplicationDecDefDetail-1012488-2\",\r\n    \"cmc_applicationdecisiondefinition@odata.bind\": \"/cmc_applicationdecisiondefinitions({{gapplicationDecDefid4}})\"\r\n}"
										},
										"url": {
											"raw": "{{Eresource_URL}}cmc_applicationdecisiondefinitiondetails",
											"host": [
												"{{Eresource_URL}}cmc_applicationdecisiondefinitiondetails"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Application Definition",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var applicationdefinitionid;",
													"",
													"pm.test(\"Application Requirment Definition Created\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
													"    var jsonData = JSON.parse(responseBody);",
													"    applicationdefinitionid = jsonData.cmc_applicationdefinitionid;",
													"    var applicationDefinitionName= jsonData.cmc_applicationdefinitionname;",
													"    console.log(\"Application Definition name is: \"+applicationDefinitionName);",
													"",
													"});",
													"",
													"pm.globals.set('gappdefid4', applicationdefinitionid);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"cmc_applicationdefinitionname\": \"UIAuto-ApplicationDefinition-1012488\",\r\n    \"cmc_decisiondefinitionid@odata.bind\": \"/cmc_applicationdecisiondefinitions({{gapplicationDecDefid4}})\"\r\n}"
										},
										"url": {
											"raw": "{{Eresource_URL}}cmc_applicationdefinitions",
											"host": [
												"{{Eresource_URL}}cmc_applicationdefinitions"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Application Definition Version",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var applicationdefinitionverid, applicationdefinitionvername;",
													"",
													"pm.test(\"Application Requirment Definition Version Created\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
													"    var jsonData = JSON.parse(responseBody);",
													"    applicationdefinitionverid = jsonData.cmc_applicationdefinitionversionid;",
													"    applicationdefinitionvername = jsonData.cmc_applicationdefinitionversionname;",
													"    console.log(\"Application Definition version name is: \" + applicationdefinitionvername);",
													"});",
													"",
													"pm.globals.set('gappdefverid4', applicationdefinitionverid);",
													"pm.globals.set('gapplicationdefinitionvername4', applicationdefinitionvername);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"cmc_applicationdefinitionversionname\": \"UIAuto-ADV-1012488\",\r\n    \"cmc_applicationtype@odata.bind\": \"/cmc_applicationtypes({{gapplicationtypeid4}})\",\r\n    \"cmc_applicationdefinitionid@odata.bind\": \"/cmc_applicationdefinitions({{gappdefid4}})\",\r\n    \"cmc_createlifecycle\": false\r\n}"
										},
										"url": {
											"raw": "{{Eresource_URL}}cmc_applicationdefinitionversions",
											"host": [
												"{{Eresource_URL}}cmc_applicationdefinitionversions"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get SourceCategory",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var sourceCategoryid;",
													"",
													"pm.test(\"Source category record Fetched\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
													"    var jsonData = JSON.parse(responseBody);",
													"    sourceCategoryid = jsonData.value[0].cmc_sourcecategoryid;",
													"    var sourceCategoryName = jsonData.value[0].cmc_sourcecategoryname;",
													"    console.log('SourceCategory Name is: ' + sourceCategoryName);",
													"",
													"});",
													"pm.globals.set('gsourceCategoryid4', sourceCategoryid);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											}
										],
										"url": {
											"raw": "{{Eresource_URL}}cmc_sourcecategories",
											"host": [
												"{{Eresource_URL}}cmc_sourcecategories"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get SourceMethod",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var sourceMethodid;",
													"",
													"pm.test(\"Source Method record Fetched\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
													"    var jsonData = JSON.parse(responseBody);",
													"    sourceMethodid = jsonData.value[0].cmc_sourcemethodid;",
													"    var sourceMethodName = jsonData.value[0].cmc_sourcemethodname;",
													"    console.log('SourceMethod Name is: ' + sourceMethodName);",
													"});",
													"pm.globals.set('gsourceMethodid4', sourceMethodid);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											}
										],
										"url": {
											"raw": "{{Eresource_URL}}cmc_sourcemethods",
											"host": [
												"{{Eresource_URL}}cmc_sourcemethods"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Contact",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Contact Created\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
													"    var jsonData = JSON.parse(responseBody);",
													"    var contactid = jsonData.contactid;",
													"    var contactName = jsonData.fullname;",
													"    console.log(\"Contact name is: \" + contactName);",
													"",
													"    pm.globals.set('gcontactid4', contactid);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"lastname\": \"Contact-1012488\",\r\n    \"firstname\": \"UIAuto\",\r\n    \"mshied_contacttype\": \"494280011\",\r\n    \"cmc_sourcecategoryid@odata.bind\": \"/cmc_sourcecategories({{gsourceCategoryid4}})\",\r\n    \"cmc_sourcemethodid@odata.bind\": \"/cmc_sourcemethods({{gsourceMethodid4}})\"\r\n}"
										},
										"url": {
											"raw": "{{Eresource_URL}}contacts",
											"host": [
												"{{Eresource_URL}}contacts"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Application Registration",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Application Registration Created\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
													"    var jsonData = JSON.parse(responseBody);",
													"    var applicationRegId = jsonData.cmc_applicationregistrationid;",
													"    var applicationRegName = jsonData.cmc_applicationregistration;",
													"    console.log(\"Application Registration name is: \" + applicationRegName);",
													"",
													"    pm.globals.set('gapplicationRegId4', applicationRegId);",
													"    pm.globals.set('gapplicationRegName4', applicationRegName);",
													"",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"cmc_contactid@odata.bind\": \"/contacts({{gcontactid4}})\",\r\n    \"cmc_applicationdefinitionversionid@odata.bind\": \"/cmc_applicationdefinitionversions({{gappdefverid4}})\",\r\n    \"cmc_applicationstatus\": 175490000,\r\n    \"cmc_applicationsubmitted\": false\r\n}"
										},
										"url": {
											"raw": "{{Eresource_URL}}cmc_applicationregistrations",
											"host": [
												"{{Eresource_URL}}cmc_applicationregistrations"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Application-1",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Application Created\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
													"    var jsonData = JSON.parse(responseBody);",
													"    var applicationId = jsonData.cmc_applicationid;",
													"    var applicationName = jsonData.cmc_applicationname;",
													"    console.log(\"Application name is: \" + applicationName);",
													"",
													"    pm.globals.set('gapplicationId4a', applicationId);",
													"    pm.globals.set('gapplicationName4a', applicationName);",
													"",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"cmc_applicationstatus\": 175490001,\r\n    \"cmc_contactid@odata.bind\": \"/contacts({{gcontactid4}})\",\r\n    \"cmc_applicationperiodid@odata.bind\": \"/cmc_applicationperiods({{gapplicationPeriodid4a}})\",\r\n    \"cmc_applicationregistration@odata.bind\": \"/cmc_applicationregistrations({{gapplicationRegId4}})\"\r\n}"
										},
										"url": {
											"raw": "{{Eresource_URL}}cmc_applications",
											"host": [
												"{{Eresource_URL}}cmc_applications"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Application-2",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Application Created\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
													"    var jsonData = JSON.parse(responseBody);",
													"    var applicationId = jsonData.cmc_applicationid;",
													"    var applicationName = jsonData.cmc_applicationname;",
													"    console.log(\"Application name is: \" + applicationName);",
													"",
													"    pm.globals.set('gapplicationId4b', applicationId);",
													"    pm.globals.set('gapplicationName4b', applicationName);",
													"",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"cmc_applicationstatus\": 175490001,\r\n    \"cmc_contactid@odata.bind\": \"/contacts({{gcontactid4}})\",\r\n    \"cmc_applicationperiodid@odata.bind\": \"/cmc_applicationperiods({{gapplicationPeriodid4b}})\",\r\n    \"cmc_applicationregistration@odata.bind\": \"/cmc_applicationregistrations({{gapplicationRegId4}})\"\r\n}"
										},
										"url": {
											"raw": "{{Eresource_URL}}cmc_applications",
											"host": [
												"{{Eresource_URL}}cmc_applications"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Application-3",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Application Created\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
													"    var jsonData = JSON.parse(responseBody);",
													"    var applicationId = jsonData.cmc_applicationid;",
													"    var applicationName = jsonData.cmc_applicationname;",
													"    console.log(\"Application name is: \" + applicationName);",
													"",
													"    pm.globals.set('gapplicationId4c', applicationId);",
													"    pm.globals.set('gapplicationName4c', applicationName);",
													"",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"cmc_applicationstatus\": 175490001,\r\n    \"cmc_contactid@odata.bind\": \"/contacts({{gcontactid4}})\",\r\n    \"cmc_applicationperiodid@odata.bind\": \"/cmc_applicationperiods({{gapplicationPeriodid4c}})\",\r\n    \"cmc_applicationregistration@odata.bind\": \"/cmc_applicationregistrations({{gapplicationRegId4}})\"\r\n}"
										},
										"url": {
											"raw": "{{Eresource_URL}}cmc_applications",
											"host": [
												"{{Eresource_URL}}cmc_applications"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Application-4",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Application Created\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
													"    var jsonData = JSON.parse(responseBody);",
													"    var applicationId = jsonData.cmc_applicationid;",
													"    var applicationName = jsonData.cmc_applicationname;",
													"    console.log(\"Application name is: \" + applicationName);",
													"",
													"    pm.globals.set('gapplicationId4d', applicationId);",
													"    pm.globals.set('gapplicationName4d', applicationName);",
													"",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"cmc_applicationstatus\": 175490001,\r\n    \"cmc_contactid@odata.bind\": \"/contacts({{gcontactid4}})\",\r\n    \"cmc_applicationperiodid@odata.bind\": \"/cmc_applicationperiods({{gapplicationPeriodid4d}})\",\r\n    \"cmc_applicationregistration@odata.bind\": \"/cmc_applicationregistrations({{gapplicationRegId4}})\"\r\n}"
										},
										"url": {
											"raw": "{{Eresource_URL}}cmc_applications",
											"host": [
												"{{Eresource_URL}}cmc_applications"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Application-5",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Application Created\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
													"    var jsonData = JSON.parse(responseBody);",
													"    var applicationId = jsonData.cmc_applicationid;",
													"    var applicationName = jsonData.cmc_applicationname;",
													"    console.log(\"Application name is: \" + applicationName);",
													"",
													"    pm.globals.set('gapplicationId4e', applicationId);",
													"    pm.globals.set('gapplicationName4e', applicationName);",
													"",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"cmc_applicationstatus\": 175490001,\r\n    \"cmc_contactid@odata.bind\": \"/contacts({{gcontactid4}})\",\r\n    \"cmc_applicationperiodid@odata.bind\": \"/cmc_applicationperiods({{gapplicationPeriodid4e}})\",\r\n    \"cmc_applicationregistration@odata.bind\": \"/cmc_applicationregistrations({{gapplicationRegId4}})\"\r\n}"
										},
										"url": {
											"raw": "{{Eresource_URL}}cmc_applications",
											"host": [
												"{{Eresource_URL}}cmc_applications"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "TestCase -1014038",
					"item": [
						{
							"name": "Create ApplicationType",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var applicationtypeid;",
											"",
											"pm.test(\"ApplicantType Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    applicationtypeid = jsonData.cmc_applicationtypeid;",
											"    var applicationTypeName = jsonData.cmc_applicationtypename;",
											"    console.log(\"Application Type name is: \" + applicationTypeName);",
											"",
											"});",
											"pm.globals.set('gapplicationtypeid9', applicationtypeid);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_applicationtypename\": \"UIAuto-ApplicationType-1014038\",\r\n    \"cmc_applicationgroup\": \"175490001\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applicationtypes",
									"host": [
										"{{Eresource_URL}}cmc_applicationtypes"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create AcademicPeriod",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var academicPeriodid;",
											"",
											"pm.test(\"Academic Period Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    academicPeriodid = jsonData.mshied_academicperiodid;",
											"    var academicPeriodName = jsonData.mshied_name;",
											"    console.log(\"Academic Period Name is: \" + academicPeriodName);",
											"",
											"});",
											"pm.globals.set('gacademicPeriodid9', academicPeriodid);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var moment = require('moment');\r",
											"pm.environment.set(\"timestamp\", moment().add(1, 'days').format(\"YYYY-MM-DD\"));\r",
											"pm.environment.set(\"timestampEndDate\", moment().add(100, 'days').format(\"YYYY-MM-DD\"));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"mshied_enddate\": \"{{timestampEndDate}}\",\r\n    \"mshied_startdate\": \"{{timestamp}}\",\r\n    \"mshied_code\": \"UI-1014038\",\r\n    \"mshied_name\": \"UIAuto-AcademicPer-1014038\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}mshied_academicperiods",
									"host": [
										"{{Eresource_URL}}mshied_academicperiods"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create ApplicationPeriod",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var applicationPeriodid;",
											"",
											"pm.test(\"ApplicantPeriod Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    applicationPeriodid = jsonData.cmc_applicationperiodid;",
											"    var applicationPeriodName = jsonData.cmc_applicationperiodname;",
											"",
											"    console.log(\"Application Period Name is: \" + applicationPeriodName);",
											"",
											"});",
											"",
											"pm.globals.set('gapplicationPeriodid9', applicationPeriodid);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_AcademicPeriodId@odata.bind\": \"/mshied_academicperiods({{gacademicPeriodid9}})\",\r\n    \"cmc_applicationperiodname\": \"UIAuto-ApplicationPeriod-1014038\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applicationperiods",
									"host": [
										"{{Eresource_URL}}cmc_applicationperiods"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Decision Definition",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var applicationDecDefid;",
											"",
											"pm.test(\"Application Decision Definition Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    applicationDecDefid = jsonData.cmc_applicationdecisiondefinitionid;",
											"    var applicationDecDefName = jsonData.cmc_applicationdecisiondefinitionname;",
											"    console.log(\"Decision Definition record name is: \" + applicationDecDefName);",
											"",
											"});",
											"",
											"pm.globals.set('gapplicationDecDefid9', applicationDecDefid);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var current_timestamp = new Date();\r",
											"postman.setEnvironmentVariable(\"current_timestamp\", current_timestamp.toISOString());"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_applicationdecisiondefinitionname\": \"UIAuto-ApplicationDecDef-1014038\",\r\n    \"cmc_decisionpublishdate\": \"{{current_timestamp}}\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applicationdecisiondefinitions",
									"host": [
										"{{Eresource_URL}}cmc_applicationdecisiondefinitions"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Decision Definition Detail_Admit",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var applicationDecDefDetailid;",
											"",
											"pm.test(\"Application Decision Definition Detail Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    applicationDecDefDetailid = jsonData.cmc_applicationdecisiondefinitiondetailid;",
											"    var applicationDecDefDetailName = jsonData.cmc_applicationdecisiondefinitiondetailname;",
											"",
											"    console.log(\"Decision Definition Detail record name is: \" + applicationDecDefDetailName);",
											"",
											"});",
											"",
											"pm.globals.set('gapplicationDecDefDetailid9a', applicationDecDefDetailid);",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_decisionstatus\": 175490000,\r\n    \"cmc_applicationdecisiondefinitiondetailname\": \"UIAuto-ApplicationDecDefDetail-1014038-1\",\r\n    \"cmc_applicationdecisiondefinition@odata.bind\": \"/cmc_applicationdecisiondefinitions({{gapplicationDecDefid9}})\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applicationdecisiondefinitiondetails",
									"host": [
										"{{Eresource_URL}}cmc_applicationdecisiondefinitiondetails"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Decision Definition Detail_Reject",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var applicationDecDefDetailid;",
											"",
											"pm.test(\"Application Decision Definition Detail Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    applicationDecDefDetailid = jsonData.cmc_applicationdecisiondefinitiondetailid;",
											"    var applicationDecDefDetailName = jsonData.cmc_applicationdecisiondefinitiondetailname;",
											"",
											"    console.log(\"Decision Definition Detail record name is: \" + applicationDecDefDetailName);",
											"",
											"});",
											"",
											"pm.globals.set('gapplicationDecDefDetailid9b', applicationDecDefDetailid);",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_decisionstatus\": 175490001,\r\n    \"cmc_applicationdecisiondefinitiondetailname\": \"UIAuto-ApplicationDecDefDetail-1014038-2\",\r\n    \"cmc_applicationdecisiondefinition@odata.bind\": \"/cmc_applicationdecisiondefinitions({{gapplicationDecDefid9}})\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applicationdecisiondefinitiondetails",
									"host": [
										"{{Eresource_URL}}cmc_applicationdecisiondefinitiondetails"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Application Definition",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var applicationdefinitionid;",
											"",
											"pm.test(\"Application Requirment Definition Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    applicationdefinitionid = jsonData.cmc_applicationdefinitionid;",
											"    var applicationDefinitionName= jsonData.cmc_applicationdefinitionname;",
											"",
											"    console.log(\"Application Definition name is: \"+applicationDefinitionName);",
											"",
											"});",
											"",
											"pm.globals.set('gappdefid9', applicationdefinitionid);",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_applicationdefinitionname\": \"UIAuto-ApplicationDefinition-1014038\",\r\n    \"cmc_decisiondefinitionid@odata.bind\": \"/cmc_applicationdecisiondefinitions({{gapplicationDecDefid9}})\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applicationdefinitions",
									"host": [
										"{{Eresource_URL}}cmc_applicationdefinitions"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Application Definition Version",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var applicationdefinitionverid, applicationdefinitionvername;",
											"",
											"pm.test(\"Application Requirment Definition Version Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    applicationdefinitionverid = jsonData.cmc_applicationdefinitionversionid;",
											"    applicationdefinitionvername = jsonData.cmc_applicationdefinitionversionname;",
											"    console.log(\"Application Definition version name is: \" + applicationdefinitionvername);",
											"});",
											"",
											"pm.globals.set('gappdefverid9', applicationdefinitionverid);",
											"pm.globals.set('gapplicationdefinitionvername9', applicationdefinitionvername);",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_applicationdefinitionversionname\": \"UIAuto-ADV-1014038\",\r\n    \"cmc_applicationtype@odata.bind\": \"/cmc_applicationtypes({{gapplicationtypeid9}})\",\r\n    \"cmc_applicationdefinitionid@odata.bind\": \"/cmc_applicationdefinitions({{gappdefid9}})\",\r\n    \"cmc_createlifecycle\": false\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applicationdefinitionversions",
									"host": [
										"{{Eresource_URL}}cmc_applicationdefinitionversions"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get SourceCategory",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var sourceCategoryid;",
											"",
											"pm.test(\"Source category record Fetched\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    sourceCategoryid = jsonData.value[0].cmc_sourcecategoryid;",
											"    var sourceCategoryName = jsonData.value[0].cmc_sourcecategoryname;",
											"    console.log('SourceCategory Name is: ' + sourceCategoryName);",
											"",
											"});",
											"",
											"pm.globals.set('gsourceCategoryid9', sourceCategoryid);",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"url": {
									"raw": "{{Eresource_URL}}cmc_sourcecategories",
									"host": [
										"{{Eresource_URL}}cmc_sourcecategories"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get SourceMethod",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var sourceMethodid;",
											"",
											"pm.test(\"Source Method record Fetched\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    sourceMethodid = jsonData.value[0].cmc_sourcemethodid;",
											"    var sourceMethodName = jsonData.value[0].cmc_sourcemethodname;",
											"    console.log('SourceMethod Name is: ' + sourceMethodName);",
											"",
											"});",
											"",
											"pm.globals.set('gsourceMethodid9', sourceMethodid);",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"url": {
									"raw": "{{Eresource_URL}}cmc_sourcemethods",
									"host": [
										"{{Eresource_URL}}cmc_sourcemethods"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Contact",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Contact Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    var contactid = jsonData.contactid;",
											"    var contactName = jsonData.fullname;",
											"    console.log(\"Contact name is: \" + contactName);",
											"",
											"    pm.globals.set('gcontactid9', contactid);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"lastname\": \"Contact-1014038\",\r\n    \"firstname\": \"UIAuto\",\r\n    \"mshied_contacttype\": \"494280011\",\r\n    \"cmc_sourcecategoryid@odata.bind\": \"/cmc_sourcecategories({{gsourceCategoryid9}})\",\r\n    \"cmc_sourcemethodid@odata.bind\": \"/cmc_sourcemethods({{gsourceMethodid9}})\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}contacts",
									"host": [
										"{{Eresource_URL}}contacts"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Application Registration",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Application Registration Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    var applicationRegId = jsonData.cmc_applicationregistrationid;",
											"    var applicationRegName = jsonData.cmc_applicationregistration;",
											"    console.log(\"Application Registration name is: \" + applicationRegName);",
											"",
											"    pm.globals.set('gapplicationRegId9', applicationRegId);",
											"    pm.globals.set('gapplicationRegName9', applicationRegName);",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_contactid@odata.bind\": \"/contacts({{gcontactid9}})\",\r\n    \"cmc_applicationdefinitionversionid@odata.bind\": \"/cmc_applicationdefinitionversions({{gappdefverid9}})\",\r\n    \"cmc_applicationstatus\": 175490000,\r\n    \"cmc_applicationsubmitted\": false\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applicationregistrations",
									"host": [
										"{{Eresource_URL}}cmc_applicationregistrations"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Application",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Application Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    var applicationId = jsonData.cmc_applicationid;",
											"    var applicationName = jsonData.cmc_applicationname;",
											"    console.log(\"Application name is: \" + applicationName);",
											"",
											"    pm.globals.set('gapplicationId9', applicationId);",
											"    pm.globals.set('gapplicationName9', applicationName);",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_applicationstatus\": 175490001,\r\n    \"cmc_contactid@odata.bind\": \"/contacts({{gcontactid9}})\",\r\n    \"cmc_applicationperiodid@odata.bind\": \"/cmc_applicationperiods({{gapplicationPeriodid9}})\",\r\n    \"cmc_applicationregistration@odata.bind\": \"/cmc_applicationregistrations({{gapplicationRegId9}})\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applications",
									"host": [
										"{{Eresource_URL}}cmc_applications"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "TestCase -1018665",
					"item": [
						{
							"name": "Create ApplicationType",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var applicationtypeid;",
											"",
											"pm.test(\"ApplicantType Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    applicationtypeid = jsonData.cmc_applicationtypeid;",
											"    var applicationTypeName=jsonData.cmc_applicationtypename;",
											"    console.log(\"Application Type name is: \"+applicationTypeName);",
											"",
											"});",
											"",
											"pm.globals.set('gapplicationtypeid10', applicationtypeid);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_applicationtypename\": \"UIAuto-ApplicationType-1018665\",\r\n    \"cmc_applicationgroup\": \"175490001\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applicationtypes",
									"host": [
										"{{Eresource_URL}}cmc_applicationtypes"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create AcademicPeriod",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var academicPeriodid;",
											"",
											"pm.test(\"Academic Period Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    academicPeriodid = jsonData.mshied_academicperiodid;",
											"    var academicPeriodName = jsonData.mshied_name;",
											"    console.log(\"Academic Period Name is: \" + academicPeriodName);",
											"",
											"});",
											"",
											"pm.globals.set('gacademicPeriodid10', academicPeriodid);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var moment = require('moment');\r",
											"pm.environment.set(\"timestamp\", moment().add(1, 'days').format(\"YYYY-MM-DD\"));\r",
											"pm.environment.set(\"timestampEndDate\", moment().add(100, 'days').format(\"YYYY-MM-DD\"));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"mshied_enddate\": \"{{timestampEndDate}}\",\r\n    \"mshied_startdate\": \"{{timestamp}}\",\r\n    \"mshied_code\": \"UI-1018665\",\r\n    \"mshied_name\": \"UIAuto-AcademicPer-1018665\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}mshied_academicperiods",
									"host": [
										"{{Eresource_URL}}mshied_academicperiods"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create ApplicationPeriod",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var applicationPeriodid;",
											"",
											"pm.test(\"ApplicantPeriod Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    applicationPeriodid = jsonData.cmc_applicationperiodid;",
											"    var applicationPeriodName=jsonData.cmc_applicationperiodname;",
											"",
											"    console.log(\"Application Period Name is: \" +applicationPeriodName);",
											"",
											"});",
											"",
											"pm.globals.set('gapplicationPeriodid10', applicationPeriodid);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\r\n\"cmc_AcademicPeriodId@odata.bind\": \"/mshied_academicperiods({{gacademicPeriodid10}})\",\r\n\"cmc_applicationperiodname\": \"UIAuto-ApplicationPeriod-1018665\"\r\n\r\n}\r\n\r\n"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applicationperiods",
									"host": [
										"{{Eresource_URL}}cmc_applicationperiods"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Decision Definition",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var applicationDecDefid;",
											"",
											"pm.test(\"Application Decision Definition Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    applicationDecDefid = jsonData.cmc_applicationdecisiondefinitionid;",
											"    var applicationDecDefName = jsonData.cmc_applicationdecisiondefinitionname;",
											"",
											"    console.log(\"Decision Definition record name is: \" + applicationDecDefName);",
											"",
											"});",
											"",
											"pm.globals.set('gapplicationDecDefid10', applicationDecDefid);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var current_timestamp = new Date();\r",
											"postman.setEnvironmentVariable(\"current_timestamp\", current_timestamp.toISOString());"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_applicationdecisiondefinitionname\": \"UIAuto-ApplicationDecDef-1018665\",\r\n    \"cmc_decisionpublishdate\": \"{{current_timestamp}}\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applicationdecisiondefinitions",
									"host": [
										"{{Eresource_URL}}cmc_applicationdecisiondefinitions"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Decision Definition Detail",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var applicationDecDefDetailid;",
											"",
											"pm.test(\"Application Decision Definition Detail Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    applicationDecDefDetailid = jsonData.cmc_applicationdecisiondefinitiondetailid;",
											"    var applicationDecDefDetailName = jsonData.cmc_applicationdecisiondefinitiondetailname;",
											"",
											"    console.log(\"Decision Definition Detail record name is: \" + applicationDecDefDetailName);",
											"",
											"});",
											"",
											"pm.globals.set('gapplicationDecDefDetailid10', applicationDecDefDetailid);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_decisionstatus\": 175490000,\r\n    \"cmc_applicationdecisiondefinitiondetailname\": \"UIAuto-ApplicationDecDefDetail-1018665\",\r\n    \"cmc_applicationdecisiondefinition@odata.bind\": \"/cmc_applicationdecisiondefinitions({{gapplicationDecDefid10}})\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applicationdecisiondefinitiondetails",
									"host": [
										"{{Eresource_URL}}cmc_applicationdecisiondefinitiondetails"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Application Definition",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var applicationdefinitionid;",
											"",
											"pm.test(\"Application Requirment Definition Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    applicationdefinitionid = jsonData.cmc_applicationdefinitionid;",
											"    var applicationDefinitionName= jsonData.cmc_applicationdefinitionname;",
											"",
											"    console.log(\"Application Definition name is: \"+applicationDefinitionName);",
											"",
											"});",
											"",
											"pm.globals.set('gappdefid10', applicationdefinitionid);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_applicationdefinitionname\": \"UIAuto-ApplicationDefinition-1018665\",\r\n    \"cmc_decisiondefinitionid@odata.bind\": \"/cmc_applicationdecisiondefinitions({{gapplicationDecDefid10}})\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applicationdefinitions",
									"host": [
										"{{Eresource_URL}}cmc_applicationdefinitions"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Application Definition Version",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var applicationdefinitionverid, applicationdefinitionvername;",
											"",
											"pm.test(\"Application Requirment Definition Version Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    applicationdefinitionverid = jsonData.cmc_applicationdefinitionversionid;",
											"    applicationdefinitionvername = jsonData.cmc_applicationdefinitionversionname;",
											"    console.log(\"Application Definition version name is: \" + applicationdefinitionvername);",
											"});",
											"",
											"pm.globals.set('gappdefverid10', applicationdefinitionverid);",
											"pm.globals.set('gapplicationdefinitionvername10', applicationdefinitionvername);",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_applicationdefinitionversionname\": \"UIAuto-ADV-1018665\",\r\n    \"cmc_applicationtype@odata.bind\": \"/cmc_applicationtypes({{gapplicationtypeid10}})\",\r\n    \"cmc_applicationdefinitionid@odata.bind\": \"/cmc_applicationdefinitions({{gappdefid10}})\",\r\n    \"cmc_createlifecycle\": false\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applicationdefinitionversions",
									"host": [
										"{{Eresource_URL}}cmc_applicationdefinitionversions"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get SourceCategory",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var sourceCategoryid;",
											"",
											"pm.test(\"Source category record Fetched\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    sourceCategoryid = jsonData.value[0].cmc_sourcecategoryid;",
											"    var sourceCategoryName = jsonData.value[0].cmc_sourcecategoryname;",
											"    console.log('SourceCategory Name is: ' + sourceCategoryName);",
											"",
											"});",
											"",
											"pm.globals.set('gsourceCategoryid10', sourceCategoryid);",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"url": {
									"raw": "{{Eresource_URL}}cmc_sourcecategories",
									"host": [
										"{{Eresource_URL}}cmc_sourcecategories"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get SourceMethod",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var sourceMethodid;",
											"",
											"pm.test(\"Source Method record Fetched\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    sourceMethodid = jsonData.value[0].cmc_sourcemethodid;",
											"    var sourceMethodName = jsonData.value[0].cmc_sourcemethodname;",
											"    console.log('SourceMethod Name is: ' + sourceMethodName);",
											"",
											"});",
											"",
											"pm.globals.set('gsourceMethodid10', sourceMethodid);",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"url": {
									"raw": "{{Eresource_URL}}cmc_sourcemethods",
									"host": [
										"{{Eresource_URL}}cmc_sourcemethods"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Contact",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Contact Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    var contactid = jsonData.contactid;",
											"    var contactName = jsonData.fullname;",
											"    console.log(\"Contact name is: \" + contactName);",
											"",
											"    pm.globals.set('gcontactid10', contactid);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"lastname\": \"Contact-1018665\",\r\n    \"firstname\": \"UIAuto\",\r\n    \"mshied_contacttype\": \"494280011\",\r\n    \"cmc_sourcecategoryid@odata.bind\": \"/cmc_sourcecategories({{gsourceCategoryid10}})\",\r\n    \"cmc_sourcemethodid@odata.bind\": \"/cmc_sourcemethods({{gsourceMethodid10}})\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}contacts",
									"host": [
										"{{Eresource_URL}}contacts"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Application Registration",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Application Registration Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    var applicationRegId = jsonData.cmc_applicationregistrationid;",
											"    var applicationRegName = jsonData.cmc_applicationregistration;",
											"    console.log(\"Application Registration name is: \" + applicationRegName);",
											"",
											"    pm.globals.set('gapplicationRegId10', applicationRegId);",
											"    pm.globals.set('gapplicationRegName10', applicationRegName);",
											"",
											"});",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_contactid@odata.bind\": \"/contacts({{gcontactid10}})\",\r\n    \"cmc_applicationdefinitionversionid@odata.bind\": \"/cmc_applicationdefinitionversions({{gappdefverid10}})\",\r\n    \"cmc_applicationstatus\": 175490000,\r\n    \"cmc_applicationsubmitted\": false\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applicationregistrations",
									"host": [
										"{{Eresource_URL}}cmc_applicationregistrations"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Application",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Application Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    var applicationId = jsonData.cmc_applicationid;",
											"    var applicationName = jsonData.cmc_applicationname;",
											"    console.log(\"Application name is: \" + applicationName);",
											"",
											"    pm.globals.set('gapplicationId10', applicationId);",
											"    pm.globals.set('gapplicationName10', applicationName);",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_applicationstatus\": 175490001,\r\n    \"cmc_contactid@odata.bind\": \"/contacts({{gcontactid10}})\",\r\n    \"cmc_applicationperiodid@odata.bind\": \"/cmc_applicationperiods({{gapplicationPeriodid10}})\",\r\n    \"cmc_applicationregistration@odata.bind\": \"/cmc_applicationregistrations({{gapplicationRegId10}})\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applications",
									"host": [
										"{{Eresource_URL}}cmc_applications"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Decision",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var applicationDecid;",
											"",
											"pm.test(\"Application Decision Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    applicationDecid = jsonData.cmc_applicationdecisionid;",
											"    var applicationDecName = jsonData.cmc_decisionname;",
											"",
											"    console.log(\"Decision record name is: \" + applicationDecName);",
											"",
											"});",
											"",
											"pm.globals.set('gapplicationDecid10', applicationDecid);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_applicationid@odata.bind\": \"/cmc_applications({{gapplicationId10}})\",\r\n    \"cmc_decisionstatus\": 175490000,\r\n    \"cmc_decisionname\": \"UIAuto-Decision-1018665\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applicationdecisions",
									"host": [
										"{{Eresource_URL}}cmc_applicationdecisions"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "TestCase -847062",
					"item": [
						{
							"name": "Create ApplicationType",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var applicationtypeid;",
											"",
											"pm.test(\"ApplicantType Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    applicationtypeid = jsonData.cmc_applicationtypeid;",
											"    var applicationTypeName = jsonData.cmc_applicationtypename;",
											"    console.log(\"Application Type name is: \" + applicationTypeName);",
											"",
											"});",
											"",
											"pm.globals.set('gapplicationtypeid11', applicationtypeid);",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_applicationtypename\": \"UIAuto-ApplicationType-847062\",\r\n    \"cmc_applicationgroup\": \"175490001\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applicationtypes",
									"host": [
										"{{Eresource_URL}}cmc_applicationtypes"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create AcademicPeriod",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var academicPeriodid;",
											"",
											"pm.test(\"Academic Period Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    academicPeriodid = jsonData.mshied_academicperiodid;",
											"    var academicPeriodName = jsonData.mshied_name;",
											"    console.log(\"Academic Period Name is: \" + academicPeriodName);",
											"",
											"});",
											"",
											"pm.globals.set('gacademicPeriodid11', academicPeriodid);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var moment = require('moment');\r",
											"pm.environment.set(\"timestamp\", moment().add(1, 'days').format(\"YYYY-MM-DD\"));\r",
											"pm.environment.set(\"timestampEndDate\", moment().add(100, 'days').format(\"YYYY-MM-DD\"));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"mshied_enddate\": \"{{timestampEndDate}}\",\r\n    \"mshied_startdate\": \"{{timestamp}}\",\r\n    \"mshied_code\": \"UI-847062\",\r\n    \"mshied_name\": \"UIAuto-AcademicPer-847062\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}mshied_academicperiods",
									"host": [
										"{{Eresource_URL}}mshied_academicperiods"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create ApplicationPeriod",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var applicationPeriodid;",
											"",
											"pm.test(\"ApplicantPeriod Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    applicationPeriodid = jsonData.cmc_applicationperiodid;",
											"    var applicationPeriodName = jsonData.cmc_applicationperiodname;",
											"",
											"    console.log(\"Application Period Name is: \" + applicationPeriodName);",
											"",
											"});",
											"",
											"pm.globals.set('gapplicationPeriodid11', applicationPeriodid);",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_AcademicPeriodId@odata.bind\": \"/mshied_academicperiods({{gacademicPeriodid11}})\",\r\n    \"cmc_applicationperiodname\": \"UIAuto-ApplicationPeriod-847062\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applicationperiods",
									"host": [
										"{{Eresource_URL}}cmc_applicationperiods"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Application Definition",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var applicationdefinitionid;",
											"",
											"pm.test(\"Application Requirment Definition Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    applicationdefinitionid = jsonData.cmc_applicationdefinitionid;",
											"    var applicationDefinitionName = jsonData.cmc_applicationdefinitionname;",
											"",
											"    console.log(\"Application Definition name is: \" + applicationDefinitionName);",
											"",
											"});",
											"",
											"pm.globals.set('gappdefid11', applicationdefinitionid);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_applicationdefinitionname\": \"UIAuto-ApplicationDefinition-847062\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applicationdefinitions",
									"host": [
										"{{Eresource_URL}}cmc_applicationdefinitions"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Application Definition Version",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var applicationdefinitionverid, applicationdefinitionvername;",
											"",
											"pm.test(\"Application Requirment Definition Version Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    applicationdefinitionverid = jsonData.cmc_applicationdefinitionversionid;",
											"    applicationdefinitionvername = jsonData.cmc_applicationdefinitionversionname;",
											"    console.log(\"Application Definition version name is: \" + applicationdefinitionvername);",
											"});",
											"",
											"pm.globals.set('gappdefverid11', applicationdefinitionverid);",
											"pm.globals.set('gapplicationdefinitionvername11', applicationdefinitionvername);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_applicationdefinitionversionname\": \"UIAuto-ADV-847062\",\r\n    \"cmc_applicationtype@odata.bind\": \"/cmc_applicationtypes({{gapplicationtypeid11}})\",\r\n    \"cmc_applicationdefinitionid@odata.bind\": \"/cmc_applicationdefinitions({{gappdefid11}})\",\r\n    \"cmc_createlifecycle\": false\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applicationdefinitionversions",
									"host": [
										"{{Eresource_URL}}cmc_applicationdefinitionversions"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get SourceCategory",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var sourceCategoryid;",
											"",
											"pm.test(\"Source category record Fetched\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    sourceCategoryid = jsonData.value[0].cmc_sourcecategoryid;",
											"    var sourceCategoryName = jsonData.value[0].cmc_sourcecategoryname;",
											"    console.log('SourceCategory Name is: ' + sourceCategoryName);",
											"",
											"});",
											"",
											"pm.globals.set('gsourceCategoryid11', sourceCategoryid);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"url": {
									"raw": "{{Eresource_URL}}cmc_sourcecategories",
									"host": [
										"{{Eresource_URL}}cmc_sourcecategories"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get SourceMethod",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var sourceMethodid;",
											"",
											"pm.test(\"Source Method record Fetched\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    sourceMethodid = jsonData.value[0].cmc_sourcemethodid;",
											"    var sourceMethodName = jsonData.value[0].cmc_sourcemethodname;",
											"    console.log('SourceMethod Name is: ' + sourceMethodName);",
											"",
											"});",
											"",
											"pm.globals.set('gsourceMethodid11', sourceMethodid);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"url": {
									"raw": "{{Eresource_URL}}cmc_sourcemethods",
									"host": [
										"{{Eresource_URL}}cmc_sourcemethods"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Contact",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Contact Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    var contactid = jsonData.contactid;",
											"    var contactName = jsonData.fullname;",
											"    console.log(\"Contact name is: \" + contactName);",
											"",
											"    pm.globals.set('gcontactid11', contactid);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"lastname\": \"Contact-847062\",\r\n    \"firstname\": \"UIAuto\",\r\n    \"mshied_contacttype\": \"494280011\",\r\n    \"cmc_sourcecategoryid@odata.bind\": \"/cmc_sourcecategories({{gsourceCategoryid11}})\",\r\n    \"cmc_sourcemethodid@odata.bind\": \"/cmc_sourcemethods({{gsourceMethodid11}})\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}contacts",
									"host": [
										"{{Eresource_URL}}contacts"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Application Registration",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Application Registration Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    var applicationRegId = jsonData.cmc_applicationregistrationid;",
											"    var applicationRegName = jsonData.cmc_applicationregistration;",
											"    console.log(\"Application Registration name is: \" + applicationRegName);",
											"",
											"    pm.globals.set('gapplicationRegId11', applicationRegId);",
											"    pm.globals.set('gapplicationRegName11', applicationRegName);",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_contactid@odata.bind\": \"/contacts({{gcontactid11}})\",\r\n    \"cmc_applicationdefinitionversionid@odata.bind\": \"/cmc_applicationdefinitionversions({{gappdefverid11}})\",\r\n    \"cmc_applicationstatus\": 175490000,\r\n    \"cmc_applicationsubmitted\": false\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applicationregistrations",
									"host": [
										"{{Eresource_URL}}cmc_applicationregistrations"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Application",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Application Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    var applicationId = jsonData.cmc_applicationid;",
											"    var applicationName = jsonData.cmc_applicationname;",
											"    console.log(\"Application name is: \" + applicationName);",
											"",
											"    pm.globals.set('gapplicationId11', applicationId);",
											"    pm.globals.set('gapplicationName11', applicationName);",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_applicationstatus\": 175490001,\r\n    \"cmc_contactid@odata.bind\": \"/contacts({{gcontactid11}})\",\r\n    \"cmc_applicationperiodid@odata.bind\": \"/cmc_applicationperiods({{gapplicationPeriodid11}})\",\r\n    \"cmc_applicationregistration@odata.bind\": \"/cmc_applicationregistrations({{gapplicationRegId11}})\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applications",
									"host": [
										"{{Eresource_URL}}cmc_applications"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "TestCase -1012496",
					"item": [
						{
							"name": "5 Application Records for 1 App Def version record",
							"item": [
								{
									"name": "Create ApplicationType",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var applicationtypeid;",
													"",
													"pm.test(\"ApplicantType Created\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
													"    var jsonData = JSON.parse(responseBody);",
													"    applicationtypeid = jsonData.cmc_applicationtypeid;",
													"    var applicationTypeName = jsonData.cmc_applicationtypename;",
													"    console.log(\"Application Type name is: \" + applicationTypeName);",
													"",
													"});",
													"",
													"pm.globals.set('gapplicationtypeid436', applicationtypeid);",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"cmc_applicationtypename\": \"UIAuto-ApplicationType-1012496\",\r\n    \"cmc_applicationgroup\": \"175490001\"\r\n}"
										},
										"url": {
											"raw": "{{Eresource_URL}}cmc_applicationtypes",
											"host": [
												"{{Eresource_URL}}cmc_applicationtypes"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create AcademicPeriod",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var academicPeriodid;",
													"",
													"pm.test(\"Academic Period Created\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
													"    var jsonData = JSON.parse(responseBody);",
													"    academicPeriodid = jsonData.mshied_academicperiodid;",
													"    var academicPeriodName = jsonData.mshied_name;",
													"    console.log(\"Academic Period Name is: \" + academicPeriodName);",
													"",
													"});",
													"",
													"pm.globals.set('gacademicPeriodid36', academicPeriodid);",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var moment = require('moment');\r",
													"pm.environment.set(\"timestamp\", moment().add(1, 'days').format(\"YYYY-MM-DD\"));\r",
													"pm.environment.set(\"timestampEndDate\", moment().add(100, 'days').format(\"YYYY-MM-DD\"));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"mshied_enddate\": \"{{timestampEndDate}}\",\r\n    \"mshied_startdate\": \"{{timestamp}}\",\r\n    \"mshied_code\": \"UI-1012496\",\r\n    \"mshied_name\": \"UIAuto-AcademicPer-1012496\"\r\n}"
										},
										"url": {
											"raw": "{{Eresource_URL}}mshied_academicperiods",
											"host": [
												"{{Eresource_URL}}mshied_academicperiods"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create ApplicationPeriod-1",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var applicationPeriodid;",
													"",
													"pm.test(\"ApplicantPeriod Created\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
													"    var jsonData = JSON.parse(responseBody);",
													"    applicationPeriodid = jsonData.cmc_applicationperiodid;",
													"    var applicationPeriodName = jsonData.cmc_applicationperiodname;",
													"",
													"    console.log(\"Application Period Name is: \" + applicationPeriodName);",
													"",
													"});",
													"",
													"pm.globals.set('gapplicationPeriodid36a', applicationPeriodid);",
													"",
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"cmc_AcademicPeriodId@odata.bind\": \"/mshied_academicperiods({{gacademicPeriodid36}})\",\r\n    \"cmc_applicationperiodname\": \"UIAuto-ApplicationPeriod-1012496-1a\"\r\n}"
										},
										"url": {
											"raw": "{{Eresource_URL}}cmc_applicationperiods",
											"host": [
												"{{Eresource_URL}}cmc_applicationperiods"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create ApplicationPeriod-2",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var applicationPeriodid;",
													"",
													"pm.test(\"ApplicantPeriod Created\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
													"    var jsonData = JSON.parse(responseBody);",
													"    applicationPeriodid = jsonData.cmc_applicationperiodid;",
													"    var applicationPeriodName = jsonData.cmc_applicationperiodname;",
													"",
													"    console.log(\"Application Period Name is: \" + applicationPeriodName);",
													"",
													"});",
													"",
													"pm.globals.set('gapplicationPeriodid36b', applicationPeriodid);",
													"",
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"cmc_AcademicPeriodId@odata.bind\": \"/mshied_academicperiods({{gacademicPeriodid36}})\",\r\n    \"cmc_applicationperiodname\": \"UIAuto-ApplicationPeriod-1012496-2a\"\r\n}"
										},
										"url": {
											"raw": "{{Eresource_URL}}cmc_applicationperiods",
											"host": [
												"{{Eresource_URL}}cmc_applicationperiods"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create ApplicationPeriod-3",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var applicationPeriodid;",
													"",
													"pm.test(\"ApplicantPeriod Created\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
													"    var jsonData = JSON.parse(responseBody);",
													"    applicationPeriodid = jsonData.cmc_applicationperiodid;",
													"    var applicationPeriodName = jsonData.cmc_applicationperiodname;",
													"",
													"    console.log(\"Application Period Name is: \" + applicationPeriodName);",
													"",
													"});",
													"",
													"pm.globals.set('gapplicationPeriodid36c', applicationPeriodid);",
													"",
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\r\n\"cmc_AcademicPeriodId@odata.bind\": \"/mshied_academicperiods({{gacademicPeriodid36}})\",\r\n\"cmc_applicationperiodname\": \"UIAuto-ApplicationPeriod-1012496-3a\"\r\n\r\n}\r\n\r\n"
										},
										"url": {
											"raw": "{{Eresource_URL}}cmc_applicationperiods",
											"host": [
												"{{Eresource_URL}}cmc_applicationperiods"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create ApplicationPeriod-4",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var applicationPeriodid;",
													"",
													"pm.test(\"ApplicantPeriod Created\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
													"    var jsonData = JSON.parse(responseBody);",
													"    applicationPeriodid = jsonData.cmc_applicationperiodid;",
													"    var applicationPeriodName = jsonData.cmc_applicationperiodname;",
													"",
													"    console.log(\"Application Period Name is: \" + applicationPeriodName);",
													"",
													"});",
													"",
													"pm.globals.set('gapplicationPeriodid36d', applicationPeriodid);",
													"",
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"cmc_AcademicPeriodId@odata.bind\": \"/mshied_academicperiods({{gacademicPeriodid36}})\",\r\n    \"cmc_applicationperiodname\": \"UIAuto-ApplicationPeriod-1012496-4a\"\r\n}"
										},
										"url": {
											"raw": "{{Eresource_URL}}cmc_applicationperiods",
											"host": [
												"{{Eresource_URL}}cmc_applicationperiods"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create ApplicationPeriod-5",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var applicationPeriodid;",
													"",
													"pm.test(\"ApplicantPeriod Created\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
													"    var jsonData = JSON.parse(responseBody);",
													"    applicationPeriodid = jsonData.cmc_applicationperiodid;",
													"    var applicationPeriodName = jsonData.cmc_applicationperiodname;",
													"",
													"    console.log(\"Application Period Name is: \" + applicationPeriodName);",
													"",
													"});",
													"",
													"pm.globals.set('gapplicationPeriodid36e', applicationPeriodid);",
													"",
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"cmc_AcademicPeriodId@odata.bind\": \"/mshied_academicperiods({{gacademicPeriodid36}})\",\r\n    \"cmc_applicationperiodname\": \"UIAuto-ApplicationPeriod-1012496-5a\"\r\n}"
										},
										"url": {
											"raw": "{{Eresource_URL}}cmc_applicationperiods",
											"host": [
												"{{Eresource_URL}}cmc_applicationperiods"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Decision Definition",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var applicationDecDefid;",
													"",
													"pm.test(\"Application Decision Definition Created\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
													"    var jsonData = JSON.parse(responseBody);",
													"    applicationDecDefid = jsonData.cmc_applicationdecisiondefinitionid;",
													"    var applicationDecDefName = jsonData.cmc_applicationdecisiondefinitionname;",
													"",
													"    console.log(\"Decision Definition record name is: \" + applicationDecDefName);",
													"",
													"});",
													"",
													"pm.globals.set('gapplicationDecDefid36', applicationDecDefid);",
													"",
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var current_timestamp = new Date();\r",
													"postman.setEnvironmentVariable(\"current_timestamp\", current_timestamp.toISOString());"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"cmc_applicationdecisiondefinitionname\": \"UIAuto-ApplicationDecDef-1012496\",\r\n    \"cmc_decisionpublishdate\": \"{{current_timestamp}}\"\r\n}"
										},
										"url": {
											"raw": "{{Eresource_URL}}cmc_applicationdecisiondefinitions",
											"host": [
												"{{Eresource_URL}}cmc_applicationdecisiondefinitions"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Decision Definition Detail -Admit",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var applicationDecDefDetailid;",
													"",
													"pm.test(\"Application Decision Definition Detail Created\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
													"    var jsonData = JSON.parse(responseBody);",
													"    applicationDecDefDetailid = jsonData.cmc_applicationdecisiondefinitiondetailid;",
													"    var applicationDecDefDetailName = jsonData.cmc_applicationdecisiondefinitiondetailname;",
													"",
													"    console.log(\"Decision Definition Detail record name is: \" + applicationDecDefDetailName);",
													"",
													"});",
													"",
													"pm.globals.set('gapplicationDecDefDetailid36a', applicationDecDefDetailid);",
													"",
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"cmc_decisionstatus\": 175490000,\r\n    \"cmc_applicationdecisiondefinitiondetailname\": \"UIAuto-ApplicationDecDefDetail-1012496-1\",\r\n    \"cmc_applicationdecisiondefinition@odata.bind\": \"/cmc_applicationdecisiondefinitions({{gapplicationDecDefid36}})\"\r\n}"
										},
										"url": {
											"raw": "{{Eresource_URL}}cmc_applicationdecisiondefinitiondetails",
											"host": [
												"{{Eresource_URL}}cmc_applicationdecisiondefinitiondetails"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Decision Definition Detail-Admit with Conditions",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var applicationDecDefDetailid;",
													"",
													"pm.test(\"Application Decision Definition Detail Created\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
													"    var jsonData = JSON.parse(responseBody);",
													"    applicationDecDefDetailid = jsonData.cmc_applicationdecisiondefinitiondetailid;",
													"    var applicationDecDefDetailName = jsonData.cmc_applicationdecisiondefinitiondetailname;",
													"",
													"    console.log(\"Decision Definition Detail record name is: \" + applicationDecDefDetailName);",
													"",
													"});",
													"",
													"pm.globals.set('gapplicationDecDefDetailid36b', applicationDecDefDetailid);",
													"",
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"cmc_decisionstatus\": 175490005,\r\n    \"cmc_applicationdecisiondefinitiondetailname\": \"UIAuto-ApplicationDecDefDetail-1012496-2\",\r\n    \"cmc_applicationdecisiondefinition@odata.bind\": \"/cmc_applicationdecisiondefinitions({{gapplicationDecDefid36}})\"\r\n}"
										},
										"url": {
											"raw": "{{Eresource_URL}}cmc_applicationdecisiondefinitiondetails",
											"host": [
												"{{Eresource_URL}}cmc_applicationdecisiondefinitiondetails"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Decision Definition Detail-Reject",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var applicationDecDefDetailid;",
													"",
													"pm.test(\"Application Decision Definition Detail Created\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
													"    var jsonData = JSON.parse(responseBody);",
													"    applicationDecDefDetailid = jsonData.cmc_applicationdecisiondefinitiondetailid;",
													"    var applicationDecDefDetailName = jsonData.cmc_applicationdecisiondefinitiondetailname;",
													"",
													"    console.log(\"Decision Definition Detail record name is: \" + applicationDecDefDetailName);",
													"",
													"});",
													"",
													"pm.globals.set('gapplicationDecDefDetailid36c', applicationDecDefDetailid);",
													"",
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"cmc_decisionstatus\": 175490001,\r\n    \"cmc_applicationdecisiondefinitiondetailname\": \"UIAuto-ApplicationDecDefDetail-1012496-3\",\r\n    \"cmc_applicationdecisiondefinition@odata.bind\": \"/cmc_applicationdecisiondefinitions({{gapplicationDecDefid36}})\"\r\n}"
										},
										"url": {
											"raw": "{{Eresource_URL}}cmc_applicationdecisiondefinitiondetails",
											"host": [
												"{{Eresource_URL}}cmc_applicationdecisiondefinitiondetails"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Application Definition",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var applicationdefinitionid;",
													"",
													"pm.test(\"Application Requirment Definition Created\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
													"    var jsonData = JSON.parse(responseBody);",
													"    applicationdefinitionid = jsonData.cmc_applicationdefinitionid;",
													"    var applicationDefinitionName = jsonData.cmc_applicationdefinitionname;",
													"",
													"    console.log(\"Application Definition name is: \" + applicationDefinitionName);",
													"",
													"});",
													"",
													"pm.globals.set('gappdefid36', applicationdefinitionid);",
													"",
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"cmc_applicationdefinitionname\": \"UIAuto-ApplicationDefinition-1012496\",\r\n    \"cmc_decisiondefinitionid@odata.bind\": \"/cmc_applicationdecisiondefinitions({{gapplicationDecDefid36}})\"\r\n}"
										},
										"url": {
											"raw": "{{Eresource_URL}}cmc_applicationdefinitions",
											"host": [
												"{{Eresource_URL}}cmc_applicationdefinitions"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Application Definition Version",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var applicationdefinitionverid, applicationdefinitionvername;",
													"",
													"pm.test(\"Application Requirment Definition Version Created\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
													"    var jsonData = JSON.parse(responseBody);",
													"    applicationdefinitionverid = jsonData.cmc_applicationdefinitionversionid;",
													"    applicationdefinitionvername = jsonData.cmc_applicationdefinitionversionname;",
													"    console.log(\"Application Definition version name is: \" + applicationdefinitionvername);",
													"});",
													"",
													"pm.globals.set('gappdefverid36', applicationdefinitionverid);",
													"pm.globals.set('gapplicationdefinitionvername36', applicationdefinitionvername);",
													"",
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"cmc_applicationdefinitionversionname\": \"UIAuto-ADV-1012496\",\r\n    \"cmc_applicationtype@odata.bind\": \"/cmc_applicationtypes({{gapplicationtypeid436}})\",\r\n    \"cmc_applicationdefinitionid@odata.bind\": \"/cmc_applicationdefinitions({{gappdefid36}})\",\r\n    \"cmc_createlifecycle\": false\r\n}"
										},
										"url": {
											"raw": "{{Eresource_URL}}cmc_applicationdefinitionversions",
											"host": [
												"{{Eresource_URL}}cmc_applicationdefinitionversions"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get SourceCategory",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var sourceCategoryid;",
													"",
													"pm.test(\"Source category record Fetched\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
													"    var jsonData = JSON.parse(responseBody);",
													"    sourceCategoryid = jsonData.value[0].cmc_sourcecategoryid;",
													"    var sourceCategoryName = jsonData.value[0].cmc_sourcecategoryname;",
													"    console.log('SourceCategory Name is: ' + sourceCategoryName);",
													"",
													"});",
													"pm.globals.set('gsourceCategoryid36', sourceCategoryid);",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											}
										],
										"url": {
											"raw": "{{Eresource_URL}}cmc_sourcecategories",
											"host": [
												"{{Eresource_URL}}cmc_sourcecategories"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get SourceMethod",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var sourceMethodid;",
													"",
													"pm.test(\"Source Method record Fetched\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
													"    var jsonData = JSON.parse(responseBody);",
													"    sourceMethodid = jsonData.value[0].cmc_sourcemethodid;",
													"    var sourceMethodName = jsonData.value[0].cmc_sourcemethodname;",
													"    console.log('SourceMethod Name is: ' + sourceMethodName);",
													"",
													"});",
													"",
													"pm.globals.set('gsourceMethodid36', sourceMethodid);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											}
										],
										"url": {
											"raw": "{{Eresource_URL}}cmc_sourcemethods",
											"host": [
												"{{Eresource_URL}}cmc_sourcemethods"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Contact",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Contact Created\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
													"    var jsonData = JSON.parse(responseBody);",
													"    var contactid = jsonData.contactid;",
													"    var contactName = jsonData.fullname;",
													"    console.log(\"Contact name is: \" + contactName);",
													"",
													"    pm.globals.set('gcontactid36', contactid);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"lastname\": \"Contact-1012496\",\r\n    \"firstname\": \"UIAuto\",\r\n    \"mshied_contacttype\": \"494280011\",\r\n    \"cmc_sourcecategoryid@odata.bind\": \"/cmc_sourcecategories({{gsourceCategoryid36}})\",\r\n    \"cmc_sourcemethodid@odata.bind\": \"/cmc_sourcemethods({{gsourceMethodid36}})\"\r\n}"
										},
										"url": {
											"raw": "{{Eresource_URL}}contacts",
											"host": [
												"{{Eresource_URL}}contacts"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Application Registration",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Application Registration Created\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
													"    var jsonData = JSON.parse(responseBody);",
													"    var applicationRegId = jsonData.cmc_applicationregistrationid;",
													"    var applicationRegName = jsonData.cmc_applicationregistration;",
													"    console.log(\"Application Registration name is: \" + applicationRegName);",
													"",
													"    pm.globals.set('gapplicationRegId36', applicationRegId);",
													"    pm.globals.set('gapplicationRegName36', applicationRegName);",
													"",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"cmc_contactid@odata.bind\": \"/contacts({{gcontactid36}})\",\r\n    \"cmc_applicationdefinitionversionid@odata.bind\": \"/cmc_applicationdefinitionversions({{gappdefverid36}})\",\r\n    \"cmc_applicationstatus\": 175490000,\r\n    \"cmc_applicationsubmitted\": false\r\n}"
										},
										"url": {
											"raw": "{{Eresource_URL}}cmc_applicationregistrations",
											"host": [
												"{{Eresource_URL}}cmc_applicationregistrations"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Application-1",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Application Created\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
													"    var jsonData = JSON.parse(responseBody);",
													"    var applicationId = jsonData.cmc_applicationid;",
													"    var applicationName = jsonData.cmc_applicationname;",
													"    console.log(\"Application name is: \" + applicationName);",
													"",
													"    pm.globals.set('gapplicationId36a', applicationId);",
													"    pm.globals.set('gapplicationName36a', applicationName);",
													"",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"cmc_applicationstatus\": 175490001,\r\n    \"cmc_contactid@odata.bind\": \"/contacts({{gcontactid36}})\",\r\n    \"cmc_applicationperiodid@odata.bind\": \"/cmc_applicationperiods({{gapplicationPeriodid36a}})\",\r\n    \"cmc_applicationregistration@odata.bind\": \"/cmc_applicationregistrations({{gapplicationRegId36}})\"\r\n}"
										},
										"url": {
											"raw": "{{Eresource_URL}}cmc_applications",
											"host": [
												"{{Eresource_URL}}cmc_applications"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Application-2",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Application Created\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
													"    var jsonData = JSON.parse(responseBody);",
													"    var applicationId = jsonData.cmc_applicationid;",
													"    var applicationName = jsonData.cmc_applicationname;",
													"    console.log(\"Application name is: \" + applicationName);",
													"",
													"    pm.globals.set('gapplicationId36b', applicationId);",
													"    pm.globals.set('gapplicationName36b', applicationName);",
													"",
													"});",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"cmc_applicationstatus\": 175490001,\r\n    \"cmc_contactid@odata.bind\": \"/contacts({{gcontactid36}})\",\r\n    \"cmc_applicationperiodid@odata.bind\": \"/cmc_applicationperiods({{gapplicationPeriodid36b}})\",\r\n    \"cmc_applicationregistration@odata.bind\": \"/cmc_applicationregistrations({{gapplicationRegId36}})\"\r\n}"
										},
										"url": {
											"raw": "{{Eresource_URL}}cmc_applications",
											"host": [
												"{{Eresource_URL}}cmc_applications"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Application-3",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Application Created\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
													"    var jsonData = JSON.parse(responseBody);",
													"    var applicationId = jsonData.cmc_applicationid;",
													"    var applicationName = jsonData.cmc_applicationname;",
													"    console.log(\"Application name is: \" + applicationName);",
													"",
													"    pm.globals.set('gapplicationId36c', applicationId);",
													"    pm.globals.set('gapplicationName36c', applicationName);",
													"",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"cmc_applicationstatus\": 175490001,\r\n    \"cmc_contactid@odata.bind\": \"/contacts({{gcontactid36}})\",\r\n    \"cmc_applicationperiodid@odata.bind\": \"/cmc_applicationperiods({{gapplicationPeriodid36c}})\",\r\n    \"cmc_applicationregistration@odata.bind\": \"/cmc_applicationregistrations({{gapplicationRegId36}})\"\r\n}"
										},
										"url": {
											"raw": "{{Eresource_URL}}cmc_applications",
											"host": [
												"{{Eresource_URL}}cmc_applications"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Application-4",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Application Created\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
													"    var jsonData = JSON.parse(responseBody);",
													"    var applicationId = jsonData.cmc_applicationid;",
													"    var applicationName = jsonData.cmc_applicationname;",
													"    console.log(\"Application name is: \" + applicationName);",
													"",
													"    pm.globals.set('gapplicationId36d', applicationId);",
													"    pm.globals.set('gapplicationName36d', applicationName);",
													"",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"cmc_applicationstatus\": 175490001,\r\n    \"cmc_contactid@odata.bind\": \"/contacts({{gcontactid36}})\",\r\n    \"cmc_applicationperiodid@odata.bind\": \"/cmc_applicationperiods({{gapplicationPeriodid36d}})\",\r\n    \"cmc_applicationregistration@odata.bind\": \"/cmc_applicationregistrations({{gapplicationRegId36}})\"\r\n}"
										},
										"url": {
											"raw": "{{Eresource_URL}}cmc_applications",
											"host": [
												"{{Eresource_URL}}cmc_applications"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Application-5",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Application Created\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
													"    var jsonData = JSON.parse(responseBody);",
													"    var applicationId = jsonData.cmc_applicationid;",
													"    var applicationName = jsonData.cmc_applicationname;",
													"    console.log(\"Application name is: \" + applicationName);",
													"",
													"    pm.globals.set('gapplicationId36e', applicationId);",
													"    pm.globals.set('gapplicationName36e', applicationName);",
													"",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"cmc_applicationstatus\": 175490001,\r\n    \"cmc_contactid@odata.bind\": \"/contacts({{gcontactid36}})\",\r\n    \"cmc_applicationperiodid@odata.bind\": \"/cmc_applicationperiods({{gapplicationPeriodid36e}})\",\r\n    \"cmc_applicationregistration@odata.bind\": \"/cmc_applicationregistrations({{gapplicationRegId36}})\"\r\n}"
										},
										"url": {
											"raw": "{{Eresource_URL}}cmc_applications",
											"host": [
												"{{Eresource_URL}}cmc_applications"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "TestCase - 905176",
					"item": [
						{
							"name": "GetToken",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = JSON.parse(responseBody);",
											"postman.setGlobalVariable('gaccess_token', data.access_token);",
											"",
											"//pm.environment.set(\"Eaccess_token\", data.access_token);",
											"console.log(pm.globals.get(\"gaccess_token\"));",
											"",
											"",
											"",
											"",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "grant_type",
											"value": "client_credentials",
											"type": "text"
										},
										{
											"key": "client_id",
											"value": "{{Esystemadmin_id}}",
											"type": "text"
										},
										{
											"key": "client_secret",
											"value": "{{Esystemadmin_secret}}",
											"type": "text"
										},
										{
											"key": "resource",
											"value": "{{Eresource}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "https://login.microsoftonline.com/{{Eredirectid}}/oauth2/token",
									"protocol": "https",
									"host": [
										"login",
										"microsoftonline",
										"com"
									],
									"path": [
										"{{Eredirectid}}",
										"oauth2",
										"token"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Discount Code record for Amount",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var DiscountcodeidAmount;",
											"var DiscountCodeName;",
											"var Discounttype;",
											"var Value;",
											"",
											"pm.test(\"Discount Code for Amount is Created\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202,204]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    DiscountcodeidAmount = jsonData.cmc_discountcodeid;",
											"    DiscountCodeName=jsonData.cmc_discountcodename;",
											"    console.log('Discount Code name is: ' +DiscountCodeName);",
											"    Discounttype=jsonData.cmc_discounttype;",
											"    console.log('Discount Type is: '+Discounttype);",
											"    Value=jsonData.cmc_value;",
											"    console.log('Value is: ' +Value);",
											"    ",
											"    pm.globals.set('gDiscountcodeidAmount',DiscountcodeidAmount);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_discountcodename\": \"UIAuto DiscountCode1-905176\",\r\n    \"cmc_discounttype\": \"175490001\",\r\n    \"cmc_value\": 200.56\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_discountcodes",
									"host": [
										"{{Eresource_URL}}cmc_discountcodes"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Discount Code record for Percentage",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var DiscountcodeidPercentage;",
											"var DiscountCodeName;",
											"var Discounttype;",
											"var Value;",
											"",
											"pm.test(\"Discount Code for Percentage is Created\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202,204]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    DiscountcodeidPercentage = jsonData.cmc_discountcodeid;",
											"    DiscountCodeName=jsonData.cmc_discountcodename;",
											"    console.log('Discount Code name is: ' +DiscountCodeName);",
											"    Discounttype=jsonData.cmc_discounttype;",
											"    console.log('Discount Type is: '+Discounttype);",
											"    Value=jsonData.cmc_value;",
											"    console.log('Value is: ' +Value);",
											"    ",
											"    pm.globals.set('gDiscountcodeidPercentage',DiscountcodeidPercentage);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"cmc_discountcodename\":\"UIAuto DiscountCode2-905176\",\r\n\t\"cmc_discounttype\": \"175490000\",\r\n\t\"cmc_value\" : 50.25\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_discountcodes",
									"host": [
										"{{Eresource_URL}}cmc_discountcodes"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Transaction currency",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Fetching Transaction currency of USD\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    //console.log(\"TOdoID \" +jsonData.value[0].cmc_todoid);",
											"    var transactioncurrencyid= jsonData.value[0].transactioncurrencyid;",
											"    pm.globals.set('gtransactioncurrencyid',transactioncurrencyid);",
											"    ",
											"    var currencyname=jsonData.value[0].currencyname;",
											"    console.log(\"Currency name is:\" +currencyname);",
											"    ",
											"    var isocurrencycode=jsonData.value[0].isocurrencycode;",
											"    console.log(\"Currency Code is:\" +isocurrencycode);",
											"    ",
											"    var currencysymbol=jsonData.value[0].currencysymbol;",
											"    console.log(\"Currency symbol is:\" +currencysymbol);",
											"    ",
											"    if(currencyname!=\"US Dollar\")",
											"    {",
											"        console.log(\"Check the currency again and re execute\");",
											"    }",
											"    ",
											"     else",
											"     {",
											"     console.log(\"Transaction currency is fetched correctly\");    ",
											"     ",
											"     }",
											"     ",
											"     ",
											"    });",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"url": {
									"raw": "{{Eresource_URL}}transactioncurrencies",
									"host": [
										"{{Eresource_URL}}transactioncurrencies"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create pricelist",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var Pricename;",
											"var PricelevelID;",
											"var Currency;",
											"",
											"pm.test(\"PriceLevel is Created\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202,204]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    PricelevelID = jsonData.pricelevelid;",
											"    console.log('Price level ID is: ' +PricelevelID);",
											"    Pricename=jsonData.name;",
											"    console.log('Price name is: '+Pricename);",
											"    Currency=jsonData._transactioncurrencyid_value;",
											"    console.log('Currency Used in Price list is: '+Currency);",
											"    ",
											"    pm.globals.set('gPricelevelID',PricelevelID);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"UIAuto Pricelist-905176 {{$randomInt}}\",\r\n    \"begindate\": \"2020-10-31T18:30:00Z\",\r\n    \"enddate\": \"2020-12-31T18:30:00Z\",\r\n    \"transactioncurrencyid@odata.bind\": \"/transactioncurrencies({{gtransactioncurrencyid}})\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}pricelevels",
									"host": [
										"{{Eresource_URL}}pricelevels"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get UnitGroup ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Fetching Unit Group ID\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    //console.log(\"TOdoID \" +jsonData.value[0].cmc_todoid);",
											"    var uomscheduleid= jsonData.value[0].uomscheduleid;",
											"    pm.globals.set('guomscheduleid',uomscheduleid);",
											"    console.log(\"Unit group ID is:\" +uomscheduleid);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"url": {
									"raw": "{{Eresource_URL}}uomschedules",
									"host": [
										"{{Eresource_URL}}uomschedules"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Units ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Fetching Units ID\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    var uomid = jsonData.value[0].uomid;",
											"    console.log(\"Units ID is:\" + uomid);",
											"    pm.globals.set('guomid', uomid);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"url": {
									"raw": "{{Eresource_URL}}uoms",
									"host": [
										"{{Eresource_URL}}uoms"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Existing Product 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var ProdID;",
											"var Prodname;",
											"var IsFee;",
											"",
											"pm.test(\"Existing Product is Created\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202,204]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    ProdID = jsonData.productid;",
											"    console.log('Product ID is: ' +ProdID);",
											"    Prodname= jsonData.name;",
											"    console.log('Name is: ' +Prodname);",
											"    ",
											"    IsFee = jsonData.cmc_isfeeitem;",
											"    console.log('IsFee value is: ' +IsFee);",
											"    ",
											"    pm.globals.set('gProdID',ProdID);",
											"});",
											"",
											"setTimeout(function() {},3000); //wait 3 seconds",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"UIAuto Product1-905176  {{$randomInt}} {{$randomInt}}\",\r\n    \"productnumber\": \"Product1-905176 {{$randomInt}} {{$randomInt}}\",\r\n    \"defaultuomid@odata.bind\": \"/uoms({{guomid}})\",\r\n    \"defaultuomscheduleid@odata.bind\": \"/uomschedules({{guomscheduleid}})\",\r\n    \"pricelevelid@odata.bind\": \"/pricelevels({{gPricelevelID}})\",\r\n    \"cmc_isfeeitem\": true,\r\n    \"quantitydecimal\": \"3\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}products",
									"host": [
										"{{Eresource_URL}}products"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Existing Product 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var ProdID1;",
											"var Prodname1;",
											"var IsFee1;",
											"",
											"pm.test(\"Existing Product 2 is Created\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202,204]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    ProdID1 = jsonData.productid;",
											"    console.log('Product ID is: ' +ProdID1);",
											"    Prodname1= jsonData.name;",
											"    console.log('Name is: ' +Prodname1);",
											"    ",
											"    IsFee1 = jsonData.cmc_isfeeitem;",
											"    console.log('IsFee value is: ' +IsFee1);",
											"    ",
											"    pm.globals.set('gProdID1',ProdID1);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"setTimeout(function() {},3000); //wait 3 seconds"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"name\": \"UIAuto Product2-905176 {{$randomInt}} {{$randomInt}}\",\r\n\t\"productnumber\": \"Product2-905176 {{$randomInt}} {{$randomInt}}\",\r\n\t\"defaultuomid@odata.bind\": \"/uoms({{guomid}})\",\r\n\t\"defaultuomscheduleid@odata.bind\": \"/uomschedules({{guomscheduleid}})\",\r\n\t\"pricelevelid@odata.bind\": \"/pricelevels({{gPricelevelID}})\",\r\n\t\"cmc_isfeeitem\": false,\r\n\t\"quantitydecimal\": \"3\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}products",
									"host": [
										"{{Eresource_URL}}products"
									]
								}
							},
							"response": []
						},
						{
							"name": "Activate Existing Product 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var ProdID3;",
											"var Prodname3;",
											"",
											"pm.test(\"Existing Product 1 is Activated\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    ProdID3 = jsonData.productid;",
											"    console.log('Product ID is: ' + ProdID3);",
											"    Prodname3 = jsonData.name;",
											"    console.log('Name is: ' + Prodname3);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"statecode\": \"0\",\r\n    \"statuscode\": \"-1\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}products({{gProdID}})",
									"host": [
										"{{Eresource_URL}}products({{gProdID}})"
									]
								}
							},
							"response": []
						},
						{
							"name": "Activate Existing Product 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var ProdID4;",
											"var Prodname4;",
											"",
											"pm.test(\"Existing Product 2 is Activated\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    ProdID4 = jsonData.productid;",
											"    console.log('Product ID is: ' + ProdID4);",
											"    Prodname4 = jsonData.name;",
											"    console.log('Name is: ' + Prodname4);",
											"",
											"});",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"statecode\": \"0\",  \r\n    \"statuscode\": \"-1\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}products({{gProdID1}})",
									"host": [
										"{{Eresource_URL}}products({{gProdID1}})"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create pricelist Item 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var ProdPricelevelID;",
											"",
											"pm.test(\"PriceLevel is Created\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202,204]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    ProdPricelevelID = jsonData.productpricelevelid;",
											"    console.log('Product Price level ID is: ' +ProdPricelevelID);",
											"    pm.globals.set('gProdPricelevelID',ProdPricelevelID);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"pricelevelid@odata.bind\": \"/pricelevels({{gPricelevelID}})\",\r\n    \"amount\": 255.05,\r\n    \"pricingmethodcode\": \"1\",\r\n    \"productid@odata.bind\": \"/products({{gProdID}})\",\r\n    \"quantitysellingcode\": \"1\",\r\n    \"transactioncurrencyid@odata.bind\": \"/transactioncurrencies({{gtransactioncurrencyid}})\",\r\n    \"uomid@odata.bind\": \"/uoms({{guomid}})\",\r\n    \"uomscheduleid@odata.bind\": \"/uomschedules({{guomscheduleid}})\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}productpricelevels",
									"host": [
										"{{Eresource_URL}}productpricelevels"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create pricelist Item 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var ProdPricelevelID;",
											"",
											"pm.test(\"PriceLevel is Created\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202,204]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    ProdPricelevelID = jsonData.productpricelevelid;",
											"    console.log('Product Price level ID is: ' +ProdPricelevelID);   ",
											"    pm.globals.set('gProdPricelevelID',ProdPricelevelID);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"pricelevelid@odata.bind\": \"/pricelevels({{gPricelevelID}})\",\r\n    \"amount\": 300.25,\r\n    \"pricingmethodcode\": \"1\",\r\n    \"productid@odata.bind\": \"/products({{gProdID1}})\",\r\n    \"quantitysellingcode\": \"1\",\r\n    \"transactioncurrencyid@odata.bind\": \"/transactioncurrencies({{gtransactioncurrencyid}})\",\r\n    \"uomid@odata.bind\": \"/uoms({{guomid}})\",\r\n    \"uomscheduleid@odata.bind\": \"/uomschedules({{guomscheduleid}})\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}productpricelevels",
									"host": [
										"{{Eresource_URL}}productpricelevels"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Invoice Definition",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var InvoiceDefID;",
											"var InvoiceDefinitionName;",
											"var Pricelist;",
											"",
											"pm.test(\"Invoice Definition is Created\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202,204]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    InvoiceDefID = jsonData.cmc_invoicedefinitionid;",
											"    console.log('Invoice Definition ID is: ' +InvoiceDefID);",
											"    InvoiceDefinitionName=jsonData.cmc_invoicedefinitionname;",
											"    console.log('Invoice Definition name is: '+InvoiceDefinitionName);",
											"    Pricelist=jsonData._cmc_pricelistid_value;",
											"    console.log('Pricelist value is: '+Pricelist);",
											"    ",
											"    pm.globals.set('gInvoiceDefID',InvoiceDefID);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_invoicedefinitionname\": \"UIAuto InvoiceDefinition-905176\",\r\n    \"cmc_pricelistid@odata.bind\": \"/pricelevels({{gPricelevelID}})\",\r\n    \"cmc_enablepartialpayment\": false,\r\n    \"cmc_minimumamount\": 100,\r\n    \"cmc_invoicetype\": \"175490000\",\r\n    \"cmc_paymentgateway\": \"175490002\",\r\n    \"cmc_paymentmethod\": \"175490002\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_invoicedefinitions",
									"host": [
										"{{Eresource_URL}}cmc_invoicedefinitions"
									]
								}
							},
							"response": []
						},
						{
							"name": "Adding Discount Code Amount To Invoice Definition",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Adding Discount Code Amount To Invoice Definition\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([204,201,202,200]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    var DiscountCodename =jsonData.cmc_discountcodename;",
											"    console.log('Discount Code that is added to Invoice definition is: ' +DiscountCodename); ",
											"  ",
											"});",
											"",
											"//setTimeout(function(){}, 25000); "
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "OData-MaxVersion",
										"value": "4.0"
									},
									{
										"description": " ",
										"key": "OData-Version",
										"value": "4.0"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"@odata.id\": \"{{Eresource}}api/data/{{Eversion}}/cmc_discountcodes({{gDiscountcodeidAmount}})\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_invoicedefinitions({{gInvoiceDefID}})/cmc_discountcode_cmc_invoicedefinition/$ref",
									"host": [
										"{{Eresource_URL}}cmc_invoicedefinitions({{gInvoiceDefID}})"
									],
									"path": [
										"cmc_discountcode_cmc_invoicedefinition",
										"$ref"
									]
								}
							},
							"response": []
						},
						{
							"name": "Adding Discount Code Percentage To Invoice Definition",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Adding Discount Code Percentage To Invoice Definition\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([204,201,202,200]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    var DiscountCodename =jsonData.cmc_discountcodename;",
											"    console.log('Discount Code that is added to Invoice definition is: ' +DiscountCodename);  ",
											"  ",
											"});",
											"",
											"//setTimeout(function(){}, 25000); "
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "OData-MaxVersion",
										"value": "4.0"
									},
									{
										"description": " ",
										"key": "OData-Version",
										"value": "4.0"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"@odata.id\": \"{{Eresource}}api/data/{{Eversion}}/cmc_discountcodes({{gDiscountcodeidPercentage}})\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_invoicedefinitions({{gInvoiceDefID}})/cmc_discountcode_cmc_invoicedefinition/$ref",
									"host": [
										"{{Eresource_URL}}cmc_invoicedefinitions({{gInvoiceDefID}})"
									],
									"path": [
										"cmc_discountcode_cmc_invoicedefinition",
										"$ref"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Application Definition",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var AppDefID;",
											"var AppDefinitionName;",
											"var InvoiceID;",
											"",
											"pm.test(\"Application Definition is Created\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202,204]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    AppDefID = jsonData.cmc_applicationdefinitionid;",
											"    console.log('Application Definition ID is: ' +AppDefID);",
											"    AppDefinitionName=jsonData.cmc_applicationdefinitionname;",
											"    console.log('Application Definition name is: '+AppDefinitionName);",
											"    InvoiceID=jsonData._cmc_invoicedefinitionid_value;",
											"    console.log('Invoice ID that is associated to App definition is: '+InvoiceID);",
											"    ",
											"    pm.globals.set('gAppDefID',AppDefID);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"cmc_applicationdefinitionname\":\"UIAuto AppDefName-905176\",\r\n\t\"cmc_invoicedefinitionid@odata.bind\": \"/cmc_invoicedefinitions({{gInvoiceDefID}})\",\r\n\t\"cmc_statusoncompletion\": \"175490000\",\r\n\t\"cmc_statusoncreate\": \"175490000\",\r\n\t\"cmc_statusonsave\" : \"175490000\",\r\n\t\"cmc_statusonsubmit\": \"175490000\"\t\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applicationdefinitions",
									"host": [
										"{{Eresource_URL}}cmc_applicationdefinitions"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Application Type",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var AppTypeID;",
											"var AppTypeName;",
											"",
											"pm.test(\"Application Type is Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    AppTypeID = jsonData.cmc_applicationtypeid;",
											"    console.log('Application Type ID is: ' + AppTypeID);",
											"    AppTypeName = jsonData.cmc_applicationtypename;",
											"    console.log('Application Type name is: ' + AppTypeName);",
											"",
											"    pm.globals.set('gAppTypeID', AppTypeID);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_applicationtypename\": \"UIAuto ApplicationType-905176\",\r\n    \"cmc_applicationgroup\": \"175490001\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applicationtypes",
									"host": [
										"{{Eresource_URL}}cmc_applicationtypes"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Program",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\" Creating Programs\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    ",
											"    var Program1= jsonData.mshied_programid;",
											"    var Program1Name= jsonData.mshied_name;",
											"    pm.globals.set('gProgram1',Program1);",
											"    console.log(\"Program1 ID: \" +Program1);",
											"    console.log(\"Program1 Name: \" +Program1Name);   ",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"mshied_code\": \"Prog code 905176\",\r\n    \"mshied_name\": \"UIAuto Program-905176\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}mshied_programs",
									"host": [
										"{{Eresource_URL}}mshied_programs"
									]
								}
							},
							"response": []
						},
						{
							"name": "Adding Program1 to Application Type",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Adding Program 1 record To Application Type\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([204, 201, 202, 200]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    var ProgName = jsonData.mshied_name;",
											"    console.log('Program that is added to Applikcation Type is:' + ProgName);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "OData-MaxVersion",
										"value": "4.0"
									},
									{
										"description": " ",
										"key": "OData-Version",
										"value": "4.0"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"@odata.id\": \"{{Eresource}}api/data/{{Eversion}}/mshied_programs({{gProgram1}})\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource}}api/data/{{Eversion}}/cmc_applicationtypes({{gAppTypeID}})/cmc_cmc_applicationtype_mshied_program/$ref",
									"host": [
										"{{Eresource}}api"
									],
									"path": [
										"data",
										"{{Eversion}}",
										"cmc_applicationtypes({{gAppTypeID}})",
										"cmc_cmc_applicationtype_mshied_program",
										"$ref"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create AcademicPeriod",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var academicPeriodid;",
											"",
											"pm.test(\"Academic Period Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    academicPeriodid = jsonData.mshied_academicperiodid;",
											"    var academicPeriodName = jsonData.mshied_name;",
											"    console.log(\"Academic Period Name is: \" + academicPeriodName);",
											"",
											"});",
											"",
											"pm.globals.set('gacademicPeriodid366', academicPeriodid);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var moment = require('moment');\r",
											"pm.environment.set(\"timestamp\", moment().add(1, 'days').format(\"YYYY-MM-DD\"));\r",
											"pm.environment.set(\"timestampEndDate\", moment().add(100, 'days').format(\"YYYY-MM-DD\"));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"mshied_enddate\": \"{{timestampEndDate}}\",\r\n    \"mshied_startdate\": \"{{timestamp}}\",\r\n    \"mshied_code\": \"UI-905176\",\r\n    \"mshied_name\": \"UIAuto-AcademicPer-905176\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}mshied_academicperiods",
									"host": [
										"{{Eresource_URL}}mshied_academicperiods"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Application Period",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var AppPerID;",
											"var AppPerName;",
											"",
											"pm.test(\"Application Period is Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    AppPerID = jsonData.cmc_applicationperiodid;",
											"    console.log('Application Period ID is: ' + AppPerID);",
											"",
											"    AppPerName = jsonData.cmc_applicationperiodname;",
											"    console.log('Application Period name is: ' + AppPerName);",
											"",
											"    pm.globals.set('gAppPerID', AppPerID);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_applicationperiodname\": \"UIAuto AppPeriod-905176\",\r\n    \"cmc_AcademicPeriodId@odata.bind\": \"/mshied_academicperiods({{gacademicPeriodid366}})\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applicationperiods",
									"host": [
										"{{Eresource_URL}}cmc_applicationperiods"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Application Definition Version",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var AppDefnVerID;",
											"var AppDefnID;",
											"var AppDefnVerName;",
											"var AppTypeID;",
											"",
											"pm.test(\"Application Definition Version is Created\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202,204]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    AppDefnVerID = jsonData.cmc_applicationdefinitionversionid;",
											"    console.log('Application Definition version ID is: ' +AppDefnVerID);",
											"    AppDefnID = jsonData._cmc_applicationdefinitionid_value;",
											"    console.log('Application Definition ID that is linked is: ' +AppDefnID);",
											"    AppTypeID = jsonData._cmc_applicationtype_value;",
											"    console.log('Application Type ID that is linked is: ' +AppTypeID);",
											"    AppDefnVerName=jsonData.cmc_applicationdefinitionversionname;",
											"    console.log('Application Definition Version name is: ' +AppDefnVerName);",
											"    ",
											"    pm.globals.set('gAppDefnVerID',AppDefnVerID);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_applicationdefinitionversionname\": \"UIAuto ADV-905176\",\r\n    \"cmc_applicationdefinitionid@odata.bind\": \"/cmc_applicationdefinitions({{gAppDefID}})\",\r\n    \"cmc_applicationtype@odata.bind\": \"/cmc_applicationtypes({{gAppTypeID}})\",\r\n    \"cmc_createlifecycle\": false\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applicationdefinitionversions",
									"host": [
										"{{Eresource_URL}}cmc_applicationdefinitionversions"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Application Definition Version Detail",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Application Definition Version Detail is Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    AppDefnVerDetID = jsonData.cmc_applicationdefinitionversiondetailid;",
											"    console.log('Application Definition version Detail ID is: ' + AppDefnVerDetID);",
											"    var AppDefVerName = jsonData.cmc_applicationdefinitionversiondetailname;",
											"    console.log('Application Definition Version Detail name: ' + AppDefVerName);",
											"",
											"    pm.globals.set('gAppDefnVerDetID', AppDefnVerDetID);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_applicationdefinitionversion@odata.bind\": \"/cmc_applicationdefinitionversions({{gAppDefnVerID}})\",\r\n    \"cmc_applicationperiod@odata.bind\": \"/cmc_applicationperiods({{gAppPerID}})\",\r\n    \"cmc_enddate\": \"2018-12-31T18:30:00.000Z\",\r\n    \"cmc_startdate\": \"2018-12-31T18:30:00.000Z\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applicationdefinitionversiondetails",
									"host": [
										"{{Eresource_URL}}cmc_applicationdefinitionversiondetails"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Contact",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var ContactID;",
											"var ContactFullname;",
											"",
											"pm.test(\"Contact is Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    ContactID = jsonData.contactid;",
											"    console.log('Contact ID is: ' + ContactID);",
											"    ContactFullname = jsonData.fullname;",
											"    console.log('Contact fullname is: ' + ContactFullname);",
											"    pm.globals.set('gContactID', ContactID);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"firstname\": \"UIAuto Contact\",\r\n    \"lastname\": \"905176\",\r\n    \"mshied_contacttype\": \"494280004\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}contacts",
									"host": [
										"{{Eresource_URL}}contacts"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Application Registration",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var AppRegID;",
											"var AppDefnVerID;",
											"var AppRegName;",
											"var ContactID;",
											"",
											"pm.test(\"Application Registration is Created\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202,204]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    AppRegID = jsonData.cmc_applicationregistrationid;",
											"    console.log('Application Registration ID is: ' +AppRegID);",
											"    AppDefnVerID = jsonData._cmc_applicationdefinitionversionid_value;",
											"    console.log('Application Definition version ID that is linked is: ' +AppDefnVerID);",
											"    AppRegName = jsonData.cmc_applicationregistration;",
											"    console.log('Application Registration name is: ' +AppRegName);",
											"    ContactID=jsonData._cmc_contactid_value;",
											"    console.log('Contact ID that is linked is: ' +ContactID);",
											"    ",
											"    pm.globals.set('gAppRegID',AppRegID);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_applicationdefinitionversionid@odata.bind\": \"/cmc_applicationdefinitionversions({{gAppDefnVerID}})\",\r\n    \"cmc_contactid@odata.bind\": \"/contacts({{gContactID}})\",\r\n    \"cmc_applicationstatus\": \"175490000\",\r\n    \"cmc_applicationsubmitted\": false,\r\n    \"cmc_sourceofrecord\": \"175490000\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applicationregistrations",
									"host": [
										"{{Eresource_URL}}cmc_applicationregistrations"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Application",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var AppID;",
											"var AppName;",
											"",
											"pm.test(\"Application is Created\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202,204]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    AppID = jsonData.cmc_applicationid;",
											"    console.log('Application ID is: ' +AppID);",
											"    ",
											"    AppName = jsonData.cmc_applicationname;",
											"    console.log('Application name is: ' +AppName);",
											"    ",
											"    pm.globals.set('gAppID',AppID);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_applicationstatus\": 175490001,\r\n    \"cmc_contactid@odata.bind\": \"/contacts({{gContactID}})\",\r\n    \"cmc_programid@odata.bind\": \"/mshied_programs({{gProgram1}})\",\r\n    \"cmc_applicationperiodid@odata.bind\": \"/cmc_applicationperiods({{gAppPerID}})\",\r\n    \"cmc_applicationregistration@odata.bind\": \"/cmc_applicationregistrations({{gAppRegID}})\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applications",
									"host": [
										"{{Eresource_URL}}cmc_applications"
									]
								}
							},
							"response": []
						}
					],
					"description": "UI- AppFeeInvoices. To validate the 'Discount Code' functionality UI checks",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "TestCase -899056",
					"item": [
						{
							"name": "GetToken",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = JSON.parse(responseBody);",
											"postman.setGlobalVariable('gaccess_token', data.access_token);",
											"",
											"//pm.environment.set(\"Eaccess_token\", data.access_token);",
											"console.log(pm.globals.get(\"gaccess_token\"));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "grant_type",
											"value": "client_credentials",
											"type": "text"
										},
										{
											"key": "client_id",
											"value": "{{Esystemadmin_id}}",
											"type": "text"
										},
										{
											"key": "client_secret",
											"value": "{{Esystemadmin_secret}}",
											"type": "text"
										},
										{
											"key": "resource",
											"value": "{{Eresource}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "https://login.microsoftonline.com/{{Eredirectid}}/oauth2/token",
									"protocol": "https",
									"host": [
										"login",
										"microsoftonline",
										"com"
									],
									"path": [
										"{{Eredirectid}}",
										"oauth2",
										"token"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Program First",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var programid;",
											"pm.test(\"Get Program\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"",
											"    programid = jsonData.mshied_programid; ",
											"});",
											"pm.globals.set('gprogramid188', programid);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"mshied_code\": \"Prg899056-1\",\n    \"mshied_name\": \"UIAuto-Program-899056-1\"\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}mshied_programs",
									"host": [
										"{{Eresource_URL}}mshied_programs"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Program Second",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var programid;",
											"pm.test(\"Get Program\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"",
											"    programid = jsonData.mshied_programid; ",
											"});",
											"pm.globals.set('gprogramid1882', programid);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"mshied_code\": \"Prg899056-2\",\n    \"mshied_name\": \"UIAuto-Program-899056-2\"\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}mshied_programs",
									"host": [
										"{{Eresource_URL}}mshied_programs"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create ApplicationType",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var applicationtypeid;",
											"",
											"pm.test(\"ApplicantType Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    applicationtypeid = jsonData.cmc_applicationtypeid;",
											"    var applicationTypeName=jsonData.cmc_applicationtypename;",
											"    console.log(\"Application Type name is: \"+applicationTypeName);",
											"",
											"});",
											"",
											"pm.globals.set('gapplicationtypeid188', applicationtypeid);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_applicationtypename\": \"UIAuto-ApplicationType-899056\",\r\n    \"cmc_applicationgroup\": \"175490001\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applicationtypes",
									"host": [
										"{{Eresource_URL}}cmc_applicationtypes"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add Program in Application Type",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Adding Program 1 record To Application Type\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([204,201,202,200]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    var ProgName =jsonData.mshied_name;",
											"    console.log('Program that is added to Application Type is:' +ProgName);    ",
											"});",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{                \r\n    \"@odata.id\":\"{{Eresource_URL}}/mshied_programs({{gprogramid188}})\"\r\n}\r\n"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applicationtypes({{gapplicationtypeid188}})/cmc_cmc_applicationtype_mshied_program/$ref",
									"host": [
										"{{Eresource_URL}}cmc_applicationtypes({{gapplicationtypeid188}})"
									],
									"path": [
										"cmc_cmc_applicationtype_mshied_program",
										"$ref"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create AcademicPeriod",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var academicPeriodid;",
											"",
											"pm.test(\"Academic Period Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    academicPeriodid = jsonData.mshied_academicperiodid;",
											"    var academicPeriodName=jsonData.mshied_name;",
											"    console.log(\"Academic Period Name is: \" +academicPeriodName);",
											"",
											"});",
											"",
											"pm.globals.set('gacademicPeriodid188', academicPeriodid);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var moment = require('moment');\r",
											"pm.environment.set(\"timestamp\", moment().add(1, 'days').format(\"YYYY-MM-DD\"));\r",
											"pm.environment.set(\"timestampEndDate\", moment().add(100, 'days').format(\"YYYY-MM-DD\"));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"mshied_enddate\": \"{{timestampEndDate}}\",\r\n    \"mshied_startdate\": \"{{timestamp}}\",\r\n    \"mshied_code\": \"UI-899056\",\r\n    \"mshied_name\": \"UIAuto-AcademicPer-899056\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}mshied_academicperiods",
									"host": [
										"{{Eresource_URL}}mshied_academicperiods"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create ApplicationPeriod Spring2021",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var applicationPeriodid;",
											"",
											"pm.test(\"ApplicantPeriod Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    applicationPeriodid = jsonData.cmc_applicationperiodid;",
											"    var applicationPeriodName=jsonData.cmc_applicationperiodname;",
											"",
											"    console.log(\"Application Period Name is: \" +applicationPeriodName);",
											"",
											"});",
											"",
											"pm.globals.set('gapplicationPeriodid188', applicationPeriodid);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_AcademicPeriodId@odata.bind\": \"/mshied_academicperiods({{gacademicPeriodid188}})\",\r\n    \"cmc_applicationperiodname\": \"UIAuto-ApplicationPeriodSpring21-899056\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applicationperiods",
									"host": [
										"{{Eresource_URL}}cmc_applicationperiods"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create ApplicationPeriod Spring2022",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var applicationPeriodid;",
											"",
											"pm.test(\"ApplicantPeriod Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    applicationPeriodid = jsonData.cmc_applicationperiodid;",
											"    var applicationPeriodName = jsonData.cmc_applicationperiodname;",
											"",
											"    console.log(\"Application Period Name is: \" + applicationPeriodName);",
											"",
											"});",
											"",
											"pm.globals.set('gapplicationPeriodid1882', applicationPeriodid);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_AcademicPeriodId@odata.bind\": \"/mshied_academicperiods({{gacademicPeriodid188}})\",\r\n    \"cmc_applicationperiodname\": \"UIAuto-ApplicationPeriodSpring22-899056\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applicationperiods",
									"host": [
										"{{Eresource_URL}}cmc_applicationperiods"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Application Definition",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var applicationdefinitionid;",
											"",
											"pm.test(\"Application Requirment Definition Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    applicationdefinitionid = jsonData.cmc_applicationdefinitionid;",
											"    var applicationDefinitionName= jsonData.cmc_applicationdefinitionname;",
											"",
											"    console.log(\"Application Definition name is: \"+applicationDefinitionName);",
											"",
											"});",
											"",
											"pm.globals.set('gappdefid188', applicationdefinitionid);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_applicationdefinitionname\": \"UIAuto-ApplicationDefinition-899056\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applicationdefinitions",
									"host": [
										"{{Eresource_URL}}cmc_applicationdefinitions"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Application Definition Version",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var applicationdefinitionverid, applicationdefinitionvername;",
											"",
											"pm.test(\"Application Requirment Definition Version Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    applicationdefinitionverid = jsonData.cmc_applicationdefinitionversionid;",
											"    applicationdefinitionvername = jsonData.cmc_applicationdefinitionversionname;",
											"    console.log(\"Application Definition version name is: \" + applicationdefinitionvername);",
											"});",
											"",
											"pm.globals.set('gappdefverid188', applicationdefinitionverid);",
											"pm.globals.set('gapplicationdefinitionvername188', applicationdefinitionvername);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_applicationdefinitionversionname\": \"UIAuto-ADV-899056\",\r\n    \"cmc_applicationtype@odata.bind\": \"/cmc_applicationtypes({{gapplicationtypeid188}})\",\r\n    \"cmc_applicationdefinitionid@odata.bind\": \"/cmc_applicationdefinitions({{gappdefid188}})\",\r\n    \"cmc_createlifecycle\": false\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applicationdefinitionversions",
									"host": [
										"{{Eresource_URL}}cmc_applicationdefinitionversions"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Application Definition Version Detail First",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var appdefinitionverdetailid, applicationdefinitionvername;",
											"",
											"pm.test(\"Application Requirment Definition Version Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    appdefinitionverdetailid = jsonData.cmc_applicationdefinitionversiondetailid;",
											"    applicationdefinitionvername = jsonData.cmc_applicationdefinitionversiondetailname;",
											"    console.log(\"Application Definition version Detail name is: \" + applicationdefinitionvername);",
											"});",
											"",
											"pm.globals.set('gappdefverdetailid188', appdefinitionverdetailid);",
											"pm.globals.set('gapplicationdefinitionvername188', applicationdefinitionvername);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_applicationdefinitionversion@odata.bind\": \"/cmc_applicationdefinitionversions({{gappdefverid188}})\",\r\n    \"cmc_applicationperiod@odata.bind\": \"/cmc_applicationperiods({{gapplicationPeriodid188}})\",\r\n    \"cmc_enddate\": \"2028-06-17T02:30:00.000Z\",\r\n    \"cmc_startdate\": \"2023-05-28T02:30:00.000Z\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applicationdefinitionversiondetails",
									"host": [
										"{{Eresource_URL}}cmc_applicationdefinitionversiondetails"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Application Definition Version Detail Second",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var appdefinitionverdetailid, applicationdefinitionvername;",
											"",
											"pm.test(\"Application Requirment Definition Version Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    appdefinitionverdetailid = jsonData.cmc_applicationdefinitionversiondetailid;",
											"    applicationdefinitionvername = jsonData.cmc_applicationdefinitionversiondetailname;",
											"    console.log(\"Application Definition version Detail name is: \" + applicationdefinitionvername);",
											"});",
											"",
											"pm.globals.set('gappdefverdetailid188', appdefinitionverdetailid);",
											"pm.globals.set('gapplicationdefinitionvername188', applicationdefinitionvername);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_applicationdefinitionversion@odata.bind\": \"/cmc_applicationdefinitionversions({{gappdefverid188}})\",\r\n    \"cmc_applicationperiod@odata.bind\": \"/cmc_applicationperiods({{gapplicationPeriodid1882}})\",\r\n    \"cmc_enddate\": \"2028-06-17T02:30:00.000Z\",\r\n    \"cmc_startdate\": \"2023-05-28T02:30:00.000Z\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applicationdefinitionversiondetails",
									"host": [
										"{{Eresource_URL}}cmc_applicationdefinitionversiondetails"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Application Period Program",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Verifying Application Peroid Program\", function () {",
											"",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    var programid = jsonData._cmc_programid_value;",
											"    var name=jsonData.cmc_name;",
											"    console.log(\"Application Peroid Program Name -\",name); ",
											"",
											"});",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_aplicationldefversdetailid@odata.bind\": \"/cmc_applicationdefinitionversiondetails({{gappdefverdetailid188}})\",\r\n    \"cmc_programid@odata.bind\": \"/mshied_programs({{gprogramid1882}})\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applicationperiodprogams",
									"host": [
										"{{Eresource_URL}}cmc_applicationperiodprogams"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get SourceCategory",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var sourceCategoryid;",
											"",
											"pm.test(\"Source category record Fetched\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    sourceCategoryid = jsonData.value[0].cmc_sourcecategoryid;",
											"    var sourceCategoryName = jsonData.value[0].cmc_sourcecategoryname;",
											"    console.log('SourceCategory Name is: ' + sourceCategoryName);",
											"});",
											"",
											"pm.globals.set('gsourceCategoryid1', sourceCategoryid);",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"url": {
									"raw": "{{Eresource_URL}}cmc_sourcecategories",
									"host": [
										"{{Eresource_URL}}cmc_sourcecategories"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get SourceMethod",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var sourceMethodid;",
											"",
											"pm.test(\"Source Method record Fetched\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    sourceMethodid = jsonData.value[0].cmc_sourcemethodid;",
											"    var sourceMethodName = jsonData.value[0].cmc_sourcemethodname;",
											"    console.log('SourceMethod Name is: ' + sourceMethodName);",
											"",
											"});",
											"",
											"pm.globals.set('gsourceMethodid1', sourceMethodid);",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"url": {
									"raw": "{{Eresource_URL}}cmc_sourcemethods",
									"host": [
										"{{Eresource_URL}}cmc_sourcemethods"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Contact",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Contact Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    var contactid = jsonData.contactid;",
											"    var contactName = jsonData.fullname;",
											"    console.log(\"Contact name is: \" + contactName);",
											"",
											"    pm.globals.set('gcontactid188', contactid);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"lastname\": \"Contact- 899056\",\r\n    \"firstname\": \"UIAuto\",\r\n    \"mshied_contacttype\": \"494280011\",\r\n    \"cmc_sourcecategoryid@odata.bind\": \"/cmc_sourcecategories({{gsourceCategoryid1}})\",\r\n    \"cmc_sourcemethodid@odata.bind\": \"/cmc_sourcemethods({{gsourceMethodid1}})\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}contacts",
									"host": [
										"{{Eresource_URL}}contacts"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Application Registration",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Application Registration Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    var applicationRegId = jsonData.cmc_applicationregistrationid;",
											"    var applicationRegName = jsonData.cmc_applicationregistration;",
											"    console.log(\"Application Registration name is: \" + applicationRegName);",
											"",
											"    pm.globals.set('gapplicationRegId188', applicationRegId);",
											"    pm.globals.set('gapplicationRegName188', applicationRegName);",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_contactid@odata.bind\": \"/contacts({{gcontactid188}})\",\r\n    \"cmc_applicationdefinitionversionid@odata.bind\": \"/cmc_applicationdefinitionversions({{gappdefverid188}})\",\r\n    \"cmc_applicationstatus\": 175490000,\r\n    \"cmc_applicationsubmitted\": false\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applicationregistrations",
									"host": [
										"{{Eresource_URL}}cmc_applicationregistrations"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "TestCase -843875",
					"item": [
						{
							"name": "Create Program",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var programid;",
											"pm.test(\"Get Program\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"",
											"    programid = jsonData.mshied_programid; ",
											"});",
											"pm.globals.set('gprogramid288', programid);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"mshied_code\": \"code843875\",\n    \"mshied_name\": \"UIAuto-Program-843875\"\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}mshied_programs",
									"host": [
										"{{Eresource_URL}}mshied_programs"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create ApplicationType",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var applicationtypeid;",
											"",
											"pm.test(\"ApplicantType Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    applicationtypeid = jsonData.cmc_applicationtypeid;",
											"    var applicationTypeName=jsonData.cmc_applicationtypename;",
											"    console.log(\"Application Type name is: \"+applicationTypeName);",
											"",
											"});",
											"",
											"pm.globals.set('gapplicationtypeid288', applicationtypeid);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_applicationtypename\": \"UIAuto-ApplicationType-843875\",\r\n    \"cmc_applicationgroup\": \"175490001\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applicationtypes",
									"host": [
										"{{Eresource_URL}}cmc_applicationtypes"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add Program in Application Type",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Adding Program 1 record To Application Type\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([204, 201, 202, 200]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    var ProgName = jsonData.mshied_name;",
											"    console.log('Program that is added to Application Type is:' + ProgName);",
											"",
											"});",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"@odata.id\": \"{{Eresource_URL}}/mshied_programs({{gprogramid288}})\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applicationtypes({{gapplicationtypeid288}})/cmc_cmc_applicationtype_mshied_program/$ref",
									"host": [
										"{{Eresource_URL}}cmc_applicationtypes({{gapplicationtypeid288}})"
									],
									"path": [
										"cmc_cmc_applicationtype_mshied_program",
										"$ref"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create AcademicPeriod",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var academicPeriodid;",
											"",
											"pm.test(\"Academic Period Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    academicPeriodid = jsonData.mshied_academicperiodid;",
											"    var academicPeriodName = jsonData.mshied_name;",
											"",
											"    console.log(\"Academic Period Name is: \" + academicPeriodName);",
											"",
											"});",
											"",
											"pm.globals.set('gacademicPeriodid288', academicPeriodid);",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var moment = require('moment');\r",
											"pm.environment.set(\"timestamp\", moment().add(1, 'days').format(\"YYYY-MM-DD\"));\r",
											"pm.environment.set(\"timestampEndDate\", moment().add(100, 'days').format(\"YYYY-MM-DD\"));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"mshied_enddate\": \"{{timestampEndDate}}\",\r\n    \"mshied_startdate\": \"{{timestamp}}\",\r\n    \"mshied_code\": \"UI-843875\",\r\n    \"mshied_name\": \"UIAuto-AcademicPer-843875\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}mshied_academicperiods",
									"host": [
										"{{Eresource_URL}}mshied_academicperiods"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create ApplicationPeriod",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var applicationPeriodid;",
											"",
											"pm.test(\"ApplicantPeriod Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    applicationPeriodid = jsonData.cmc_applicationperiodid;",
											"    var applicationPeriodName=jsonData.cmc_applicationperiodname;",
											"",
											"    console.log(\"Application Period Name is: \" +applicationPeriodName);",
											"",
											"});",
											"",
											"pm.globals.set('gapplicationPeriodid288', applicationPeriodid);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_AcademicPeriodId@odata.bind\": \"/mshied_academicperiods({{gacademicPeriodid288}})\",\r\n    \"cmc_applicationperiodname\": \"UIAuto-ApplicationPeriod-843875\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applicationperiods",
									"host": [
										"{{Eresource_URL}}cmc_applicationperiods"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Application Definition",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var applicationdefinitionid;",
											"",
											"pm.test(\"Application Requirment Definition Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    applicationdefinitionid = jsonData.cmc_applicationdefinitionid;",
											"    var applicationDefinitionName= jsonData.cmc_applicationdefinitionname;",
											"",
											"    console.log(\"Application Definition name is: \"+applicationDefinitionName);",
											"",
											"});",
											"",
											"pm.globals.set('gappdefid288', applicationdefinitionid);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_applicationdefinitionname\": \"UIAuto-ApplicationDefinition-843875\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applicationdefinitions",
									"host": [
										"{{Eresource_URL}}cmc_applicationdefinitions"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Application Definition Version",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var applicationdefinitionverid, applicationdefinitionvername;",
											"",
											"pm.test(\"Application Requirment Definition Version Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    applicationdefinitionverid = jsonData.cmc_applicationdefinitionversionid;",
											"    applicationdefinitionvername = jsonData.cmc_applicationdefinitionversionname;",
											"    console.log(\"Application Definition version name is: \" + applicationdefinitionvername);",
											"});",
											"",
											"pm.globals.set('gappdefverid288', applicationdefinitionverid);",
											"pm.globals.set('gapplicationdefinitionvername288', applicationdefinitionvername);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_applicationdefinitionversionname\": \"UIAuto-ADV-843875\",\r\n    \"cmc_applicationtype@odata.bind\": \"/cmc_applicationtypes({{gapplicationtypeid288}})\",\r\n    \"cmc_applicationdefinitionid@odata.bind\": \"/cmc_applicationdefinitions({{gappdefid288}})\",\r\n    \"cmc_createlifecycle\": false\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applicationdefinitionversions",
									"host": [
										"{{Eresource_URL}}cmc_applicationdefinitionversions"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Application Definition Version Detail",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Application Definition Version Detail is Created\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202,204]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    AppDefnVerDetID = jsonData.cmc_applicationdefinitionversiondetailid;",
											"    console.log('Application Definition version Detail ID is: ' +AppDefnVerDetID);",
											"    var AppDefVerName = jsonData.cmc_applicationdefinitionversiondetailname;",
											"    console.log('Application Definition Version Detail name: ' +AppDefVerName);",
											"    ",
											"    pm.globals.set('gAppDefnVerDetID288',AppDefnVerDetID);   ",
											"        ",
											"});",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_applicationdefinitionversion@odata.bind\": \"/cmc_applicationdefinitionversions({{gappdefverid288}})\",\r\n    \"cmc_applicationperiod@odata.bind\": \"/cmc_applicationperiods({{gapplicationPeriodid288}})\",\r\n    \"cmc_enddate\": \"2020-12-31T18:30:00.000Z\",\r\n    \"cmc_startdate\": \"2018-12-31T18:30:00.000Z\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applicationdefinitionversiondetails",
									"host": [
										"{{Eresource_URL}}cmc_applicationdefinitionversiondetails"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get SourceCategory",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var sourceCategoryid;",
											"",
											"pm.test(\"Source category record Fetched\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    sourceCategoryid = jsonData.value[0].cmc_sourcecategoryid;",
											"    var sourceCategoryName = jsonData.value[0].cmc_sourcecategoryname;",
											"    console.log('SourceCategory Name is: ' + sourceCategoryName);",
											"",
											"});",
											"",
											"pm.globals.set('gsourceCategoryid288', sourceCategoryid);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"url": {
									"raw": "{{Eresource_URL}}cmc_sourcecategories",
									"host": [
										"{{Eresource_URL}}cmc_sourcecategories"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get SourceMethod",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var sourceMethodid;",
											"",
											"pm.test(\"Source Method record Fetched\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    sourceMethodid = jsonData.value[0].cmc_sourcemethodid;",
											"    var sourceMethodName = jsonData.value[0].cmc_sourcemethodname;",
											"    console.log('SourceMethod Name is: ' + sourceMethodName);",
											"",
											"});",
											"",
											"pm.globals.set('gsourceMethodid288', sourceMethodid);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"url": {
									"raw": "{{Eresource_URL}}cmc_sourcemethods",
									"host": [
										"{{Eresource_URL}}cmc_sourcemethods"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get SAT TestType",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Get SAT ID\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202,204]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    var satid = jsonData.value[0].mshied_testtypeid;",
											"    var Testtypename = jsonData.value[0].mshied_name;",
											"    ",
											"    console.log('TesttypeID:'+satid);",
											"    console.log('Testtype:'+Testtypename);",
											"    ",
											"    pm.globals.set('gsatid288',satid);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									},
									{
										"key": "OData-Version",
										"value": "4.0"
									},
									{
										"key": "OData-MaxVersion",
										"value": "4.0"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "{{Eresource_URL}}mshied_testtypes?$select=mshied_testtypeid,mshied_name &$filter=mshied_name eq 'SAT'",
									"host": [
										"{{Eresource_URL}}mshied_testtypes"
									],
									"query": [
										{
											"key": "$select",
											"value": "mshied_testtypeid,mshied_name "
										},
										{
											"key": "$filter",
											"value": "mshied_name eq 'SAT'"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Contact",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Contact Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    var contactid = jsonData.contactid;",
											"    var contactName = jsonData.fullname;",
											"    console.log(\"Contact name is: \" + contactName);",
											"",
											"    pm.globals.set('gcontactid288', contactid);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"lastname\": \"Contact- 843875\",\r\n    \"firstname\": \"UIAuto\",\r\n    \"mshied_contacttype\": \"494280011\",\r\n    \"cmc_sourcecategoryid@odata.bind\": \"/cmc_sourcecategories({{gsourceCategoryid288}})\",\r\n    \"cmc_sourcemethodid@odata.bind\": \"/cmc_sourcemethods({{gsourceMethodid288}})\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}contacts",
									"host": [
										"{{Eresource_URL}}contacts"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create SAT Test Score",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Test Score SAT Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    var testscoreid = jsonData.mshied_testscoreid;",
											"    ",
											"    pm.globals.set('gtestscoreid288', testscoreid);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"mshied_StudentID@odata.bind\": \"/contacts({{gcontactid288}})\",\r\n\t\"mshied_TestTypeId@odata.bind\": \"/mshied_testtypes({{gsatid288}})\",\r\n\t\"mshied_testdate\": \"2020-08-03T18:30:00.000Z\",\r\n\t\"mshied_testsource\": 494280004\r\n\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}mshied_testscores",
									"host": [
										"{{Eresource_URL}}mshied_testscores"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Application Registration",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Application Registration Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    var applicationRegId = jsonData.cmc_applicationregistrationid;",
											"    var applicationRegName = jsonData.cmc_applicationregistration;",
											"    console.log(\"Application Registration name is: \" +applicationRegName);",
											"",
											"    pm.globals.set('gapplicationRegId288', applicationRegId);",
											"    pm.globals.set('gapplicationRegName288', applicationRegName);",
											"",
											"});",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_contactid@odata.bind\": \"/contacts({{gcontactid288}})\",\r\n    \"cmc_applicationdefinitionversionid@odata.bind\": \"/cmc_applicationdefinitionversions({{gappdefverid288}})\",\r\n    \"cmc_applicationstatus\": 175490000,\r\n    \"cmc_applicationsubmitted\": false\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applicationregistrations",
									"host": [
										"{{Eresource_URL}}cmc_applicationregistrations"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Application",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Application Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    var applicationId = jsonData.cmc_applicationid;",
											"    var applicationName = jsonData.cmc_applicationname;",
											"    console.log(\"Application name is: \" + applicationName);",
											"",
											"    pm.globals.set('gapplicationId288', applicationId);",
											"    pm.globals.set('gapplicationName288', applicationName);",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_applicationstatus\": 175490001,\r\n    \"cmc_contactid@odata.bind\": \"/contacts({{gcontactid288}})\",\r\n    \"cmc_programid@odata.bind\": \"/mshied_programs({{gprogramid288}})\",\r\n    \"cmc_applicationperiodid@odata.bind\": \"/cmc_applicationperiods({{gapplicationPeriodid288}})\",\r\n    \"cmc_applicationregistration@odata.bind\": \"/cmc_applicationregistrations({{gapplicationRegId288}})\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applications",
									"host": [
										"{{Eresource_URL}}cmc_applications"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Recommender(Contact)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Contact Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    var contactid = jsonData.contactid;",
											"    var contactName = jsonData.fullname;",
											"    console.log(\"Contact name is: \" + contactName);",
											"",
											"    pm.globals.set('grecommenderid288', contactid);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"lastname\": \"Recommender- 843875\",\r\n    \"firstname\": \"UIAuto\",\r\n    \"mshied_contacttype\": \"494280012\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}contacts",
									"host": [
										"{{Eresource_URL}}contacts"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Application Recommendation",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Application Recommendation created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    var applicationrecommendationId = jsonData.cmc_applicationrecommendationid;",
											"    var applicationrecommendationName = jsonData.cmc_applicationrecommendationname;",
											"    console.log(\"Application Recommendation name is: \" + applicationrecommendationName);",
											"",
											"    pm.globals.set('gapplicationrecommendationId288', applicationrecommendationId);",
											"    pm.globals.set('gapplicationrecommendationName288', applicationrecommendationName);",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_applicationid@odata.bind\": \"/cmc_applications({{gapplicationId288}})\",\r\n    \"cmc_contactid@odata.bind\": \"/contacts({{gcontactid288}})\",\r\n    \"cmc_isrecommendationsubmitted\": false,\r\n    \"cmc_issubmittedbyrecommender\": false,\r\n    \"cmc_recommendationstatus\": 175490000,\r\n    \"cmc_recommendationtype\": 175490004,\r\n    \"cmc_recommendedbyid@odata.bind\": \"/contacts({{grecommenderid288}})\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applicationrecommendations",
									"host": [
										"{{Eresource_URL}}cmc_applicationrecommendations"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "TestCase -895173",
					"item": [
						{
							"name": "Create Program 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var programid;",
											"pm.test(\"Get Program\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    programid = jsonData.mshied_programid;",
											"    var programname = jsonData.mshied_name;",
											"",
											"    console.log(\"Program name is: \" + programname);",
											"});",
											"pm.globals.set('gprogramid290a', programid);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"mshied_code\": \"code895173\",\n    \"mshied_name\": \"UIAuto-Program-895173-1\"\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}mshied_programs",
									"host": [
										"{{Eresource_URL}}mshied_programs"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Program 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var programid;",
											"pm.test(\"create Program\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    programid = jsonData.mshied_programid; ",
											"    var programname=jsonData.mshied_name;",
											"",
											"    console.log(\"Program name is: \"+programname);",
											"});",
											"pm.globals.set('gprogramid290b', programid);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"mshied_code\": \"code895173\",\n    \"mshied_name\": \"UIAuto-Program-895173-2\"\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}mshied_programs",
									"host": [
										"{{Eresource_URL}}mshied_programs"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "TestCase -1380791",
					"item": [
						{
							"name": "Create ApplicationType",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var applicationtypeid;",
											"",
											"pm.test(\"ApplicantType Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    applicationtypeid = jsonData.cmc_applicationtypeid;",
											"    var applicationTypeName = jsonData.cmc_applicationtypename;",
											"    console.log(\"Application Type name is: \" + applicationTypeName);",
											"",
											"});",
											"pm.globals.set('gapplicationtypeid91', applicationtypeid);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_applicationtypename\": \"UIAuto-ApplicationType-1380791\",\r\n    \"cmc_applicationgroup\": \"175490001\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applicationtypes",
									"host": [
										"{{Eresource_URL}}cmc_applicationtypes"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create AcademicPeriod",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var academicPeriodid;",
											"",
											"pm.test(\"Academic Period Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    academicPeriodid = jsonData.mshied_academicperiodid;",
											"    var academicPeriodName = jsonData.mshied_name;",
											"    console.log(\"Academic Period Name is: \" + academicPeriodName);",
											"",
											"});",
											"pm.globals.set('gacademicPeriodid91', academicPeriodid);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var moment = require('moment');\r",
											"pm.environment.set(\"timestamp\", moment().add(1, 'days').format(\"YYYY-MM-DD\"));\r",
											"pm.environment.set(\"timestampEndDate\", moment().add(100, 'days').format(\"YYYY-MM-DD\"));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"mshied_enddate\": \"{{timestampEndDate}}\",\r\n    \"mshied_startdate\": \"{{timestamp}}\",\r\n    \"mshied_code\": \"UI-1380791\",\r\n    \"mshied_name\": \"UIAuto-AcademicPer-1380791\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}mshied_academicperiods",
									"host": [
										"{{Eresource_URL}}mshied_academicperiods"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create ApplicationPeriod",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var applicationPeriodid;",
											"",
											"pm.test(\"ApplicantPeriod Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    applicationPeriodid = jsonData.cmc_applicationperiodid;",
											"    var applicationPeriodName = jsonData.cmc_applicationperiodname;",
											"",
											"    console.log(\"Application Period Name is: \" + applicationPeriodName);",
											"",
											"});",
											"",
											"pm.globals.set('gapplicationPeriodid91', applicationPeriodid);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_AcademicPeriodId@odata.bind\": \"/mshied_academicperiods({{gacademicPeriodid91}})\",\r\n    \"cmc_applicationperiodname\": \"UIAuto-ApplicationPeriod-1380791\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applicationperiods",
									"host": [
										"{{Eresource_URL}}cmc_applicationperiods"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Decision Definition",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var applicationDecDefid;",
											"",
											"pm.test(\"Application Decision Definition Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    applicationDecDefid = jsonData.cmc_applicationdecisiondefinitionid;",
											"    var applicationDecDefName = jsonData.cmc_applicationdecisiondefinitionname;",
											"    console.log(\"Decision Definition record name is: \" + applicationDecDefName);",
											"",
											"});",
											"",
											"pm.globals.set('gapplicationDecDefid91', applicationDecDefid);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var current_timestamp = new Date();\r",
											"postman.setEnvironmentVariable(\"current_timestamp\", current_timestamp.toISOString());"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_applicationdecisiondefinitionname\": \"UIAuto-ApplicationDecDef-1380791\",\r\n    \"cmc_decisionpublishdate\": \"{{current_timestamp}}\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applicationdecisiondefinitions",
									"host": [
										"{{Eresource_URL}}cmc_applicationdecisiondefinitions"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Decision Definition Detail_Admit",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var applicationDecDefDetailid;",
											"",
											"pm.test(\"Application Decision Definition Detail Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    applicationDecDefDetailid = jsonData.cmc_applicationdecisiondefinitiondetailid;",
											"    var applicationDecDefDetailName = jsonData.cmc_applicationdecisiondefinitiondetailname;",
											"",
											"    console.log(\"Decision Definition Detail record name is: \" + applicationDecDefDetailName);",
											"",
											"});",
											"",
											"pm.globals.set('gapplicationDecDefDetailid91a', applicationDecDefDetailid);",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_decisionstatus\": 175490000,\r\n    \"cmc_applicationdecisiondefinitiondetailname\": \"UIAuto-ApplicationDecDefDetail-1380791-1\",\r\n    \"cmc_applicationdecisiondefinition@odata.bind\": \"/cmc_applicationdecisiondefinitions({{gapplicationDecDefid91}})\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applicationdecisiondefinitiondetails",
									"host": [
										"{{Eresource_URL}}cmc_applicationdecisiondefinitiondetails"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Decision Definition Detail_Reject",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var applicationDecDefDetailid;",
											"",
											"pm.test(\"Application Decision Definition Detail Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    applicationDecDefDetailid = jsonData.cmc_applicationdecisiondefinitiondetailid;",
											"    var applicationDecDefDetailName = jsonData.cmc_applicationdecisiondefinitiondetailname;",
											"",
											"    console.log(\"Decision Definition Detail record name is: \" + applicationDecDefDetailName);",
											"",
											"});",
											"",
											"pm.globals.set('gapplicationDecDefDetailid91b', applicationDecDefDetailid);",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_decisionstatus\": 175490001,\r\n    \"cmc_applicationdecisiondefinitiondetailname\": \"UIAuto-ApplicationDecDefDetail-1380791-2\",\r\n    \"cmc_applicationdecisiondefinition@odata.bind\": \"/cmc_applicationdecisiondefinitions({{gapplicationDecDefid91}})\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applicationdecisiondefinitiondetails",
									"host": [
										"{{Eresource_URL}}cmc_applicationdecisiondefinitiondetails"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Application Definition",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var applicationdefinitionid;",
											"",
											"pm.test(\"Application Requirment Definition Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    applicationdefinitionid = jsonData.cmc_applicationdefinitionid;",
											"    var applicationDefinitionName= jsonData.cmc_applicationdefinitionname;",
											"",
											"    console.log(\"Application Definition name is: \"+applicationDefinitionName);",
											"",
											"});",
											"",
											"pm.globals.set('gappdefid91', applicationdefinitionid);",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_applicationdefinitionname\": \"UIAuto-ApplicationDefinition-1380791\",\r\n    \"cmc_decisiondefinitionid@odata.bind\": \"/cmc_applicationdecisiondefinitions({{gapplicationDecDefid91}})\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applicationdefinitions",
									"host": [
										"{{Eresource_URL}}cmc_applicationdefinitions"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Application Definition Version",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var applicationdefinitionverid, applicationdefinitionvername;",
											"",
											"pm.test(\"Application Requirment Definition Version Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    applicationdefinitionverid = jsonData.cmc_applicationdefinitionversionid;",
											"    applicationdefinitionvername = jsonData.cmc_applicationdefinitionversionname;",
											"    console.log(\"Application Definition version name is: \" + applicationdefinitionvername);",
											"});",
											"",
											"pm.globals.set('gappdefverid91', applicationdefinitionverid);",
											"pm.globals.set('gapplicationdefinitionvername91', applicationdefinitionvername);",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_applicationdefinitionversionname\": \"UIAuto-ADV-1380791\",\r\n    \"cmc_applicationtype@odata.bind\": \"/cmc_applicationtypes({{gapplicationtypeid91}})\",\r\n    \"cmc_applicationdefinitionid@odata.bind\": \"/cmc_applicationdefinitions({{gappdefid91}})\",\r\n    \"cmc_createlifecycle\": false\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applicationdefinitionversions",
									"host": [
										"{{Eresource_URL}}cmc_applicationdefinitionversions"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get SourceCategory",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var sourceCategoryid;",
											"",
											"pm.test(\"Source category record Fetched\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    sourceCategoryid = jsonData.value[0].cmc_sourcecategoryid;",
											"    var sourceCategoryName = jsonData.value[0].cmc_sourcecategoryname;",
											"    console.log('SourceCategory Name is: ' + sourceCategoryName);",
											"",
											"});",
											"",
											"pm.globals.set('gsourceCategoryid91', sourceCategoryid);",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"url": {
									"raw": "{{Eresource_URL}}cmc_sourcecategories",
									"host": [
										"{{Eresource_URL}}cmc_sourcecategories"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get SourceMethod",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var sourceMethodid;",
											"",
											"pm.test(\"Source Method record Fetched\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    sourceMethodid = jsonData.value[0].cmc_sourcemethodid;",
											"    var sourceMethodName = jsonData.value[0].cmc_sourcemethodname;",
											"    console.log('SourceMethod Name is: ' + sourceMethodName);",
											"",
											"});",
											"",
											"pm.globals.set('gsourceMethodid91', sourceMethodid);",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"url": {
									"raw": "{{Eresource_URL}}cmc_sourcemethods",
									"host": [
										"{{Eresource_URL}}cmc_sourcemethods"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Contact",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Contact Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    var contactid = jsonData.contactid;",
											"    var contactName = jsonData.fullname;",
											"    console.log(\"Contact name is: \" + contactName);",
											"",
											"    pm.globals.set('gcontactid91', contactid);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"lastname\": \"Contact-1380791\",\r\n    \"firstname\": \"UIAuto\",\r\n    \"mshied_contacttype\": \"494280011\",\r\n    \"cmc_sourcecategoryid@odata.bind\": \"/cmc_sourcecategories({{gsourceCategoryid91}})\",\r\n    \"cmc_sourcemethodid@odata.bind\": \"/cmc_sourcemethods({{gsourceMethodid91}})\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}contacts",
									"host": [
										"{{Eresource_URL}}contacts"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Application Registration",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Application Registration Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    var applicationRegId = jsonData.cmc_applicationregistrationid;",
											"    var applicationRegName = jsonData.cmc_applicationregistration;",
											"    console.log(\"Application Registration name is: \" + applicationRegName);",
											"",
											"    pm.globals.set('gapplicationRegId91', applicationRegId);",
											"    pm.globals.set('gapplicationRegName91', applicationRegName);",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_contactid@odata.bind\": \"/contacts({{gcontactid91}})\",\r\n    \"cmc_applicationdefinitionversionid@odata.bind\": \"/cmc_applicationdefinitionversions({{gappdefverid91}})\",\r\n    \"cmc_applicationstatus\": 175490000,\r\n    \"cmc_applicationsubmitted\": false\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applicationregistrations",
									"host": [
										"{{Eresource_URL}}cmc_applicationregistrations"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Application",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Application Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    var applicationId = jsonData.cmc_applicationid;",
											"    var applicationName = jsonData.cmc_applicationname;",
											"    console.log(\"Application name is: \" + applicationName);",
											"",
											"    pm.globals.set('gapplicationId91', applicationId);",
											"    pm.globals.set('gapplicationName91', applicationName);",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_applicationstatus\": 175490001,\r\n    \"cmc_contactid@odata.bind\": \"/contacts({{gcontactid91}})\",\r\n    \"cmc_applicationperiodid@odata.bind\": \"/cmc_applicationperiods({{gapplicationPeriodid91}})\",\r\n    \"cmc_applicationregistration@odata.bind\": \"/cmc_applicationregistrations({{gapplicationRegId91}})\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applications",
									"host": [
										"{{Eresource_URL}}cmc_applications"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "TestCase -1380861",
					"item": [
						{
							"name": "Create ApplicationType",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var applicationtypeid;",
											"",
											"pm.test(\"ApplicantType Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    applicationtypeid = jsonData.cmc_applicationtypeid;",
											"    var applicationTypeName = jsonData.cmc_applicationtypename;",
											"    console.log(\"Application Type name is: \" + applicationTypeName);",
											"",
											"});",
											"pm.globals.set('gapplicationtypeid61', applicationtypeid);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_applicationtypename\": \"UIAuto-ApplicationType-1380861\",\r\n    \"cmc_applicationgroup\": \"175490001\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applicationtypes",
									"host": [
										"{{Eresource_URL}}cmc_applicationtypes"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create AcademicPeriod",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var academicPeriodid;",
											"",
											"pm.test(\"Academic Period Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    academicPeriodid = jsonData.mshied_academicperiodid;",
											"    var academicPeriodName = jsonData.mshied_name;",
											"    console.log(\"Academic Period Name is: \" + academicPeriodName);",
											"",
											"});",
											"pm.globals.set('gacademicPeriodid61', academicPeriodid);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var moment = require('moment');\r",
											"pm.environment.set(\"timestamp\", moment().add(1, 'days').format(\"YYYY-MM-DD\"));\r",
											"pm.environment.set(\"timestampEndDate\", moment().add(100, 'days').format(\"YYYY-MM-DD\"));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"mshied_enddate\": \"{{timestampEndDate}}\",\r\n    \"mshied_startdate\": \"{{timestamp}}\",\r\n    \"mshied_code\": \"UI-1380861\",\r\n    \"mshied_name\": \"UIAuto-AcademicPer-1380861\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}mshied_academicperiods",
									"host": [
										"{{Eresource_URL}}mshied_academicperiods"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create ApplicationPeriod",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var applicationPeriodid;",
											"",
											"pm.test(\"ApplicantPeriod Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    applicationPeriodid = jsonData.cmc_applicationperiodid;",
											"    var applicationPeriodName = jsonData.cmc_applicationperiodname;",
											"",
											"    console.log(\"Application Period Name is: \" + applicationPeriodName);",
											"",
											"});",
											"",
											"pm.globals.set('gapplicationPeriodid61', applicationPeriodid);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_AcademicPeriodId@odata.bind\": \"/mshied_academicperiods({{gacademicPeriodid61}})\",\r\n    \"cmc_applicationperiodname\": \"UIAuto-ApplicationPeriod-1380861\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applicationperiods",
									"host": [
										"{{Eresource_URL}}cmc_applicationperiods"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Decision Definition",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var applicationDecDefid;",
											"",
											"pm.test(\"Application Decision Definition Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    applicationDecDefid = jsonData.cmc_applicationdecisiondefinitionid;",
											"    var applicationDecDefName = jsonData.cmc_applicationdecisiondefinitionname;",
											"    console.log(\"Decision Definition record name is: \" + applicationDecDefName);",
											"",
											"});",
											"",
											"pm.globals.set('gapplicationDecDefid61', applicationDecDefid);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var current_timestamp = new Date();\r",
											"postman.setEnvironmentVariable(\"current_timestamp\", current_timestamp.toISOString());"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_applicationdecisiondefinitionname\": \"UIAuto-ApplicationDecDef-1380861\",\r\n    \"cmc_decisionpublishdate\": \"{{current_timestamp}}\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applicationdecisiondefinitions",
									"host": [
										"{{Eresource_URL}}cmc_applicationdecisiondefinitions"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Decision Definition Detail_Admit",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var applicationDecDefDetailid;",
											"",
											"pm.test(\"Application Decision Definition Detail Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    applicationDecDefDetailid = jsonData.cmc_applicationdecisiondefinitiondetailid;",
											"    var applicationDecDefDetailName = jsonData.cmc_applicationdecisiondefinitiondetailname;",
											"",
											"    console.log(\"Decision Definition Detail record name is: \" + applicationDecDefDetailName);",
											"",
											"});",
											"",
											"pm.globals.set('gapplicationDecDefDetailid61a', applicationDecDefDetailid);",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_decisionstatus\": 175490000,\r\n    \"cmc_applicationdecisiondefinitiondetailname\": \"UIAuto-ApplicationDecDefDetail-1380861-1\",\r\n    \"cmc_applicationdecisiondefinition@odata.bind\": \"/cmc_applicationdecisiondefinitions({{gapplicationDecDefid61}})\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applicationdecisiondefinitiondetails",
									"host": [
										"{{Eresource_URL}}cmc_applicationdecisiondefinitiondetails"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Decision Definition Detail_Reject",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var applicationDecDefDetailid;",
											"",
											"pm.test(\"Application Decision Definition Detail Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    applicationDecDefDetailid = jsonData.cmc_applicationdecisiondefinitiondetailid;",
											"    var applicationDecDefDetailName = jsonData.cmc_applicationdecisiondefinitiondetailname;",
											"",
											"    console.log(\"Decision Definition Detail record name is: \" + applicationDecDefDetailName);",
											"",
											"});",
											"",
											"pm.globals.set('gapplicationDecDefDetailid61b', applicationDecDefDetailid);",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_decisionstatus\": 175490001,\r\n    \"cmc_applicationdecisiondefinitiondetailname\": \"UIAuto-ApplicationDecDefDetail-1380861-2\",\r\n    \"cmc_applicationdecisiondefinition@odata.bind\": \"/cmc_applicationdecisiondefinitions({{gapplicationDecDefid61}})\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applicationdecisiondefinitiondetails",
									"host": [
										"{{Eresource_URL}}cmc_applicationdecisiondefinitiondetails"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Application Definition",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var applicationdefinitionid;",
											"",
											"pm.test(\"Application Requirment Definition Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    applicationdefinitionid = jsonData.cmc_applicationdefinitionid;",
											"    var applicationDefinitionName= jsonData.cmc_applicationdefinitionname;",
											"",
											"    console.log(\"Application Definition name is: \"+applicationDefinitionName);",
											"",
											"});",
											"",
											"pm.globals.set('gappdefid61', applicationdefinitionid);",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_applicationdefinitionname\": \"UIAuto-ApplicationDefinition-1380861\",\r\n    \"cmc_decisiondefinitionid@odata.bind\": \"/cmc_applicationdecisiondefinitions({{gapplicationDecDefid61}})\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applicationdefinitions",
									"host": [
										"{{Eresource_URL}}cmc_applicationdefinitions"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Application Definition Version",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var applicationdefinitionverid, applicationdefinitionvername;",
											"",
											"pm.test(\"Application Requirment Definition Version Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    applicationdefinitionverid = jsonData.cmc_applicationdefinitionversionid;",
											"    applicationdefinitionvername = jsonData.cmc_applicationdefinitionversionname;",
											"    console.log(\"Application Definition version name is: \" + applicationdefinitionvername);",
											"});",
											"",
											"pm.globals.set('gappdefverid61', applicationdefinitionverid);",
											"pm.globals.set('gapplicationdefinitionvername61', applicationdefinitionvername);",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_applicationdefinitionversionname\": \"UIAuto-ADV-1380861\",\r\n    \"cmc_applicationtype@odata.bind\": \"/cmc_applicationtypes({{gapplicationtypeid61}})\",\r\n    \"cmc_applicationdefinitionid@odata.bind\": \"/cmc_applicationdefinitions({{gappdefid61}})\",\r\n    \"cmc_createlifecycle\": false\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applicationdefinitionversions",
									"host": [
										"{{Eresource_URL}}cmc_applicationdefinitionversions"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get SourceCategory",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var sourceCategoryid;",
											"",
											"pm.test(\"Source category record Fetched\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    sourceCategoryid = jsonData.value[0].cmc_sourcecategoryid;",
											"    var sourceCategoryName = jsonData.value[0].cmc_sourcecategoryname;",
											"    console.log('SourceCategory Name is: ' + sourceCategoryName);",
											"",
											"});",
											"",
											"pm.globals.set('gsourceCategoryid61', sourceCategoryid);",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"url": {
									"raw": "{{Eresource_URL}}cmc_sourcecategories",
									"host": [
										"{{Eresource_URL}}cmc_sourcecategories"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get SourceMethod",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var sourceMethodid;",
											"",
											"pm.test(\"Source Method record Fetched\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    sourceMethodid = jsonData.value[0].cmc_sourcemethodid;",
											"    var sourceMethodName = jsonData.value[0].cmc_sourcemethodname;",
											"    console.log('SourceMethod Name is: ' + sourceMethodName);",
											"",
											"});",
											"",
											"pm.globals.set('gsourceMethodid61', sourceMethodid);",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"url": {
									"raw": "{{Eresource_URL}}cmc_sourcemethods",
									"host": [
										"{{Eresource_URL}}cmc_sourcemethods"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Contact",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Contact Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    var contactid = jsonData.contactid;",
											"    var contactName = jsonData.fullname;",
											"    console.log(\"Contact name is: \" + contactName);",
											"",
											"    pm.globals.set('gcontactid61', contactid);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"lastname\": \"Contact-1380861\",\r\n    \"firstname\": \"UIAuto\",\r\n    \"mshied_contacttype\": \"494280011\",\r\n    \"cmc_sourcecategoryid@odata.bind\": \"/cmc_sourcecategories({{gsourceCategoryid61}})\",\r\n    \"cmc_sourcemethodid@odata.bind\": \"/cmc_sourcemethods({{gsourceMethodid61}})\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}contacts",
									"host": [
										"{{Eresource_URL}}contacts"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Application Registration",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Application Registration Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    var applicationRegId = jsonData.cmc_applicationregistrationid;",
											"    var applicationRegName = jsonData.cmc_applicationregistration;",
											"    console.log(\"Application Registration name is: \" + applicationRegName);",
											"",
											"    pm.globals.set('gapplicationRegId61', applicationRegId);",
											"    pm.globals.set('gapplicationRegName61', applicationRegName);",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_contactid@odata.bind\": \"/contacts({{gcontactid61}})\",\r\n    \"cmc_applicationdefinitionversionid@odata.bind\": \"/cmc_applicationdefinitionversions({{gappdefverid61}})\",\r\n    \"cmc_applicationstatus\": 175490000,\r\n    \"cmc_applicationsubmitted\": false\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applicationregistrations",
									"host": [
										"{{Eresource_URL}}cmc_applicationregistrations"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Application",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Application Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    var applicationId = jsonData.cmc_applicationid;",
											"    var applicationName = jsonData.cmc_applicationname;",
											"    console.log(\"Application name is: \" + applicationName);",
											"",
											"    pm.globals.set('gapplicationId61', applicationId);",
											"    pm.globals.set('gapplicationName61', applicationName);",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_applicationstatus\": 175490001,\r\n    \"cmc_contactid@odata.bind\": \"/contacts({{gcontactid61}})\",\r\n    \"cmc_applicationperiodid@odata.bind\": \"/cmc_applicationperiods({{gapplicationPeriodid61}})\",\r\n    \"cmc_applicationregistration@odata.bind\": \"/cmc_applicationregistrations({{gapplicationRegId61}})\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applications",
									"host": [
										"{{Eresource_URL}}cmc_applications"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "TestCase -1380809",
					"item": [
						{
							"name": "Create ApplicationType",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var applicationtypeid;",
											"",
											"pm.test(\"ApplicantType Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    applicationtypeid = jsonData.cmc_applicationtypeid;",
											"    var applicationTypeName = jsonData.cmc_applicationtypename;",
											"    console.log(\"Application Type name is: \" + applicationTypeName);",
											"",
											"});",
											"pm.globals.set('gapplicationtypeid09', applicationtypeid);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_applicationtypename\": \"UIAuto-ApplicationType-1380809\",\r\n    \"cmc_applicationgroup\": \"175490001\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applicationtypes",
									"host": [
										"{{Eresource_URL}}cmc_applicationtypes"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create AcademicPeriod",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var academicPeriodid;",
											"",
											"pm.test(\"Academic Period Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    academicPeriodid = jsonData.mshied_academicperiodid;",
											"    var academicPeriodName = jsonData.mshied_name;",
											"    console.log(\"Academic Period Name is: \" + academicPeriodName);",
											"",
											"});",
											"pm.globals.set('gacademicPeriodid09', academicPeriodid);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var moment = require('moment');\r",
											"pm.environment.set(\"timestamp\", moment().add(1, 'days').format(\"YYYY-MM-DD\"));\r",
											"pm.environment.set(\"timestampEndDate\", moment().add(100, 'days').format(\"YYYY-MM-DD\"));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"mshied_enddate\": \"{{timestampEndDate}}\",\r\n    \"mshied_startdate\": \"{{timestamp}}\",\r\n    \"mshied_code\": \"UI-1380809\",\r\n    \"mshied_name\": \"UIAuto-AcademicPer-1380809\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}mshied_academicperiods",
									"host": [
										"{{Eresource_URL}}mshied_academicperiods"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create ApplicationPeriod",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var applicationPeriodid;",
											"",
											"pm.test(\"ApplicantPeriod Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    applicationPeriodid = jsonData.cmc_applicationperiodid;",
											"    var applicationPeriodName = jsonData.cmc_applicationperiodname;",
											"",
											"    console.log(\"Application Period Name is: \" + applicationPeriodName);",
											"",
											"});",
											"",
											"pm.globals.set('gapplicationPeriodid09', applicationPeriodid);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_AcademicPeriodId@odata.bind\": \"/mshied_academicperiods({{gacademicPeriodid09}})\",\r\n    \"cmc_applicationperiodname\": \"UIAuto-ApplicationPeriod-1380809\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applicationperiods",
									"host": [
										"{{Eresource_URL}}cmc_applicationperiods"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Decision Definition",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var applicationDecDefid;",
											"",
											"pm.test(\"Application Decision Definition Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    applicationDecDefid = jsonData.cmc_applicationdecisiondefinitionid;",
											"    var applicationDecDefName = jsonData.cmc_applicationdecisiondefinitionname;",
											"    console.log(\"Decision Definition record name is: \" + applicationDecDefName);",
											"",
											"});",
											"",
											"pm.globals.set('gapplicationDecDefid09', applicationDecDefid);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var current_timestamp = new Date();\r",
											"postman.setEnvironmentVariable(\"current_timestamp\", current_timestamp.toISOString());"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_applicationdecisiondefinitionname\": \"UIAuto-ApplicationDecDef-1380809\",\r\n    \"cmc_decisionpublishdate\": \"{{current_timestamp}}\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applicationdecisiondefinitions",
									"host": [
										"{{Eresource_URL}}cmc_applicationdecisiondefinitions"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Decision Definition Detail_Admit",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var applicationDecDefDetailid;",
											"",
											"pm.test(\"Application Decision Definition Detail Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    applicationDecDefDetailid = jsonData.cmc_applicationdecisiondefinitiondetailid;",
											"    var applicationDecDefDetailName = jsonData.cmc_applicationdecisiondefinitiondetailname;",
											"",
											"    console.log(\"Decision Definition Detail record name is: \" + applicationDecDefDetailName);",
											"",
											"});",
											"",
											"pm.globals.set('gapplicationDecDefDetailid09a', applicationDecDefDetailid);",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_decisionstatus\": 175490000,\r\n    \"cmc_applicationdecisiondefinitiondetailname\": \"UIAuto-ApplicationDecDefDetail-1380809-1\",\r\n    \"cmc_applicationdecisiondefinition@odata.bind\": \"/cmc_applicationdecisiondefinitions({{gapplicationDecDefid09}})\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applicationdecisiondefinitiondetails",
									"host": [
										"{{Eresource_URL}}cmc_applicationdecisiondefinitiondetails"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Decision Definition Detail_Reject",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var applicationDecDefDetailid;",
											"",
											"pm.test(\"Application Decision Definition Detail Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    applicationDecDefDetailid = jsonData.cmc_applicationdecisiondefinitiondetailid;",
											"    var applicationDecDefDetailName = jsonData.cmc_applicationdecisiondefinitiondetailname;",
											"",
											"    console.log(\"Decision Definition Detail record name is: \" + applicationDecDefDetailName);",
											"",
											"});",
											"",
											"pm.globals.set('gapplicationDecDefDetailid09b', applicationDecDefDetailid);",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_decisionstatus\": 175490001,\r\n    \"cmc_applicationdecisiondefinitiondetailname\": \"UIAuto-ApplicationDecDefDetail-1380809-2\",\r\n    \"cmc_applicationdecisiondefinition@odata.bind\": \"/cmc_applicationdecisiondefinitions({{gapplicationDecDefid09}})\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applicationdecisiondefinitiondetails",
									"host": [
										"{{Eresource_URL}}cmc_applicationdecisiondefinitiondetails"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Application Definition",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var applicationdefinitionid;",
											"",
											"pm.test(\"Application Requirment Definition Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    applicationdefinitionid = jsonData.cmc_applicationdefinitionid;",
											"    var applicationDefinitionName= jsonData.cmc_applicationdefinitionname;",
											"",
											"    console.log(\"Application Definition name is: \"+applicationDefinitionName);",
											"",
											"});",
											"",
											"pm.globals.set('gappdefid09', applicationdefinitionid);",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_applicationdefinitionname\": \"UIAuto-ApplicationDefinition-1380809\",\r\n    \"cmc_decisiondefinitionid@odata.bind\": \"/cmc_applicationdecisiondefinitions({{gapplicationDecDefid09}})\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applicationdefinitions",
									"host": [
										"{{Eresource_URL}}cmc_applicationdefinitions"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Application Definition Version",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var applicationdefinitionverid, applicationdefinitionvername;",
											"",
											"pm.test(\"Application Requirment Definition Version Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    applicationdefinitionverid = jsonData.cmc_applicationdefinitionversionid;",
											"    applicationdefinitionvername = jsonData.cmc_applicationdefinitionversionname;",
											"    console.log(\"Application Definition version name is: \" + applicationdefinitionvername);",
											"});",
											"",
											"pm.globals.set('gappdefverid09', applicationdefinitionverid);",
											"pm.globals.set('gapplicationdefinitionvername09', applicationdefinitionvername);",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_applicationdefinitionversionname\": \"UIAuto-ADV-1380809\",\r\n    \"cmc_applicationtype@odata.bind\": \"/cmc_applicationtypes({{gapplicationtypeid09}})\",\r\n    \"cmc_applicationdefinitionid@odata.bind\": \"/cmc_applicationdefinitions({{gappdefid09}})\",\r\n    \"cmc_createlifecycle\": false\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applicationdefinitionversions",
									"host": [
										"{{Eresource_URL}}cmc_applicationdefinitionversions"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get SourceCategory",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var sourceCategoryid;",
											"",
											"pm.test(\"Source category record Fetched\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    sourceCategoryid = jsonData.value[0].cmc_sourcecategoryid;",
											"    var sourceCategoryName = jsonData.value[0].cmc_sourcecategoryname;",
											"    console.log('SourceCategory Name is: ' + sourceCategoryName);",
											"",
											"});",
											"",
											"pm.globals.set('gsourceCategoryid09', sourceCategoryid);",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"url": {
									"raw": "{{Eresource_URL}}cmc_sourcecategories",
									"host": [
										"{{Eresource_URL}}cmc_sourcecategories"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get SourceMethod",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var sourceMethodid;",
											"",
											"pm.test(\"Source Method record Fetched\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    sourceMethodid = jsonData.value[0].cmc_sourcemethodid;",
											"    var sourceMethodName = jsonData.value[0].cmc_sourcemethodname;",
											"    console.log('SourceMethod Name is: ' + sourceMethodName);",
											"",
											"});",
											"",
											"pm.globals.set('gsourceMethodid09', sourceMethodid);",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"url": {
									"raw": "{{Eresource_URL}}cmc_sourcemethods",
									"host": [
										"{{Eresource_URL}}cmc_sourcemethods"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Contact",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Contact Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    var contactid = jsonData.contactid;",
											"    var contactName = jsonData.fullname;",
											"    console.log(\"Contact name is: \" + contactName);",
											"",
											"    pm.globals.set('gcontactid09', contactid);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"lastname\": \"Contact-1380809\",\r\n    \"firstname\": \"UIAuto\",\r\n    \"mshied_contacttype\": \"494280011\",\r\n    \"cmc_sourcecategoryid@odata.bind\": \"/cmc_sourcecategories({{gsourceCategoryid09}})\",\r\n    \"cmc_sourcemethodid@odata.bind\": \"/cmc_sourcemethods({{gsourceMethodid09}})\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}contacts",
									"host": [
										"{{Eresource_URL}}contacts"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Application Registration",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Application Registration Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    var applicationRegId = jsonData.cmc_applicationregistrationid;",
											"    var applicationRegName = jsonData.cmc_applicationregistration;",
											"    console.log(\"Application Registration name is: \" + applicationRegName);",
											"",
											"    pm.globals.set('gapplicationRegId09', applicationRegId);",
											"    pm.globals.set('gapplicationRegName09', applicationRegName);",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_contactid@odata.bind\": \"/contacts({{gcontactid09}})\",\r\n    \"cmc_applicationdefinitionversionid@odata.bind\": \"/cmc_applicationdefinitionversions({{gappdefverid09}})\",\r\n    \"cmc_applicationstatus\": 175490000,\r\n    \"cmc_applicationsubmitted\": false\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applicationregistrations",
									"host": [
										"{{Eresource_URL}}cmc_applicationregistrations"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Application",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Application Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    var applicationId = jsonData.cmc_applicationid;",
											"    var applicationName = jsonData.cmc_applicationname;",
											"    console.log(\"Application name is: \" + applicationName);",
											"",
											"    pm.globals.set('gapplicationId09', applicationId);",
											"    pm.globals.set('gapplicationName09', applicationName);",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_applicationstatus\": 175490001,\r\n    \"cmc_contactid@odata.bind\": \"/contacts({{gcontactid09}})\",\r\n    \"cmc_applicationperiodid@odata.bind\": \"/cmc_applicationperiods({{gapplicationPeriodid09}})\",\r\n    \"cmc_applicationregistration@odata.bind\": \"/cmc_applicationregistrations({{gapplicationRegId09}})\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applications",
									"host": [
										"{{Eresource_URL}}cmc_applications"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "CampusInsightFeature",
			"item": [
				{
					"name": "TestCase -750897",
					"item": [
						{
							"name": "Get SourceCategory",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var sourceCategoryid;",
											"",
											"pm.test(\"Source category record Fetched\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    sourceCategoryid = jsonData.value[0].cmc_sourcecategoryid;",
											"    var sourceCategoryName = jsonData.value[0].cmc_sourcecategoryname;",
											"    console.log('SourceCategory Name is: ' + sourceCategoryName);",
											"",
											"});",
											"",
											"pm.globals.set('gsourceCategoryid12', sourceCategoryid);",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"url": {
									"raw": "{{Eresource_URL}}cmc_sourcecategories",
									"host": [
										"{{Eresource_URL}}cmc_sourcecategories"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get SourceMethod",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var sourceMethodid;",
											"",
											"pm.test(\"Source Method record Fetched\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    sourceMethodid = jsonData.value[0].cmc_sourcemethodid;",
											"    var sourceMethodName = jsonData.value[0].cmc_sourcemethodname;",
											"    console.log('SourceMethod Name is: ' + sourceMethodName);",
											"",
											"});",
											"",
											"pm.globals.set('gsourceMethodid12', sourceMethodid);",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"url": {
									"raw": "{{Eresource_URL}}cmc_sourcemethods",
									"host": [
										"{{Eresource_URL}}cmc_sourcemethods"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Contact record",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Contact Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    var contactid = jsonData.contactid;",
											"    var contactName = jsonData.fullname;",
											"    console.log(\"Contact name is: \" + contactName);",
											"",
											"    pm.globals.set('gcontactid12', contactid);",
											"});",
											"",
											"",
											"",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"lastname\": \"Contact-750897\",\r\n\t\"firstname\": \"UIAuto\",\r\n\t\"mshied_contacttype\": \"494280011\",\r\n\t\"cmc_sourcecategoryid@odata.bind\": \"/cmc_sourcecategories({{gsourceCategoryid12}})\",\r\n\t\"cmc_sourcemethodid@odata.bind\": \"/cmc_sourcemethods({{gsourceMethodid12}})\"\r\n\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}contacts",
									"host": [
										"{{Eresource_URL}}contacts"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "ValidateContactPluginsFeature",
			"item": [
				{
					"name": "TestCase -724258",
					"item": [
						{
							"name": "Get SourceCategory",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var sourceCategoryid;",
											"",
											"pm.test(\"Source category record Fetched\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    sourceCategoryid = jsonData.value[0].cmc_sourcecategoryid;",
											"    var sourceCategoryName = jsonData.value[0].cmc_sourcecategoryname;",
											"    console.log('SourceCategory Name is: ' + sourceCategoryName);",
											"",
											"});",
											"",
											"pm.globals.set('gsourceCategoryid14', sourceCategoryid);",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"url": {
									"raw": "{{Eresource_URL}}cmc_sourcecategories",
									"host": [
										"{{Eresource_URL}}cmc_sourcecategories"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get SourceMethod",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var sourceMethodid;",
											"",
											"pm.test(\"Source Method record Fetched\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    sourceMethodid = jsonData.value[0].cmc_sourcemethodid;",
											"    var sourceMethodName = jsonData.value[0].cmc_sourcemethodname;",
											"    console.log('SourceMethod Name is: ' + sourceMethodName);",
											"",
											"});",
											"",
											"pm.globals.set('gsourceMethodid14', sourceMethodid);",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"url": {
									"raw": "{{Eresource_URL}}cmc_sourcemethods",
									"host": [
										"{{Eresource_URL}}cmc_sourcemethods"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Contact record",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Contact Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    var contactid = jsonData.contactid;",
											"    var contactName = jsonData.fullname;",
											"    console.log(\"Contact name is: \" + contactName);",
											"",
											"    pm.globals.set('gcontactid14', contactid);",
											"});",
											"",
											"",
											"",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"lastname\": \"Contact-724258\",\r\n\t\"firstname\": \"UIAuto\",\r\n\t\"mshied_contacttype\": \"494280011\",\r\n\t\"cmc_sourcecategoryid@odata.bind\": \"/cmc_sourcecategories({{gsourceCategoryid14}})\",\r\n\t\"cmc_sourcemethodid@odata.bind\": \"/cmc_sourcemethods({{gsourceMethodid14}})\"\r\n\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}contacts",
									"host": [
										"{{Eresource_URL}}contacts"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "VerifyMostRecentPreviousEducationFeature",
			"item": [
				{
					"name": "TestCase -1024950",
					"item": [
						{
							"name": "Contact Record",
							"item": [
								{
									"name": "Get SourceCategory",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var sourceCategoryid;",
													"",
													"pm.test(\"Source category record Fetched\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
													"    var jsonData = JSON.parse(responseBody);",
													"    sourceCategoryid = jsonData.value[0].cmc_sourcecategoryid;",
													"    var sourceCategoryName = jsonData.value[0].cmc_sourcecategoryname;",
													"    console.log('SourceCategory Name is: ' + sourceCategoryName);",
													"",
													"});",
													"",
													"pm.globals.set('gsourceCategoryid15', sourceCategoryid);",
													"",
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											}
										],
										"url": {
											"raw": "{{Eresource_URL}}cmc_sourcecategories",
											"host": [
												"{{Eresource_URL}}cmc_sourcecategories"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get SourceMethod",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var sourceMethodid;",
													"",
													"pm.test(\"Source Method record Fetched\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
													"    var jsonData = JSON.parse(responseBody);",
													"    sourceMethodid = jsonData.value[0].cmc_sourcemethodid;",
													"    var sourceMethodName = jsonData.value[0].cmc_sourcemethodname;",
													"    console.log('SourceMethod Name is: ' + sourceMethodName);",
													"",
													"});",
													"",
													"pm.globals.set('gsourceMethodid15', sourceMethodid);",
													"",
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											}
										],
										"url": {
											"raw": "{{Eresource_URL}}cmc_sourcemethods",
											"host": [
												"{{Eresource_URL}}cmc_sourcemethods"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Contact record",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Contact Created\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
													"    var jsonData = JSON.parse(responseBody);",
													"    var contactid = jsonData.contactid;",
													"    var contactName = jsonData.fullname;",
													"    console.log(\"Contact name is: \" + contactName);",
													"",
													"    pm.globals.set('gcontactid15', contactid);",
													"});",
													"",
													"",
													"",
													"",
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"lastname\": \"Contact-1024950\",\r\n\t\"firstname\": \"UIAuto\",\r\n\t\"mshied_contacttype\": \"494280011\",\r\n\t\"cmc_sourcecategoryid@odata.bind\": \"/cmc_sourcecategories({{gsourceCategoryid15}})\",\r\n\t\"cmc_sourcemethodid@odata.bind\": \"/cmc_sourcemethods({{gsourceMethodid15}})\"\r\n\r\n}"
										},
										"url": {
											"raw": "{{Eresource_URL}}contacts",
											"host": [
												"{{Eresource_URL}}contacts"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "10 Education Level Records",
							"item": [
								{
									"name": "Create EducationLevel record 1",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var educationLevelid;",
													"",
													"pm.test(\"Education level record 1 created\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
													"    var jsonData = JSON.parse(responseBody);",
													"    educationLevelid = jsonData.mshied_educationlevelid;",
													"    var educationLevelName = jsonData.mshied_name;",
													"    console.log('Education Level 1 Name is: ' +educationLevelName);",
													"",
													"});",
													"",
													"pm.globals.set('geducationLevelid15a', educationLevelid);",
													"",
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"mshied_code\": \"code-1024950-1\",\n\t\"mshied_name\": \"UIAuto-EduLevel-1024950-1\"\n}"
										},
										"url": {
											"raw": "{{Eresource_URL}}mshied_educationlevels",
											"host": [
												"{{Eresource_URL}}mshied_educationlevels"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create EducationLevel record 2",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var educationLevelid;",
													"",
													"pm.test(\"Education level record 2 created\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
													"    var jsonData = JSON.parse(responseBody);",
													"    educationLevelid = jsonData.mshied_educationlevelid;",
													"    var educationLevelName = jsonData.mshied_name;",
													"    console.log('Education Level 2 Name is: ' + educationLevelName);",
													"",
													"});",
													"",
													"pm.globals.set('geducationLevelid15b', educationLevelid);",
													"",
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"mshied_code\": \"code-1024950-2\",\n\t\"mshied_name\": \"UIAuto-EduLevel-1024950-2\"\n}"
										},
										"url": {
											"raw": "{{Eresource_URL}}mshied_educationlevels",
											"host": [
												"{{Eresource_URL}}mshied_educationlevels"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create EducationLevel record 3",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var educationLevelid;",
													"",
													"pm.test(\"Education level record 3 created\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
													"    var jsonData = JSON.parse(responseBody);",
													"    educationLevelid = jsonData.mshied_educationlevelid;",
													"    var educationLevelName = jsonData.mshied_name;",
													"    console.log('Education Level 3 Name is: ' + educationLevelName);",
													"",
													"});",
													"",
													"pm.globals.set('geducationLevelid15c', educationLevelid);",
													"",
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"mshied_code\": \"code-1024950-3\",\n\t\"mshied_name\": \"UIAuto-EduLevel-1024950-3\"\n}"
										},
										"url": {
											"raw": "{{Eresource_URL}}mshied_educationlevels",
											"host": [
												"{{Eresource_URL}}mshied_educationlevels"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create EducationLevel record 4",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var educationLevelid;",
													"",
													"pm.test(\"Education level record 4 created\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
													"    var jsonData = JSON.parse(responseBody);",
													"    educationLevelid = jsonData.mshied_educationlevelid;",
													"    var educationLevelName = jsonData.mshied_name;",
													"    console.log('Education Level 4 Name is: ' + educationLevelName);",
													"",
													"});",
													"",
													"pm.globals.set('geducationLevelid15d', educationLevelid);",
													"",
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"mshied_code\": \"code-1024950-4\",\n\t\"mshied_name\": \"UIAuto-EduLevel-1024950-4\"\n}"
										},
										"url": {
											"raw": "{{Eresource_URL}}mshied_educationlevels",
											"host": [
												"{{Eresource_URL}}mshied_educationlevels"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create EducationLevel record 5",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var educationLevelid;",
													"",
													"pm.test(\"Education level record 5 created\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
													"    var jsonData = JSON.parse(responseBody);",
													"    educationLevelid = jsonData.mshied_educationlevelid;",
													"    var educationLevelName = jsonData.mshied_name;",
													"    console.log('Education Level 5 Name is: ' + educationLevelName);",
													"",
													"});",
													"",
													"pm.globals.set('geducationLevelid15e', educationLevelid);",
													"",
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"mshied_code\": \"code-1024950-5\",\n\t\"mshied_name\": \"UIAuto-EduLevel-1024950-5\"\n}"
										},
										"url": {
											"raw": "{{Eresource_URL}}mshied_educationlevels",
											"host": [
												"{{Eresource_URL}}mshied_educationlevels"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create EducationLevel record 6",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var educationLevelid;",
													"",
													"pm.test(\"Education level record 6 created\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
													"    var jsonData = JSON.parse(responseBody);",
													"    educationLevelid = jsonData.mshied_educationlevelid;",
													"    var educationLevelName = jsonData.mshied_name;",
													"    console.log('Education Level 6 Name is: ' + educationLevelName);",
													"",
													"});",
													"",
													"pm.globals.set('geducationLevelid15f', educationLevelid);",
													"",
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"mshied_code\": \"code-1024950-6\",\n\t\"mshied_name\": \"UIAuto-EduLevel-1024950-6\"\n}"
										},
										"url": {
											"raw": "{{Eresource_URL}}mshied_educationlevels",
											"host": [
												"{{Eresource_URL}}mshied_educationlevels"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create EducationLevel record 7",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var educationLevelid;",
													"",
													"pm.test(\"Education level record 7 created\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
													"    var jsonData = JSON.parse(responseBody);",
													"    educationLevelid = jsonData.mshied_educationlevelid;",
													"    var educationLevelName = jsonData.mshied_name;",
													"    console.log('Education Level 7 Name is: ' + educationLevelName);",
													"",
													"});",
													"",
													"pm.globals.set('geducationLevelid15g', educationLevelid);",
													"",
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"mshied_code\": \"code-1024950-7\",\n\t\"mshied_name\": \"UIAuto-EduLevel-1024950-7\"\n}"
										},
										"url": {
											"raw": "{{Eresource_URL}}mshied_educationlevels",
											"host": [
												"{{Eresource_URL}}mshied_educationlevels"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create EducationLevel record 8",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var educationLevelid;",
													"",
													"pm.test(\"Education level record 8 created\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
													"    var jsonData = JSON.parse(responseBody);",
													"    educationLevelid = jsonData.mshied_educationlevelid;",
													"    var educationLevelName = jsonData.mshied_name;",
													"    console.log('Education Level 8 Name is: ' + educationLevelName);",
													"",
													"});",
													"",
													"pm.globals.set('geducationLevelid15h', educationLevelid);",
													"",
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"mshied_code\": \"code-1024950-8\",\n\t\"mshied_name\": \"UIAuto-EduLevel-1024950-8\"\n}"
										},
										"url": {
											"raw": "{{Eresource_URL}}mshied_educationlevels",
											"host": [
												"{{Eresource_URL}}mshied_educationlevels"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create EducationLevel record 9",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var educationLevelid;",
													"",
													"pm.test(\"Education level record 9 created\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
													"    var jsonData = JSON.parse(responseBody);",
													"    educationLevelid = jsonData.mshied_educationlevelid;",
													"    var educationLevelName = jsonData.mshied_name;",
													"    console.log('Education Level 9 Name is: ' + educationLevelName);",
													"",
													"});",
													"",
													"pm.globals.set('geducationLevelid15i', educationLevelid);",
													"",
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"mshied_code\": \"code-1024950-9\",\n\t\"mshied_name\": \"UIAuto-EduLevel-1024950-9\"\n}"
										},
										"url": {
											"raw": "{{Eresource_URL}}mshied_educationlevels",
											"host": [
												"{{Eresource_URL}}mshied_educationlevels"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create EducationLevel record 10",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var educationLevelid;",
													"",
													"pm.test(\"Education level record 10 created\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
													"    var jsonData = JSON.parse(responseBody);",
													"    educationLevelid = jsonData.mshied_educationlevelid;",
													"    var educationLevelName = jsonData.mshied_name;",
													"    console.log('Education Level 10 Name is: ' + educationLevelName);",
													"",
													"});",
													"",
													"pm.globals.set('geducationLevelid15j', educationLevelid);",
													"",
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"mshied_code\": \"code-1024950-10\",\n\t\"mshied_name\": \"UIAuto-EduLevel-1024950-10\"\n}"
										},
										"url": {
											"raw": "{{Eresource_URL}}mshied_educationlevels",
											"host": [
												"{{Eresource_URL}}mshied_educationlevels"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Account",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Account Created\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
													"    var jsonData = JSON.parse(responseBody);",
													"    var accountid = jsonData.accountid;",
													"    var accountName = jsonData.name;",
													"    console.log(\"Account name is: \" + accountName);",
													"",
													"    pm.globals.set('gaccountid15', accountid);",
													"});",
													"",
													"",
													"",
													"",
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"name\": \"Account-1024950\",\r\n\t\"mshied_accounttype\": 494280000\r\n\r\n}"
										},
										"url": {
											"raw": "{{Eresource_URL}}accounts",
											"host": [
												"{{Eresource_URL}}accounts"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "ContactFeature",
			"item": [
				{
					"name": "TestCase -844969",
					"item": [
						{
							"name": "Get SourceCategory",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var sourceCategoryid;",
											"",
											"pm.test(\"Source category record Fetched\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    sourceCategoryid = jsonData.value[0].cmc_sourcecategoryid;",
											"    var sourceCategoryName = jsonData.value[0].cmc_sourcecategoryname;",
											"    console.log('SourceCategory Name is: ' + sourceCategoryName);",
											"",
											"});",
											"",
											"pm.globals.set('gsourceCategoryid17', sourceCategoryid);",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"url": {
									"raw": "{{Eresource_URL}}cmc_sourcecategories",
									"host": [
										"{{Eresource_URL}}cmc_sourcecategories"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get SourceMethod",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var sourceMethodid;",
											"",
											"pm.test(\"Source Method record Fetched\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    sourceMethodid = jsonData.value[0].cmc_sourcemethodid;",
											"    var sourceMethodName = jsonData.value[0].cmc_sourcemethodname;",
											"    console.log('SourceMethod Name is: ' + sourceMethodName);",
											"",
											"});",
											"",
											"pm.globals.set('gsourceMethodid17', sourceMethodid);",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"url": {
									"raw": "{{Eresource_URL}}cmc_sourcemethods",
									"host": [
										"{{Eresource_URL}}cmc_sourcemethods"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Contact record",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Contact Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    var contactid = jsonData.contactid;",
											"    var contactName = jsonData.fullname;",
											"    console.log(\"Contact name is: \" + contactName);",
											"",
											"    pm.globals.set('gcontactid17', contactid);",
											"});",
											"",
											"",
											"",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"lastname\": \"Contact-844969\",\r\n\t\"firstname\": \"UIAuto\",\r\n\t\"mshied_contacttype\": \"494280011\",\r\n\t\"cmc_sourcecategoryid@odata.bind\": \"/cmc_sourcecategories({{gsourceCategoryid17}})\",\r\n\t\"cmc_sourcemethodid@odata.bind\": \"/cmc_sourcemethods({{gsourceMethodid17}})\"\r\n\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}contacts",
									"host": [
										"{{Eresource_URL}}contacts"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "TestCase -887114",
					"item": [
						{
							"name": "Create Account",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Account Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    var accountid = jsonData.accountid;",
											"    var accountName = jsonData.name;",
											"    console.log(\"Account name is: \" + accountName);",
											"",
											"    pm.globals.set('gaccountid17', accountid);",
											"});",
											"",
											"",
											"",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"name\": \"Account-887114\",\r\n\t\"mshied_accounttype\": 494280000\r\n\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}accounts",
									"host": [
										"{{Eresource_URL}}accounts"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "CommonFeature",
			"item": [
				{
					"name": "TestCase -949989",
					"item": [
						{
							"name": "Get SourceCategory",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var sourceCategoryid;",
											"",
											"pm.test(\"Source category record Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    sourceCategoryid = jsonData.value[0].cmc_sourcecategoryid;",
											"    var sourceCategoryName = jsonData.value[0].cmc_sourcecategoryname;",
											"    console.log('SourceCategory Name is: ' + sourceCategoryName);",
											"",
											"});",
											"",
											"pm.globals.set('gsourceCategoryid19', sourceCategoryid);",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"url": {
									"raw": "{{Eresource_URL}}cmc_sourcecategories",
									"host": [
										"{{Eresource_URL}}cmc_sourcecategories"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get SourceMethod",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var sourceMethodid;",
											"",
											"pm.test(\"Source Method record Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    sourceMethodid = jsonData.value[0].cmc_sourcemethodid;",
											"    var sourceMethodName = jsonData.value[0].cmc_sourcemethodname;",
											"    console.log('SourceMethod Name is: ' + sourceMethodName);",
											"",
											"});",
											"",
											"pm.globals.set('gsourceMethodid19', sourceMethodid);",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"url": {
									"raw": "{{Eresource_URL}}cmc_sourcemethods",
									"host": [
										"{{Eresource_URL}}cmc_sourcemethods"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Contact record",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Contact Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    var contactid = jsonData.contactid;",
											"    var contactName = jsonData.fullname;",
											"    console.log(\"Contact name is: \" + contactName);",
											"",
											"    pm.globals.set('gcontactid19', contactid);",
											"});",
											"",
											"",
											"",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"lastname\": \"Contact-949989\",\r\n\t\"firstname\": \"UIAuto\",\r\n\t\"mshied_contacttype\": \"494280011\",\r\n\t\"cmc_sourcecategoryid@odata.bind\": \"/cmc_sourcecategories({{gsourceCategoryid19}})\",\r\n\t\"cmc_sourcemethodid@odata.bind\": \"/cmc_sourcemethods({{gsourceMethodid19}})\"\r\n\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}contacts",
									"host": [
										"{{Eresource_URL}}contacts"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Account",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Account Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    var accountid = jsonData.accountid;",
											"    var accountName = jsonData.name;",
											"    console.log(\"Account name is: \" + accountName);",
											"",
											"    pm.globals.set('gaccountid19', accountid);",
											"});",
											"",
											"",
											"",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"name\": \"Account-949989\",\r\n\t\"mshied_accounttype\": 494280000\r\n\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}accounts",
									"host": [
										"{{Eresource_URL}}accounts"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Lifecycle record",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var lifecycleid;",
											"var contactid;",
											"var accountid;",
											"var lifecyclename;",
											"",
											"",
											"pm.test(\"LifeCycle Created\", function () {",
											"  pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
											"  var jsonData = JSON.parse(responseBody);",
											"  lifecycleid = jsonData.opportunityid;",
											"  contactid = jsonData._cmc_campusid_value;",
											"  accountid = jsonData._cmc_contactid_value;",
											"  lifecyclename = jsonData.name;",
											"",
											"  console.log('LifeCyleName:' + lifecyclename);",
											"",
											"});",
											"",
											"pm.globals.set('glifecycleid19', lifecycleid);",
											"pm.globals.set('glifecyclename19', lifecyclename);",
											"",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "\r\n{\r\n\"cmc_lifecycletype\":\"175490001\",\r\n\"cmc_campusid@odata.bind\":\"/accounts({{gaccountid19}})\",\r\n\"cmc_contactid@odata.bind\":\"/contacts({{gcontactid19}})\",\r\n\"cmc_sourcecategoryid@odata.bind\":\"/opportunities({{gsourceCategoryid19}})\",\r\n\"cmc_sourcemethodid@odata.bind\":\"/opportunities({{gsourceMethodid19}})\"\r\n\r\n \r\n}\r\n\r\n\r\n\r\n"
								},
								"url": {
									"raw": "{{Eresource}}api/data/{{Eversion}}/opportunities",
									"host": [
										"{{Eresource}}api"
									],
									"path": [
										"data",
										"{{Eversion}}",
										"opportunities"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Enrollment record",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Enrollment record Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    var enrollmentid = jsonData.cmc_enrollmentid;",
											"    var enrollmentName = jsonData.cmc_name;",
											"    console.log(\"Enrollment name is: \" + enrollmentName);",
											"",
											"    pm.globals.set('genrollmentid19', enrollmentid);",
											"});",
											"",
											"",
											"",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"cmc_opportunityid@odata.bind\": \"/opportunities({{glifecycleid19}})\",\r\n\t\"cmc_contactid@odata.bind\": \"/contacts({{gcontactid19}})\",\r\n\t\"cmc_name\": \"UIAuto-Enrollment-949989\"\r\n\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_enrollments",
									"host": [
										"{{Eresource_URL}}cmc_enrollments"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "TestCase -967176",
					"item": [
						{
							"name": "GetToken",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = JSON.parse(responseBody);",
											"postman.setGlobalVariable('gaccess_token', data.access_token);",
											"",
											"//pm.environment.set(\"Eaccess_token\", data.access_token);",
											"console.log(pm.globals.get(\"gaccess_token\"));",
											"",
											"",
											"",
											"",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "grant_type",
											"value": "client_credentials",
											"type": "text"
										},
										{
											"key": "client_id",
											"value": "{{Esystemadmin_id}}",
											"type": "text"
										},
										{
											"key": "client_secret",
											"value": "{{Esystemadmin_secret}}",
											"type": "text"
										},
										{
											"key": "resource",
											"value": "{{Eresource}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "https://login.microsoftonline.com/{{Eredirectid}}/oauth2/token",
									"protocol": "https",
									"host": [
										"login",
										"microsoftonline",
										"com"
									],
									"path": [
										"{{Eredirectid}}",
										"oauth2",
										"token"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create AcademicPeriod",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var academicPeriodid;",
											"",
											"pm.test(\"Academic Period Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    academicPeriodid = jsonData.mshied_academicperiodid;",
											"    var academicPeriodName = jsonData.mshied_name;",
											"",
											"    console.log(\"Academic Period Name is: \" + academicPeriodName);",
											"",
											"});",
											"",
											"pm.globals.set('gacademicPeriodid19', academicPeriodid);",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"mshied_enddate\": \"2022-05-30T18:30:00.000Z\",\r\n\"mshied_startdate\": \"2020-05-13T18:30:00.000Z\",\r\n\"mshied_code\": \"UI-967176\",\r\n\"mshied_name\": \"UIAuto-AcademicPer-967176\"\r\n\r\n}\r\n\r\n"
								},
								"url": {
									"raw": "{{Eresource_URL}}mshied_academicperiods",
									"host": [
										"{{Eresource_URL}}mshied_academicperiods"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Course",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var courseid;",
											"",
											"pm.test(\"Course Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    courseid = jsonData.mshied_courseid;",
											"    var courseName = jsonData.mshied_name;",
											"    console.log(\"Course Name is: \" + courseName);",
											"",
											"});",
											"",
											"pm.globals.set('gcourseid19', courseid);",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"mshied_coursenumber\": \"UIAuto-967176\",\r\n\t\"mshied_name\": \"UIAuto-Course-967176\"\r\n\r\n}\r\n\r\n"
								},
								"url": {
									"raw": "{{Eresource_URL}}mshied_courses",
									"host": [
										"{{Eresource_URL}}mshied_courses"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Course Section",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var courseid;",
											"",
											"pm.test(\"Course Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    courseid = jsonData.mshied_courseid;",
											"    var courseName = jsonData.mshied_name;",
											"    console.log(\"Course Name is: \" + courseName);",
											"",
											"});",
											"",
											"pm.globals.set('gcourseid19', courseid);",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"mshied_AcademicPeriodId@odata.bind\": \"/mshied_academicperiods({{gacademicPeriodid19}})\",\r\n    \"mshied_CourseId@odata.bind\": \"/mshied_courses({{gcourseid19}})\",\r\n    \"mshied_name\": \"UIAuto-Course-967176\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}mshied_coursesections",
									"host": [
										"{{Eresource_URL}}mshied_coursesections"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Contact record",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Contact Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    var contactid = jsonData.contactid;",
											"    var contactName = jsonData.fullname;",
											"    console.log(\"Contact name is: \" + contactName);",
											"",
											"    pm.globals.set('gcontactid19', contactid);",
											"});",
											"",
											"",
											"",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"lastname\": \"Contact-967176\",\r\n\t\"firstname\": \"UIAuto\",\r\n\t\"mshied_contacttype\": \"494280003\"\r\n\t\r\n\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}contacts",
									"host": [
										"{{Eresource_URL}}contacts"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "TestCase -974824",
					"item": [
						{
							"name": "Create Account",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Account Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    var accountid = jsonData.accountid;",
											"    var accountName = jsonData.name;",
											"    console.log(\"Account name is: \" + accountName);",
											"",
											"    pm.globals.set('gaccountid19a', accountid);",
											"});",
											"",
											"",
											"",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"name\": \"Account-974824\",\r\n\t\"mshied_accounttype\": 494280000\r\n\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}accounts",
									"host": [
										"{{Eresource_URL}}accounts"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Merge DupContactFeature",
			"item": [
				{
					"name": "TestCase -1046961",
					"item": [
						{
							"name": "Contact 1",
							"item": [
								{
									"name": "Get SourceCategory",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var sourceCategoryid;",
													"",
													"pm.test(\"Source category record Fetched\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
													"    var jsonData = JSON.parse(responseBody);",
													"    sourceCategoryid = jsonData.value[0].cmc_sourcecategoryid;",
													"    var sourceCategoryName = jsonData.value[0].cmc_sourcecategoryname;",
													"    console.log('SourceCategory Name is: ' + sourceCategoryName);",
													"",
													"});",
													"",
													"pm.globals.set('gsourceCategoryid20a', sourceCategoryid);",
													"",
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											}
										],
										"url": {
											"raw": "{{Eresource_URL}}cmc_sourcecategories",
											"host": [
												"{{Eresource_URL}}cmc_sourcecategories"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get SourceMethod",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var sourceMethodid;",
													"",
													"pm.test(\"Source Method record Fetched\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
													"    var jsonData = JSON.parse(responseBody);",
													"    sourceMethodid = jsonData.value[0].cmc_sourcemethodid;",
													"    var sourceMethodName = jsonData.value[0].cmc_sourcemethodname;",
													"    console.log('SourceMethod Name is: ' + sourceMethodName);",
													"",
													"});",
													"",
													"pm.globals.set('gsourceMethodid20a', sourceMethodid);",
													"",
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											}
										],
										"url": {
											"raw": "{{Eresource_URL}}cmc_sourcemethods",
											"host": [
												"{{Eresource_URL}}cmc_sourcemethods"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Contact record 1",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Contact Created\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
													"    var jsonData = JSON.parse(responseBody);",
													"    var contactid = jsonData.contactid;",
													"    var contactName = jsonData.fullname;",
													"    console.log(\"Contact name is: \" + contactName);",
													"",
													"    pm.globals.set('gcontactid20a', contactid);",
													"});",
													"",
													"",
													"",
													"",
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"lastname\": \"Contact-record-1046961-1\",\r\n\t\"firstname\": \"UIAuto\",\r\n\t\"mshied_contacttype\": \"494280011\",\r\n\t\"cmc_sourcecategoryid@odata.bind\": \"/cmc_sourcecategories({{gsourceCategoryid20a}})\",\r\n\t\"cmc_sourcemethodid@odata.bind\": \"/cmc_sourcemethods({{gsourceMethodid20a}})\"\r\n\r\n}"
										},
										"url": {
											"raw": "{{Eresource_URL}}contacts",
											"host": [
												"{{Eresource_URL}}contacts"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create ApplicationType",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var applicationtypeid;",
													"",
													"pm.test(\"ApplicantType Created\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
													"    var jsonData = JSON.parse(responseBody);",
													"    applicationtypeid = jsonData.cmc_applicationtypeid;",
													"    var applicationTypeName = jsonData.cmc_applicationtypename;",
													"    console.log(\"Application Type name is: \" + applicationTypeName);",
													"",
													"});",
													"",
													"pm.globals.set('gapplicationtypeid20a', applicationtypeid);",
													"",
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\"cmc_applicationtypename\":\"UIAuto-ApplicationType-1046961\",\r\n\"cmc_applicationgroup\":\"175490001\"\r\n\r\n}\r\n\r\n"
										},
										"url": {
											"raw": "{{Eresource_URL}}cmc_applicationtypes",
											"host": [
												"{{Eresource_URL}}cmc_applicationtypes"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create AcademicPeriod",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var academicPeriodid;",
													"",
													"pm.test(\"Academic Period Created\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
													"    var jsonData = JSON.parse(responseBody);",
													"    academicPeriodid = jsonData.mshied_academicperiodid;",
													"    var academicPeriodName = jsonData.mshied_name;",
													"",
													"    console.log(\"Academic Period Name is: \" + academicPeriodName);",
													"",
													"});",
													"",
													"pm.globals.set('gacademicPeriodid20a', academicPeriodid);",
													"",
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var moment = require('moment');\r",
													"pm.environment.set(\"timestamp\", moment().add(1, 'days').format(\"YYYY-MM-DD\"));\r",
													"pm.environment.set(\"timestampEndDate\", moment().add(100, 'days').format(\"YYYY-MM-DD\"));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\"mshied_enddate\": \"{{timestampEndDate}}\",\r\n\"mshied_startdate\": \"{{timestamp}}\",\r\n\"mshied_code\": \"UI-1046961\",\r\n\"mshied_name\": \"UIAuto-AcademicPer-1046961\"\r\n\r\n}\r\n\r\n"
										},
										"url": {
											"raw": "{{Eresource_URL}}mshied_academicperiods",
											"host": [
												"{{Eresource_URL}}mshied_academicperiods"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create ApplicationPeriod",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var applicationPeriodid;",
													"",
													"pm.test(\"ApplicantPeriod Created\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
													"    var jsonData = JSON.parse(responseBody);",
													"    applicationPeriodid = jsonData.cmc_applicationperiodid;",
													"    var applicationPeriodName = jsonData.cmc_applicationperiodname;",
													"",
													"    console.log(\"Application Period Name is: \" + applicationPeriodName);",
													"",
													"});",
													"",
													"pm.globals.set('gapplicationPeriodid20a', applicationPeriodid);",
													"",
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\r\n\"cmc_AcademicPeriodId@odata.bind\": \"/mshied_academicperiods({{gacademicPeriodid20a}})\",\r\n\"cmc_applicationperiodname\": \"UIAuto-ApplicationPeriod-1046961\"\r\n\r\n}\r\n\r\n"
										},
										"url": {
											"raw": "{{Eresource_URL}}cmc_applicationperiods",
											"host": [
												"{{Eresource_URL}}cmc_applicationperiods"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Application Definition",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var applicationdefinitionid;",
													"",
													"pm.test(\"Application Requirment Definition Created\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
													"    var jsonData = JSON.parse(responseBody);",
													"    applicationdefinitionid = jsonData.cmc_applicationdefinitionid;",
													"    var applicationDefinitionName = jsonData.cmc_applicationdefinitionname;",
													"",
													"    console.log(\"Application Definition name is: \" + applicationDefinitionName);",
													"",
													"});",
													"",
													"pm.globals.set('gappdefid20a', applicationdefinitionid);",
													"",
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"cmc_applicationdefinitionname\": \"UIAuto-ApplicationDefinition-1046961\"\r\n}"
										},
										"url": {
											"raw": "{{Eresource_URL}}cmc_applicationdefinitions",
											"host": [
												"{{Eresource_URL}}cmc_applicationdefinitions"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Application Definition Version",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var applicationdefinitionverid, applicationdefinitionvername;",
													"",
													"pm.test(\"Application Requirment Definition Version Created\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
													"    var jsonData = JSON.parse(responseBody);",
													"    applicationdefinitionverid = jsonData.cmc_applicationdefinitionversionid;",
													"    applicationdefinitionvername = jsonData.cmc_applicationdefinitionversionname;",
													"    console.log(\"Application Definition version name is: \" + applicationdefinitionvername);",
													"});",
													"",
													"pm.globals.set('gappdefverid20a', applicationdefinitionverid);",
													"pm.globals.set('gapplicationdefinitionvername20a', applicationdefinitionvername);",
													"",
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\"cmc_applicationdefinitionversionname\":\"UIAuto-ADV-1046961\",\r\n\"cmc_applicationtype@odata.bind\":\"/cmc_applicationtypes({{gapplicationtypeid20a}})\",\r\n\"cmc_applicationdefinitionid@odata.bind\":\"/cmc_applicationdefinitions({{gappdefid20a}})\",\r\n\"cmc_createlifecycle\": false\r\n\r\n}"
										},
										"url": {
											"raw": "{{Eresource_URL}}cmc_applicationdefinitionversions",
											"host": [
												"{{Eresource_URL}}cmc_applicationdefinitionversions"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Application Registration",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Application Registration Created\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
													"    var jsonData = JSON.parse(responseBody);",
													"    var applicationRegId = jsonData.cmc_applicationregistrationid;",
													"    var applicationRegName = jsonData.cmc_applicationregistration;",
													"    console.log(\"Application Registration name is: \" + applicationRegName);",
													"",
													"    pm.globals.set('gapplicationRegId20a', applicationRegId);",
													"    pm.globals.set('gapplicationRegName20a', applicationRegName);",
													"",
													"});",
													"",
													"",
													"",
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"cmc_contactid@odata.bind\": \"/contacts({{gcontactid20a}})\",\r\n    \"cmc_applicationdefinitionversionid@odata.bind\": \"/cmc_applicationdefinitionversions({{gappdefverid20a}})\",\r\n    \"cmc_applicationstatus\": 175490000,\r\n    \"cmc_applicationsubmitted\": false\r\n}"
										},
										"url": {
											"raw": "{{Eresource_URL}}cmc_applicationregistrations",
											"host": [
												"{{Eresource_URL}}cmc_applicationregistrations"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Application",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Application Created\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
													"    var jsonData = JSON.parse(responseBody);",
													"    var applicationId = jsonData.cmc_applicationid;",
													"    var applicationName = jsonData.cmc_applicationname;",
													"    console.log(\"Application name is: \" + applicationName);",
													"",
													"    pm.globals.set('gapplicationId20a', applicationId);",
													"    pm.globals.set('gapplicationName20a', applicationName);",
													"",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\r\n\"cmc_applicationstatus\": 175490001,\r\n\"cmc_contactid@odata.bind\": \"/contacts({{gcontactid20a}})\",\r\n\"cmc_applicationperiodid@odata.bind\": \"/cmc_applicationperiods({{gapplicationPeriodid20a}})\",\r\n\"cmc_applicationregistration@odata.bind\": \"/cmc_applicationregistrations({{gapplicationRegId20a}})\"\r\n\r\n}"
										},
										"url": {
											"raw": "{{Eresource_URL}}cmc_applications",
											"host": [
												"{{Eresource_URL}}cmc_applications"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Contact 2",
							"item": [
								{
									"name": "Get SourceCategory",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var sourceCategoryid;",
													"",
													"pm.test(\"Source category record Fetched\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
													"    var jsonData = JSON.parse(responseBody);",
													"    sourceCategoryid = jsonData.value[0].cmc_sourcecategoryid;",
													"    var sourceCategoryName = jsonData.value[0].cmc_sourcecategoryname;",
													"    console.log('SourceCategory Name is: ' + sourceCategoryName);",
													"",
													"});",
													"",
													"pm.globals.set('gsourceCategoryid20b', sourceCategoryid);",
													"",
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											}
										],
										"url": {
											"raw": "{{Eresource_URL}}cmc_sourcecategories",
											"host": [
												"{{Eresource_URL}}cmc_sourcecategories"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get SourceMethod",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var sourceMethodid;",
													"",
													"pm.test(\"Source Method record Fetched\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
													"    var jsonData = JSON.parse(responseBody);",
													"    sourceMethodid = jsonData.value[0].cmc_sourcemethodid;",
													"    var sourceMethodName = jsonData.value[0].cmc_sourcemethodname;",
													"    console.log('SourceMethod Name is: ' + sourceMethodName);",
													"",
													"});",
													"",
													"pm.globals.set('gsourceMethodid20b', sourceMethodid);",
													"",
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											}
										],
										"url": {
											"raw": "{{Eresource_URL}}cmc_sourcemethods",
											"host": [
												"{{Eresource_URL}}cmc_sourcemethods"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Contact record 2",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Contact Created\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
													"    var jsonData = JSON.parse(responseBody);",
													"    var contactid = jsonData.contactid;",
													"    var contactName = jsonData.fullname;",
													"    console.log(\"Contact name is: \" + contactName);",
													"",
													"    pm.globals.set('gcontactid20b', contactid);",
													"});",
													"",
													"",
													"",
													"",
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"lastname\": \"Contact-record-1046961-2\",\r\n    \"firstname\": \"UIAuto\",\r\n    \"mshied_contacttype\": \"494280011\",\r\n    \"cmc_sourcecategoryid@odata.bind\": \"/cmc_sourcecategories({{gsourceCategoryid20b}})\",\r\n    \"cmc_sourcemethodid@odata.bind\": \"/cmc_sourcemethods({{gsourceMethodid20b}})\"\r\n}"
										},
										"url": {
											"raw": "{{Eresource_URL}}contacts",
											"host": [
												"{{Eresource_URL}}contacts"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create ApplicationType",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var applicationtypeid;",
													"",
													"pm.test(\"ApplicantType Created\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
													"    var jsonData = JSON.parse(responseBody);",
													"    applicationtypeid = jsonData.cmc_applicationtypeid;",
													"    var applicationTypeName = jsonData.cmc_applicationtypename;",
													"    console.log(\"Application Type name is: \" + applicationTypeName);",
													"",
													"});",
													"",
													"pm.globals.set('gapplicationtypeid20b', applicationtypeid);",
													"",
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"cmc_applicationtypename\": \"UIAuto-ApplicationType-1046961-2\",\r\n    \"cmc_applicationgroup\": \"175490001\"\r\n}"
										},
										"url": {
											"raw": "{{Eresource_URL}}cmc_applicationtypes",
											"host": [
												"{{Eresource_URL}}cmc_applicationtypes"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create AcademicPeriod",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var academicPeriodid;",
													"",
													"pm.test(\"Academic Period Created\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
													"    var jsonData = JSON.parse(responseBody);",
													"    academicPeriodid = jsonData.mshied_academicperiodid;",
													"    var academicPeriodName = jsonData.mshied_name;",
													"",
													"    console.log(\"Academic Period Name is: \" + academicPeriodName);",
													"",
													"});",
													"",
													"pm.globals.set('gacademicPeriodid20b', academicPeriodid);",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var moment = require('moment');\r",
													"pm.environment.set(\"timestamp\", moment().add(1, 'days').format(\"YYYY-MM-DD\"));\r",
													"pm.environment.set(\"timestampEndDate\", moment().add(100, 'days').format(\"YYYY-MM-DD\"));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"mshied_enddate\": \"{{timestampEndDate}}\",\r\n    \"mshied_startdate\": \"{{timestamp}}\",\r\n    \"mshied_code\": \"UI-1046961-2\",\r\n    \"mshied_name\": \"UIAuto-AcademicPer-1046961-2\"\r\n}"
										},
										"url": {
											"raw": "{{Eresource_URL}}mshied_academicperiods",
											"host": [
												"{{Eresource_URL}}mshied_academicperiods"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create ApplicationPeriod",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var applicationPeriodid;",
													"",
													"pm.test(\"ApplicantPeriod Created\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
													"    var jsonData = JSON.parse(responseBody);",
													"    applicationPeriodid = jsonData.cmc_applicationperiodid;",
													"    var applicationPeriodName = jsonData.cmc_applicationperiodname;",
													"",
													"    console.log(\"Application Period Name is: \" + applicationPeriodName);",
													"",
													"});",
													"",
													"pm.globals.set('gapplicationPeriodid20b', applicationPeriodid);",
													"",
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"cmc_AcademicPeriodId@odata.bind\": \"/mshied_academicperiods({{gacademicPeriodid20b}})\",\r\n    \"cmc_applicationperiodname\": \"UIAuto-ApplicationPeriod-1046961-2\"\r\n}"
										},
										"url": {
											"raw": "{{Eresource_URL}}cmc_applicationperiods",
											"host": [
												"{{Eresource_URL}}cmc_applicationperiods"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Application Definition",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var applicationdefinitionid;",
													"",
													"pm.test(\"Application Requirment Definition Created\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
													"    var jsonData = JSON.parse(responseBody);",
													"    applicationdefinitionid = jsonData.cmc_applicationdefinitionid;",
													"    var applicationDefinitionName = jsonData.cmc_applicationdefinitionname;",
													"",
													"    console.log(\"Application Definition name is: \" + applicationDefinitionName);",
													"",
													"});",
													"",
													"pm.globals.set('gappdefid20b', applicationdefinitionid);",
													"",
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"cmc_applicationdefinitionname\": \"UIAuto-ApplicationDefinition-1046961-2\"\r\n}"
										},
										"url": {
											"raw": "{{Eresource_URL}}cmc_applicationdefinitions",
											"host": [
												"{{Eresource_URL}}cmc_applicationdefinitions"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Application Definition Version",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var applicationdefinitionverid, applicationdefinitionvername;",
													"",
													"pm.test(\"Application Requirment Definition Version Created\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
													"    var jsonData = JSON.parse(responseBody);",
													"    applicationdefinitionverid = jsonData.cmc_applicationdefinitionversionid;",
													"    applicationdefinitionvername = jsonData.cmc_applicationdefinitionversionname;",
													"    console.log(\"Application Definition version name is: \" + applicationdefinitionvername);",
													"});",
													"",
													"pm.globals.set('gappdefverid20b', applicationdefinitionverid);",
													"pm.globals.set('gapplicationdefinitionvername20b', applicationdefinitionvername);",
													"",
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"cmc_applicationdefinitionversionname\": \"UIAuto-ADV-1046961-2\",\r\n    \"cmc_applicationtype@odata.bind\": \"/cmc_applicationtypes({{gapplicationtypeid20b}})\",\r\n    \"cmc_applicationdefinitionid@odata.bind\": \"/cmc_applicationdefinitions({{gappdefid20b}})\",\r\n    \"cmc_createlifecycle\": false\r\n}"
										},
										"url": {
											"raw": "{{Eresource_URL}}cmc_applicationdefinitionversions",
											"host": [
												"{{Eresource_URL}}cmc_applicationdefinitionversions"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Application Registration",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Application Registration Created\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
													"    var jsonData = JSON.parse(responseBody);",
													"    var applicationRegId = jsonData.cmc_applicationregistrationid;",
													"    var applicationRegName = jsonData.cmc_applicationregistration;",
													"    console.log(\"Application Registration name is: \" + applicationRegName);",
													"",
													"    pm.globals.set('gapplicationRegId20b', applicationRegId);",
													"    pm.globals.set('gapplicationRegName20b', applicationRegName);",
													"",
													"});",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"cmc_contactid@odata.bind\": \"/contacts({{gcontactid20b}})\",\r\n    \"cmc_applicationdefinitionversionid@odata.bind\": \"/cmc_applicationdefinitionversions({{gappdefverid20b}})\",\r\n    \"cmc_applicationstatus\": 175490000,\r\n    \"cmc_applicationsubmitted\": false\r\n}"
										},
										"url": {
											"raw": "{{Eresource_URL}}cmc_applicationregistrations",
											"host": [
												"{{Eresource_URL}}cmc_applicationregistrations"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Application",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Application Created\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
													"    var jsonData = JSON.parse(responseBody);",
													"    var applicationId = jsonData.cmc_applicationid;",
													"    var applicationName = jsonData.cmc_applicationname;",
													"    console.log(\"Application name is: \" + applicationName);",
													"",
													"    pm.globals.set('gapplicationId20b', applicationId);",
													"    pm.globals.set('gapplicationName20b', applicationName);",
													"",
													"});",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\r\n\"cmc_applicationstatus\": 175490001,\r\n\"cmc_contactid@odata.bind\": \"/contacts({{gcontactid20b}})\",\r\n\"cmc_applicationperiodid@odata.bind\": \"/cmc_applicationperiods({{gapplicationPeriodid20b}})\",\r\n\"cmc_applicationregistration@odata.bind\": \"/cmc_applicationregistrations({{gapplicationRegId20b}})\"\r\n\r\n}"
										},
										"url": {
											"raw": "{{Eresource_URL}}cmc_applications",
											"host": [
												"{{Eresource_URL}}cmc_applications"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "Campus SurveyFeature",
			"item": [
				{
					"name": "TestCase -766162",
					"item": [
						{
							"name": "Create AcademicPeriod",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var academicPeriodid;",
											"",
											"pm.test(\"Academic Period Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    academicPeriodid = jsonData.mshied_academicperiodid;",
											"    var academicPeriodName = jsonData.mshied_name;",
											"    console.log(\"Academic Period Name is: \" + academicPeriodName);",
											"",
											"});",
											"",
											"pm.globals.set('gacademicPeriodid22a', academicPeriodid);",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var moment = require('moment');\r",
											"pm.environment.set(\"timestamp\", moment().add(1, 'days').format(\"YYYY-MM-DD\"));\r",
											"pm.environment.set(\"timestampEndDate\", moment().add(100, 'days').format(\"YYYY-MM-DD\"));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"mshied_enddate\": \"{{timestampEndDate}}\",\r\n\"mshied_startdate\": \"{{timestamp}}\",\r\n\"mshied_code\": \"UI-766162\",\r\n\"mshied_name\": \"UIAuto-AcademicPer-766162\"\r\n\r\n}\r\n\r\n"
								},
								"url": {
									"raw": "{{Eresource_URL}}mshied_academicperiods",
									"host": [
										"{{Eresource_URL}}mshied_academicperiods"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Course",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var courseid;",
											"",
											"pm.test(\"Course Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    courseid = jsonData.mshied_courseid;",
											"    var courseName = jsonData.mshied_name;",
											"    console.log(\"Course Name is: \" + courseName);",
											"",
											"});",
											"",
											"pm.globals.set('gcourseid22a', courseid);",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"mshied_coursenumber\": \"UIAuto-766162\",\r\n\t\"mshied_name\": \"UIAuto-Course-766162\"\r\n\r\n}\r\n\r\n"
								},
								"url": {
									"raw": "{{Eresource_URL}}mshied_courses",
									"host": [
										"{{Eresource_URL}}mshied_courses"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create CourseSection 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var courseSectionid;",
											"",
											"pm.test(\"Course Section Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    courseSectionid = jsonData.mshied_coursesectionid;",
											"    var courseSectionName = jsonData.mshied_name;",
											"    console.log(\"Course Section Name is: \" + courseSectionName);",
											"",
											"});",
											"",
											"pm.globals.set('gcourseSectionid22a', courseSectionid);",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"mshied_AcademicPeriodId@odata.bind\": \"/mshied_academicperiods({{gacademicPeriodid22a}})\",\r\n    \"mshied_CourseId@odata.bind\": \"/mshied_courses({{gcourseid22a}})\",\r\n    \"mshied_location\": \"766162-1\",\r\n    \"mshied_coursedaytime\": \"766162-1\"\r\n\r\n\r\n}\r\n\r\n"
								},
								"url": {
									"raw": "{{Eresource_URL}}mshied_coursesections",
									"host": [
										"{{Eresource_URL}}mshied_coursesections"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Role 'Primary Advisor'",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var titleID,titleName;",
											"pm.test(\"Fetch Title\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    titleID = jsonData.value[0].cmc_titleid;",
											"    titleName=jsonData.value[0].cmc_titlename;",
											"",
											"    ",
											"});",
											"pm.globals.set('gtitleID22a',titleID);",
											"",
											"console.log(\"Title ID is: \"+titleID);",
											"console.log(\"Title Name is: \"+titleName);",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"url": {
									"raw": "{{Eresource_URL}}cmc_titles?$filter=cmc_titlename eq 'Primary Advisor'",
									"host": [
										"{{Eresource_URL}}cmc_titles"
									],
									"query": [
										{
											"key": "$filter",
											"value": "cmc_titlename eq 'Primary Advisor'"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Role 'Mentor'",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var titleID,titleName;",
											"pm.test(\"Fetch Title\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    titleID = jsonData.value[0].cmc_titleid;",
											"    titleName=jsonData.value[0].cmc_titlename;",
											"",
											"    ",
											"});",
											"pm.globals.set('gtitleID22b',titleID);",
											"",
											"console.log(\"Title ID is: \"+titleID);",
											"console.log(\"Title Name is: \"+titleName);",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"url": {
									"raw": "{{Eresource_URL}}cmc_titles?$filter=cmc_titlename eq 'Mentor'",
									"host": [
										"{{Eresource_URL}}cmc_titles"
									],
									"query": [
										{
											"key": "$filter",
											"value": "cmc_titlename eq 'Mentor'"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Contact 1 of type faculty",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var contactid;",
											"var contactName;",
											"pm.test(\"Contact 1 Created\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    contactid = jsonData.contactid;",
											"    contactName = jsonData.fullname;",
											"});",
											" ",
											"pm.globals.set('gcontactid22a',contactid);",
											"console.log(\"Contact ID is: \"+contactid);",
											"console.log(\"Contact Name is: \"+contactName);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									},
									{
										"key": "OData-Version",
										"value": "4.0"
									},
									{
										"key": "OData-MaxVersion",
										"value": "4.0"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"lastname\": \"Contact-766162-1\",\r\n    \"firstname\": \"UIAuto\",\r\n    \"mshied_contacttype\": \"494280003\",\r\n    \"emailaddress1\": \"1{{$randomEmail}}\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}contacts",
									"host": [
										"{{Eresource_URL}}contacts"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Contact 2 of type faculty",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var contactid;",
											"var contactName;",
											"pm.test(\"Contact 2 Created\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    contactid = jsonData.contactid;",
											"    contactName = jsonData.fullname;",
											"});",
											" ",
											"pm.globals.set('gcontactid22b',contactid);",
											"console.log(\"Contact ID is: \"+contactid);",
											"console.log(\"Contact Name is: \"+contactName);",
											"pm.globals.set('contactName2',contactName);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									},
									{
										"key": "OData-Version",
										"value": "4.0"
									},
									{
										"key": "OData-MaxVersion",
										"value": "4.0"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"lastname\": \"Contact-766162-2\",\r\n    \"firstname\": \"UIAuto\",\r\n    \"mshied_contacttype\": \"494280003\",\r\n    \"emailaddress1\": \"2 {{$randomEmail}}\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}contacts",
									"host": [
										"{{Eresource_URL}}contacts"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add Courses Instructor 1 to Course Section 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var courseInstructorID,contactID,courseSectionID,isPrimaryInstructor;",
											"pm.test(\"Course Instructor Associated\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202,204]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    courseInstructorID = jsonData.cmc_courseinstructorid;",
											"    contactID = jsonData._cmc_instructorid_value;",
											"    courseSectionID=jsonData._cmc_coursesectionid_value;",
											"    isPrimaryInstructor=jsonData.cmc_isprimaryinstructor;",
											"",
											"",
											"});",
											"",
											"pm.globals.set('gcourseInstructorID22a', courseInstructorID);",
											"console.log('Course Instructor ID 1'+courseInstructorID);",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_coursesectionId@odata.bind\": \"/mshied_coursesections({{gcourseSectionid22a}})\",\r\n    \"cmc_instructorid@odata.bind\": \"/contacts({{gcontactid22a}})\",\r\n    \"cmc_roleid@odata.bind\": \"/cmc_titles({{gtitleID22a}})\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_courseinstructors",
									"host": [
										"{{Eresource_URL}}cmc_courseinstructors"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add Courses Instructor 2 to Course Section 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var courseInstructorID,contactID,courseSectionID,isPrimaryInstructor;",
											"pm.test(\"Course Instructor Associated\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202,204]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    courseInstructorID = jsonData.cmc_courseinstructorid;",
											"    contactID = jsonData._cmc_instructorid_value;",
											"    courseSectionID=jsonData._cmc_coursesectionid_value;",
											"    isPrimaryInstructor=jsonData.cmc_isprimaryinstructor;",
											"",
											"});",
											"",
											"pm.globals.set('gcourseInstructorID22b', courseInstructorID);",
											"console.log('Course Instructor ID 2'+courseInstructorID);",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_coursesectionId@odata.bind\": \"/mshied_coursesections({{gcourseSectionid22a}})\",\r\n    \"cmc_instructorid@odata.bind\": \"/contacts({{gcontactid22b}})\",\r\n    \"cmc_roleid@odata.bind\": \"/cmc_titles({{gtitleID22b}})\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_courseinstructors",
									"host": [
										"{{Eresource_URL}}cmc_courseinstructors"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create CourseSection 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var courseSectionid;",
											"",
											"pm.test(\"Course Section Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    courseSectionid = jsonData.mshied_coursesectionid;",
											"    var courseSectionName = jsonData.mshied_name;",
											"    console.log(\"Course Section Name is: \" + courseSectionName);",
											"",
											"});",
											"",
											"pm.globals.set('gcourseSectionid22b', courseSectionid);",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"mshied_AcademicPeriodId@odata.bind\": \"/mshied_academicperiods({{gacademicPeriodid22a}})\",\r\n    \"mshied_CourseId@odata.bind\": \"/mshied_courses({{gcourseid22a}})\",\r\n    \"mshied_location\": \"766162-2\",\r\n    \"mshied_coursedaytime\": \"766162-2\"\r\n\r\n\r\n}\r\n\r\n"
								},
								"url": {
									"raw": "{{Eresource_URL}}mshied_coursesections",
									"host": [
										"{{Eresource_URL}}mshied_coursesections"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add Courses Instructor 1 to Course Section 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var courseInstructorID,contactID,courseSectionID,isPrimaryInstructor;",
											"pm.test(\"Course Instructor Associated\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202,204]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    courseInstructorID = jsonData.cmc_courseinstructorid;",
											"    contactID = jsonData._cmc_instructorid_value;",
											"    courseSectionID=jsonData._cmc_coursesectionid_value;",
											"    isPrimaryInstructor=jsonData.cmc_isprimaryinstructor;",
											"",
											"",
											"});",
											"",
											"pm.globals.set('gcourseInstructorID22c', courseInstructorID);",
											"console.log('Course Instructor ID 1'+courseInstructorID);",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_coursesectionId@odata.bind\": \"/mshied_coursesections({{gcourseSectionid22b}})\",\r\n    \"cmc_instructorid@odata.bind\": \"/contacts({{gcontactid22a}})\",\r\n    \"cmc_roleid@odata.bind\": \"/cmc_titles({{gtitleID22a}})\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_courseinstructors",
									"host": [
										"{{Eresource_URL}}cmc_courseinstructors"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add Courses Instructor 2 to Course Section 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var courseInstructorID,contactID,courseSectionID,isPrimaryInstructor;",
											"pm.test(\"Course Instructor Associated\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202,204]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    courseInstructorID = jsonData.cmc_courseinstructorid;",
											"    contactID = jsonData._cmc_instructorid_value;",
											"    courseSectionID=jsonData._cmc_coursesectionid_value;",
											"    isPrimaryInstructor=jsonData.cmc_isprimaryinstructor;",
											"",
											"});",
											"",
											"pm.globals.set('gcourseInstructorID22d', courseInstructorID);",
											"console.log('Course Instructor ID 2'+courseInstructorID);",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_coursesectionId@odata.bind\": \"/mshied_coursesections({{gcourseSectionid22b}})\",\r\n    \"cmc_instructorid@odata.bind\": \"/contacts({{gcontactid22b}})\",\r\n    \"cmc_roleid@odata.bind\": \"/cmc_titles({{gtitleID22b}})\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_courseinstructors",
									"host": [
										"{{Eresource_URL}}cmc_courseinstructors"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Static Student Group",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var listid;",
											"pm.test(\"Marketing List Created\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202,204]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    listid = jsonData.listid;",
											"    ",
											"    var SGName =jsonData.listname;   ",
											"    var stateid = jsonData.statecode;",
											"    console.log('ML name:'+SGName);",
											" ",
											"",
											"});",
											"",
											"pm.globals.set('glistid', listid);",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"listname\": \"Static CampusSurvey-766162\",\r\n    \"type\": false,\r\n    \"createdfromcode\": 2,\r\n    \"cmc_marketinglisttype\": 175490000\r\n   \r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}lists",
									"host": [
										"{{Eresource_URL}}lists"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "StudentGroupFeature",
			"item": [
				{
					"name": "TestCase -898210",
					"item": [
						{
							"name": "16 Contact records",
							"item": [
								{
									"name": "Get SourceCategory",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var sourceCategoryid;",
													"",
													"pm.test(\"Source category record Fetched\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
													"    var jsonData = JSON.parse(responseBody);",
													"    sourceCategoryid = jsonData.value[0].cmc_sourcecategoryid;",
													"    var sourceCategoryName = jsonData.value[0].cmc_sourcecategoryname;",
													"    console.log('SourceCategory Name is: ' + sourceCategoryName);",
													"",
													"});",
													"",
													"pm.globals.set('gsourceCategoryid23', sourceCategoryid);",
													"",
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											}
										],
										"url": {
											"raw": "{{Eresource_URL}}cmc_sourcecategories",
											"host": [
												"{{Eresource_URL}}cmc_sourcecategories"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get SourceMethod",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var sourceMethodid;",
													"",
													"pm.test(\"Source Method record Fetched\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
													"    var jsonData = JSON.parse(responseBody);",
													"    sourceMethodid = jsonData.value[0].cmc_sourcemethodid;",
													"    var sourceMethodName = jsonData.value[0].cmc_sourcemethodname;",
													"    console.log('SourceMethod Name is: ' + sourceMethodName);",
													"",
													"});",
													"",
													"pm.globals.set('gsourceMethodid23', sourceMethodid);",
													"",
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											}
										],
										"url": {
											"raw": "{{Eresource_URL}}cmc_sourcemethods",
											"host": [
												"{{Eresource_URL}}cmc_sourcemethods"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Contact Record 1",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Contact Created\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
													"    var jsonData = JSON.parse(responseBody);",
													"    var contactid = jsonData.contactid;",
													"    var contactName = jsonData.fullname;",
													"    console.log(\"Contact name is: \" + contactName);",
													"",
													"    pm.globals.set('gcontactid23a', contactid);",
													"});",
													"",
													"",
													"",
													"",
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\r\n\t\"lastname\": \"Contact-898210-1\",\r\n\t\"firstname\": \"UIAuto\",\r\n\t\"mshied_contacttype\": \"494280011\",\r\n\t\"cmc_sourcecategoryid@odata.bind\": \"/cmc_sourcecategories({{gsourceCategoryid23}})\",\r\n\t\"cmc_sourcemethodid@odata.bind\": \"/cmc_sourcemethods({{gsourceMethodid23}})\"\r\n\r\n}"
										},
										"url": {
											"raw": "{{Eresource_URL}}contacts",
											"host": [
												"{{Eresource_URL}}contacts"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Contact Record 2",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Contact Created\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
													"    var jsonData = JSON.parse(responseBody);",
													"    var contactid = jsonData.contactid;",
													"    var contactName = jsonData.fullname;",
													"    console.log(\"Contact name is: \" + contactName);",
													"",
													"    pm.globals.set('gcontactid23b', contactid);",
													"});",
													"",
													"",
													"",
													"",
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\r\n\t\"lastname\": \"Contact-898210-2\",\r\n\t\"firstname\": \"UIAuto\",\r\n\t\"mshied_contacttype\": \"494280011\",\r\n\t\"cmc_sourcecategoryid@odata.bind\": \"/cmc_sourcecategories({{gsourceCategoryid23}})\",\r\n\t\"cmc_sourcemethodid@odata.bind\": \"/cmc_sourcemethods({{gsourceMethodid23}})\"\r\n\r\n}"
										},
										"url": {
											"raw": "{{Eresource_URL}}contacts",
											"host": [
												"{{Eresource_URL}}contacts"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Contact Record 3",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Contact Created\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
													"    var jsonData = JSON.parse(responseBody);",
													"    var contactid = jsonData.contactid;",
													"    var contactName = jsonData.fullname;",
													"    console.log(\"Contact name is: \" + contactName);",
													"",
													"    pm.globals.set('gcontactid23c', contactid);",
													"});",
													"",
													"",
													"",
													"",
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\r\n\t\"lastname\": \"Contact-898210-3\",\r\n\t\"firstname\": \"UIAuto\",\r\n\t\"mshied_contacttype\": \"494280011\",\r\n\t\"cmc_sourcecategoryid@odata.bind\": \"/cmc_sourcecategories({{gsourceCategoryid23}})\",\r\n\t\"cmc_sourcemethodid@odata.bind\": \"/cmc_sourcemethods({{gsourceMethodid23}})\"\r\n\r\n}"
										},
										"url": {
											"raw": "{{Eresource_URL}}contacts",
											"host": [
												"{{Eresource_URL}}contacts"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Contact Record 4",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Contact Created\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
													"    var jsonData = JSON.parse(responseBody);",
													"    var contactid = jsonData.contactid;",
													"    var contactName = jsonData.fullname;",
													"    console.log(\"Contact name is: \" + contactName);",
													"",
													"    pm.globals.set('gcontactid23d', contactid);",
													"});",
													"",
													"",
													"",
													"",
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\r\n\t\"lastname\": \"Contact-898210-4\",\r\n\t\"firstname\": \"UIAuto\",\r\n\t\"mshied_contacttype\": \"494280011\",\r\n\t\"cmc_sourcecategoryid@odata.bind\": \"/cmc_sourcecategories({{gsourceCategoryid23}})\",\r\n\t\"cmc_sourcemethodid@odata.bind\": \"/cmc_sourcemethods({{gsourceMethodid23}})\"\r\n\r\n}"
										},
										"url": {
											"raw": "{{Eresource_URL}}contacts",
											"host": [
												"{{Eresource_URL}}contacts"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Contact Record 5",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Contact Created\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
													"    var jsonData = JSON.parse(responseBody);",
													"    var contactid = jsonData.contactid;",
													"    var contactName = jsonData.fullname;",
													"    console.log(\"Contact name is: \" + contactName);",
													"",
													"    pm.globals.set('gcontactid23e', contactid);",
													"});",
													"",
													"",
													"",
													"",
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\r\n\t\"lastname\": \"Contact-898210-5\",\r\n\t\"firstname\": \"UIAuto\",\r\n\t\"mshied_contacttype\": \"494280011\",\r\n\t\"cmc_sourcecategoryid@odata.bind\": \"/cmc_sourcecategories({{gsourceCategoryid23}})\",\r\n\t\"cmc_sourcemethodid@odata.bind\": \"/cmc_sourcemethods({{gsourceMethodid23}})\"\r\n\r\n}"
										},
										"url": {
											"raw": "{{Eresource_URL}}contacts",
											"host": [
												"{{Eresource_URL}}contacts"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Contact Record 6",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Contact Created\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
													"    var jsonData = JSON.parse(responseBody);",
													"    var contactid = jsonData.contactid;",
													"    var contactName = jsonData.fullname;",
													"    console.log(\"Contact name is: \" + contactName);",
													"",
													"    pm.globals.set('gcontactid23f', contactid);",
													"});",
													"",
													"",
													"",
													"",
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\r\n\t\"lastname\": \"Contact-898210-6\",\r\n\t\"firstname\": \"UIAuto\",\r\n\t\"mshied_contacttype\": \"494280011\",\r\n\t\"cmc_sourcecategoryid@odata.bind\": \"/cmc_sourcecategories({{gsourceCategoryid23}})\",\r\n\t\"cmc_sourcemethodid@odata.bind\": \"/cmc_sourcemethods({{gsourceMethodid23}})\"\r\n\r\n}"
										},
										"url": {
											"raw": "{{Eresource_URL}}contacts",
											"host": [
												"{{Eresource_URL}}contacts"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Contact Record 7",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Contact Created\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
													"    var jsonData = JSON.parse(responseBody);",
													"    var contactid = jsonData.contactid;",
													"    var contactName = jsonData.fullname;",
													"    console.log(\"Contact name is: \" + contactName);",
													"",
													"    pm.globals.set('gcontactid23g', contactid);",
													"});",
													"",
													"",
													"",
													"",
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\r\n\t\"lastname\": \"Contact-898210-7\",\r\n\t\"firstname\": \"UIAuto\",\r\n\t\"mshied_contacttype\": \"494280011\",\r\n\t\"cmc_sourcecategoryid@odata.bind\": \"/cmc_sourcecategories({{gsourceCategoryid23}})\",\r\n\t\"cmc_sourcemethodid@odata.bind\": \"/cmc_sourcemethods({{gsourceMethodid23}})\"\r\n\r\n}"
										},
										"url": {
											"raw": "{{Eresource_URL}}contacts",
											"host": [
												"{{Eresource_URL}}contacts"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Contact Record 8",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Contact Created\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
													"    var jsonData = JSON.parse(responseBody);",
													"    var contactid = jsonData.contactid;",
													"    var contactName = jsonData.fullname;",
													"    console.log(\"Contact name is: \" + contactName);",
													"",
													"    pm.globals.set('gcontactid23h', contactid);",
													"});",
													"",
													"",
													"",
													"",
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\r\n\t\"lastname\": \"Contact-898210-8\",\r\n\t\"firstname\": \"UIAuto\",\r\n\t\"mshied_contacttype\": \"494280011\",\r\n\t\"cmc_sourcecategoryid@odata.bind\": \"/cmc_sourcecategories({{gsourceCategoryid23}})\",\r\n\t\"cmc_sourcemethodid@odata.bind\": \"/cmc_sourcemethods({{gsourceMethodid23}})\"\r\n\r\n}"
										},
										"url": {
											"raw": "{{Eresource_URL}}contacts",
											"host": [
												"{{Eresource_URL}}contacts"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Contact Record 9",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Contact Created\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
													"    var jsonData = JSON.parse(responseBody);",
													"    var contactid = jsonData.contactid;",
													"    var contactName = jsonData.fullname;",
													"    console.log(\"Contact name is: \" + contactName);",
													"",
													"    pm.globals.set('gcontactid23i', contactid);",
													"});",
													"",
													"",
													"",
													"",
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\r\n\t\"lastname\": \"Contact-898210-9\",\r\n\t\"firstname\": \"UIAuto\",\r\n\t\"mshied_contacttype\": \"494280011\",\r\n\t\"cmc_sourcecategoryid@odata.bind\": \"/cmc_sourcecategories({{gsourceCategoryid23}})\",\r\n\t\"cmc_sourcemethodid@odata.bind\": \"/cmc_sourcemethods({{gsourceMethodid23}})\"\r\n\r\n}"
										},
										"url": {
											"raw": "{{Eresource_URL}}contacts",
											"host": [
												"{{Eresource_URL}}contacts"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Contact Record 10",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Contact Created\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
													"    var jsonData = JSON.parse(responseBody);",
													"    var contactid = jsonData.contactid;",
													"    var contactName = jsonData.fullname;",
													"    console.log(\"Contact name is: \" + contactName);",
													"",
													"    pm.globals.set('gcontactid23j', contactid);",
													"});",
													"",
													"",
													"",
													"",
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\r\n\t\"lastname\": \"Contact-898210-10\",\r\n\t\"firstname\": \"UIAuto\",\r\n\t\"mshied_contacttype\": \"494280011\",\r\n\t\"cmc_sourcecategoryid@odata.bind\": \"/cmc_sourcecategories({{gsourceCategoryid23}})\",\r\n\t\"cmc_sourcemethodid@odata.bind\": \"/cmc_sourcemethods({{gsourceMethodid23}})\"\r\n\r\n}"
										},
										"url": {
											"raw": "{{Eresource_URL}}contacts",
											"host": [
												"{{Eresource_URL}}contacts"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Contact Record 11",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Contact Created\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
													"    var jsonData = JSON.parse(responseBody);",
													"    var contactid = jsonData.contactid;",
													"    var contactName = jsonData.fullname;",
													"    console.log(\"Contact name is: \" + contactName);",
													"",
													"    pm.globals.set('gcontactid23k', contactid);",
													"});",
													"",
													"",
													"",
													"",
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\r\n\t\"lastname\": \"Contact-898210-11\",\r\n\t\"firstname\": \"UIAuto\",\r\n\t\"mshied_contacttype\": \"494280011\",\r\n\t\"cmc_sourcecategoryid@odata.bind\": \"/cmc_sourcecategories({{gsourceCategoryid23}})\",\r\n\t\"cmc_sourcemethodid@odata.bind\": \"/cmc_sourcemethods({{gsourceMethodid23}})\"\r\n\r\n}"
										},
										"url": {
											"raw": "{{Eresource_URL}}contacts",
											"host": [
												"{{Eresource_URL}}contacts"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Contact Record 12",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Contact Created\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
													"    var jsonData = JSON.parse(responseBody);",
													"    var contactid = jsonData.contactid;",
													"    var contactName = jsonData.fullname;",
													"    console.log(\"Contact name is: \" + contactName);",
													"",
													"    pm.globals.set('gcontactid23l', contactid);",
													"});",
													"",
													"",
													"",
													"",
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\r\n\t\"lastname\": \"Contact-898210-12\",\r\n\t\"firstname\": \"UIAuto\",\r\n\t\"mshied_contacttype\": \"494280011\",\r\n\t\"cmc_sourcecategoryid@odata.bind\": \"/cmc_sourcecategories({{gsourceCategoryid23}})\",\r\n\t\"cmc_sourcemethodid@odata.bind\": \"/cmc_sourcemethods({{gsourceMethodid23}})\"\r\n\r\n}"
										},
										"url": {
											"raw": "{{Eresource_URL}}contacts",
											"host": [
												"{{Eresource_URL}}contacts"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Contact Record 13",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Contact Created\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
													"    var jsonData = JSON.parse(responseBody);",
													"    var contactid = jsonData.contactid;",
													"    var contactName = jsonData.fullname;",
													"    console.log(\"Contact name is: \" + contactName);",
													"",
													"    pm.globals.set('gcontactid23m', contactid);",
													"});",
													"",
													"",
													"",
													"",
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\r\n\t\"lastname\": \"Contact-898210-13\",\r\n\t\"firstname\": \"UIAuto\",\r\n\t\"mshied_contacttype\": \"494280011\",\r\n\t\"cmc_sourcecategoryid@odata.bind\": \"/cmc_sourcecategories({{gsourceCategoryid23}})\",\r\n\t\"cmc_sourcemethodid@odata.bind\": \"/cmc_sourcemethods({{gsourceMethodid23}})\"\r\n\r\n}"
										},
										"url": {
											"raw": "{{Eresource_URL}}contacts",
											"host": [
												"{{Eresource_URL}}contacts"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Contact Record 14",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Contact Created\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
													"    var jsonData = JSON.parse(responseBody);",
													"    var contactid = jsonData.contactid;",
													"    var contactName = jsonData.fullname;",
													"    console.log(\"Contact name is: \" + contactName);",
													"",
													"    pm.globals.set('gcontactid23n', contactid);",
													"});",
													"",
													"",
													"",
													"",
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\r\n\t\"lastname\": \"Contact-898210-14\",\r\n\t\"firstname\": \"UIAuto\",\r\n\t\"mshied_contacttype\": \"494280011\",\r\n\t\"cmc_sourcecategoryid@odata.bind\": \"/cmc_sourcecategories({{gsourceCategoryid23}})\",\r\n\t\"cmc_sourcemethodid@odata.bind\": \"/cmc_sourcemethods({{gsourceMethodid23}})\"\r\n\r\n}"
										},
										"url": {
											"raw": "{{Eresource_URL}}contacts",
											"host": [
												"{{Eresource_URL}}contacts"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Contact Record 15",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Contact Created\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
													"    var jsonData = JSON.parse(responseBody);",
													"    var contactid = jsonData.contactid;",
													"    var contactName = jsonData.fullname;",
													"    console.log(\"Contact name is: \" + contactName);",
													"",
													"    pm.globals.set('gcontactid23o', contactid);",
													"});",
													"",
													"",
													"",
													"",
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\r\n\t\"lastname\": \"Contact-898210-15\",\r\n\t\"firstname\": \"UIAuto\",\r\n\t\"mshied_contacttype\": \"494280011\",\r\n\t\"cmc_sourcecategoryid@odata.bind\": \"/cmc_sourcecategories({{gsourceCategoryid23}})\",\r\n\t\"cmc_sourcemethodid@odata.bind\": \"/cmc_sourcemethods({{gsourceMethodid23}})\"\r\n\r\n}"
										},
										"url": {
											"raw": "{{Eresource_URL}}contacts",
											"host": [
												"{{Eresource_URL}}contacts"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Contact Record 16",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Contact Created\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
													"    var jsonData = JSON.parse(responseBody);",
													"    var contactid = jsonData.contactid;",
													"    var contactName = jsonData.fullname;",
													"    console.log(\"Contact name is: \" + contactName);",
													"",
													"    pm.globals.set('gcontactid23p', contactid);",
													"});",
													"",
													"",
													"",
													"",
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\r\n\t\"lastname\": \"Contact-898210-16\",\r\n\t\"firstname\": \"UIAuto\",\r\n\t\"mshied_contacttype\": \"494280011\",\r\n\t\"cmc_sourcecategoryid@odata.bind\": \"/cmc_sourcecategories({{gsourceCategoryid23}})\",\r\n\t\"cmc_sourcemethodid@odata.bind\": \"/cmc_sourcemethods({{gsourceMethodid23}})\"\r\n\r\n}"
										},
										"url": {
											"raw": "{{Eresource_URL}}contacts",
											"host": [
												"{{Eresource_URL}}contacts"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "SuccessPlanAssignment",
							"item": [
								{
									"name": "Create SuccessPlan Template",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"SuccessPlan Template Created\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
													"    var jsonData = JSON.parse(responseBody);",
													"    var successPlanTemplateid = jsonData.cmc_successplantemplateid;",
													"    var successPlanTemplateName = jsonData.cmc_successplantemplatename;",
													"    console.log(\"SuccessPlan Template name is: \" + successPlanTemplateName);",
													"",
													"    pm.globals.set('gsuccessPlanTemplateid23', successPlanTemplateid);",
													"});",
													"",
													"",
													"",
													"",
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\r\n\t\"cmc_successplantemplatename\": \"UIAuto-SPT-898210\"\r\n\r\n}"
										},
										"url": {
											"raw": "{{Eresource_URL}}cmc_successplantemplates",
											"host": [
												"{{Eresource_URL}}cmc_successplantemplates"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create SuccessPlan Assignment",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"SuccessPlan Assignment Created\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
													"    var jsonData = JSON.parse(responseBody);",
													"    var successPlanAssignmentid = jsonData.cmc_successplanassignmentid;",
													"    var successPlanAssignmentName = jsonData.cmc_successplanassignmentname;",
													"    console.log(\"SuccessPlan Assignment name is: \" +successPlanAssignmentName);",
													"",
													"    pm.globals.set('gsuccessPlanAssignmentid23', successPlanAssignmentid);",
													"});",
													"",
													"",
													"",
													"",
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\r\n\t\"cmc_successplantemplateid@odata.bind\": \"/cmc_successplantemplates({{gsuccessPlanTemplateid23}})\",\r\n\t\"cmc_successplanassignmentname\": \"UIAuto-SPA-898210\"\r\n\r\n}"
										},
										"url": {
											"raw": "{{Eresource_URL}}cmc_successplanassignments",
											"host": [
												"{{Eresource_URL}}cmc_successplanassignments"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "SuccessNetworkAssignment",
							"item": [
								{
									"name": "Get Assigned User record",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var instructorId, instructorName;",
													"",
													"pm.test(\"Get instructor record\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
													"    var jsonData = JSON.parse(responseBody);",
													"    var result = jsonData.value;",
													"",
													"    instructorId = result[0].systemuserid;",
													"    instructorName = result[0].fullname;",
													"    console.log(\"instructor ID is : \" + instructorId);",
													"    console.log(\"instructor name is : \" + instructorName);",
													"});",
													"",
													"pm.globals.set('ginstructorId23', instructorId);",
													"",
													"",
													"",
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											},
											{
												"key": "OData-Version",
												"value": "4.0"
											},
											{
												"key": "OData-MaxVersion",
												"value": "4.0"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{Eresource}}api/data/{{Eversion}}/systemusers?$filter=fullname eq 'DCRM DCRM Faculty/Instructor'",
											"host": [
												"{{Eresource}}api"
											],
											"path": [
												"data",
												"{{Eversion}}",
												"systemusers"
											],
											"query": [
												{
													"key": "$filter",
													"value": "fullname eq 'DCRM DCRM Faculty/Instructor'"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Titles/Roles",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Role Created\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
													"    var jsonData = JSON.parse(responseBody);",
													"    var roleid = jsonData.cmc_titleid;",
													"    var roleName = jsonData.cmc_titlename;",
													"    console.log(\"Role name is: \" + roleName);",
													"",
													"    pm.globals.set('groleid23', roleid);",
													"});",
													"",
													"",
													"",
													"",
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"cmc_titlename\": \"UIAuto-Role-898210\"\r\n}"
										},
										"url": {
											"raw": "{{Eresource_URL}}cmc_titles",
											"host": [
												"{{Eresource_URL}}cmc_titles"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create SuccessNetwork Assignment",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"SuccessNetwork Assignment Created\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
													"    var jsonData = JSON.parse(responseBody);",
													"    var successNetworkAssignmentid = jsonData.cmc_successnetworkassignmentid;",
													"    var successNetworkAssignmentName = jsonData.cmc_successnetworkassignmentname;",
													"    console.log(\"SuccessNetwork Assignment name is: \" + successNetworkAssignmentName);",
													"",
													"    pm.globals.set('gsuccessNetworkAssignmentid23', successNetworkAssignmentid);",
													"});",
													"",
													"",
													"",
													"",
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\r\n\t\"cmc_staffroleid@odata.bind\": \"/cmc_titles({{groleid23}})\",\r\n\t\"cmc_assigntoid@odata.bind\": \"/systemusers({{ginstructorId23}})\"\r\n\r\n}"
										},
										"url": {
											"raw": "{{Eresource_URL}}cmc_successnetworkassignments",
											"host": [
												"{{Eresource_URL}}cmc_successnetworkassignments"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "ScoreDefinition",
							"item": [
								{
									"name": "Create ScoreDefinition",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Score Definition Created\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
													"    var jsonData = JSON.parse(responseBody);",
													"    var scoreDefinitionid = jsonData.cmc_scoredefinitionid;",
													"    var scoreDefinitionName = jsonData.cmc_scoredefinitionname;",
													"    console.log(\"Score Definition name is: \" + scoreDefinitionName);",
													"",
													"    pm.globals.set('gscoreDefinitionid23', scoreDefinitionid);",
													"});",
													"",
													"",
													"",
													"",
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\r\n\t\"cmc_baseentityname\": \"Contact\",\r\n\t\"cmc_baseentity\": \"contact\",\r\n\t\"cmc_scoredefinitionname\": \"UIAuto-SD-898210\",\r\n\t\"cmc_targetattributename\": \"contact.cmc_currentretentionscore\"\r\n\r\n}"
										},
										"url": {
											"raw": "{{Eresource_URL}}cmc_scoredefinitions",
											"host": [
												"{{Eresource_URL}}cmc_scoredefinitions"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "ToValidateDateFeature",
			"item": [
				{
					"name": "TestCase -904484",
					"item": [
						{
							"name": "Get Program records",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var programida,programidb;",
											"",
											"pm.test(\"Program record Fetched\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    programida = jsonData.value[0].mshied_programid;",
											"    var programNamea = jsonData.value[0].mshied_name;",
											"    console.log('Program Name 1 is: ' +programNamea);",
											"",
											"    programidb = jsonData.value[1].mshied_programid;",
											"    var programNameb = jsonData.value[1].mshied_name;",
											"    console.log('Program Name 2 is: ' +programNameb);",
											"",
											"",
											"});",
											"",
											"pm.globals.set('gprogramida30', programida);",
											"pm.globals.set('gprogramidb30', programidb);",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"url": {
									"raw": "{{Eresource_URL}}mshied_programs",
									"host": [
										"{{Eresource_URL}}mshied_programs"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create ApplicationType",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var applicationtypeid;",
											"",
											"pm.test(\"ApplicantType Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    applicationtypeid = jsonData.cmc_applicationtypeid;",
											"    var applicationTypeName = jsonData.cmc_applicationtypename;",
											"    console.log(\"Application Type name is: \" + applicationTypeName);",
											"",
											"});",
											"",
											"pm.globals.set('gapplicationtypeid30', applicationtypeid);",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"cmc_applicationtypename\":\"UIAuto-ApplicationType-904484\",\r\n\"cmc_applicationgroup\":\"175490001\"\r\n\r\n}\r\n\r\n"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applicationtypes",
									"host": [
										"{{Eresource_URL}}cmc_applicationtypes"
									]
								}
							},
							"response": []
						},
						{
							"name": "Associate Program 1 to Application Type",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Adding Program To Application Type\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([204, 201, 202, 200]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    var programname = jsonData.mshied_name;",
											"    console.log('Program 1 that is added to Application type is:' +programname);",
											"",
											"",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"@odata.id\": \"{{Eresource_URL}}mshied_programs({{gprogramida30}})\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applicationtypes({{gapplicationtypeid30}})/cmc_cmc_applicationtype_mshied_program/$ref",
									"host": [
										"{{Eresource_URL}}cmc_applicationtypes({{gapplicationtypeid30}})"
									],
									"path": [
										"cmc_cmc_applicationtype_mshied_program",
										"$ref"
									]
								}
							},
							"response": []
						},
						{
							"name": "Associate Program 2 to Application Type",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Adding Program To Application Type\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([204, 201, 202, 200]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    var programname = jsonData.mshied_name;",
											"    console.log('Program 2 that is added to Application type is:' + programname);",
											"",
											"",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n                \r\n                \"@odata.id\":\"{{Eresource_URL}}mshied_programs({{gprogramidb30}})\"\r\n}\r\n\r\n"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applicationtypes({{gapplicationtypeid30}})/cmc_cmc_applicationtype_mshied_program/$ref",
									"host": [
										"{{Eresource_URL}}cmc_applicationtypes({{gapplicationtypeid30}})"
									],
									"path": [
										"cmc_cmc_applicationtype_mshied_program",
										"$ref"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create AcademicPeriod",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var academicPeriodid;",
											"",
											"pm.test(\"Academic Period Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    academicPeriodid = jsonData.mshied_academicperiodid;",
											"    var academicPeriodName = jsonData.mshied_name;",
											"",
											"    console.log(\"Academic Period Name is: \" + academicPeriodName);",
											"",
											"});",
											"",
											"pm.globals.set('gacademicPeriodid30', academicPeriodid);",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var moment = require('moment');\r",
											"pm.environment.set(\"timestamp\", moment().add(1, 'days').format(\"YYYY-MM-DD\"));\r",
											"pm.environment.set(\"timestampEndDate\", moment().add(100, 'days').format(\"YYYY-MM-DD\"));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"mshied_enddate\": \"{{timestampEndDate}}\",\r\n\"mshied_startdate\": \"{{timestamp}}\",\r\n\"mshied_code\": \"UI-904484\",\r\n\"mshied_name\": \"UIAuto-AcademicPer-904484\"\r\n\r\n}\r\n\r\n"
								},
								"url": {
									"raw": "{{Eresource_URL}}mshied_academicperiods",
									"host": [
										"{{Eresource_URL}}mshied_academicperiods"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create ApplicationPeriod",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var applicationPeriodid;",
											"",
											"pm.test(\"ApplicantPeriod Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    applicationPeriodid = jsonData.cmc_applicationperiodid;",
											"    var applicationPeriodName = jsonData.cmc_applicationperiodname;",
											"",
											"    console.log(\"Application Period Name is: \" + applicationPeriodName);",
											"",
											"});",
											"",
											"pm.globals.set('gapplicationPeriodid30', applicationPeriodid);",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\r\n\"cmc_AcademicPeriodId@odata.bind\": \"/mshied_academicperiods({{gacademicPeriodid30}})\",\r\n\"cmc_applicationperiodname\": \"UIAuto-ApplicationPeriod-904484\"\r\n\r\n}\r\n\r\n"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applicationperiods",
									"host": [
										"{{Eresource_URL}}cmc_applicationperiods"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Application Definition",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var applicationdefinitionid;",
											"",
											"pm.test(\"Application Requirment Definition Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    applicationdefinitionid = jsonData.cmc_applicationdefinitionid;",
											"    var applicationDefinitionName = jsonData.cmc_applicationdefinitionname;",
											"",
											"    console.log(\"Application Definition name is: \" + applicationDefinitionName);",
											"",
											"});",
											"",
											"pm.globals.set('gappdefid30', applicationdefinitionid);",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"cmc_applicationdefinitionname\":\"UIAuto-ApplicationDefinition-904484\"\r\n\r\n\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applicationdefinitions",
									"host": [
										"{{Eresource_URL}}cmc_applicationdefinitions"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Application Definition Version",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var applicationdefinitionverid, applicationdefinitionvername;",
											"",
											"pm.test(\"Application Requirment Definition Version Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    applicationdefinitionverid = jsonData.cmc_applicationdefinitionversionid;",
											"    applicationdefinitionvername = jsonData.cmc_applicationdefinitionversionname;",
											"    console.log(\"Application Definition version name is: \" + applicationdefinitionvername);",
											"});",
											"",
											"pm.globals.set('gappdefverid30', applicationdefinitionverid);",
											"pm.globals.set('gapplicationdefinitionvername30', applicationdefinitionvername);",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"cmc_applicationdefinitionversionname\":\"UIAuto-ADV-904484\",\r\n\"cmc_applicationtype@odata.bind\":\"/cmc_applicationtypes({{gapplicationtypeid30}})\",\r\n\"cmc_applicationdefinitionid@odata.bind\":\"/cmc_applicationdefinitions({{gappdefid30}})\",\r\n\"cmc_createlifecycle\": false\r\n\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applicationdefinitionversions",
									"host": [
										"{{Eresource_URL}}cmc_applicationdefinitionversions"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "TovalidateDecision",
			"item": [
				{
					"name": "TestCase -1017531",
					"item": [
						{
							"name": "Create ApplicationType",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var applicationtypeid;",
											"",
											"pm.test(\"ApplicantType Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    applicationtypeid = jsonData.cmc_applicationtypeid;",
											"    var applicationTypeName = jsonData.cmc_applicationtypename;",
											"    console.log(\"Application Type name is: \" + applicationTypeName);",
											"",
											"});",
											"",
											"pm.globals.set('gapplicationtypeid31', applicationtypeid);",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"cmc_applicationtypename\":\"UIAuto-ApplicationType-1017531\",\r\n\"cmc_applicationgroup\":\"175490001\"\r\n\r\n}\r\n\r\n"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applicationtypes",
									"host": [
										"{{Eresource_URL}}cmc_applicationtypes"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create AcademicPeriod",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var academicPeriodid;",
											"",
											"pm.test(\"Academic Period Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    academicPeriodid = jsonData.mshied_academicperiodid;",
											"    var academicPeriodName = jsonData.mshied_name;",
											"    console.log(\"Academic Period Name is: \" + academicPeriodName);",
											"",
											"});",
											"",
											"pm.globals.set('gacademicPeriodid31', academicPeriodid);",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var moment = require('moment');\r",
											"pm.environment.set(\"timestamp\", moment().add(1, 'days').format(\"YYYY-MM-DD\"));\r",
											"pm.environment.set(\"timestampEndDate\", moment().add(100, 'days').format(\"YYYY-MM-DD\"));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"mshied_enddate\": \"{{timestampEndDate}}\",\r\n\"mshied_startdate\": \"{{timestamp}}\",\r\n\"mshied_code\": \"UI-1017531\",\r\n\"mshied_name\": \"UIAuto-AcademicPer-1017531\"\r\n\r\n}\r\n\r\n"
								},
								"url": {
									"raw": "{{Eresource_URL}}mshied_academicperiods",
									"host": [
										"{{Eresource_URL}}mshied_academicperiods"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create ApplicationPeriod",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var applicationPeriodid;",
											"",
											"pm.test(\"ApplicantPeriod Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    applicationPeriodid = jsonData.cmc_applicationperiodid;",
											"    var applicationPeriodName = jsonData.cmc_applicationperiodname;",
											"",
											"    console.log(\"Application Period Name is: \" + applicationPeriodName);",
											"",
											"});",
											"",
											"pm.globals.set('gapplicationPeriodid31', applicationPeriodid);",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\r\n\"cmc_AcademicPeriodId@odata.bind\": \"/mshied_academicperiods({{gacademicPeriodid31}})\",\r\n\"cmc_applicationperiodname\": \"UIAuto-ApplicationPeriod-1017531\"\r\n\r\n}\r\n\r\n"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applicationperiods",
									"host": [
										"{{Eresource_URL}}cmc_applicationperiods"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Decision Definition",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var applicationDecDefid;",
											"",
											"pm.test(\"Application Decision Definition Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    applicationDecDefid = jsonData.cmc_applicationdecisiondefinitionid;",
											"    var applicationDecDefName = jsonData.cmc_applicationdecisiondefinitionname;",
											"",
											"    console.log(\"Decision Definition record name is: \" + applicationDecDefName);",
											"",
											"});",
											"",
											"pm.globals.set('gapplicationDecDefid31', applicationDecDefid);",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"cmc_applicationdecisiondefinitionname\":\"UIAuto-ApplicationDecDef-1017531\"\r\n\r\n\r\n}\r\n\r\n"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applicationdecisiondefinitions",
									"host": [
										"{{Eresource_URL}}cmc_applicationdecisiondefinitions"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Decision Definition Detail",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var applicationDecDefDetailid;",
											"",
											"pm.test(\"Application Decision Definition Detail Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    applicationDecDefDetailid = jsonData.cmc_applicationdecisiondefinitiondetailid;",
											"    var applicationDecDefDetailName = jsonData.cmc_applicationdecisiondefinitiondetailname;",
											"",
											"    console.log(\"Decision Definition Detail record name is: \" + applicationDecDefDetailName);",
											"",
											"});",
											"",
											"pm.globals.set('gapplicationDecDefDetailid9', applicationDecDefDetailid);",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"cmc_decisionstatus\": 175490000,\r\n\"cmc_applicationdecisiondefinitiondetailname\": \"UIAuto-ApplicationDecDefDetail-1017531\",\r\n\"cmc_applicationdecisiondefinition@odata.bind\": \"/cmc_applicationdecisiondefinitions({{gapplicationDecDefid31}})\"\r\n\r\n}\r\n\r\n"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applicationdecisiondefinitiondetails",
									"host": [
										"{{Eresource_URL}}cmc_applicationdecisiondefinitiondetails"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Application Definition",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var applicationdefinitionid;",
											"",
											"pm.test(\"Application Requirment Definition Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    applicationdefinitionid = jsonData.cmc_applicationdefinitionid;",
											"    var applicationDefinitionName = jsonData.cmc_applicationdefinitionname;",
											"",
											"    console.log(\"Application Definition name is: \" + applicationDefinitionName);",
											"",
											"});",
											"",
											"pm.globals.set('gappdefid31', applicationdefinitionid);",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"cmc_applicationdefinitionname\":\"UIAuto-ApplicationDefinition-1017531\",\r\n\"cmc_decisiondefinitionid@odata.bind\": \"/cmc_applicationdecisiondefinitions({{gapplicationDecDefid31}})\"\r\n\r\n}\r\n\r\n"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applicationdefinitions",
									"host": [
										"{{Eresource_URL}}cmc_applicationdefinitions"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Application Definition Version",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var applicationdefinitionverid, applicationdefinitionvername;",
											"",
											"pm.test(\"Application Requirment Definition Version Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    applicationdefinitionverid = jsonData.cmc_applicationdefinitionversionid;",
											"    applicationdefinitionvername = jsonData.cmc_applicationdefinitionversionname;",
											"    console.log(\"Application Definition version name is: \" + applicationdefinitionvername);",
											"});",
											"",
											"pm.globals.set('gappdefverid31', applicationdefinitionverid);",
											"pm.globals.set('gapplicationdefinitionvername31', applicationdefinitionvername);",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"cmc_applicationdefinitionversionname\":\"UIAuto-ADV-1017531\",\r\n\"cmc_applicationtype@odata.bind\":\"/cmc_applicationtypes({{gapplicationtypeid31}})\",\r\n\"cmc_applicationdefinitionid@odata.bind\":\"/cmc_applicationdefinitions({{gappdefid31}})\",\r\n\"cmc_createlifecycle\": false\r\n\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applicationdefinitionversions",
									"host": [
										"{{Eresource_URL}}cmc_applicationdefinitionversions"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get SourceCategory",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var sourceCategoryid;",
											"",
											"pm.test(\"Source category record Fetched\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    sourceCategoryid = jsonData.value[0].cmc_sourcecategoryid;",
											"    var sourceCategoryName = jsonData.value[0].cmc_sourcecategoryname;",
											"    console.log('SourceCategory Name is: ' + sourceCategoryName);",
											"",
											"});",
											"",
											"pm.globals.set('gsourceCategoryid31', sourceCategoryid);",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"url": {
									"raw": "{{Eresource_URL}}cmc_sourcecategories",
									"host": [
										"{{Eresource_URL}}cmc_sourcecategories"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get SourceMethod",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var sourceMethodid;",
											"",
											"pm.test(\"Source Method record Fetched\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    sourceMethodid = jsonData.value[0].cmc_sourcemethodid;",
											"    var sourceMethodName = jsonData.value[0].cmc_sourcemethodname;",
											"    console.log('SourceMethod Name is: ' + sourceMethodName);",
											"",
											"});",
											"",
											"pm.globals.set('gsourceMethodid31', sourceMethodid);",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"url": {
									"raw": "{{Eresource_URL}}cmc_sourcemethods",
									"host": [
										"{{Eresource_URL}}cmc_sourcemethods"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Contact",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Contact Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    var contactid = jsonData.contactid;",
											"    var contactName = jsonData.fullname;",
											"    console.log(\"Contact name is: \" + contactName);",
											"",
											"    pm.globals.set('gcontactid31', contactid);",
											"});",
											"",
											"",
											"",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"lastname\": \"Contact-1017531\",\r\n\t\"firstname\": \"UIAuto\",\r\n\t\"mshied_contacttype\": \"494280011\",\r\n\t\"cmc_sourcecategoryid@odata.bind\": \"/cmc_sourcecategories({{gsourceCategoryid31}})\",\r\n\t\"cmc_sourcemethodid@odata.bind\": \"/cmc_sourcemethods({{gsourceMethodid31}})\"\r\n\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}contacts",
									"host": [
										"{{Eresource_URL}}contacts"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Application Registration",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Application Registration Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    var applicationRegId = jsonData.cmc_applicationregistrationid;",
											"    var applicationRegName = jsonData.cmc_applicationregistration;",
											"    console.log(\"Application Registration name is: \" + applicationRegName);",
											"",
											"    pm.globals.set('gapplicationRegId31', applicationRegId);",
											"    pm.globals.set('gapplicationRegName31', applicationRegName);",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\r\n\"cmc_contactid@odata.bind\": \"/contacts({{gcontactid31}})\",\r\n\"cmc_applicationdefinitionversionid@odata.bind\": \"/cmc_applicationdefinitionversions({{gappdefverid31}})\",\r\n\"cmc_applicationstatus\": 175490000,\r\n\"cmc_applicationsubmitted\": false\r\n\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applicationregistrations",
									"host": [
										"{{Eresource_URL}}cmc_applicationregistrations"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Application",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Application Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    var applicationId = jsonData.cmc_applicationid;",
											"    var applicationName = jsonData.cmc_applicationname;",
											"    console.log(\"Application name is: \" + applicationName);",
											"",
											"    pm.globals.set('gapplicationId31', applicationId);",
											"    pm.globals.set('gapplicationName31', applicationName);",
											"",
											"});",
											"",
											"",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\r\n\"cmc_applicationstatus\": 175490001,\r\n\"cmc_contactid@odata.bind\": \"/contacts({{gcontactid31}})\",\r\n\"cmc_applicationperiodid@odata.bind\": \"/cmc_applicationperiods({{gapplicationPeriodid31}})\",\r\n\"cmc_applicationregistration@odata.bind\": \"/cmc_applicationregistrations({{gapplicationRegId31}})\"\r\n\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applications",
									"host": [
										"{{Eresource_URL}}cmc_applications"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "CourseHistoryFeature",
			"item": [
				{
					"name": "TestCase -838362",
					"item": [
						{
							"name": "Create AcademicPeriod",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var academicPeriodid;",
											"",
											"pm.test(\"Academic Period Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    academicPeriodid = jsonData.mshied_academicperiodid;",
											"    var academicPeriodName = jsonData.mshied_name;",
											"",
											"    console.log(\"Academic Period Name is: \" + academicPeriodName);",
											"",
											"});",
											"",
											"pm.globals.set('gacademicPeriodid32', academicPeriodid);",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var moment = require('moment');\r",
											"pm.environment.set(\"timestamp\", moment().add(1, 'days').format(\"YYYY-MM-DD\"));\r",
											"pm.environment.set(\"timestampEndDate\", moment().add(100, 'days').format(\"YYYY-MM-DD\"));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"mshied_enddate\": \"{{timestampEndDate}}\",\r\n\"mshied_startdate\": \"{{timestamp}}\",\r\n\"mshied_code\": \"UI-838362\",\r\n\"mshied_name\": \"UIAuto-AcademicPer-838362\"\r\n\r\n}\r\n\r\n"
								},
								"url": {
									"raw": "{{Eresource_URL}}mshied_academicperiods",
									"host": [
										"{{Eresource_URL}}mshied_academicperiods"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Course",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var courseid;",
											"",
											"pm.test(\"Course Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    courseid = jsonData.mshied_courseid;",
											"    var courseName = jsonData.mshied_name;",
											"    console.log(\"Course Name is: \" + courseName);",
											"",
											"});",
											"",
											"pm.globals.set('gcourseid32', courseid);",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"mshied_coursenumber\": \"UIAuto-838362\",\r\n\t\"mshied_name\": \"UIAuto-Course-838362\"\r\n\r\n}\r\n\r\n"
								},
								"url": {
									"raw": "{{Eresource_URL}}mshied_courses",
									"host": [
										"{{Eresource_URL}}mshied_courses"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Instructor record",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var instructorId, instructorName;",
											"",
											"pm.test(\"Get instructor record\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    var result = jsonData.value;",
											"",
											"    instructorId = result[0].systemuserid;",
											"    instructorName = result[0].fullname;",
											"    console.log(\"instructor ID is : \" + instructorId);",
											"    console.log(\"instructor name is : \" + instructorName);",
											"});",
											"",
											"pm.globals.set('ginstructorId32', instructorId);",
											"",
											"",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									},
									{
										"key": "OData-Version",
										"value": "4.0"
									},
									{
										"key": "OData-MaxVersion",
										"value": "4.0"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "{{Eresource}}api/data/{{Eversion}}/systemusers?$filter=fullname eq 'DCRM DCRM Faculty/Instructor'",
									"host": [
										"{{Eresource}}api"
									],
									"path": [
										"data",
										"{{Eversion}}",
										"systemusers"
									],
									"query": [
										{
											"key": "$filter",
											"value": "fullname eq 'DCRM DCRM Faculty/Instructor'"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create CourseSection",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var courseSectionid;",
											"",
											"pm.test(\"Course Section Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    courseSectionid = jsonData.mshied_coursesectionid;",
											"    var courseSectionName = jsonData.mshied_name;",
											"    console.log(\"Course Section Name is: \" + courseSectionName);",
											"",
											"});",
											"",
											"pm.globals.set('gcourseSectionid32', courseSectionid);",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"mshied_AcademicPeriodId@odata.bind\": \"/mshied_academicperiods({{gacademicPeriodid32}})\",\r\n\t\"mshied_CourseId@odata.bind\": \"/mshied_courses({{gcourseid32}})\",\r\n\t\"cmc_staffid@odata.bind\": \"/systemusers({{ginstructorId32}})\"\r\n\r\n}\r\n\r\n"
								},
								"url": {
									"raw": "{{Eresource_URL}}mshied_coursesections",
									"host": [
										"{{Eresource_URL}}mshied_coursesections"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get SourceCategory",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var sourceCategoryid;",
											"",
											"pm.test(\"Source category record Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    sourceCategoryid = jsonData.value[0].cmc_sourcecategoryid;",
											"    var sourceCategoryName = jsonData.value[0].cmc_sourcecategoryname;",
											"    console.log('SourceCategory Name is: ' + sourceCategoryName);",
											"",
											"});",
											"",
											"pm.globals.set('gsourceCategoryid32a', sourceCategoryid);",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"url": {
									"raw": "{{Eresource_URL}}cmc_sourcecategories",
									"host": [
										"{{Eresource_URL}}cmc_sourcecategories"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get SourceMethod",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var sourceMethodid;",
											"",
											"pm.test(\"Source Method record Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    sourceMethodid = jsonData.value[0].cmc_sourcemethodid;",
											"    var sourceMethodName = jsonData.value[0].cmc_sourcemethodname;",
											"    console.log('SourceMethod Name is: ' + sourceMethodName);",
											"",
											"});",
											"",
											"pm.globals.set('gsourceMethodid32a', sourceMethodid);",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"url": {
									"raw": "{{Eresource_URL}}cmc_sourcemethods",
									"host": [
										"{{Eresource_URL}}cmc_sourcemethods"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Contact record",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Contact Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    var contactid = jsonData.contactid;",
											"    var contactName = jsonData.fullname;",
											"    console.log(\"Contact name is: \" + contactName);",
											"",
											"    pm.globals.set('gcontactid32a', contactid);",
											"});",
											"",
											"",
											"",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"lastname\": \"Contact-838362\",\r\n\t\"firstname\": \"UIAuto\",\r\n\t\"mshied_contacttype\": \"494280011\",\r\n\t\"cmc_sourcecategoryid@odata.bind\": \"/cmc_sourcecategories({{gsourceCategoryid32a}})\",\r\n\t\"cmc_sourcemethodid@odata.bind\": \"/cmc_sourcemethods({{gsourceMethodid32a}})\"\r\n\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}contacts",
									"host": [
										"{{Eresource_URL}}contacts"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "TestCase -750901",
					"item": [
						{
							"name": "Get SourceCategory",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var sourceCategoryid;",
											"",
											"pm.test(\"Source category record Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    sourceCategoryid = jsonData.value[0].cmc_sourcecategoryid;",
											"    var sourceCategoryName = jsonData.value[0].cmc_sourcecategoryname;",
											"    console.log('SourceCategory Name is: ' + sourceCategoryName);",
											"",
											"});",
											"",
											"pm.globals.set('gsourceCategoryid32b', sourceCategoryid);",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"url": {
									"raw": "{{Eresource_URL}}cmc_sourcecategories",
									"host": [
										"{{Eresource_URL}}cmc_sourcecategories"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get SourceMethod",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var sourceMethodid;",
											"",
											"pm.test(\"Source Method record Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    sourceMethodid = jsonData.value[0].cmc_sourcemethodid;",
											"    var sourceMethodName = jsonData.value[0].cmc_sourcemethodname;",
											"    console.log('SourceMethod Name is: ' + sourceMethodName);",
											"",
											"});",
											"",
											"pm.globals.set('gsourceMethodid32b', sourceMethodid);",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"url": {
									"raw": "{{Eresource_URL}}cmc_sourcemethods",
									"host": [
										"{{Eresource_URL}}cmc_sourcemethods"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Contact record",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Contact Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    var contactid = jsonData.contactid;",
											"    var contactName = jsonData.fullname;",
											"    console.log(\"Contact name is: \" + contactName);",
											"",
											"    pm.globals.set('gcontactid32b', contactid);",
											"});",
											"",
											"",
											"",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"lastname\": \"Contact-750901\",\r\n\t\"firstname\": \"UIAuto\",\r\n\t\"mshied_contacttype\": \"494280011\",\r\n\t\"cmc_sourcecategoryid@odata.bind\": \"/cmc_sourcecategories({{gsourceCategoryid32b}})\",\r\n\t\"cmc_sourcemethodid@odata.bind\": \"/cmc_sourcemethods({{gsourceMethodid32b}})\"\r\n\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}contacts",
									"host": [
										"{{Eresource_URL}}contacts"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "ToValidateConnectionGridFeature",
			"item": [
				{
					"name": "TestCase -846742",
					"item": [
						{
							"name": "Get SourceCategory",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var sourceCategoryid;",
											"",
											"pm.test(\"Source category record Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    sourceCategoryid = jsonData.value[0].cmc_sourcecategoryid;",
											"    var sourceCategoryName = jsonData.value[0].cmc_sourcecategoryname;",
											"    console.log('SourceCategory Name is: ' + sourceCategoryName);",
											"",
											"});",
											"",
											"pm.globals.set('gsourceCategoryid33', sourceCategoryid);",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"url": {
									"raw": "{{Eresource_URL}}cmc_sourcecategories",
									"host": [
										"{{Eresource_URL}}cmc_sourcecategories"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get SourceMethod",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var sourceMethodid;",
											"",
											"pm.test(\"Source Method record Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    sourceMethodid = jsonData.value[0].cmc_sourcemethodid;",
											"    var sourceMethodName = jsonData.value[0].cmc_sourcemethodname;",
											"    console.log('SourceMethod Name is: ' + sourceMethodName);",
											"",
											"});",
											"",
											"pm.globals.set('gsourceMethodid33', sourceMethodid);",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"url": {
									"raw": "{{Eresource_URL}}cmc_sourcemethods",
									"host": [
										"{{Eresource_URL}}cmc_sourcemethods"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Contact record 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Contact Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    var contactid = jsonData.contactid;",
											"    var contactName = jsonData.fullname;",
											"    console.log(\"Contact name is: \" + contactName);",
											"",
											"    pm.globals.set('gcontactid33a', contactid);",
											"});",
											"",
											"",
											"",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"lastname\": \"Contact-846742-1\",\r\n\t\"firstname\": \"UIAuto\",\r\n\t\"mshied_contacttype\": \"494280011\",\r\n\t\"cmc_sourcecategoryid@odata.bind\": \"/cmc_sourcecategories({{gsourceCategoryid33}})\",\r\n\t\"cmc_sourcemethodid@odata.bind\": \"/cmc_sourcemethods({{gsourceMethodid33}})\"\r\n\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}contacts",
									"host": [
										"{{Eresource_URL}}contacts"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Contact record 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Contact Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    var contactid = jsonData.contactid;",
											"    var contactName = jsonData.fullname;",
											"    console.log(\"Contact name is: \" + contactName);",
											"",
											"    pm.globals.set('gcontactid33b', contactid);",
											"});",
											"",
											"",
											"",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"lastname\": \"Contact-846742-2\",\r\n\t\"firstname\": \"UIAuto\",\r\n\t\"mshied_contacttype\": \"494280011\",\r\n\t\"cmc_sourcecategoryid@odata.bind\": \"/cmc_sourcecategories({{gsourceCategoryid33}})\",\r\n\t\"cmc_sourcemethodid@odata.bind\": \"/cmc_sourcemethods({{gsourceMethodid33}})\"\r\n\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}contacts",
									"host": [
										"{{Eresource_URL}}contacts"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Connection role",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Connection roles Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    var connectionroleId = jsonData.connectionroleid;",
											"    ",
											"",
											"    pm.globals.set('gconnectionroleId33', connectionroleId);",
											"});",
											"",
											"",
											"",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"category\": 175490000,\r\n\t\"name\": \"UI connection role_846742\"\r\n\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}connectionroles",
									"host": [
										"{{Eresource_URL}}connectionroles"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Account",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Account Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    var accountid = jsonData.accountid;",
											"    var accountName = jsonData.name;",
											"    console.log(\"Account name is: \" + accountName);",
											"",
											"    pm.globals.set('gaccountid33', accountid);",
											"});",
											"",
											"",
											"",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"name\": \"Account-846742\",\r\n\t\"mshied_accounttype\": 494280000\r\n\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}accounts",
									"host": [
										"{{Eresource_URL}}accounts"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Connection to contact record 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Connection Created to contact 1\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    ",
											"   ",
											"});",
											"",
											"",
											"",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\r\n\"record1id_contact@odata.bind\": \"/contacts({{gcontactid33a}})\",\r\n\"record2id_account@odata.bind\": \"/accounts({{gaccountid33}})\",\r\n\"record2roleid@odata.bind\": \"/connectionroles({{gconnectionroleId33}})\"\r\n\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}connections",
									"host": [
										"{{Eresource_URL}}connections"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "AccountFeature",
			"item": [
				{
					"name": "TestCase -837527",
					"item": [
						{
							"name": "Create Account",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Account Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    var accountid = jsonData.accountid;",
											"    var accountName = jsonData.name;",
											"    console.log(\"Account name is: \" + accountName);",
											"",
											"    pm.globals.set('gaccountid34', accountid);",
											"});",
											"",
											"",
											"",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"name\": \"Account-837527\",\r\n\t\"mshied_accounttype\": 494280000\r\n\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}accounts",
									"host": [
										"{{Eresource_URL}}accounts"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "TestCase -840929",
					"item": [
						{
							"name": "Create Account",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Account Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    var accountid = jsonData.accountid;",
											"    var accountName = jsonData.name;",
											"    console.log(\"Account name is: \" + accountName);",
											"",
											"    pm.globals.set('gaccountid44', accountid);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"name\": \"Account-840929\",\r\n\t\"mshied_accounttype\": 494280001\r\n\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}accounts",
									"host": [
										"{{Eresource_URL}}accounts"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "SuccessPlanTemplateFeature",
			"item": [
				{
					"name": "TestCase -723127",
					"item": [
						{
							"name": "Contact with AcademicPeriod",
							"item": [
								{
									"name": "Create AcademicPeriod",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var academicPeriodid;",
													"",
													"pm.test(\"Academic Period Created\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
													"    var jsonData = JSON.parse(responseBody);",
													"    academicPeriodid = jsonData.mshied_academicperiodid;",
													"    var academicPeriodName = jsonData.mshied_name;",
													"",
													"    console.log(\"Academic Period Name is: \" + academicPeriodName);",
													"",
													"});",
													"",
													"pm.globals.set('gacademicPeriodid35', academicPeriodid);",
													"",
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var moment = require('moment');\r",
													"pm.environment.set(\"timestamp\", moment().add(1, 'days').format(\"YYYY-MM-DD\"));\r",
													"pm.environment.set(\"timestampEndDate\", moment().add(100, 'days').format(\"YYYY-MM-DD\"));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\"mshied_enddate\": \"{{timestampEndDate}}\",\r\n\"mshied_startdate\": \"{{timestamp}}\",\r\n\"mshied_code\": \"UI-723127\",\r\n\"mshied_name\": \"UIAuto-AcademicPer-723127\"\r\n\r\n}\r\n\r\n"
										},
										"url": {
											"raw": "{{Eresource_URL}}mshied_academicperiods",
											"host": [
												"{{Eresource_URL}}mshied_academicperiods"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get SourceCategory",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var sourceCategoryid;",
													"",
													"pm.test(\"Source category record Fetched\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
													"    var jsonData = JSON.parse(responseBody);",
													"    sourceCategoryid = jsonData.value[0].cmc_sourcecategoryid;",
													"    var sourceCategoryName = jsonData.value[0].cmc_sourcecategoryname;",
													"    console.log('SourceCategory Name is: ' + sourceCategoryName);",
													"",
													"});",
													"",
													"pm.globals.set('gsourceCategoryid35', sourceCategoryid);",
													"",
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											}
										],
										"url": {
											"raw": "{{Eresource_URL}}cmc_sourcecategories",
											"host": [
												"{{Eresource_URL}}cmc_sourcecategories"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get SourceMethod",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var sourceMethodid;",
													"",
													"pm.test(\"Source Method record Fetched\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
													"    var jsonData = JSON.parse(responseBody);",
													"    sourceMethodid = jsonData.value[0].cmc_sourcemethodid;",
													"    var sourceMethodName = jsonData.value[0].cmc_sourcemethodname;",
													"    console.log('SourceMethod Name is: ' + sourceMethodName);",
													"",
													"});",
													"",
													"pm.globals.set('gsourceMethodid35', sourceMethodid);",
													"",
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											}
										],
										"url": {
											"raw": "{{Eresource_URL}}cmc_sourcemethods",
											"host": [
												"{{Eresource_URL}}cmc_sourcemethods"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Contact record 1",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Contact Created\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
													"    var jsonData = JSON.parse(responseBody);",
													"    var contactid = jsonData.contactid;",
													"    var contactName = jsonData.fullname;",
													"    console.log(\"Contact name 1 is: \" + contactName);",
													"",
													"    pm.globals.set('gcontactid35a', contactid);",
													"});",
													"",
													"",
													"",
													"",
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"lastname\": \"Contact-723127-1\",\r\n\t\"firstname\": \"UIAuto\",\r\n\t\"mshied_contacttype\": \"494280011\",\r\n\t\"cmc_sourcecategoryid@odata.bind\": \"/cmc_sourcecategories({{gsourceCategoryid35}})\",\r\n\t\"cmc_sourcemethodid@odata.bind\": \"/cmc_sourcemethods({{gsourceMethodid35}})\",\r\n\t\"mshied_CurrentAcademicPeriodId@odata.bind\": \"/mshied_academicperiods({{gacademicPeriodid35}})\"\r\n\r\n}"
										},
										"url": {
											"raw": "{{Eresource_URL}}contacts",
											"host": [
												"{{Eresource_URL}}contacts"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Contact record 2",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Contact Created\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
													"    var jsonData = JSON.parse(responseBody);",
													"    var contactid = jsonData.contactid;",
													"    var contactName = jsonData.fullname;",
													"    console.log(\"Contact name 2 is: \" + contactName);",
													"",
													"    pm.globals.set('gcontactid35b', contactid);",
													"});",
													"",
													"",
													"",
													"",
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"lastname\": \"Contact-723127-2\",\r\n\t\"firstname\": \"UIAuto\",\r\n\t\"mshied_contacttype\": \"494280011\",\r\n\t\"cmc_sourcecategoryid@odata.bind\": \"/cmc_sourcecategories({{gsourceCategoryid35}})\",\r\n\t\"cmc_sourcemethodid@odata.bind\": \"/cmc_sourcemethods({{gsourceMethodid35}})\",\r\n\t\"mshied_CurrentAcademicPeriodId@odata.bind\": \"/mshied_academicperiods({{gacademicPeriodid35}})\"\r\n\r\n}"
										},
										"url": {
											"raw": "{{Eresource_URL}}contacts",
											"host": [
												"{{Eresource_URL}}contacts"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "SuccessPlanTemplate",
							"item": [
								{
									"name": "Create Successplan Template",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Successplan Template created\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
													"    var jsonData = JSON.parse(responseBody);",
													"    pm.globals.set('gsuccessplanTemplateid35', jsonData.cmc_successplantemplateid);",
													"    var successplantemplatename = jsonData.cmc_successplantemplatename;",
													"    console.log(\"Success Plan Template name:\" + successplantemplatename);",
													"    pm.globals.set(\"gsuccessplantemplatename\", successplantemplatename);",
													"});",
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\"cmc_successplantemplatename\":\"UIAuto-SuccessPlanTemplate-723127\",\r\n\"cmc_portaldescription\":\"UIAuto-desc-723127\"\r\n\r\n}\r\n\r\n\r\n"
										},
										"url": {
											"raw": "{{Eresource_URL}}cmc_successplantemplates",
											"host": [
												"{{Eresource_URL}}cmc_successplantemplates"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create successplan To Do template--Static Date",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Successplan Static to do Template created\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
													"    var jsonData = JSON.parse(responseBody);",
													"    var successplantodotemplateid = jsonData.cmc_successplantodotemplateid;",
													"    var successplantodotemplatename = jsonData.cmc_successplantodotemplatename;",
													"    var parentsuccessplanid = jsonData._cmc_successplantemplateid_value;",
													"",
													"    console.log('Successplan Todo template name 1:' + successplantodotemplatename);",
													"",
													"    pm.globals.set('gsuccessplantodotemplateid35a', successplantodotemplateid);",
													"",
													"    ",
													"});",
													"",
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var current_timestamp = new Date();",
													"postman.setEnvironmentVariable(\"current_timestamp\", current_timestamp.toISOString());"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\"cmc_successplantodotemplatename\": \"UIAuto-SuccessPlanToDoStatic-723127\",\n\"cmc_successplantemplateid@odata.bind\":\"/cmc_successplantemplates({{gsuccessplanTemplateid35}})\",\n\"cmc_duedatecalculationtype\": 175490000,\n\"cmc_duedatestatic\": \"{{current_timestamp}}\"\n\n}\n\n"
										},
										"url": {
											"raw": "{{Eresource_URL}}cmc_successplantodotemplates",
											"host": [
												"{{Eresource_URL}}cmc_successplantodotemplates"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Successplan To Do Template-Calculated.Before.StartDateAcademicPeriod",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Successplan to do Template of calculated type Before.StartDateOfAcademicPeriod created\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
													"    var jsonData = JSON.parse(responseBody);",
													"    var successplantodotemplateid5 = jsonData.cmc_successplantodotemplateid;",
													"    var duedatecalculationtype = jsonData.cmc_duedatecalculationtype;",
													"    var cmc_successplantodotemplatename5 = jsonData.cmc_successplantodotemplatename;",
													"",
													"    console.log(\"Successplan Todo template name 2:\" + cmc_successplantodotemplatename5);",
													"    pm.globals.set(\"gsuccessplantodotemplateid35b\", successplantodotemplateid5);",
													"",
													"    ",
													"});",
													"",
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"type": "text",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer {{gaccess_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\n\"cmc_successplantodotemplatename\": \"UIAuto-SuccessPlanToDoCalculated-723127\",\n\"cmc_successplantemplateid@odata.bind\":\"/cmc_successplantemplates({{gsuccessplanTemplateid35}})\",\n\"cmc_duedatecalculationtype\": 175490001,\n\"cmc_duedatenumberofdays\": 3,\n\"cmc_duedatedaysdirection\": 175490000,\n\"cmc_duedatecalculationfield\":175490002\n\n\n}\n\n"
										},
										"url": {
											"raw": "{{Eresource_URL}}cmc_successplantodotemplates",
											"host": [
												"{{Eresource_URL}}cmc_successplantodotemplates"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "TestCase -737999",
					"item": [
						{
							"name": "Contact with and without AcademicPeriod",
							"item": [
								{
									"name": "Create AcademicPeriod",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var academicPeriodid;",
													"",
													"pm.test(\"Academic Period Created\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
													"    var jsonData = JSON.parse(responseBody);",
													"    academicPeriodid = jsonData.mshied_academicperiodid;",
													"    var academicPeriodName = jsonData.mshied_name;",
													"",
													"    console.log(\"Academic Period Name is: \" + academicPeriodName);",
													"",
													"});",
													"",
													"pm.globals.set('gacademicPeriodid35qa', academicPeriodid);",
													"",
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var moment = require('moment');\r",
													"pm.environment.set(\"timestamp\", moment().add(1, 'days').format(\"YYYY-MM-DD\"));\r",
													"\r",
													"pm.environment.set(\"timestampEndDate\", moment().add(100, 'days').format(\"YYYY-MM-DD\"));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\"mshied_enddate\": \"{{timestampEndDate}}\",\r\n\"mshied_startdate\": \"{{timestamp}}\",\r\n\"mshied_code\": \"UI-737999\",\r\n\"mshied_name\": \"UIAuto-AcademicPer-737999\"\r\n\r\n}\r\n\r\n"
										},
										"url": {
											"raw": "{{Eresource_URL}}mshied_academicperiods",
											"host": [
												"{{Eresource_URL}}mshied_academicperiods"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get SourceCategory",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var sourceCategoryid;",
													"",
													"pm.test(\"Source category record Fetched\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
													"    var jsonData = JSON.parse(responseBody);",
													"    sourceCategoryid = jsonData.value[0].cmc_sourcecategoryid;",
													"    var sourceCategoryName = jsonData.value[0].cmc_sourcecategoryname;",
													"    console.log('SourceCategory Name is: ' + sourceCategoryName);",
													"",
													"});",
													"",
													"pm.globals.set('gsourceCategoryid35qa', sourceCategoryid);",
													"",
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											}
										],
										"url": {
											"raw": "{{Eresource_URL}}cmc_sourcecategories",
											"host": [
												"{{Eresource_URL}}cmc_sourcecategories"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get SourceMethod",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var sourceMethodid;",
													"",
													"pm.test(\"Source Method record Fetched\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
													"    var jsonData = JSON.parse(responseBody);",
													"    sourceMethodid = jsonData.value[0].cmc_sourcemethodid;",
													"    var sourceMethodName = jsonData.value[0].cmc_sourcemethodname;",
													"    console.log('SourceMethod Name is: ' + sourceMethodName);",
													"",
													"});",
													"",
													"pm.globals.set('gsourceMethodid35qa', sourceMethodid);",
													"",
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											}
										],
										"url": {
											"raw": "{{Eresource_URL}}cmc_sourcemethods",
											"host": [
												"{{Eresource_URL}}cmc_sourcemethods"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Contact record 1",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Contact Created\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
													"    var jsonData = JSON.parse(responseBody);",
													"    var contactid = jsonData.contactid;",
													"    var contactName = jsonData.fullname;",
													"    console.log(\"Contact name 1 is: \" + contactName);",
													"",
													"    pm.globals.set('gcontactid35qa1', contactid);",
													"});",
													"",
													"",
													"",
													"",
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"lastname\": \"Contact-737999-1\",\r\n\t\"firstname\": \"UIAuto\",\r\n\t\"mshied_contacttype\": \"494280011\",\r\n\t\"cmc_sourcecategoryid@odata.bind\": \"/cmc_sourcecategories({{gsourceCategoryid35qa}})\",\r\n\t\"cmc_sourcemethodid@odata.bind\": \"/cmc_sourcemethods({{gsourceMethodid35qa}})\",\r\n\t\"mshied_CurrentAcademicPeriodId@odata.bind\": \"/mshied_academicperiods({{gacademicPeriodid35qa}})\"\r\n\r\n}"
										},
										"url": {
											"raw": "{{Eresource_URL}}contacts",
											"host": [
												"{{Eresource_URL}}contacts"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Contact record 2",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Contact Created\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
													"    var jsonData = JSON.parse(responseBody);",
													"    var contactid = jsonData.contactid;",
													"    var contactName = jsonData.fullname;",
													"    console.log(\"Contact name 2 is: \" + contactName);",
													"",
													"    pm.globals.set('gcontactid35qa2', contactid);",
													"});",
													"",
													"",
													"",
													"",
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"lastname\": \"Contact-737999-2\",\r\n\t\"firstname\": \"UIAuto\",\r\n\t\"mshied_contacttype\": \"494280011\",\r\n\t\"cmc_sourcecategoryid@odata.bind\": \"/cmc_sourcecategories({{gsourceCategoryid35qa}})\",\r\n\t\"cmc_sourcemethodid@odata.bind\": \"/cmc_sourcemethods({{gsourceMethodid35qa}})\",\r\n\t\"mshied_CurrentAcademicPeriodId@odata.bind\": \"/mshied_academicperiods({{gacademicPeriodid35qa}})\"\r\n\r\n}"
										},
										"url": {
											"raw": "{{Eresource_URL}}contacts",
											"host": [
												"{{Eresource_URL}}contacts"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Contact record 3",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Contact Created\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
													"    var jsonData = JSON.parse(responseBody);",
													"    var contactid = jsonData.contactid;",
													"    var contactName = jsonData.fullname;",
													"    console.log(\"Contact name 3 is: \" + contactName);",
													"",
													"    pm.globals.set('gcontactid35qa3', contactid);",
													"});",
													"",
													"",
													"",
													"",
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"lastname\": \"Contact-737999-3\",\r\n\t\"firstname\": \"UIAuto\",\r\n\t\"mshied_contacttype\": \"494280011\",\r\n\t\"cmc_sourcecategoryid@odata.bind\": \"/cmc_sourcecategories({{gsourceCategoryid35qa}})\",\r\n\t\"cmc_sourcemethodid@odata.bind\": \"/cmc_sourcemethods({{gsourceMethodid35qa}})\"\r\n\t\r\n\r\n}"
										},
										"url": {
											"raw": "{{Eresource_URL}}contacts",
											"host": [
												"{{Eresource_URL}}contacts"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Contact record 4",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Contact Created\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
													"    var jsonData = JSON.parse(responseBody);",
													"    var contactid = jsonData.contactid;",
													"    var contactName = jsonData.fullname;",
													"    console.log(\"Contact name 4 is: \" + contactName);",
													"",
													"    pm.globals.set('gcontactid35qa4', contactid);",
													"});",
													"",
													"",
													"",
													"",
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"lastname\": \"Contact-737999-4\",\r\n\t\"firstname\": \"UIAuto\",\r\n\t\"mshied_contacttype\": \"494280011\",\r\n\t\"cmc_sourcecategoryid@odata.bind\": \"/cmc_sourcecategories({{gsourceCategoryid35qa}})\",\r\n\t\"cmc_sourcemethodid@odata.bind\": \"/cmc_sourcemethods({{gsourceMethodid35qa}})\",\r\n\t\"mshied_CurrentAcademicPeriodId@odata.bind\": \"/mshied_academicperiods({{gacademicPeriodid35qa}})\"\r\n\r\n}"
										},
										"url": {
											"raw": "{{Eresource_URL}}contacts",
											"host": [
												"{{Eresource_URL}}contacts"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "ActivitiesFeature",
			"item": [
				{
					"name": "TestCase -760760",
					"item": [
						{
							"name": "Get SourceCategory",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var sourceCategoryid;",
											"",
											"pm.test(\"Source category record Fetched\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    sourceCategoryid = jsonData.value[0].cmc_sourcecategoryid;",
											"    var sourceCategoryName = jsonData.value[0].cmc_sourcecategoryname;",
											"    console.log('SourceCategory Name is: ' + sourceCategoryName);",
											"",
											"});",
											"",
											"pm.globals.set('gsourceCategoryid37', sourceCategoryid);",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"url": {
									"raw": "{{Eresource_URL}}cmc_sourcecategories",
									"host": [
										"{{Eresource_URL}}cmc_sourcecategories"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get SourceMethod",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var sourceMethodid;",
											"",
											"pm.test(\"Source Method record Fetched\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    sourceMethodid = jsonData.value[0].cmc_sourcemethodid;",
											"    var sourceMethodName = jsonData.value[0].cmc_sourcemethodname;",
											"    console.log('SourceMethod Name is: ' + sourceMethodName);",
											"",
											"});",
											"",
											"pm.globals.set('gsourceMethodid37', sourceMethodid);",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"url": {
									"raw": "{{Eresource_URL}}cmc_sourcemethods",
									"host": [
										"{{Eresource_URL}}cmc_sourcemethods"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Contact record",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Contact Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    var contactid = jsonData.contactid;",
											"    var contactName = jsonData.fullname;",
											"    console.log(\"Contact name is: \" + contactName);",
											"",
											"    pm.globals.set('gcontactid37', contactid);",
											"});",
											"",
											"",
											"",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"lastname\": \"Contact-760760\",\r\n\t\"firstname\": \"UIAuto\",\r\n\t\"mshied_contacttype\": \"494280011\",\r\n\t\"cmc_sourcecategoryid@odata.bind\": \"/cmc_sourcecategories({{gsourceCategoryid37}})\",\r\n\t\"cmc_sourcemethodid@odata.bind\": \"/cmc_sourcemethods({{gsourceMethodid37}})\"\r\n\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}contacts",
									"host": [
										"{{Eresource_URL}}contacts"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "TestCase -761164",
					"item": [
						{
							"name": "Get SourceCategory",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var sourceCategoryid;",
											"",
											"pm.test(\"Source category record Fetched\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    sourceCategoryid = jsonData.value[0].cmc_sourcecategoryid;",
											"    var sourceCategoryName = jsonData.value[0].cmc_sourcecategoryname;",
											"    console.log('SourceCategory Name is: ' + sourceCategoryName);",
											"",
											"});",
											"",
											"pm.globals.set('gsourceCategoryid38', sourceCategoryid);",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"url": {
									"raw": "{{Eresource_URL}}cmc_sourcecategories",
									"host": [
										"{{Eresource_URL}}cmc_sourcecategories"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get SourceMethod",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var sourceMethodid;",
											"",
											"pm.test(\"Source Method record Fetched\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    sourceMethodid = jsonData.value[0].cmc_sourcemethodid;",
											"    var sourceMethodName = jsonData.value[0].cmc_sourcemethodname;",
											"    console.log('SourceMethod Name is: ' + sourceMethodName);",
											"",
											"});",
											"",
											"pm.globals.set('gsourceMethodid38', sourceMethodid);",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"url": {
									"raw": "{{Eresource_URL}}cmc_sourcemethods",
									"host": [
										"{{Eresource_URL}}cmc_sourcemethods"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Contact record",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Contact Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    var contactid = jsonData.contactid;",
											"    var contactName = jsonData.fullname;",
											"    console.log(\"Contact name is: \" + contactName);",
											"",
											"    pm.globals.set('gcontactid38', contactid);",
											"});",
											"",
											"",
											"",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"lastname\": \"Contact-761164\",\r\n\t\"firstname\": \"UIAuto\",\r\n\t\"mshied_contacttype\": \"494280011\",\r\n\t\"emailaddress1\": \"Amarnathr@campusmgmt.com\",\r\n\t\"cmc_sourcecategoryid@odata.bind\": \"/cmc_sourcecategories({{gsourceCategoryid38}})\",\r\n\t\"cmc_sourcemethodid@odata.bind\": \"/cmc_sourcemethods({{gsourceMethodid38}})\"\r\n\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}contacts",
									"host": [
										"{{Eresource_URL}}contacts"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "StaffCalendarFeature",
			"item": [
				{
					"name": "TestCase -1062784",
					"item": [
						{
							"name": "Create Account",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Account Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    var accountid = jsonData.accountid;",
											"    var accountName = jsonData.name;",
											"    console.log(\"Account name is: \" + accountName);",
											"",
											"    pm.globals.set('gaccountid39', accountid);",
											"});",
											"",
											"",
											"",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"name\": \"Account-1062784\",\r\n\t\"mshied_accounttype\": 494280000\r\n\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}accounts",
									"host": [
										"{{Eresource_URL}}accounts"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "TestCase -1057428",
					"item": [
						{
							"name": "Create Account",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Account Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    var accountid = jsonData.accountid;",
											"    var accountName = jsonData.name;",
											"    console.log(\"Account name is: \" + accountName);",
											"",
											"    pm.globals.set('gaccountid40', accountid);",
											"});",
											"",
											"",
											"",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Account-1057428\",\r\n    \"mshied_accounttype\": 494280000\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}accounts",
									"host": [
										"{{Eresource_URL}}accounts"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get User record",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var instructorId, instructorName;",
											"",
											"pm.test(\"Get instructor record\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    var result = jsonData.value;",
											"",
											"    instructorId = result[0].systemuserid;",
											"    instructorName = result[0].fullname;",
											"    console.log(\"instructor ID is : \" + instructorId);",
											"    console.log(\"instructor name is : \" + instructorName);",
											"});",
											"",
											"pm.globals.set('ginstructorId40', instructorId);",
											"",
											"",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									},
									{
										"key": "OData-Version",
										"value": "4.0"
									},
									{
										"key": "OData-MaxVersion",
										"value": "4.0"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "{{Eresource_URL}}systemusers?$filter=fullname eq 'Anthology D365 Automation'",
									"host": [
										"{{Eresource_URL}}systemusers"
									],
									"query": [
										{
											"key": "$filter",
											"value": "fullname eq 'Anthology D365 Automation'"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "UserLocations",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var userlocationid;",
											"pm.test(\"UserLocation is Created\", function () {",
											"  pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
											"  var jsonData = JSON.parse(responseBody);",
											"  userlocationid = jsonData.cmc_userlocationid;",
											"  var userlocationname = jsonData.cmc_userlocationname;",
											"  console.log(\"User location name: \" + userlocationname);",
											"",
											"});",
											"",
											"pm.globals.set('guserlocation40', userlocationid);",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_accountid@odata.bind\": \"/accounts({{gaccountid40}})\",\r\n    \"cmc_deliverytype\": 175490000,\r\n    \"cmc_userid@odata.bind\": \"/systemusers({{ginstructorId40}})\",\r\n    \"cmc_details\": \"UILocation-1057428\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_userlocations",
									"host": [
										"{{Eresource_URL}}cmc_userlocations"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Department",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var department1;",
											"pm.test(\"Department Created\", function () {",
											"  pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
											"  var jsonData = JSON.parse(responseBody);",
											"  department1 = jsonData.cmc_departmentid;",
											"  var deptName = jsonData.cmc_departmentname;",
											"  console.log(\"Department name is: \" + deptName);",
											"",
											"});",
											"",
											"pm.globals.set('gdepartment40', department1);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"cmc_departmentname\":\"UIAuto-Department-1057428\",\r\n\"cmc_code\":\"UIAuto-1057428\"\r\n\r\n}\r\n\r\n"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_departments",
									"host": [
										"{{Eresource_URL}}cmc_departments"
									]
								}
							},
							"response": []
						},
						{
							"name": "AssignDepartmentToUser",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var department;",
											"pm.test(\"Department assgined to User\", function () {",
											"  pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
											"  var jsonData = JSON.parse(responseBody);",
											"  departmentid = jsonData.cmc_departmentid;",
											"",
											"});",
											"",
											"pm.globals.set('gdepartment40', department);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n               \r\n                \"@odata.id\":\"{{Eresource_URL}}systemusers({{ginstructorId40}})\"\r\n}\r\n                \r\n"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_departments({{gdepartment40}})/cmc_department_systemuser_departmentid/$ref",
									"host": [
										"{{Eresource_URL}}cmc_departments({{gdepartment40}})"
									],
									"path": [
										"cmc_department_systemuser_departmentid",
										"$ref"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "TestCase -1017285",
					"item": [
						{
							"name": "GetToken",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = JSON.parse(responseBody);",
											"postman.setGlobalVariable('gaccess_token', data.access_token);",
											"",
											"//pm.environment.set(\"Eaccess_token\", data.access_token);",
											"console.log(pm.globals.get(\"gaccess_token\"));",
											"",
											"",
											"",
											"",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "grant_type",
											"value": "client_credentials",
											"type": "text"
										},
										{
											"key": "client_id",
											"value": "{{Esystemadmin_id}}",
											"type": "text"
										},
										{
											"key": "client_secret",
											"value": "{{Esystemadmin_secret}}",
											"type": "text"
										},
										{
											"key": "resource",
											"value": "{{Eresource}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "https://login.microsoftonline.com/{{Eredirectid}}/oauth2/token",
									"protocol": "https",
									"host": [
										"login",
										"microsoftonline",
										"com"
									],
									"path": [
										"{{Eredirectid}}",
										"oauth2",
										"token"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Account",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Account Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    var accountid = jsonData.accountid;",
											"    var accountName = jsonData.name;",
											"    console.log(\"Account name is: \" + accountName);",
											"",
											"    pm.globals.set('gaccountid401', accountid);",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Account-1017285\",\r\n    \"mshied_accounttype\": 494280000\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}accounts",
									"host": [
										"{{Eresource_URL}}accounts"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create primary Address for Account",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test(\"Created New Address for Account\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    var engage_addressnumber=jsonData.addressnumber;",
											"    var customeraddressid=jsonData.customeraddressid;",
											"",
											"    pm.globals.set('gcustomeraddressid401',customeraddressid);",
											"    pm.globals.set('gengage_addressnumber401',engage_addressnumber);",
											"",
											" });",
											"",
											"setTimeout(function(){}, 15000);",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									},
									{
										"key": "OData-Version",
										"value": "4.0"
									},
									{
										"key": "OData-MaxVersion",
										"value": "4.0"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_addresstimezone\":190,\r\n    \"postalcode\":\"560059\",\r\n    \"cmc_state\":175490089,\r\n    \"city\":\"Bangalore\",\r\n    \"cmc_countryregion\":175490101,\r\n    \"line3\":\"Street 3\",\r\n    \"line2\":\"Street 2\",\r\n    \"line1\":\"Street 1\",\r\n    \"mshied_mailtype\":494280000,\r\n    \"addresstypecode\":1,\r\n    \"parentid_account@odata.bind\":\"/accounts({{gaccountid401}})\",\r\n    \"objecttypecode\":\"account\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource}}api/data/{{Eversion}}/customeraddresses",
									"host": [
										"{{Eresource}}api"
									],
									"path": [
										"data",
										"{{Eversion}}",
										"customeraddresses"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Department",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var department1;",
											"pm.test(\"Department Created\", function () {",
											"  pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
											"  var jsonData = JSON.parse(responseBody);",
											"  department1 = jsonData.cmc_departmentid;",
											"  var deptName = jsonData.cmc_departmentname;",
											"  console.log(\"Department name is: \" + deptName);",
											"",
											"});",
											"",
											"pm.globals.set('gdepartment40', department1);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_departmentname\": \"UIAuto-Department-1017285\",\r\n    \"cmc_code\": \"UIAuto-1017285\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_departments",
									"host": [
										"{{Eresource_URL}}cmc_departments"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get User record",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var instructorId, instructorName;",
											"",
											"pm.test(\"Get instructor record\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    var result = jsonData.value;",
											"",
											"    instructorId = result[0].systemuserid;",
											"    instructorName = result[0].fullname;",
											"    console.log(\"instructor ID is : \" + instructorId);",
											"    console.log(\"instructor name is : \" + instructorName);",
											"});",
											"",
											"pm.globals.set('ginstructorId40', instructorId);",
											"",
											"",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									},
									{
										"key": "OData-Version",
										"value": "4.0"
									},
									{
										"key": "OData-MaxVersion",
										"value": "4.0"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "{{Eresource_URL}}systemusers?$filter=fullname eq 'Anthology D365 Automation'",
									"host": [
										"{{Eresource_URL}}systemusers"
									],
									"query": [
										{
											"key": "$filter",
											"value": "fullname eq 'Anthology D365 Automation'"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Automation user's Department",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var userid,fullname;",
											"pm.test(\"Update Automation user's Department Details\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    userid = jsonData.systemuserid;",
											"    fullname=jsonData.fullname;",
											"",
											"    console.log(\"User name: \" +fullname);",
											"    ",
											"});",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									},
									{
										"key": "OData-Version",
										"value": "4.0"
									},
									{
										"key": "OData-MaxVersion",
										"value": "4.0"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_departmentid@odata.bind\": \"/cmc_departments({{gdepartment40}})\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Eresource_URL}}systemusers({{ginstructorId40}})",
									"host": [
										"{{Eresource_URL}}systemusers({{ginstructorId40}})"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create UserLocation In-Person",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var userlocationid;",
											"pm.test(\"UserLocation is Created\", function () {",
											"  pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
											"  var jsonData = JSON.parse(responseBody);",
											"  userlocationid = jsonData.cmc_userlocationid;",
											"  var userlocationname = jsonData.cmc_userlocationname;",
											"  console.log(\"User location name: \" + userlocationname);",
											"",
											"});",
											"",
											"pm.globals.set('guserlocation4011', userlocationid);",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_accountid@odata.bind\": \"/accounts({{gaccountid401}})\",\r\n    \"cmc_deliverytype\":175490000,\r\n    \"cmc_userid@odata.bind\": \"/systemusers({{ginstructorId40}})\",\r\n    \"cmc_details\": \"UILocation-1017285\"\r\n   \r\n}\r\n\r\n"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_userlocations",
									"host": [
										"{{Eresource_URL}}cmc_userlocations"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Office Hours-In-person",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var officeHoursid,officeHoursname;",
											"pm.test(\"Office Hours is Created\", function () {",
											"  pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
											"  var jsonData = JSON.parse(responseBody);",
											"  officeHoursid = jsonData.cmc_officehoursid;",
											"  officeHoursname = jsonData.cmc_officehoursname;",
											"  console.log(\"Office Hours name: \" + officeHoursname);",
											"",
											"});",
											"",
											"pm.globals.set('gofficeHoursid4011', officeHoursid);",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var moment = require('moment');\r",
											"pm.environment.set(\"startDate\", moment().format(\"YYYY-MM-DD\"));\r",
											"pm.environment.set(\"endDate\", moment().add(20, 'days').format(\"YYYY-MM-DD\"));\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_enddate\":\"{{endDate}}\",\r\n    \"cmc_startdate\":\"{{startDate}}\",\r\n    \"cmc_userlocationid@odata.bind\":\"/cmc_userlocations({{guserlocation4011}})\",\r\n    \"cmc_endtime\":\"{{endDate}}T23:00:00.000Z\",\r\n    \"cmc_starttime\":\"{{startDate}}T07:00:00.000Z\",\r\n    \"cmc_sunday\":true,\r\n    \"cmc_saturday\":true,\r\n    \"cmc_friday\":true,\r\n    \"cmc_thursday\":true,\r\n    \"cmc_wednesday\":true,\r\n    \"cmc_tuesday\":true,\r\n    \"cmc_monday\":true,\r\n    \"cmc_officehourstype\":175490000,\r\n    \"ownerid@odata.bind\":\"/systemusers({{ginstructorId40}})\"\r\n    \r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_officehourses",
									"host": [
										"{{Eresource_URL}}cmc_officehourses"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Appointment TitleA",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var department1;",
											"pm.test(\"Appointment Created\", function () {",
											"  pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
											"  var jsonData = JSON.parse(responseBody);",
											"  department1 = jsonData.activityid;",
											"  var deptName = jsonData.subject;",
											"  console.log(\"Appointment name is: \" + deptName);",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var moment = require('moment');\r",
											"pm.environment.set(\"startDate\", moment().format(\"YYYY-MM-DD\"));\r",
											"pm.environment.set(\"endDate\", moment().add(20, 'days').format(\"YYYY-MM-DD\"));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"scheduleddurationminutes\":15,\r\n    \"appointment_activity_parties\":\r\n    [\r\n        {\r\n            \"partyid_systemuser@odata.bind\":\"/systemusers({{ginstructorId40}})\",\r\n            \"participationtypemask\":7\r\n        },\r\n        {\r\n            \"partyid_systemuser@odata.bind\":\"/systemusers({{ginstructorId40}})\",\r\n            \"participationtypemask\":5\r\n        }\r\n    ],\r\n    \"mshied_appointmentstatus\":494280002,\r\n    \"prioritycode\":1,\r\n    \"isalldayevent\":false,\r\n    \"statuscode\":1,\"statecode\":0,\r\n    \"scheduledend\":\"{{startDate}}T16:45:00.000Z\",\r\n    \"scheduledstart\":\"{{startDate}}T16:30:00.000Z\",\r\n    \"cmc_appointmenttype\":175490000,\r\n    \"ownerid_appointment@odata.bind\":\"/systemusers({{ginstructorId40}})\",\r\n    \"cmc_userlocationid_Appointment@odata.bind\":\"/cmc_userlocations({{guserlocation4011}})\",\r\n    \"description\":\"Description\",\r\n    \"location\":\"Account-1017285\",\r\n    \"subject\":\"TitleA\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}appointments",
									"host": [
										"{{Eresource_URL}}appointments"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Appointment TitleB",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var department1;",
											"pm.test(\"Appointment Created\", function () {",
											"  pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
											"  var jsonData = JSON.parse(responseBody);",
											"  department1 = jsonData.activityid;",
											"  var deptName = jsonData.subject;",
											"  console.log(\"Appointment name is: \" + deptName);",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var moment = require('moment');\r",
											"pm.environment.set(\"startDate\", moment().format(\"YYYY-MM-DD\"));\r",
											"pm.environment.set(\"endDate\", moment().add(20, 'days').format(\"YYYY-MM-DD\"));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"scheduleddurationminutes\":15,\r\n    \"appointment_activity_parties\":\r\n    [\r\n        {\r\n            \"partyid_systemuser@odata.bind\":\"/systemusers({{ginstructorId40}})\",\r\n            \"participationtypemask\":7\r\n        },\r\n        {\r\n            \"partyid_systemuser@odata.bind\":\"/systemusers({{ginstructorId40}})\",\r\n            \"participationtypemask\":5\r\n        }\r\n    ],\r\n    \"mshied_appointmentstatus\":494280002,\r\n    \"prioritycode\":1,\r\n    \"isalldayevent\":false,\r\n    \"statuscode\":1,\"statecode\":0,\r\n    \"scheduledend\":\"{{startDate}}T17:45:00.000Z\",\r\n    \"scheduledstart\":\"{{startDate}}T17:30:00.000Z\",\r\n    \"cmc_appointmenttype\":175490000,\r\n    \"ownerid_appointment@odata.bind\":\"/systemusers({{ginstructorId40}})\",\r\n    \"cmc_userlocationid_Appointment@odata.bind\":\"/cmc_userlocations({{guserlocation4011}})\",\r\n    \"description\":\"Description\",\r\n    \"location\":\"Account-1017285\",\r\n    \"subject\":\"TitleB\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}appointments",
									"host": [
										"{{Eresource_URL}}appointments"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "TestCase -1063124",
					"item": [
						{
							"name": "GetToken",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = JSON.parse(responseBody);",
											"postman.setGlobalVariable('gaccess_token', data.access_token);",
											"",
											"//pm.environment.set(\"Eaccess_token\", data.access_token);",
											"console.log(pm.globals.get(\"gaccess_token\"));",
											"",
											"",
											"",
											"",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "grant_type",
											"value": "client_credentials",
											"type": "text"
										},
										{
											"key": "client_id",
											"value": "{{Esystemadmin_id}}",
											"type": "text"
										},
										{
											"key": "client_secret",
											"value": "{{Esystemadmin_secret}}",
											"type": "text"
										},
										{
											"key": "resource",
											"value": "{{Eresource}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "https://login.microsoftonline.com/{{Eredirectid}}/oauth2/token",
									"protocol": "https",
									"host": [
										"login",
										"microsoftonline",
										"com"
									],
									"path": [
										"{{Eredirectid}}",
										"oauth2",
										"token"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Account",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Account Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    var accountid = jsonData.accountid;",
											"    var accountName = jsonData.name;",
											"    console.log(\"Account name is: \" + accountName);",
											"",
											"    pm.globals.set('gaccountid401s', accountid);",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Account-1063124\",\r\n    \"mshied_accounttype\": 494280000\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}accounts",
									"host": [
										"{{Eresource_URL}}accounts"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create primary Address for Account",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test(\"Created New Address for Account\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    var engage_addressnumber=jsonData.addressnumber;",
											"    var customeraddressid=jsonData.customeraddressid;",
											"",
											"    pm.globals.set('gcustomeraddressid401s',customeraddressid);",
											"    pm.globals.set('gengage_addressnumber401s',engage_addressnumber);",
											"",
											" });",
											"",
											"setTimeout(function(){}, 15000);",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									},
									{
										"key": "OData-Version",
										"value": "4.0"
									},
									{
										"key": "OData-MaxVersion",
										"value": "4.0"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_addresstimezone\":190,\r\n    \"postalcode\":\"560059\",\r\n    \"cmc_state\":175490089,\r\n    \"city\":\"Bangalore\",\r\n    \"cmc_countryregion\":175490101,\r\n    \"line3\":\"Street 3\",\r\n    \"line2\":\"Street 2\",\r\n    \"line1\":\"Street 1\",\r\n    \"mshied_mailtype\":494280000,\r\n    \"addresstypecode\":1,\r\n    \"parentid_account@odata.bind\":\"/accounts({{gaccountid401s}})\",\r\n    \"objecttypecode\":\"account\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource}}api/data/{{Eversion}}/customeraddresses",
									"host": [
										"{{Eresource}}api"
									],
									"path": [
										"data",
										"{{Eversion}}",
										"customeraddresses"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get User record",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var instructorId, instructorName;",
											"",
											"pm.test(\"Get instructor record\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    var result = jsonData.value;",
											"",
											"    instructorId = result[0].systemuserid;",
											"    instructorName = result[0].fullname;",
											"    console.log(\"instructor ID is : \" + instructorId);",
											"    console.log(\"instructor name is : \" + instructorName);",
											"});",
											"",
											"pm.globals.set('ginstructorId401s', instructorId);",
											"",
											"",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									},
									{
										"key": "OData-Version",
										"value": "4.0"
									},
									{
										"key": "OData-MaxVersion",
										"value": "4.0"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "{{Eresource_URL}}systemusers?$filter=fullname eq 'Anthology D365 Automation'",
									"host": [
										"{{Eresource_URL}}systemusers"
									],
									"query": [
										{
											"key": "$filter",
											"value": "fullname eq 'Anthology D365 Automation'"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create UserLocation Virtual",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var userlocationid;",
											"pm.test(\"UserLocation is Created\", function () {",
											"  pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
											"  var jsonData = JSON.parse(responseBody);",
											"  userlocationid = jsonData.cmc_userlocationid;",
											"  var userlocationname = jsonData.cmc_userlocationname;",
											"  console.log(\"User location name: \" + userlocationname);",
											"",
											"});",
											"",
											"pm.globals.set('guserlocation401s', userlocationid);",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_deliverytype\": \"175490001\",\r\n    \"cmc_userid@odata.bind\": \"/systemusers({{ginstructorId401s}})\",\r\n    \"cmc_details\": \"UILocation-1063124\"\r\n   \r\n}\r\n\r\n"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_userlocations",
									"host": [
										"{{Eresource_URL}}cmc_userlocations"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Office Hours-Virtual",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var officeHoursid,officeHoursname;",
											"pm.test(\"Office Hours is Created\", function () {",
											"  pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
											"  var jsonData = JSON.parse(responseBody);",
											"  officeHoursid = jsonData.cmc_officehoursid;",
											"  officeHoursname = jsonData.cmc_officehoursname;",
											"  console.log(\"Office Hours name: \" + officeHoursname);",
											"",
											"});",
											"",
											"pm.globals.set('gofficeHoursid401s', officeHoursid);",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var moment = require('moment');\r",
											"pm.environment.set(\"startDate\", moment().format(\"YYYY-MM-DD\"));\r",
											"pm.environment.set(\"endDate\", moment().add(20, 'days').format(\"YYYY-MM-DD\"));\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_enddate\":\"{{endDate}}\",\r\n    \"cmc_startdate\":\"{{startDate}}\",\r\n    \"cmc_userlocationid@odata.bind\":\"/cmc_userlocations({{guserlocation401s}})\",\r\n    \"cmc_endtime\":\"{{endDate}}T23:00:00.000Z\",\r\n    \"cmc_starttime\":\"{{startDate}}T07:00:00.000Z\",\r\n    \"cmc_sunday\":true,\r\n    \"cmc_saturday\":true,\r\n    \"cmc_friday\":true,\r\n    \"cmc_thursday\":true,\r\n    \"cmc_wednesday\":true,\r\n    \"cmc_tuesday\":true,\r\n    \"cmc_monday\":true,\r\n    \"cmc_officehourstype\":175490000,\r\n    \"ownerid@odata.bind\":\"/systemusers({{ginstructorId401s}})\"\r\n    \r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_officehourses",
									"host": [
										"{{Eresource_URL}}cmc_officehourses"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "LifecycleFeature",
			"item": [
				{
					"name": "TestCase -756419",
					"item": [
						{
							"name": "Get SourceCategory",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var sourceCategoryid;",
											"",
											"pm.test(\"Source category record Fetched\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    sourceCategoryid = jsonData.value[0].cmc_sourcecategoryid;",
											"    var sourceCategoryName = jsonData.value[0].cmc_sourcecategoryname;",
											"    console.log('SourceCategory Name is: ' + sourceCategoryName);",
											"",
											"});",
											"",
											"pm.globals.set('gsourceCategoryid42', sourceCategoryid);",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"url": {
									"raw": "{{Eresource_URL}}cmc_sourcecategories",
									"host": [
										"{{Eresource_URL}}cmc_sourcecategories"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get SourceMethod",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var sourceMethodid;",
											"",
											"pm.test(\"Source Method record Fetched\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    sourceMethodid = jsonData.value[0].cmc_sourcemethodid;",
											"    var sourceMethodName = jsonData.value[0].cmc_sourcemethodname;",
											"    console.log('SourceMethod Name is: ' + sourceMethodName);",
											"",
											"});",
											"",
											"pm.globals.set('gsourceMethodid42', sourceMethodid);",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"url": {
									"raw": "{{Eresource_URL}}cmc_sourcemethods",
									"host": [
										"{{Eresource_URL}}cmc_sourcemethods"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Contact record",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Contact Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    var contactid = jsonData.contactid;",
											"    var contactName = jsonData.fullname;",
											"    console.log(\"Contact name is: \" + contactName);",
											"",
											"    pm.globals.set('gcontactid42', contactid);",
											"});",
											"",
											"",
											"",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"lastname\": \"Contact-756419\",\r\n\t\"firstname\": \"UIAuto\",\r\n\t\"mshied_contacttype\": \"494280011\",\r\n\t\"cmc_sourcecategoryid@odata.bind\": \"/cmc_sourcecategories({{gsourceCategoryid42}})\",\r\n\t\"cmc_sourcemethodid@odata.bind\": \"/cmc_sourcemethods({{gsourceMethodid42}})\"\r\n\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}contacts",
									"host": [
										"{{Eresource_URL}}contacts"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Account",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Account Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    var accountid = jsonData.accountid;",
											"    var accountName = jsonData.name;",
											"    console.log(\"Account name is: \" + accountName);",
											"",
											"    pm.globals.set('gaccountid42', accountid);",
											"});",
											"",
											"",
											"",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"name\": \"Account-756419\",\r\n\t\"mshied_accounttype\": 494280000\r\n\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}accounts",
									"host": [
										"{{Eresource_URL}}accounts"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Account_ALS",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Account Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    var accountid = jsonData.accountid;",
											"    var accountName = jsonData.name;",
											"    console.log(\"Account name is: \" + accountName);",
											"",
											"    pm.globals.set('gaccountid42a', accountid);",
											"});",
											"",
											"",
											"",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"ALS\",\r\n    \"mshied_accounttype\": 494280000\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}accounts",
									"host": [
										"{{Eresource_URL}}accounts"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Area of Interest",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var areaofinterestid;",
											"var areaofinterestname;",
											"",
											"pm.test(\"Create Area of Interest\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"",
											"    areaofinterestid = jsonData.mshied_areaofinterestid;",
											"    console.log(\"area of interest id : \" + areaofinterestid);",
											"",
											"    areaofinterestname = jsonData.mshied_name;",
											"    console.log(\"area of interest name : \" + areaofinterestname);",
											"",
											"});",
											"pm.globals.set('gareaofinterestid42', areaofinterestid);",
											"pm.globals.set('gareaofinterestname42', areaofinterestname);",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"mshied_code\": \"{{$randomInt}}-Code - {{$randomInt}}\",\n    \"mshied_name\": \"AreaofInterest-756419\"\n}\n\n"
								},
								"url": {
									"raw": "{{Eresource_URL}}mshied_areaofinterests",
									"host": [
										"{{Eresource_URL}}mshied_areaofinterests"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "TestCase -816875",
					"item": [
						{
							"name": "Create Account",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Account Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    var accountid = jsonData.accountid;",
											"    var accountName = jsonData.name;",
											"    console.log(\"Account name is: \" + accountName);",
											"",
											"    pm.globals.set('gaccountid43', accountid);",
											"});",
											"",
											"",
											"",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Account-816875\",\r\n    \"mshied_accounttype\": 494280000\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}accounts",
									"host": [
										"{{Eresource_URL}}accounts"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Application Review Feature",
			"item": [
				{
					"name": "TestCase-1047024",
					"item": [
						{
							"name": "GetToken",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = JSON.parse(responseBody);",
											"postman.setGlobalVariable('gaccess_token', data.access_token);",
											"",
											"//pm.environment.set(\"Eaccess_token\", data.access_token);",
											"console.log(pm.globals.get(\"gaccess_token\"));",
											"",
											"",
											"",
											"",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "grant_type",
											"value": "client_credentials",
											"type": "text"
										},
										{
											"key": "client_id",
											"value": "{{Esystemadmin_id}}",
											"type": "text"
										},
										{
											"key": "client_secret",
											"value": "{{Esystemadmin_secret}}",
											"type": "text"
										},
										{
											"key": "resource",
											"value": "{{Eresource}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "https://login.microsoftonline.com/{{Eredirectid}}/oauth2/token",
									"protocol": "https",
									"host": [
										"login",
										"microsoftonline",
										"com"
									],
									"path": [
										"{{Eredirectid}}",
										"oauth2",
										"token"
									]
								}
							},
							"response": []
						},
						{
							"name": "GetUserID for HeadReviewer",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var headreviewerid;",
											"pm.test(\"GetUserID\", function(err,res) ",
											"{",
											"    ",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202])",
											"    var jsonData =JSON.parse(responseBody);",
											"    if(jsonData.value.length > 0)",
											"    {",
											"    headreviewerid = jsonData.value[0].systemuserid;",
											"    }",
											"   else",
											"    {",
											"       console.log(\"No record found\");",
											"       throw new Error();",
											"    }",
											"});",
											"pm.globals.set('headreviewerid',headreviewerid);",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"url": {
									"raw": "{{Eresource_URL}}systemusers?$select=systemuserid&$filter=internalemailaddress eq 'reviewer@api.com'",
									"host": [
										"{{Eresource_URL}}systemusers"
									],
									"query": [
										{
											"key": "$select",
											"value": "systemuserid"
										},
										{
											"key": "$filter",
											"value": "internalemailaddress eq 'reviewer@api.com'"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Bundle",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Contact Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    var bundleid = jsonData.cmc_applicationreviewbundleid;",
											"    var bundlename = jsonData.cmc_bundlename;",
											"    console.log(\"bundle ID is: \" + bundleid);",
											"    console.log(\"bundle name is: \" + bundlename);",
											"",
											"    pm.globals.set('gbundleid1', bundleid);",
											"});",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"cmc_bundlename\": \"Bundle-1047024\",\r\n\t\"cmc_bundletype\": 175490000,\r\n\t\"cmc_emailnotifications\": false,\r\n\t\"cmc_enableapplicationdownload\": false,\r\n\t\"cmc_headreviewerrequirequestions\": true,\r\n\t\"cmc_headreviewersubmission\": true,\r\n\t\"cmc_ownernotifications\": false,\r\n\t\"cmc_reviewsharingoption\": false\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applicationreviewbundles",
									"host": [
										"{{Eresource_URL}}cmc_applicationreviewbundles"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add Head Reviewer to Bundle",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var applicationid,reviewerid;",
											"pm.test(\"Head reviewer Added to Bundle\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202,204]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    applicationid = jsonData.cmc_applicationid;",
											"    reviewerid= jsonData.cmc_applicationreviewerid;",
											"    console.log(reviewerid);",
											"        if(reviewerid !== null)",
											"        {",
											"            console.log(\"Head Reviewer added to Application Bundle\");",
											"            console.log(\"Reviewer Name: \" +jsonData.cmc_reviewername);",
											"        }",
											"        else",
											"        {",
											"            console.log(\"Reviewer not added to Application Bundle\");",
											"        }",
											"        pm.globals.set('greviewerid',reviewerid);",
											"           ",
											"});",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{  \r\n   \"cmc_userid@odata.bind\":\"/systemusers({{headreviewerid}})\",\r\n   \"cmc_reviewername\":\"Mr. Gopal\",\r\n   \"cmc_reviewertype\":true,\r\n   \"statuscode\":1,\r\n   \"statecode\":1,\r\n   \"cmc_applicationreviewbundleid@odata.bind\":\"/cmc_applicationreviewbundles({{gbundleid1}})\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applicationreviewers",
									"host": [
										"{{Eresource_URL}}cmc_applicationreviewers"
									]
								}
							},
							"response": []
						},
						{
							"name": "Activate Review Bundle",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var statuscode;",
											"pm.test(\"Application Review Bundle Activated\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202,204]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    statuscode = jsonData.statuscode;",
											"   ",
											"    if(statuscode ===1)",
											"    {",
											"        console.log(\"Application Review Bundle Activated.\");",
											"    }",
											"    else",
											"    {",
											"        console.log(\"Some error occured to Activate the Bundle.\");",
											"       ",
											"    }",
											"   ",
											"});",
											"setTimeout(function(){}, 35000); ",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"statecode\": 0,\r\n\"statuscode\": 1\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applicationreviewbundles({{gbundleid1}})",
									"host": [
										"{{Eresource_URL}}cmc_applicationreviewbundles({{gbundleid1}})"
									]
								},
								"description": "Reviews Created After Bundle Activation"
							},
							"response": []
						}
					]
				},
				{
					"name": "TestCase-954345",
					"item": [
						{
							"name": "Create Application",
							"item": [
								{
									"name": "GetToken",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var data = JSON.parse(responseBody);",
													"postman.setGlobalVariable('gaccess_token', data.access_token);",
													"",
													"//pm.environment.set(\"Eaccess_token\", data.access_token);",
													"console.log(pm.globals.get(\"gaccess_token\"));",
													"",
													"",
													"",
													"",
													"",
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "grant_type",
													"value": "client_credentials",
													"type": "text"
												},
												{
													"key": "client_id",
													"value": "{{Esystemadmin_id}}",
													"type": "text"
												},
												{
													"key": "client_secret",
													"value": "{{Esystemadmin_secret}}",
													"type": "text"
												},
												{
													"key": "resource",
													"value": "{{Eresource}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "https://login.microsoftonline.com/{{Eredirectid}}/oauth2/token",
											"protocol": "https",
											"host": [
												"login",
												"microsoftonline",
												"com"
											],
											"path": [
												"{{Eredirectid}}",
												"oauth2",
												"token"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create ApplicationType",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var applicationtypeid;",
													"",
													"pm.test(\"ApplicantType Created\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
													"    var jsonData = JSON.parse(responseBody);",
													"    applicationtypeid = jsonData.cmc_applicationtypeid;",
													"    var applicationTypeName=jsonData.cmc_applicationtypename;",
													"    console.log(\"Application Type name is: \"+applicationTypeName);",
													"",
													"});",
													"pm.globals.set('gapplicationtypeid111', applicationtypeid);",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"cmc_applicationtypename\": \"UIAuto-ApplicationType-954345\",\r\n    \"cmc_applicationgroup\": \"175490001\"\r\n}"
										},
										"url": {
											"raw": "{{Eresource_URL}}cmc_applicationtypes",
											"host": [
												"{{Eresource_URL}}cmc_applicationtypes"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create AcademicPeriod",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var academicPeriodid;",
													"pm.test(\"Academic Period Created\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
													"    var jsonData = JSON.parse(responseBody);",
													"    academicPeriodid = jsonData.mshied_academicperiodid;",
													"    var academicPeriodName = jsonData.mshied_name;",
													"    console.log(\"Academic Period Name is: \" + academicPeriodName);",
													"",
													"});",
													"",
													"pm.globals.set('gacademicPeriodid111', academicPeriodid);",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var moment = require('moment');\r",
													"pm.environment.set(\"timestamp\", moment().add(1, 'days').format(\"YYYY-MM-DD\"));\r",
													"pm.environment.set(\"timestampEndDate\", moment().add(100, 'days').format(\"YYYY-MM-DD\"));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"mshied_enddate\": \"{{timestampEndDate}}\",\r\n    \"mshied_startdate\": \"{{timestamp}}\",\r\n    \"mshied_code\": \"UI-954345\",\r\n    \"mshied_name\": \"UIAuto-AcademicPer-954345\"\r\n}"
										},
										"url": {
											"raw": "{{Eresource_URL}}mshied_academicperiods",
											"host": [
												"{{Eresource_URL}}mshied_academicperiods"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create ApplicationPeriod",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var applicationPeriodid;",
													"",
													"pm.test(\"ApplicantPeriod Created\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
													"    var jsonData = JSON.parse(responseBody);",
													"    applicationPeriodid = jsonData.cmc_applicationperiodid;",
													"    var applicationPeriodName=jsonData.cmc_applicationperiodname;",
													"",
													"    console.log(\"Application Period Name is: \" +applicationPeriodName);",
													"",
													"});",
													"",
													"pm.globals.set('gapplicationPeriodid111', applicationPeriodid);",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"cmc_AcademicPeriodId@odata.bind\": \"/mshied_academicperiods({{gacademicPeriodid111}})\",\r\n    \"cmc_applicationperiodname\": \"UIAuto-ApplicationPeriod-954345\"\r\n}"
										},
										"url": {
											"raw": "{{Eresource_URL}}cmc_applicationperiods",
											"host": [
												"{{Eresource_URL}}cmc_applicationperiods"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Application Definition",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var applicationdefinitionid;",
													"",
													"pm.test(\"Application Requirment Definition Created\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
													"    var jsonData = JSON.parse(responseBody);",
													"    applicationdefinitionid = jsonData.cmc_applicationdefinitionid;",
													"    var applicationDefinitionName= jsonData.cmc_applicationdefinitionname;",
													"",
													"    console.log(\"Application Definition name is: \"+applicationDefinitionName);",
													"",
													"});",
													"",
													"pm.globals.set('gappdefid111', applicationdefinitionid);",
													"",
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"cmc_applicationdefinitionname\": \"UIAuto-ApplicationDefinition-954345\"\r\n}"
										},
										"url": {
											"raw": "{{Eresource_URL}}cmc_applicationdefinitions",
											"host": [
												"{{Eresource_URL}}cmc_applicationdefinitions"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Application Definition Version",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var applicationdefinitionverid, applicationdefinitionvername;",
													"",
													"pm.test(\"Application Requirment Definition Version Created\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
													"    var jsonData = JSON.parse(responseBody);",
													"    applicationdefinitionverid = jsonData.cmc_applicationdefinitionversionid;",
													"    applicationdefinitionvername = jsonData.cmc_applicationdefinitionversionname;",
													"    console.log(\"Application Definition version name is: \" + applicationdefinitionvername);",
													"});",
													"",
													"pm.globals.set('gappdefverid111', applicationdefinitionverid);",
													"pm.globals.set('gapplicationdefinitionvername111', applicationdefinitionvername);",
													"",
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\"cmc_applicationdefinitionversionname\":\"UIAuto-ADV-954345\",\r\n\"cmc_applicationtype@odata.bind\":\"/cmc_applicationtypes({{gapplicationtypeid111}})\",\r\n\"cmc_applicationdefinitionid@odata.bind\":\"/cmc_applicationdefinitions({{gappdefid111}})\",\r\n\"cmc_createlifecycle\": false\r\n\r\n}"
										},
										"url": {
											"raw": "{{Eresource_URL}}cmc_applicationdefinitionversions",
											"host": [
												"{{Eresource_URL}}cmc_applicationdefinitionversions"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get SourceCategory",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var sourceCategoryid;",
													"",
													"pm.test(\"Source category record Fetched\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
													"    var jsonData = JSON.parse(responseBody);",
													"    sourceCategoryid = jsonData.value[0].cmc_sourcecategoryid;",
													"    var sourceCategoryName = jsonData.value[0].cmc_sourcecategoryname;",
													"    console.log('SourceCategory Name is: ' + sourceCategoryName);",
													"",
													"});",
													"",
													"pm.globals.set('gsourceCategoryid111', sourceCategoryid);",
													"",
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											}
										],
										"url": {
											"raw": "{{Eresource_URL}}cmc_sourcecategories",
											"host": [
												"{{Eresource_URL}}cmc_sourcecategories"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get SourceMethod",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var sourceMethodid;",
													"",
													"pm.test(\"Source Method record Fetched\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
													"    var jsonData = JSON.parse(responseBody);",
													"    sourceMethodid = jsonData.value[0].cmc_sourcemethodid;",
													"    var sourceMethodName = jsonData.value[0].cmc_sourcemethodname;",
													"    console.log('SourceMethod Name is: ' + sourceMethodName);",
													"",
													"});",
													"",
													"pm.globals.set('gsourceMethodid111', sourceMethodid);",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											}
										],
										"url": {
											"raw": "{{Eresource_URL}}cmc_sourcemethods",
											"host": [
												"{{Eresource_URL}}cmc_sourcemethods"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Contact",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Contact Created\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
													"    var jsonData = JSON.parse(responseBody);",
													"    var contactid = jsonData.contactid;",
													"    var contactName = jsonData.fullname;",
													"    console.log(\"Contact name is: \" + contactName);",
													"",
													"    pm.globals.set('gcontactid111', contactid);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"lastname\": \"Contact- 954345\",\r\n\t\"firstname\": \"UIAuto\",\r\n\t\"mshied_contacttype\": \"494280011\",\r\n\t\"cmc_sourcecategoryid@odata.bind\": \"/cmc_sourcecategories({{gsourceCategoryid111}})\",\r\n\t\"cmc_sourcemethodid@odata.bind\": \"/cmc_sourcemethods({{gsourceMethodid111}})\"\r\n\r\n}"
										},
										"url": {
											"raw": "{{Eresource_URL}}contacts",
											"host": [
												"{{Eresource_URL}}contacts"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Application Registration",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Application Registration Created\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
													"    var jsonData = JSON.parse(responseBody);",
													"    var applicationRegId = jsonData.cmc_applicationregistrationid;",
													"    var applicationRegName = jsonData.cmc_applicationregistration;",
													"    console.log(\"Application Registration name is: \" +applicationRegName);",
													"",
													"    pm.globals.set('gapplicationRegId111', applicationRegId);",
													"    pm.globals.set('gapplicationRegName111', applicationRegName);",
													"",
													"});",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\r\n\"cmc_contactid@odata.bind\": \"/contacts({{gcontactid111}})\",\r\n\"cmc_applicationdefinitionversionid@odata.bind\": \"/cmc_applicationdefinitionversions({{gappdefverid111}})\",\r\n\"cmc_applicationstatus\": 175490000,\r\n\"cmc_applicationsubmitted\": false\r\n\r\n}"
										},
										"url": {
											"raw": "{{Eresource_URL}}cmc_applicationregistrations",
											"host": [
												"{{Eresource_URL}}cmc_applicationregistrations"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Application",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Application Created\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
													"    var jsonData = JSON.parse(responseBody);",
													"    var applicationId = jsonData.cmc_applicationid;",
													"    var applicationName = jsonData.cmc_applicationname;",
													"    console.log(\"Application name is: \" + applicationName);",
													"",
													"    pm.globals.set('gapplicationId111', applicationId);",
													"    pm.globals.set('gapplicationName111', applicationName);",
													"",
													"});",
													"",
													"",
													"",
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"cmc_applicationstatus\": 175490001,\r\n    \"cmc_contactid@odata.bind\": \"/contacts({{gcontactid111}})\",\r\n    \"cmc_applicationperiodid@odata.bind\": \"/cmc_applicationperiods({{gapplicationPeriodid111}})\",\r\n    \"cmc_applicationregistration@odata.bind\": \"/cmc_applicationregistrations({{gapplicationRegId111}})\"\r\n}"
										},
										"url": {
											"raw": "{{Eresource_URL}}cmc_applications",
											"host": [
												"{{Eresource_URL}}cmc_applications"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Create Bundle",
							"item": [
								{
									"name": "GetToken",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var data = JSON.parse(responseBody);",
													"postman.setGlobalVariable('gaccess_token', data.access_token);",
													"",
													"//pm.environment.set(\"Eaccess_token\", data.access_token);",
													"console.log(pm.globals.get(\"gaccess_token\"));",
													"",
													"",
													"",
													"",
													"",
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "grant_type",
													"value": "client_credentials",
													"type": "text"
												},
												{
													"key": "client_id",
													"value": "{{Esystemadmin_id}}",
													"type": "text"
												},
												{
													"key": "client_secret",
													"value": "{{Esystemadmin_secret}}",
													"type": "text"
												},
												{
													"key": "resource",
													"value": "{{Eresource}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "https://login.microsoftonline.com/{{Eredirectid}}/oauth2/token",
											"protocol": "https",
											"host": [
												"login",
												"microsoftonline",
												"com"
											],
											"path": [
												"{{Eredirectid}}",
												"oauth2",
												"token"
											]
										}
									},
									"response": []
								},
								{
									"name": "GetUserID for HeadReviewer",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var headreviewerid;",
													"pm.test(\"GetUserID\", function(err,res) ",
													"{",
													"    ",
													"    pm.expect(pm.response.code).to.be.oneOf([200,201,202])",
													"    var jsonData =JSON.parse(responseBody);",
													"    if(jsonData.value.length > 0)",
													"    {",
													"    headreviewerid = jsonData.value[0].systemuserid;",
													"    }",
													"   else",
													"    {",
													"       console.log(\"No record found\");",
													"       throw new Error();",
													"    }",
													"});",
													"pm.globals.set('headreviewerid1',headreviewerid);",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											}
										],
										"url": {
											"raw": "{{Eresource_URL}}systemusers?$select=systemuserid&$filter=internalemailaddress eq 'reviewer@api.com'",
											"host": [
												"{{Eresource_URL}}systemusers"
											],
											"query": [
												{
													"key": "$select",
													"value": "systemuserid"
												},
												{
													"key": "$filter",
													"value": "internalemailaddress eq 'reviewer@api.com'"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Bundle",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Contact Created\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
													"    var jsonData = JSON.parse(responseBody);",
													"    var bundleid = jsonData.cmc_applicationreviewbundleid;",
													"    var bundlename = jsonData.cmc_bundlename;",
													"    console.log(\"bundle ID is: \" + bundleid);",
													"    console.log(\"bundle name is: \" + bundlename);",
													"",
													"    pm.globals.set('gbundleid2', bundleid);",
													"});",
													"",
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"cmc_bundlename\": \"Bundle-954345\",\r\n\t\"cmc_bundletype\": 175490000,\r\n\t\"cmc_emailnotifications\": false,\r\n\t\"cmc_cutoffdate\": \"2022-07-13T18:30:00.000Z\",\r\n\t\"cmc_duedate\": \"2029-06-14T18:30:00.000Z\",\r\n\t\"cmc_enableapplicationdownload\": false,\r\n\t\"cmc_headreviewerrequirequestions\": true,\r\n\t\"cmc_headreviewersubmission\": true,\r\n\t\"cmc_ownernotifications\": false,\r\n\t\"cmc_reviewsharingoption\": false\r\n}"
										},
										"url": {
											"raw": "{{Eresource_URL}}cmc_applicationreviewbundles",
											"host": [
												"{{Eresource_URL}}cmc_applicationreviewbundles"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add Head Reviewer to Bundle",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var applicationid,reviewerid;",
													"pm.test(\"Head reviewer Added to Bundle\", function() ",
													"{",
													"    pm.expect(pm.response.code).to.be.oneOf([200,201,202,204]);",
													"    var jsonData =JSON.parse(responseBody);",
													"    applicationid = jsonData.cmc_applicationid;",
													"    reviewerid= jsonData.cmc_applicationreviewerid;",
													"    console.log(reviewerid);",
													"        if(reviewerid !== null)",
													"        {",
													"            console.log(\"Head Reviewer added to Application Bundle\");",
													"            console.log(\"Reviewer Name: \" +jsonData.cmc_reviewername);",
													"        }",
													"        else",
													"        {",
													"            console.log(\"Reviewer not added to Application Bundle\");",
													"        }",
													"        pm.globals.set('greviewerid',reviewerid);",
													"           ",
													"});",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{  \r\n   \"cmc_userid@odata.bind\":\"/systemusers({{headreviewerid1}})\",\r\n   \"cmc_reviewername\":\"Mr. Gopal\",\r\n   \"cmc_reviewertype\":true,\r\n   \"statuscode\":1,\r\n   \"statecode\":1,\r\n   \"cmc_applicationreviewbundleid@odata.bind\":\"/cmc_applicationreviewbundles({{gbundleid2}})\"\r\n}"
										},
										"url": {
											"raw": "{{Eresource_URL}}cmc_applicationreviewers",
											"host": [
												"{{Eresource_URL}}cmc_applicationreviewers"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Application",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var applicationId;",
													"var applicationName;",
													"pm.test(\"Application Created\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
													"    var jsonData = JSON.parse(responseBody);",
													"     applicationId = jsonData.value[0].cmc_applicationid;",
													"     applicationName = jsonData.value[0].cmc_applicationname;",
													"    console.log(\"Application name is: \" + applicationName);",
													"",
													"",
													"});",
													"",
													"",
													"    pm.globals.set('gapplicationId1', applicationId);",
													"    pm.globals.set('gapplicationName1', applicationName);",
													"",
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{Eresource_URL}}cmc_applications?$filter=contains(cmc_applicationname,'Contact- 954345')",
											"host": [
												"{{Eresource_URL}}cmc_applications"
											],
											"query": [
												{
													"key": "$filter",
													"value": "contains(cmc_applicationname,'Contact- 954345')"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Add Application to Bundle",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"postman.setNextRequest(null);",
													"var applicationid,appstatus,contactid,bundleappid;",
													"pm.test(\"Application Added\", function() ",
													"{",
													"    pm.expect(pm.response.code).to.be.oneOf([200,201,202,204]);",
													"    var jsonData =JSON.parse(responseBody);",
													"    applicationid = jsonData.cmc_applicationid;",
													"    appstatus = jsonData.cmc_applicationstatus;",
													"    contactid = jsonData.cmc_contactid;",
													"    bundleappid = jsonData.cmc_applicationreviewbundle_applicationid;",
													"    if(appstatus === \"\" || contactid === \"\" )",
													"    {",
													"        console.log(\"Error Occured to add application to the Bundle.\");",
													"        throw new Error();",
													"    }",
													"    else",
													"    {",
													"        console.log(\"Application Added to Bundle.\");",
													"        postman.setNextRequest(\"Activate Review Bundle\");",
													"        pm.globals.set('gappid',applicationid);",
													"        console.log(\"Application Bundle Id: \" +bundleappid );",
													"    }",
													"   pm.globals.set('gbundleappid',bundleappid);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\"cmc_applicationid@odata.bind\": \"/cmc_applications({{gapplicationId1}})\",\r\n\"cmc_applicationreviewbundleid@odata.bind\": \"/cmc_applicationreviewbundles({{gbundleid2}})\",\r\n\"cmc_bundleapplicationname\": \"{{gapplicationName1}}\",\r\n\"statuscode\":1,\r\n\"statecode\":175490000\r\n}"
										},
										"url": {
											"raw": "{{Eresource_URL}}cmc_applicationreviewbundle_applications",
											"host": [
												"{{Eresource_URL}}cmc_applicationreviewbundle_applications"
											]
										}
									},
									"response": []
								},
								{
									"name": "Activate Review Bundle",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var statuscode;",
													"pm.test(\"Application Review Bundle Activated\", function() ",
													"{",
													"    pm.expect(pm.response.code).to.be.oneOf([200,201,202,204]);",
													"    var jsonData =JSON.parse(responseBody);",
													"    statuscode = jsonData.statuscode;",
													"   ",
													"    if(statuscode ===1)",
													"    {",
													"        console.log(\"Application Review Bundle Activated.\");",
													"    }",
													"    else",
													"    {",
													"        console.log(\"Some error occured to Activate the Bundle.\");",
													"       ",
													"    }",
													"   ",
													"});",
													"setTimeout(function(){}, 35000); ",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\"statecode\": 0,\r\n\"statuscode\": 1\r\n}"
										},
										"url": {
											"raw": "{{Eresource_URL}}cmc_applicationreviewbundles({{gbundleid2}})",
											"host": [
												"{{Eresource_URL}}cmc_applicationreviewbundles({{gbundleid2}})"
											]
										},
										"description": "Reviews Created After Bundle Activation"
									},
									"response": []
								},
								{
									"name": "Verify Review Record should Create",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var statuscode;",
													"var applicationreview;",
													"pm.test(\"Application Review should Create\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
													"    var jsonData = JSON.parse(responseBody);",
													"    console.info(\"Length of response\", jsonData.value.length);",
													"    pm.expect(jsonData.value.length).not.equal(0);",
													"",
													"});",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{Eresource_URL}}cmc_applicationreviews?$select=_cmc_bundleid_value &$filter=_cmc_bundleid_value eq '{{gbundleid2}}'",
											"host": [
												"{{Eresource_URL}}cmc_applicationreviews"
											],
											"query": [
												{
													"key": "$select",
													"value": "_cmc_bundleid_value "
												},
												{
													"key": "$filter",
													"value": "_cmc_bundleid_value eq '{{gbundleid2}}'"
												}
											]
										},
										"description": "Reviews Created After Bundle Activation"
									},
									"response": []
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "InboundInterestFeature",
			"item": [
				{
					"name": "TestCase -858651",
					"item": [
						{
							"name": "Contact",
							"item": [
								{
									"name": "GetToken",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var data = JSON.parse(responseBody);",
													"postman.setGlobalVariable('gaccess_token', data.access_token);",
													"",
													"//pm.environment.set(\"Eaccess_token\", data.access_token);",
													"console.log(pm.globals.get(\"gaccess_token\"));",
													"",
													"",
													"",
													"",
													"",
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "grant_type",
													"value": "client_credentials",
													"type": "text"
												},
												{
													"key": "client_id",
													"value": "{{Esystemadmin_id}}",
													"type": "text"
												},
												{
													"key": "client_secret",
													"value": "{{Esystemadmin_secret}}",
													"type": "text"
												},
												{
													"key": "resource",
													"value": "{{Eresource}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "https://login.microsoftonline.com/{{Eredirectid}}/oauth2/token",
											"protocol": "https",
											"host": [
												"login",
												"microsoftonline",
												"com"
											],
											"path": [
												"{{Eredirectid}}",
												"oauth2",
												"token"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get SourceCategory",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var sourceCategoryid;",
													"",
													"pm.test(\"Source category record Fetched\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
													"    var jsonData = JSON.parse(responseBody);",
													"    sourceCategoryid = jsonData.value[0].cmc_sourcecategoryid;",
													"    var sourceCategoryName = jsonData.value[0].cmc_sourcecategoryname;",
													"    console.log('SourceCategory Name is: ' + sourceCategoryName);",
													"",
													"});",
													"",
													"pm.globals.set('gsourceCategoryid41', sourceCategoryid);",
													"",
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											}
										],
										"url": {
											"raw": "{{Eresource_URL}}cmc_sourcecategories",
											"host": [
												"{{Eresource_URL}}cmc_sourcecategories"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get SourceMethod",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var sourceMethodid;",
													"",
													"pm.test(\"Source Method record Fetched\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
													"    var jsonData = JSON.parse(responseBody);",
													"    sourceMethodid = jsonData.value[0].cmc_sourcemethodid;",
													"    var sourceMethodName = jsonData.value[0].cmc_sourcemethodname;",
													"    console.log('SourceMethod Name is: ' + sourceMethodName);",
													"",
													"});",
													"",
													"pm.globals.set('gsourceMethodid41', sourceMethodid);",
													"",
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											}
										],
										"url": {
											"raw": "{{Eresource_URL}}cmc_sourcemethods",
											"host": [
												"{{Eresource_URL}}cmc_sourcemethods"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Contact record",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Contact Created\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
													"    var jsonData = JSON.parse(responseBody);",
													"    var contactid = jsonData.contactid;",
													"    var contactName = jsonData.fullname;",
													"    console.log(\"Contact name is: \" + contactName);",
													"",
													"    pm.globals.set('gcontactid41', contactid);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"lastname\": \"Contact-858651\",\r\n\t\"firstname\": \"UIAuto\",\r\n\t\"mshied_contacttype\": \"494280011\",\r\n\t\"cmc_sourcecategoryid@odata.bind\": \"/cmc_sourcecategories({{gsourceCategoryid41}})\",\r\n\t\"cmc_sourcemethodid@odata.bind\": \"/cmc_sourcemethods({{gsourceMethodid41}})\"\r\n\r\n}"
										},
										"url": {
											"raw": "{{Eresource_URL}}contacts",
											"host": [
												"{{Eresource_URL}}contacts"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Create Trip and Trip Activity",
							"item": [
								{
									"name": "Get User record",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var instructorId, instructorName;",
													"",
													"pm.test(\"Get instructor record\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
													"    var jsonData = JSON.parse(responseBody);",
													"    var result = jsonData.value;",
													"",
													"    instructorId = result[0].systemuserid;",
													"    instructorName = result[0].fullname;",
													"    console.log(\"instructor ID is : \" + instructorId);",
													"    console.log(\"instructor name is : \" + instructorName);",
													"});",
													"",
													"pm.globals.set('ginstructorId41', instructorId);",
													"",
													"",
													"",
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											},
											{
												"key": "OData-Version",
												"value": "4.0"
											},
											{
												"key": "OData-MaxVersion",
												"value": "4.0"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{Eresource_URL}}systemusers?$filter=fullname eq 'DCRM DCRM Faculty/Instructor'",
											"host": [
												"{{Eresource_URL}}systemusers"
											],
											"query": [
												{
													"key": "$filter",
													"value": "fullname eq 'DCRM DCRM Faculty/Instructor'"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Event",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var eventid;",
													"pm.test(\"Event Activity Created\", function () {",
													"  pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
													"  var jsonData = JSON.parse(responseBody);",
													"  eventid = jsonData.msevtmgt_eventid;",
													"  var eventName = jsonData.msevtmgt_name;",
													"  console.log(\"Normal Event name is: \" + eventName);",
													"",
													"});",
													"",
													"pm.globals.set('geventid41', eventid);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"msevtmgt_name\": \"UIAuto-event10-858651\",\r\n    \"msevtmgt_eventtype\": 100000001,\r\n    \"msevtmgt_eventstartdate\": \"2020-06-20T18:30:00Z\",\r\n    \"msevtmgt_eventenddate\": \"2020-07-20T18:30:00Z\",\r\n    \"msevtmgt_eventtimezone\": 176\r\n}"
										},
										"url": {
											"raw": "{{Eresource_URL}}msevtmgt_events",
											"host": [
												"{{Eresource_URL}}msevtmgt_events"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Trip",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Trip Created\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
													"    var jsonData = JSON.parse(responseBody);",
													"    var tripid = jsonData.cmc_tripid;",
													"    var tripName = jsonData.cmc_tripname;",
													"    console.log(\"Trip name is: \" + tripName);",
													"",
													"    pm.globals.set('gtripid41', tripid);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var current_timestamp = new Date();\r",
													"postman.setEnvironmentVariable(\"current_timestamp\", current_timestamp.toISOString());"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"cmc_tripname\": \"UIAuto-trip10-858651\",\r\n\t\"cmc_startdate\": \"2020-05-20T18:30:00Z\",\r\n\t\"cmc_enddate\": \"2022-06-24T18:29:00Z\",\r\n\t\"cmc_description\":\"UIAuto-tripDesc-858651\",\r\n\t\"ownerid@odata.bind\": \"/systemusers({{ginstructorId41}})\",\r\n\t\"cmc_statusdate\":\"{{current_timestamp}}\"\r\n\r\n\r\n}"
										},
										"url": {
											"raw": "{{Eresource_URL}}cmc_trips",
											"host": [
												"{{Eresource_URL}}cmc_trips"
											]
										}
									},
									"response": []
								},
								{
									"name": "Appointment",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var appointmentid;",
													"pm.test(\"Appointment Activity Created\", function () {",
													"  pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
													"  var jsonData = JSON.parse(responseBody);",
													"  appointmentid = jsonData.activityid;",
													"",
													"});",
													"",
													"pm.globals.set('gappointmentid1', appointmentid);",
													"",
													"var scheduledstart = data.scheduledstart;",
													"var scheduledend = data.scheduledend;",
													"var subject = data.Appointmentsubject;",
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"subject\": \"UIAuto-appointment10-858651\",\r\n    \"scheduledstart\": \"2018-11-23T17:15:00Z\",\r\n    \"scheduledend\": \"2018-11-23T17:30:00Z\",\r\n    \"prioritycode\": 1,\r\n    \"scheduleddurationminutes\": 30,\r\n    \"appointment_activity_parties\": [\r\n        {\r\n            \"partyid_contact@odata.bind\": \"/contacts({{gcontactid41}})\",\r\n            \"participationtypemask\": 5\r\n        }        \r\n    ]\r\n}"
										},
										"url": {
											"raw": "{{Eresource}}api/data/{{Eversion}}/appointments",
											"host": [
												"{{Eresource}}api"
											],
											"path": [
												"data",
												"{{Eversion}}",
												"appointments"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create TripActivity with Event",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Trip Created\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
													"    var jsonData = JSON.parse(responseBody);",
													"    var tripid = jsonData.cmc_tripactivityid;",
													"    var tripName = jsonData.cmc_name;",
													"    console.log(\"Trip name is: \" + tripName);",
													"",
													"    pm.globals.set('gtripid40', tripid);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"cmc_enddatetime\": \"2020-08-20T18:30:00Z\",\r\n\t\"cmc_startdatetime\": \"2020-06-20T18:30:00Z\",\r\n\t\"cmc_linkedtoevent@odata.bind\": \"/msevtmgt_events({{geventid41}})\",\r\n\t\"cmc_tripactivitystatus\": 175490000,\r\n\t\"cmc_activitytype\": 175490001,\r\n\t\"cmc_trip@odata.bind\": \"/cmc_trips({{gtripid41}})\"\r\n\r\n\r\n}"
										},
										"url": {
											"raw": "{{Eresource_URL}}cmc_tripactivities",
											"host": [
												"{{Eresource_URL}}cmc_tripactivities"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create TripActivity with Appointment",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Trip Created\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
													"    var jsonData = JSON.parse(responseBody);",
													"    var tripid = jsonData.cmc_tripactivityid;",
													"    var tripName = jsonData.cmc_name;",
													"    console.log(\"Trip name is: \" + tripName);",
													"",
													"    pm.globals.set('gtripid40', tripid);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"cmc_enddatetime\": \"2020-08-20T18:30:00Z\",\r\n\t\"cmc_startdatetime\": \"2020-06-20T18:30:00Z\",\r\n\t\"cmc_LinkedToAppointment@odata.bind\": \"/appointments({{gappointmentid1}})\",\r\n\t\"cmc_tripactivitystatus\": 175490000,\r\n\t\"cmc_activitytype\": 175490000,\r\n\t\"cmc_trip@odata.bind\": \"/cmc_trips({{gtripid41}})\"\r\n}"
										},
										"url": {
											"raw": "{{Eresource_URL}}cmc_tripactivities",
											"host": [
												"{{Eresource_URL}}cmc_tripactivities"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "TestCase -851063",
					"item": [
						{
							"name": "Contact",
							"item": [
								{
									"name": "Get SourceCategory",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var sourceCategoryid;",
													"",
													"pm.test(\"Source category record Fetched\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
													"    var jsonData = JSON.parse(responseBody);",
													"    sourceCategoryid = jsonData.value[0].cmc_sourcecategoryid;",
													"    var sourceCategoryName = jsonData.value[0].cmc_sourcecategoryname;",
													"    console.log('SourceCategory Name is: ' + sourceCategoryName);",
													"",
													"});",
													"",
													"pm.globals.set('gsourceCategoryid41', sourceCategoryid);",
													"",
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											}
										],
										"url": {
											"raw": "{{Eresource_URL}}cmc_sourcecategories",
											"host": [
												"{{Eresource_URL}}cmc_sourcecategories"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get SourceMethod",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var sourceMethodid;",
													"",
													"pm.test(\"Source Method record Fetched\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
													"    var jsonData = JSON.parse(responseBody);",
													"    sourceMethodid = jsonData.value[0].cmc_sourcemethodid;",
													"    var sourceMethodName = jsonData.value[0].cmc_sourcemethodname;",
													"    console.log('SourceMethod Name is: ' + sourceMethodName);",
													"",
													"});",
													"",
													"pm.globals.set('gsourceMethodid41', sourceMethodid);",
													"",
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											}
										],
										"url": {
											"raw": "{{Eresource_URL}}cmc_sourcemethods",
											"host": [
												"{{Eresource_URL}}cmc_sourcemethods"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Contact record",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Contact Created\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
													"    var jsonData = JSON.parse(responseBody);",
													"    var contactid = jsonData.contactid;",
													"    var contactName = jsonData.fullname;",
													"    console.log(\"Contact name is: \" + contactName);",
													"",
													"    pm.globals.set('gcontactid41', contactid);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"lastname\": \"Contact-851063\",\r\n\t\"firstname\": \"UIAuto\",\r\n\t\"mshied_contacttype\": \"494280011\",\r\n\t\"cmc_sourcecategoryid@odata.bind\": \"/cmc_sourcecategories({{gsourceCategoryid41}})\",\r\n\t\"cmc_sourcemethodid@odata.bind\": \"/cmc_sourcemethods({{gsourceMethodid41}})\"\r\n\r\n}"
										},
										"url": {
											"raw": "{{Eresource_URL}}contacts",
											"host": [
												"{{Eresource_URL}}contacts"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "TripActivity with Appointment",
							"item": [
								{
									"name": "Get User record",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var instructorId, instructorName;",
													"",
													"pm.test(\"Get instructor record\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
													"    var jsonData = JSON.parse(responseBody);",
													"    var result = jsonData.value;",
													"",
													"    instructorId = result[0].systemuserid;",
													"    instructorName = result[0].fullname;",
													"    console.log(\"instructor ID is : \" + instructorId);",
													"    console.log(\"instructor name is : \" + instructorName);",
													"});",
													"",
													"pm.globals.set('ginstructorId41', instructorId);",
													"",
													"",
													"",
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											},
											{
												"key": "OData-Version",
												"value": "4.0"
											},
											{
												"key": "OData-MaxVersion",
												"value": "4.0"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{Eresource_URL}}systemusers?$filter=fullname eq 'DCRM DCRM Faculty/Instructor'",
											"host": [
												"{{Eresource_URL}}systemusers"
											],
											"query": [
												{
													"key": "$filter",
													"value": "fullname eq 'DCRM DCRM Faculty/Instructor'"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Trip",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Trip Created\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
													"    var jsonData = JSON.parse(responseBody);",
													"    var tripid = jsonData.cmc_tripid;",
													"    var tripName = jsonData.cmc_tripname;",
													"    console.log(\"Trip name is: \" + tripName);",
													"",
													"    pm.globals.set('gtripid41', tripid);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var current_timestamp = new Date();\r",
													"postman.setEnvironmentVariable(\"current_timestamp\", current_timestamp.toISOString());"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"cmc_tripname\": \"UIAuto-trip20-851063\",\r\n\t\"cmc_startdate\": \"2020-05-20T18:30:00Z\",\r\n\t\"cmc_enddate\": \"2022-06-24T18:29:00Z\",\r\n\t\"cmc_description\":\"UIAuto-tripDesc-858651\",\r\n\t\"ownerid@odata.bind\": \"/systemusers({{ginstructorId41}})\",\r\n\t\"cmc_statusdate\":\"{{current_timestamp}}\"\r\n}"
										},
										"url": {
											"raw": "{{Eresource_URL}}cmc_trips",
											"host": [
												"{{Eresource_URL}}cmc_trips"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Event",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var eventid;",
													"pm.test(\"Event Activity Created\", function () {",
													"  pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
													"  var jsonData = JSON.parse(responseBody);",
													"  eventid = jsonData.msevtmgt_eventid;",
													"  var eventName = jsonData.msevtmgt_name;",
													"  console.log(\"Normal Event name is: \" + eventName);",
													"",
													"});",
													"",
													"pm.globals.set('geventid41', eventid);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"msevtmgt_name\": \"UIAuto-event20-851063\",\r\n    \"msevtmgt_eventtype\": 100000001,\r\n    \"msevtmgt_eventstartdate\": \"2020-06-20T18:30:00Z\",\r\n    \"msevtmgt_eventenddate\": \"2020-07-20T18:30:00Z\",\r\n    \"msevtmgt_eventtimezone\": 176\r\n}"
										},
										"url": {
											"raw": "{{Eresource_URL}}msevtmgt_events",
											"host": [
												"{{Eresource_URL}}msevtmgt_events"
											]
										}
									},
									"response": []
								},
								{
									"name": "Appointment",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var appointmentid;",
													"pm.test(\"Appointment Activity Created\", function () {",
													"  pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
													"  var jsonData = JSON.parse(responseBody);",
													"  appointmentid = jsonData.activityid;",
													"",
													"});",
													"",
													"pm.globals.set('gappointmentid1', appointmentid);",
													"",
													"var scheduledstart = data.scheduledstart;",
													"var scheduledend = data.scheduledend;",
													"var subject = data.Appointmentsubject;",
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"subject\": \"UIAuto-appointment20-851063\",\r\n    \"scheduledstart\": \"2018-11-23T17:15:00Z\",\r\n    \"scheduledend\": \"2018-11-23T17:30:00Z\",\r\n    \"prioritycode\": 1,\r\n    \"scheduleddurationminutes\": 30,\r\n    \"appointment_activity_parties\": [\r\n        {\r\n            \"partyid_contact@odata.bind\": \"/contacts({{gcontactid41}})\",\r\n            \"participationtypemask\": 5\r\n        }        \r\n    ]\r\n}"
										},
										"url": {
											"raw": "{{Eresource}}api/data/{{Eversion}}/appointments",
											"host": [
												"{{Eresource}}api"
											],
											"path": [
												"data",
												"{{Eversion}}",
												"appointments"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create TripActivity with Event",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Trip Created\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
													"    var jsonData = JSON.parse(responseBody);",
													"    var tripid = jsonData.cmc_tripactivityid;",
													"    var tripName = jsonData.cmc_name;",
													"    console.log(\"Trip name is: \" + tripName);",
													"",
													"    pm.globals.set('gtripid40', tripid);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"cmc_enddatetime\": \"2020-08-20T18:30:00Z\",\r\n\t\"cmc_startdatetime\": \"2020-06-20T18:30:00Z\",\r\n\t\"cmc_linkedtoevent@odata.bind\": \"/msevtmgt_events({{geventid41}})\",\r\n\t\"cmc_tripactivitystatus\": 175490000,\r\n\t\"cmc_activitytype\": 175490001,\r\n\t\"cmc_trip@odata.bind\": \"/cmc_trips({{gtripid41}})\"\r\n\r\n\r\n}"
										},
										"url": {
											"raw": "{{Eresource_URL}}cmc_tripactivities",
											"host": [
												"{{Eresource_URL}}cmc_tripactivities"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create TripActivity with Appointment",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Trip Created\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
													"    var jsonData = JSON.parse(responseBody);",
													"    var tripid = jsonData.cmc_tripactivityid;",
													"    var tripName = jsonData.cmc_name;",
													"    console.log(\"Trip name is: \" + tripName);",
													"",
													"    pm.globals.set('gtripid40', tripid);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"cmc_enddatetime\": \"2020-08-20T18:30:00Z\",\r\n\t\"cmc_startdatetime\": \"2020-06-20T18:30:00Z\",\r\n\t\"cmc_LinkedToAppointment@odata.bind\": \"/appointments({{gappointmentid1}})\",\r\n\t\"cmc_tripactivitystatus\": 175490000,\r\n\t\"cmc_activitytype\": 175490000,\r\n\t\"cmc_trip@odata.bind\": \"/cmc_trips({{gtripid41}})\"\r\n}"
										},
										"url": {
											"raw": "{{Eresource_URL}}cmc_tripactivities",
											"host": [
												"{{Eresource_URL}}cmc_tripactivities"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "TestCase -759377",
					"item": [
						{
							"name": "Contact",
							"item": [
								{
									"name": "GetToken",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var data = JSON.parse(responseBody);",
													"postman.setGlobalVariable('gaccess_token', data.access_token);",
													"",
													"//pm.environment.set(\"Eaccess_token\", data.access_token);",
													"console.log(pm.globals.get(\"gaccess_token\"));",
													"",
													"",
													"",
													"",
													"",
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "grant_type",
													"value": "client_credentials",
													"type": "text"
												},
												{
													"key": "client_id",
													"value": "{{Esystemadmin_id}}",
													"type": "text"
												},
												{
													"key": "client_secret",
													"value": "{{Esystemadmin_secret}}",
													"type": "text"
												},
												{
													"key": "resource",
													"value": "{{Eresource}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "https://login.microsoftonline.com/{{Eredirectid}}/oauth2/token",
											"protocol": "https",
											"host": [
												"login",
												"microsoftonline",
												"com"
											],
											"path": [
												"{{Eredirectid}}",
												"oauth2",
												"token"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get SourceCategory",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var sourceCategoryid;",
													"",
													"pm.test(\"Source category record Fetched\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
													"    var jsonData = JSON.parse(responseBody);",
													"    sourceCategoryid = jsonData.value[0].cmc_sourcecategoryid;",
													"    var sourceCategoryName = jsonData.value[0].cmc_sourcecategoryname;",
													"    console.log('SourceCategory Name is: ' + sourceCategoryName);",
													"",
													"});",
													"",
													"pm.globals.set('gsourceCategoryid41', sourceCategoryid);",
													"",
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											}
										],
										"url": {
											"raw": "{{Eresource_URL}}cmc_sourcecategories",
											"host": [
												"{{Eresource_URL}}cmc_sourcecategories"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get SourceMethod",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var sourceMethodid;",
													"",
													"pm.test(\"Source Method record Fetched\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
													"    var jsonData = JSON.parse(responseBody);",
													"    sourceMethodid = jsonData.value[0].cmc_sourcemethodid;",
													"    var sourceMethodName = jsonData.value[0].cmc_sourcemethodname;",
													"    console.log('SourceMethod Name is: ' + sourceMethodName);",
													"",
													"});",
													"",
													"pm.globals.set('gsourceMethodid41', sourceMethodid);",
													"",
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											}
										],
										"url": {
											"raw": "{{Eresource_URL}}cmc_sourcemethods",
											"host": [
												"{{Eresource_URL}}cmc_sourcemethods"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Contact record",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Contact Created\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
													"    var jsonData = JSON.parse(responseBody);",
													"    var contactid = jsonData.contactid;",
													"    var contactName = jsonData.fullname;",
													"    console.log(\"Contact name is: \" + contactName);",
													"",
													"    pm.globals.set('gcontactid41', contactid);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"lastname\": \"Contact-759377\",\t\r\n\t\"mshied_contacttype\": \"494280011\",\r\n\t\"cmc_sourcecategoryid@odata.bind\": \"/cmc_sourcecategories({{gsourceCategoryid41}})\",\r\n\t\"cmc_sourcemethodid@odata.bind\": \"/cmc_sourcemethods({{gsourceMethodid41}})\"\r\n\r\n}"
										},
										"url": {
											"raw": "{{Eresource_URL}}contacts",
											"host": [
												"{{Eresource_URL}}contacts"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Area of Interest",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var areaofinterestid;",
													"var areaofinterestname;",
													"",
													"pm.test(\"Create Area of Interest\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
													"    var jsonData = JSON.parse(responseBody);",
													"",
													"    areaofinterestid = jsonData.mshied_areaofinterestid;",
													"    console.log(\"area of interest id : \" + areaofinterestid);",
													"",
													"    areaofinterestname = jsonData.mshied_name;",
													"    console.log(\"area of interest name : \" + areaofinterestname);",
													"",
													"});",
													"pm.globals.set('gareaofinterestid41', areaofinterestid);",
													"pm.globals.set('gareaofinterestname41', areaofinterestname);",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"mshied_code\": \"{{$randomInt}}-Code - {{$randomInt}}\",\n    \"mshied_name\": \"AreaofInterest-759377\"\n}\n\n"
										},
										"url": {
											"raw": "{{Eresource_URL}}mshied_areaofinterests",
											"host": [
												"{{Eresource_URL}}mshied_areaofinterests"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "AddressFeature",
			"item": [
				{
					"name": "TestCase -741403",
					"item": [
						{
							"name": "GetToken",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = JSON.parse(responseBody);",
											"postman.setGlobalVariable('gaccess_token', data.access_token);",
											"",
											"//pm.environment.set(\"Eaccess_token\", data.access_token);",
											"console.log(pm.globals.get(\"gaccess_token\"));",
											"",
											"",
											"",
											"",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "grant_type",
											"value": "client_credentials",
											"type": "text"
										},
										{
											"key": "client_id",
											"value": "{{Esystemadmin_id}}",
											"type": "text"
										},
										{
											"key": "client_secret",
											"value": "{{Esystemadmin_secret}}",
											"type": "text"
										},
										{
											"key": "resource",
											"value": "{{Eresource}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "https://login.microsoftonline.com/{{Eredirectid}}/oauth2/token",
									"protocol": "https",
									"host": [
										"login",
										"microsoftonline",
										"com"
									],
									"path": [
										"{{Eredirectid}}",
										"oauth2",
										"token"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Account Record",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Account Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    var accountid = jsonData.accountid;",
											"    var accountName = jsonData.name;",
											"    console.log(\"Account name is: \" + accountName);",
											"",
											"    pm.globals.set('gaccountid19b', accountid);",
											"});",
											"",
											"",
											"",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Account-UI-741403\",\r\n    \"mshied_accounttype\": 494280000\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}accounts",
									"host": [
										"{{Eresource_URL}}accounts"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Contact Record",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Contact Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    var contactid = jsonData.contactid;",
											"    var contactName = jsonData.fullname;",
											"    console.log(\"Contact name is: \" + contactName);",
											"",
											"    pm.globals.set('gcontactid19b', contactid);",
											"});",
											"",
											"",
											"",
											"",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_sourcecampusid@odata.bind\": \"/accounts({{gaccountid19b}})\",\r\n    \"cmc_sourcereferringorganizationid@odata.bind\": \"/accounts({{gaccountid19b}})\",\r\n    \"lastname\": \"UIAuto Contact-741403\",\r\n    \"parentcustomerid_account@odata.bind\": \"/accounts({{gaccountid19b}})\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}contacts",
									"host": [
										"{{Eresource_URL}}contacts"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				}
			]
		},
		{
			"name": "ScoringModelFeature",
			"item": [
				{
					"name": "Testcase - 970369",
					"item": [
						{
							"name": "Get SourceCategory",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var sourceCategoryid;",
											"",
											"pm.test(\"Source category record Fetched\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    sourceCategoryid = jsonData.value[0].cmc_sourcecategoryid;",
											"    var sourceCategoryName = jsonData.value[0].cmc_sourcecategoryname;",
											"    console.log('SourceCategory Name is: ' + sourceCategoryName);",
											"",
											"});",
											"",
											"pm.globals.set('gsourceCategoryid75a', sourceCategoryid);",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"url": {
									"raw": "{{Eresource_URL}}cmc_sourcecategories",
									"host": [
										"{{Eresource_URL}}cmc_sourcecategories"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get SourceMethod",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var sourceMethodid;",
											"",
											"pm.test(\"Source Method record Fetched\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    sourceMethodid = jsonData.value[0].cmc_sourcemethodid;",
											"    var sourceMethodName = jsonData.value[0].cmc_sourcemethodname;",
											"    console.log('SourceMethod Name is: ' + sourceMethodName);",
											"",
											"});",
											"",
											"pm.globals.set('gsourceMethodid75a', sourceMethodid);",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"url": {
									"raw": "{{Eresource_URL}}cmc_sourcemethods",
									"host": [
										"{{Eresource_URL}}cmc_sourcemethods"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Contact Record",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Contact Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    var contactid = jsonData.contactid;",
											"    var contactName = jsonData.fullname;",
											"    console.log(\"Contact name is: \" + contactName);",
											"",
											"    pm.globals.set('gcontactid75a', contactid);",
											"});",
											"",
											"",
											"",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\r\n\t\"lastname\": \"Contact-970369\",\r\n\t\"firstname\": \"UIAuto\",\r\n\t\"mshied_contacttype\": \"494280011\",\r\n\t\"cmc_sourcecategoryid@odata.bind\": \"/cmc_sourcecategories({{gsourceCategoryid75a}})\",\r\n\t\"cmc_sourcemethodid@odata.bind\": \"/cmc_sourcemethods({{gsourceMethodid75a}})\"\r\n\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}contacts",
									"host": [
										"{{Eresource_URL}}contacts"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Static Student Group",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var listid;",
											"pm.test(\"Marketing List Created\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202,204]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    listid = jsonData.listid;",
											"    ",
											"    var SGName =jsonData.listname;   ",
											"    var stateid = jsonData.statecode;",
											"    console.log('ML name:'+SGName);",
											" ",
											"",
											"});",
											"",
											"pm.globals.set('glistid75a', listid);",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"listname\": \"Static ScoringModel-970369\",\r\n    \"type\": false,\r\n    \"createdfromcode\": 2,\r\n    \"cmc_marketinglisttype\": 175490000\r\n   \r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}lists",
									"host": [
										"{{Eresource_URL}}lists"
									]
								}
							},
							"response": []
						},
						{
							"name": "Adding Contact to Student Group",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Contacts Addedd to Marketing list\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 204, 201, 202]);",
											"",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"List\": {\r\n        \"listid\": \"{{glistid75a}}\",\r\n        \"@odata.type\": \"Microsoft.Dynamics.CRM.list\"\r\n    },\r\n    \"Members\": [\r\n        {\r\n            \"@odata.type\": \"Microsoft.Dynamics.CRM.contact\",\r\n            \"contactid\": \"{{gcontactid75a}}\"\r\n        }\r\n    ]\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}AddListMembersList",
									"host": [
										"{{Eresource_URL}}AddListMembersList"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "TripFeature",
			"item": [
				{
					"name": "TestCase-772573",
					"item": [
						{
							"name": "Trip - 1",
							"item": [
								{
									"name": "Pre-requisite",
									"item": [
										{
											"name": "GetToken",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var data = JSON.parse(responseBody);",
															"postman.setGlobalVariable('gaccess_token', data.access_token);",
															"",
															"//pm.environment.set(\"Eaccess_token\", data.access_token);",
															"console.log(pm.globals.get(\"gaccess_token\"));",
															"",
															"",
															"",
															"",
															"",
															"",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/x-www-form-urlencoded"
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "grant_type",
															"value": "client_credentials",
															"type": "text"
														},
														{
															"key": "client_id",
															"value": "{{Esystemadmin_id}}",
															"type": "text"
														},
														{
															"key": "client_secret",
															"value": "{{Esystemadmin_secret}}",
															"type": "text"
														},
														{
															"key": "resource",
															"value": "{{Eresource}}",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "https://login.microsoftonline.com/{{Eredirectid}}/oauth2/token",
													"protocol": "https",
													"host": [
														"login",
														"microsoftonline",
														"com"
													],
													"path": [
														"{{Eredirectid}}",
														"oauth2",
														"token"
													]
												}
											},
											"response": []
										},
										{
											"name": "Disabletripapproval-No",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Disabletripapproval-No\", function() ",
															"{",
															"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
															"    var jsonData =JSON.parse(responseBody);",
															"});",
															"",
															"",
															"",
															"",
															"",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Prefer",
														"value": "return=representation"
													},
													{
														"key": "Authorization",
														"value": "Bearer {{gaccess_token}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"cmc_disabletripapproval\":false\r\n}"
												},
												"url": {
													"raw": "{{Eresource_URL}}cmc_configurations(3d5a9f06-59d1-e811-a959-000d3a4e75c3)",
													"host": [
														"{{Eresource_URL}}cmc_configurations(3d5a9f06-59d1-e811-a959-000d3a4e75c3)"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Create Trip",
									"item": [
										{
											"name": "Get Reviewer",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var instructorId, instructorName;",
															"",
															"pm.test(\"Get Reviewer\", function () {",
															"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
															"    var jsonData = JSON.parse(responseBody);",
															"    var result = jsonData.value;",
															"",
															"    instructorId = result[0].systemuserid;",
															"    instructorName = result[0].fullname;",
															"    console.log(\"instructor ID is : \" + instructorId);",
															"    console.log(\"instructor name is : \" + instructorName);",
															"});",
															"",
															"pm.globals.set('ginstructorId1a', instructorId);",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Prefer",
														"value": "return=representation"
													},
													{
														"key": "Authorization",
														"value": "Bearer {{gaccess_token}}"
													},
													{
														"key": "OData-Version",
														"value": "4.0"
													},
													{
														"key": "OData-MaxVersion",
														"value": "4.0"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": []
												},
												"url": {
													"raw": "{{Eresource_URL}}systemusers?$filter=internalemailaddress eq 'anthologyd365automation@campusnexus.dev'",
													"host": [
														"{{Eresource_URL}}systemusers"
													],
													"query": [
														{
															"key": "$filter",
															"value": "internalemailaddress eq 'anthologyd365automation@campusnexus.dev'"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get Trip owner",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var instructorId, instructorName;",
															"",
															"pm.test(\"Get Trip Owner\", function () {",
															"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
															"    var jsonData = JSON.parse(responseBody);",
															"    var result = jsonData.value;",
															"",
															"    instructorId = result[0].systemuserid;",
															"    instructorName = result[0].fullname;",
															"    console.log(\"instructor ID is : \" + instructorId);",
															"    console.log(\"instructor name is : \" + instructorName);",
															"});",
															"",
															"pm.globals.set('gsysadminid1', instructorId);",
															"",
															"",
															"",
															"",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Prefer",
														"value": "return=representation"
													},
													{
														"key": "Authorization",
														"value": "Bearer {{gaccess_token}}"
													},
													{
														"key": "OData-Version",
														"value": "4.0"
													},
													{
														"key": "OData-MaxVersion",
														"value": "4.0"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": []
												},
												"url": {
													"raw": "{{Eresource_URL}}systemusers?$filter=internalemailaddress eq 'sysadmin@api.com'",
													"host": [
														"{{Eresource_URL}}systemusers"
													],
													"query": [
														{
															"key": "$filter",
															"value": "internalemailaddress eq 'sysadmin@api.com'"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Provide Reviewer to Trip Owner",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var instructorId, instructorName;",
															"",
															"pm.test(\"Provide reviewer to trip\", function () {",
															"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
															"    var jsonData = JSON.parse(responseBody);",
															"    var result = jsonData.value;",
															"",
															"    instructorId = jsonData.systemuserid;",
															"    instructorName = jsonData.fullname;",
															"    console.log(\"instructor ID is : \" + instructorId);",
															"    console.log(\"instructor name is : \" + instructorName);",
															"});",
															"",
															"pm.globals.set('ginstructorId41', instructorId);",
															"",
															"",
															"",
															"",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Prefer",
														"value": "return=representation"
													},
													{
														"key": "Authorization",
														"value": "Bearer {{gaccess_token}}"
													},
													{
														"key": "OData-Version",
														"value": "4.0"
													},
													{
														"key": "OData-MaxVersion",
														"value": "4.0"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"parentsystemuserid@odata.bind\": \"/systemusers({{ginstructorId1a}})\"\r\n\r\n}"
												},
												"url": {
													"raw": "{{Eresource_URL}}systemusers({{gsysadminid1}})",
													"host": [
														"{{Eresource_URL}}systemusers({{gsysadminid1}})"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateTrip",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var tripid;",
															"var autoid;",
															"    pm.test(\"Create trip\", function () {",
															"        pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
															"        var jsonData = JSON.parse(responseBody);",
															"        tripid = jsonData.cmc_tripid;",
															"        autoid = jsonData.cmc_engagetripid;",
															"        var tripname=jsonData.cmc_tripname;",
															"",
															"        console.log(\"tripname is: \"+tripname);",
															"",
															"    });",
															"pm.globals.set('gtripid', tripid);",
															"",
															"pm.test(\"Auto id validation\", function () {",
															"    pm.expect(autoid).to.include(\"TR-\");",
															"});",
															"",
															"",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"var current_timestamp = new Date();",
															"postman.setEnvironmentVariable(\"current_timestamp\", current_timestamp.toISOString());",
															"",
															"var moment = require('moment');",
															"pm.environment.set(\"timestamp\", moment().add(1, 'days').format(\"YYYY-MM-DD\"));",
															"",
															"pm.environment.set(\"timestampEndDate\", moment().add(11, 'days').format(\"YYYY-MM-DD\"));"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Prefer",
														"value": "return=representation"
													},
													{
														"key": "Authorization",
														"value": "Bearer {{gaccess_token}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"cmc_tripname\": \"UIAuto-Testtrip-772573a\",\r\n\t\"cmc_startdate\": \"{{current_timestamp}}\",\r\n\t\"cmc_enddate\": \"{{timestampEndDate}}\",\r\n\t\"cmc_description\":\"UIAuto-tripDesc-{{$randomInt}}\",\r\n\t\"ownerid@odata.bind\": \"/systemusers({{gsysadminid1}})\",\r\n\t\"cmc_statusdate\":\"{{current_timestamp}}\"\r\n}"
												},
												"url": {
													"raw": "{{Eresource_URL}}cmc_trips",
													"host": [
														"{{Eresource_URL}}cmc_trips"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Create TripActivity",
									"item": [
										{
											"name": "Create TripActivity",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Trip Activity Created\", function () {",
															"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
															"    var jsonData = JSON.parse(responseBody);",
															"    var tripid = jsonData.cmc_tripactivityid;",
															"    var tripName = jsonData.cmc_name;",
															"    console.log(\"Trip name is: \" + tripName);",
															"",
															"    pm.globals.set('gtripactivityid', tripid);",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"var current_timestamp = new Date();\r",
															"postman.setEnvironmentVariable(\"current_timestamp\", current_timestamp.toISOString());\r",
															"\r",
															"var moment = require('moment');\r",
															"pm.environment.set(\"timestamp\", moment().add(1, 'days').format(\"YYYY-MM-DD\"));\r",
															"\r",
															"pm.environment.set(\"timestampEndDate\", moment().add(11, 'days').format(\"YYYY-MM-DD\"));"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Prefer",
														"value": "return=representation"
													},
													{
														"key": "Authorization",
														"value": "Bearer {{gaccess_token}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"cmc_enddatetime\": \"{{timestampEndDate}}\",\r\n\t\"cmc_startdatetime\": \"{{current_timestamp}}\",\r\n\t\"cmc_tripactivitystatus\": 175490001,\r\n\t\"cmc_activitytype\": 175490002,\r\n\t\"cmc_trip@odata.bind\": \"/cmc_trips({{gtripid}})\"\r\n}"
												},
												"url": {
													"raw": "{{Eresource_URL}}cmc_tripactivities",
													"host": [
														"{{Eresource_URL}}cmc_tripactivities"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "BPF-Trip Approval",
									"item": [
										{
											"name": "Get Stage 1-Create Trip",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var processid ;",
															"var stagename ;",
															"var prospectstageid;",
															"var bpfID;",
															"",
															"pm.test(\"process stage- create Trip\", function() ",
															"{",
															"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
															"    var jsonData =JSON.parse(responseBody);",
															"    processid  = jsonData.value[0]._processid_value ;",
															"    stagename=jsonData.value[0].stagename ;",
															"    prospectstageid= jsonData.value[0].processstageid;  ",
															"",
															"    console.log(\"stagename :\" +stagename);",
															"    console.log(\"processstageid :\" +prospectstageid);",
															"",
															"    pm.globals.set('gprospectstageid', prospectstageid);",
															"    pm.globals.set('gprocessid', processid);",
															"});",
															"",
															"",
															"",
															"",
															"",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Prefer",
														"value": "return=representation"
													},
													{
														"key": "Authorization",
														"value": "Bearer {{gaccess_token}}"
													}
												],
												"url": {
													"raw": "{{Eresource_URL}}processstages?$select=*&$filter=stagename eq 'Create Trip'",
													"host": [
														"{{Eresource_URL}}processstages"
													],
													"query": [
														{
															"key": "$select",
															"value": "*"
														},
														{
															"key": "$filter",
															"value": "stagename eq 'Create Trip'"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get Stage 2-Review Before Approval",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var processid ;",
															"var stagename ;",
															"var prospectstageid;",
															"var bpfID;",
															"",
															"pm.test(\"process stage- Review before Approval\", function() ",
															"{",
															"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
															"    var jsonData =JSON.parse(responseBody);",
															"    processid  = jsonData.value[0]._processid_value ;",
															"    stagename=jsonData.value[0].stagename ;",
															"    prospectstageid= jsonData.value[0].processstageid;  ",
															"",
															"    console.log(\"stagename :\" +stagename);",
															"    console.log(\"processstageid :\" +prospectstageid);",
															"",
															"    pm.globals.set('gprospectstageid2', prospectstageid);",
															"    pm.globals.set('gprocessid2', processid);",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Prefer",
														"value": "return=representation"
													},
													{
														"key": "Authorization",
														"value": "Bearer {{gaccess_token}}"
													}
												],
												"url": {
													"raw": "{{Eresource_URL}}processstages?$select=*&$filter=stagename eq 'Review Before Approval'",
													"host": [
														"{{Eresource_URL}}processstages"
													],
													"query": [
														{
															"key": "$select",
															"value": "*"
														},
														{
															"key": "$filter",
															"value": "stagename eq 'Review Before Approval'"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get Stage 3-Submitted For Review",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var processid ;",
															"var stagename ;",
															"var prospectstageid;",
															"var bpfID;",
															"",
															"pm.test(\"process stage- Submitted for Review\", function() ",
															"{",
															"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
															"    var jsonData =JSON.parse(responseBody);",
															"    processid  = jsonData.value[0]._processid_value ;",
															"    stagename=jsonData.value[0].stagename ;",
															"    prospectstageid= jsonData.value[0].processstageid;  ",
															"",
															"    console.log(\"stagename :\" +stagename);",
															"    console.log(\"processstageid :\" +prospectstageid);",
															"",
															"    pm.globals.set('gprospectstageid3', prospectstageid);",
															"    pm.globals.set('gprocessid3', processid);",
															"});",
															"",
															"",
															"",
															"",
															"",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Prefer",
														"value": "return=representation"
													},
													{
														"key": "Authorization",
														"value": "Bearer {{gaccess_token}}"
													}
												],
												"url": {
													"raw": "{{Eresource_URL}}processstages?$select=*&$filter=stagename eq 'Submitted For Review'",
													"host": [
														"{{Eresource_URL}}processstages"
													],
													"query": [
														{
															"key": "$select",
															"value": "*"
														},
														{
															"key": "$filter",
															"value": "stagename eq 'Submitted For Review'"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get BPF Stage1 of trip",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"BPF 1st stage\", function() ",
															"{",
															"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
															"    var jsonData =JSON.parse(responseBody);",
															"    var businessprocessflowId  = jsonData.value[0].businessprocessflowinstanceid ;",
															"    var traversedpath=jsonData.value[0].traversedpath ;",
															"    var bpfname= jsonData.value[0].bpf_name;  ",
															"    var activestageId=jsonData.value[0]._activestageid_value;",
															"",
															"    console.log(\"businessprocessflowId :\" +businessprocessflowId);",
															"    console.log(\"traversedpath :\" +traversedpath);",
															"    console.log(\"bpfname :\" +bpfname);",
															"    console.log(\"activestageId :\" +activestageId);",
															"",
															"    pm.globals.set('gbusinessprocessflowId1', businessprocessflowId);",
															"    pm.globals.set('gtraversedpath1', traversedpath);",
															"    pm.globals.set('gactivestageId1', activestageId);",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Prefer",
														"value": "return=representation"
													},
													{
														"key": "Authorization",
														"value": "Bearer {{gaccess_token}}"
													}
												],
												"url": {
													"raw": "{{Eresource_URL}}cmc_tripapprovalprocesses?$filter=_bpf_cmc_tripid_value eq '{{gtripid}}'",
													"host": [
														"{{Eresource_URL}}cmc_tripapprovalprocesses"
													],
													"query": [
														{
															"key": "$filter",
															"value": "_bpf_cmc_tripid_value eq '{{gtripid}}'"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Approve Stage 1",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"BPF 1st stage completed/traversed\", function() ",
															"{",
															"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
															"    var jsonData =JSON.parse(responseBody);",
															"    var businessprocessflowId  = jsonData.businessprocessflowinstanceid ;",
															"    var traversedpath=jsonData.traversedpath ;",
															"    var bpfname= jsonData.bpf_name;  ",
															"    var activestageId=jsonData._activestageid_value;",
															"",
															"    console.log(\"businessprocessflowId :\" +businessprocessflowId);",
															"    console.log(\"traversedpath :\" +traversedpath);",
															"    console.log(\"bpfname :\" +bpfname);",
															"    console.log(\"activestageId :\" +activestageId);",
															"",
															"    pm.globals.set('gbusinessprocessflowId2', businessprocessflowId);",
															"    pm.globals.set('gtraversedpath2', traversedpath);",
															"    pm.globals.set('gactivestageId2', activestageId);",
															"});",
															"",
															"",
															"",
															"",
															"",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Prefer",
														"value": "return=representation"
													},
													{
														"key": "Authorization",
														"value": "Bearer {{gaccess_token}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"activestageid@odata.bind\": \"/processstages({{gprospectstageid2}})\",\r\n    \"traversedpath\": \"{{gprospectstageid}},{{gprospectstageid2}}\"\r\n\r\n}\r\n                \r\n"
												},
												"url": {
													"raw": "{{Eresource_URL}}cmc_tripapprovalprocesses({{gbusinessprocessflowId1}})",
													"host": [
														"{{Eresource_URL}}cmc_tripapprovalprocesses({{gbusinessprocessflowId1}})"
													]
												}
											},
											"response": []
										},
										{
											"name": "Fill stage 2 details in BPF",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var tripid;",
															"var autoid;",
															"    pm.test(\"update trip details\", function () {",
															"        pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
															"        var jsonData = JSON.parse(responseBody);",
															"        tripid = jsonData.cmc_tripid;",
															"        autoid = jsonData.cmc_engagetripid;",
															"        var tripname=jsonData.cmc_tripname;",
															"",
															"        console.log(\"tripname is: \"+tripname);",
															"",
															"    });",
															"pm.globals.set('gtripid', tripid);",
															"",
															"",
															"",
															"",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Prefer",
														"value": "return=representation"
													},
													{
														"key": "Authorization",
														"value": "Bearer {{gaccess_token}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"cmc_estimatedexpensedetails\": true,\r\n    \"cmc_travelersdetails\": true,\r\n    \"cmc_tripactivitydetails\": true\r\n}"
												},
												"url": {
													"raw": "{{Eresource_URL}}cmc_trips({{gtripid}})",
													"host": [
														"{{Eresource_URL}}cmc_trips({{gtripid}})"
													]
												}
											},
											"response": []
										},
										{
											"name": "Approve Stage 2",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Approve stage 2\", function() ",
															"{",
															"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
															"    var jsonData =JSON.parse(responseBody);",
															"    var businessprocessflowId  = jsonData.businessprocessflowinstanceid ;",
															"    var traversedpath=jsonData.traversedpath ;",
															"    var bpfname= jsonData.bpf_name;  ",
															"    var activestageId=jsonData._activestageid_value;",
															"",
															"    console.log(\"businessprocessflowId :\" +businessprocessflowId);",
															"    console.log(\"traversedpath :\" +traversedpath);",
															"    console.log(\"bpfname :\" +bpfname);",
															"    console.log(\"activestageId :\" +activestageId);",
															"",
															"    pm.globals.set('gbusinessprocessflowId3', businessprocessflowId);",
															"    pm.globals.set('gtraversedpath3', traversedpath);",
															"    pm.globals.set('gactivestageId3', activestageId);",
															"});",
															"",
															"",
															"",
															"",
															"",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Prefer",
														"value": "return=representation"
													},
													{
														"key": "Authorization",
														"value": "Bearer {{gaccess_token}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"activestageid@odata.bind\": \"/processstages({{gprospectstageid3}})\",\r\n    \"traversedpath\": \"{{gprospectstageid}},{{gprospectstageid2}},{{gprospectstageid3}}\"\r\n\r\n}\r\n"
												},
												"url": {
													"raw": "{{Eresource_URL}}cmc_tripapprovalprocesses({{gbusinessprocessflowId1}})",
													"host": [
														"{{Eresource_URL}}cmc_tripapprovalprocesses({{gbusinessprocessflowId1}})"
													]
												}
											},
											"response": []
										}
									]
								}
							]
						},
						{
							"name": "Trip - 2",
							"item": [
								{
									"name": "Pre-requisite",
									"item": [
										{
											"name": "GetToken",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var data = JSON.parse(responseBody);",
															"postman.setGlobalVariable('gaccess_token', data.access_token);",
															"",
															"//pm.environment.set(\"Eaccess_token\", data.access_token);",
															"console.log(pm.globals.get(\"gaccess_token\"));",
															"",
															"",
															"",
															"",
															"",
															"",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/x-www-form-urlencoded"
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "grant_type",
															"value": "client_credentials",
															"type": "text"
														},
														{
															"key": "client_id",
															"value": "{{Esystemadmin_id}}",
															"type": "text"
														},
														{
															"key": "client_secret",
															"value": "{{Esystemadmin_secret}}",
															"type": "text"
														},
														{
															"key": "resource",
															"value": "{{Eresource}}",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "https://login.microsoftonline.com/{{Eredirectid}}/oauth2/token",
													"protocol": "https",
													"host": [
														"login",
														"microsoftonline",
														"com"
													],
													"path": [
														"{{Eredirectid}}",
														"oauth2",
														"token"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Create Trip",
									"item": [
										{
											"name": "Get Reviewer",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var instructorId, instructorName;",
															"",
															"pm.test(\"Get Reviewer\", function () {",
															"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
															"    var jsonData = JSON.parse(responseBody);",
															"    var result = jsonData.value;",
															"",
															"    instructorId = result[0].systemuserid;",
															"    instructorName = result[0].fullname;",
															"    console.log(\"instructor ID is : \" + instructorId);",
															"    console.log(\"instructor name is : \" + instructorName);",
															"});",
															"",
															"pm.globals.set('ginstructorId2a', instructorId);",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Prefer",
														"value": "return=representation"
													},
													{
														"key": "Authorization",
														"value": "Bearer {{gaccess_token}}"
													},
													{
														"key": "OData-Version",
														"value": "4.0"
													},
													{
														"key": "OData-MaxVersion",
														"value": "4.0"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": []
												},
												"url": {
													"raw": "{{Eresource_URL}}systemusers?$filter=internalemailaddress eq 'anthologyd365automation@campusnexus.dev'",
													"host": [
														"{{Eresource_URL}}systemusers"
													],
													"query": [
														{
															"key": "$filter",
															"value": "internalemailaddress eq 'anthologyd365automation@campusnexus.dev'"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get Trip owner",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var instructorId, instructorName;",
															"",
															"pm.test(\"Get Trip Owner\", function () {",
															"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
															"    var jsonData = JSON.parse(responseBody);",
															"    var result = jsonData.value;",
															"",
															"    instructorId = result[0].systemuserid;",
															"    instructorName = result[0].fullname;",
															"    console.log(\"instructor ID is : \" + instructorId);",
															"    console.log(\"instructor name is : \" + instructorName);",
															"});",
															"",
															"pm.globals.set('gsysadminid2', instructorId);",
															"",
															"",
															"",
															"",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Prefer",
														"value": "return=representation"
													},
													{
														"key": "Authorization",
														"value": "Bearer {{gaccess_token}}"
													},
													{
														"key": "OData-Version",
														"value": "4.0"
													},
													{
														"key": "OData-MaxVersion",
														"value": "4.0"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": []
												},
												"url": {
													"raw": "{{Eresource_URL}}systemusers?$filter=internalemailaddress eq 'sysadmin@api.com'",
													"host": [
														"{{Eresource_URL}}systemusers"
													],
													"query": [
														{
															"key": "$filter",
															"value": "internalemailaddress eq 'sysadmin@api.com'"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Provide Reviewer to Trip Owner",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var instructorId, instructorName;",
															"",
															"pm.test(\"Provide reviewer to trip\", function () {",
															"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
															"    var jsonData = JSON.parse(responseBody);",
															"    var result = jsonData.value;",
															"",
															"    instructorId = jsonData.systemuserid;",
															"    instructorName = jsonData.fullname;",
															"    console.log(\"instructor ID is : \" + instructorId);",
															"    console.log(\"instructor name is : \" + instructorName);",
															"});",
															"",
															"pm.globals.set('ginstructorId42', instructorId);",
															"",
															"",
															"",
															"",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Prefer",
														"value": "return=representation"
													},
													{
														"key": "Authorization",
														"value": "Bearer {{gaccess_token}}"
													},
													{
														"key": "OData-Version",
														"value": "4.0"
													},
													{
														"key": "OData-MaxVersion",
														"value": "4.0"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"parentsystemuserid@odata.bind\": \"/systemusers({{ginstructorId2a}})\"\r\n\r\n}"
												},
												"url": {
													"raw": "{{Eresource_URL}}systemusers({{gsysadminid2}})",
													"host": [
														"{{Eresource_URL}}systemusers({{gsysadminid2}})"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateTrip",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var tripid;",
															"var autoid;",
															"    pm.test(\"Create trip\", function () {",
															"        pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
															"        var jsonData = JSON.parse(responseBody);",
															"        tripid = jsonData.cmc_tripid;",
															"        autoid = jsonData.cmc_engagetripid;",
															"        var tripname=jsonData.cmc_tripname;",
															"",
															"        console.log(\"tripname is: \"+tripname);",
															"",
															"    });",
															"pm.globals.set('gtripid2', tripid);",
															"",
															"pm.test(\"Auto id validation\", function () {",
															"    pm.expect(autoid).to.include(\"TR-\");",
															"});",
															"",
															"",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"var current_timestamp = new Date();",
															"postman.setEnvironmentVariable(\"current_timestamp\", current_timestamp.toISOString());",
															"",
															"var moment = require('moment');",
															"pm.environment.set(\"timestamp\", moment().add(1, 'days').format(\"YYYY-MM-DD\"));",
															"",
															"pm.environment.set(\"timestampEndDate\", moment().add(11, 'days').format(\"YYYY-MM-DD\"));"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Prefer",
														"value": "return=representation"
													},
													{
														"key": "Authorization",
														"value": "Bearer {{gaccess_token}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"cmc_tripname\": \"UIAuto-Testtrip-772573b\",\r\n\t\"cmc_startdate\": \"{{current_timestamp}}\",\r\n\t\"cmc_enddate\": \"{{timestampEndDate}}\",\r\n\t\"cmc_description\":\"UIAuto-tripDesc-{{$randomInt}}\",\r\n\t\"ownerid@odata.bind\": \"/systemusers({{gsysadminid2}})\",\r\n\t\"cmc_statusdate\":\"{{current_timestamp}}\"\r\n}"
												},
												"url": {
													"raw": "{{Eresource_URL}}cmc_trips",
													"host": [
														"{{Eresource_URL}}cmc_trips"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Create TripActivity",
									"item": [
										{
											"name": "Create TripActivity",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Trip Activity Created\", function () {",
															"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
															"    var jsonData = JSON.parse(responseBody);",
															"    var tripid = jsonData.cmc_tripactivityid;",
															"    var tripName = jsonData.cmc_name;",
															"    console.log(\"Trip name is: \" + tripName);",
															"",
															"    pm.globals.set('gtripactivityid2', tripid);",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"var current_timestamp = new Date();\r",
															"postman.setEnvironmentVariable(\"current_timestamp\", current_timestamp.toISOString());\r",
															"\r",
															"var moment = require('moment');\r",
															"pm.environment.set(\"timestamp\", moment().add(1, 'days').format(\"YYYY-MM-DD\"));\r",
															"\r",
															"pm.environment.set(\"timestampEndDate\", moment().add(11, 'days').format(\"YYYY-MM-DD\"));"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Prefer",
														"value": "return=representation"
													},
													{
														"key": "Authorization",
														"value": "Bearer {{gaccess_token}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"cmc_enddatetime\": \"{{timestampEndDate}}\",\r\n\t\"cmc_startdatetime\": \"{{current_timestamp}}\",\r\n\t\"cmc_tripactivitystatus\": 175490000,\r\n\t\"cmc_activitytype\": 175490002,\r\n\t\"cmc_trip@odata.bind\": \"/cmc_trips({{gtripid2}})\"\r\n}"
												},
												"url": {
													"raw": "{{Eresource_URL}}cmc_tripactivities",
													"host": [
														"{{Eresource_URL}}cmc_tripactivities"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "BPF-Trip Approval",
									"item": [
										{
											"name": "Get Stage 1-Create Trip",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var processid ;",
															"var stagename ;",
															"var prospectstageid;",
															"var bpfID;",
															"",
															"pm.test(\"process stage- create Trip\", function() ",
															"{",
															"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
															"    var jsonData =JSON.parse(responseBody);",
															"    processid  = jsonData.value[0]._processid_value ;",
															"    stagename=jsonData.value[0].stagename ;",
															"    prospectstageid= jsonData.value[0].processstageid;  ",
															"",
															"    console.log(\"stagename :\" +stagename);",
															"    console.log(\"processstageid :\" +prospectstageid);",
															"",
															"    pm.globals.set('gprospectstageid11', prospectstageid);",
															"    pm.globals.set('gprocessid11', processid);",
															"});",
															"",
															"",
															"",
															"",
															"",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Prefer",
														"value": "return=representation"
													},
													{
														"key": "Authorization",
														"value": "Bearer {{gaccess_token}}"
													}
												],
												"url": {
													"raw": "{{Eresource_URL}}processstages?$select=*&$filter=stagename eq 'Create Trip'",
													"host": [
														"{{Eresource_URL}}processstages"
													],
													"query": [
														{
															"key": "$select",
															"value": "*"
														},
														{
															"key": "$filter",
															"value": "stagename eq 'Create Trip'"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get Stage 2-Review Before Approval",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var processid ;",
															"var stagename ;",
															"var prospectstageid;",
															"var bpfID;",
															"",
															"pm.test(\"process stage- Review before Approval\", function() ",
															"{",
															"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
															"    var jsonData =JSON.parse(responseBody);",
															"    processid  = jsonData.value[0]._processid_value ;",
															"    stagename=jsonData.value[0].stagename ;",
															"    prospectstageid= jsonData.value[0].processstageid;  ",
															"",
															"    console.log(\"stagename :\" +stagename);",
															"    console.log(\"processstageid :\" +prospectstageid);",
															"",
															"    pm.globals.set('gprospectstageid22', prospectstageid);",
															"    pm.globals.set('gprocessid22', processid);",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Prefer",
														"value": "return=representation"
													},
													{
														"key": "Authorization",
														"value": "Bearer {{gaccess_token}}"
													}
												],
												"url": {
													"raw": "{{Eresource_URL}}processstages?$select=*&$filter=stagename eq 'Review Before Approval'",
													"host": [
														"{{Eresource_URL}}processstages"
													],
													"query": [
														{
															"key": "$select",
															"value": "*"
														},
														{
															"key": "$filter",
															"value": "stagename eq 'Review Before Approval'"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get Stage 3-Submitted For Review",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var processid ;",
															"var stagename ;",
															"var prospectstageid;",
															"var bpfID;",
															"",
															"pm.test(\"process stage- Submitted for Review\", function() ",
															"{",
															"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
															"    var jsonData =JSON.parse(responseBody);",
															"    processid  = jsonData.value[0]._processid_value ;",
															"    stagename=jsonData.value[0].stagename ;",
															"    prospectstageid= jsonData.value[0].processstageid;  ",
															"",
															"    console.log(\"stagename :\" +stagename);",
															"    console.log(\"processstageid :\" +prospectstageid);",
															"",
															"    pm.globals.set('gprospectstageid33', prospectstageid);",
															"    pm.globals.set('gprocessid33', processid);",
															"});",
															"",
															"",
															"",
															"",
															"",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Prefer",
														"value": "return=representation"
													},
													{
														"key": "Authorization",
														"value": "Bearer {{gaccess_token}}"
													}
												],
												"url": {
													"raw": "{{Eresource_URL}}processstages?$select=*&$filter=stagename eq 'Submitted For Review'",
													"host": [
														"{{Eresource_URL}}processstages"
													],
													"query": [
														{
															"key": "$select",
															"value": "*"
														},
														{
															"key": "$filter",
															"value": "stagename eq 'Submitted For Review'"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get BPF Stage1 of trip",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"BPF 1st stage\", function() ",
															"{",
															"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
															"    var jsonData =JSON.parse(responseBody);",
															"    var businessprocessflowId  = jsonData.value[0].businessprocessflowinstanceid ;",
															"    var traversedpath=jsonData.value[0].traversedpath ;",
															"    var bpfname= jsonData.value[0].bpf_name;  ",
															"    var activestageId=jsonData.value[0]._activestageid_value;",
															"",
															"    console.log(\"businessprocessflowId :\" +businessprocessflowId);",
															"    console.log(\"traversedpath :\" +traversedpath);",
															"    console.log(\"bpfname :\" +bpfname);",
															"    console.log(\"activestageId :\" +activestageId);",
															"",
															"    pm.globals.set('gbusinessprocessflowId11', businessprocessflowId);",
															"    pm.globals.set('gtraversedpath11', traversedpath);",
															"    pm.globals.set('gactivestageId11', activestageId);",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Prefer",
														"value": "return=representation"
													},
													{
														"key": "Authorization",
														"value": "Bearer {{gaccess_token}}"
													}
												],
												"url": {
													"raw": "{{Eresource_URL}}cmc_tripapprovalprocesses?$filter=_bpf_cmc_tripid_value eq '{{gtripid2}}'",
													"host": [
														"{{Eresource_URL}}cmc_tripapprovalprocesses"
													],
													"query": [
														{
															"key": "$filter",
															"value": "_bpf_cmc_tripid_value eq '{{gtripid2}}'"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Approve Stage 1",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"BPF 1st stage completed/traversed\", function() ",
															"{",
															"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
															"    var jsonData =JSON.parse(responseBody);",
															"    var businessprocessflowId  = jsonData.businessprocessflowinstanceid ;",
															"    var traversedpath=jsonData.traversedpath ;",
															"    var bpfname= jsonData.bpf_name;  ",
															"    var activestageId=jsonData._activestageid_value;",
															"",
															"    console.log(\"businessprocessflowId :\" +businessprocessflowId);",
															"    console.log(\"traversedpath :\" +traversedpath);",
															"    console.log(\"bpfname :\" +bpfname);",
															"    console.log(\"activestageId :\" +activestageId);",
															"",
															"    pm.globals.set('gbusinessprocessflowId2', businessprocessflowId);",
															"    pm.globals.set('gtraversedpath2', traversedpath);",
															"    pm.globals.set('gactivestageId2', activestageId);",
															"});",
															"",
															"",
															"",
															"",
															"",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Prefer",
														"value": "return=representation"
													},
													{
														"key": "Authorization",
														"value": "Bearer {{gaccess_token}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"activestageid@odata.bind\": \"/processstages({{gprospectstageid22}})\",\r\n    \"traversedpath\": \"{{gprospectstageid11}},{{gprospectstageid22}}\"\r\n\r\n}\r\n                \r\n"
												},
												"url": {
													"raw": "{{Eresource_URL}}cmc_tripapprovalprocesses({{gbusinessprocessflowId11}})",
													"host": [
														"{{Eresource_URL}}cmc_tripapprovalprocesses({{gbusinessprocessflowId11}})"
													]
												}
											},
											"response": []
										},
										{
											"name": "Fill stage 2 details in BPF",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var tripid;",
															"var autoid;",
															"    pm.test(\"update trip details\", function () {",
															"        pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
															"        var jsonData = JSON.parse(responseBody);",
															"        tripid = jsonData.cmc_tripid;",
															"        autoid = jsonData.cmc_engagetripid;",
															"        var tripname=jsonData.cmc_tripname;",
															"",
															"        console.log(\"tripname is: \"+tripname);",
															"",
															"    });",
															"pm.globals.set('gtripid2', tripid);",
															"",
															"",
															"",
															"",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Prefer",
														"value": "return=representation"
													},
													{
														"key": "Authorization",
														"value": "Bearer {{gaccess_token}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"cmc_estimatedexpensedetails\": true,\r\n    \"cmc_travelersdetails\": true,\r\n    \"cmc_tripactivitydetails\": true\r\n}"
												},
												"url": {
													"raw": "{{Eresource_URL}}cmc_trips({{gtripid2}})",
													"host": [
														"{{Eresource_URL}}cmc_trips({{gtripid2}})"
													]
												}
											},
											"response": []
										},
										{
											"name": "Approve Stage 2",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Approve stage 2\", function() ",
															"{",
															"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
															"    var jsonData =JSON.parse(responseBody);",
															"    var businessprocessflowId  = jsonData.businessprocessflowinstanceid ;",
															"    var traversedpath=jsonData.traversedpath ;",
															"    var bpfname= jsonData.bpf_name;  ",
															"    var activestageId=jsonData._activestageid_value;",
															"",
															"    console.log(\"businessprocessflowId :\" +businessprocessflowId);",
															"    console.log(\"traversedpath :\" +traversedpath);",
															"    console.log(\"bpfname :\" +bpfname);",
															"    console.log(\"activestageId :\" +activestageId);",
															"",
															"    pm.globals.set('gbusinessprocessflowId3', businessprocessflowId);",
															"    pm.globals.set('gtraversedpath3', traversedpath);",
															"    pm.globals.set('gactivestageId3', activestageId);",
															"});",
															"",
															"",
															"",
															"",
															"",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Prefer",
														"value": "return=representation"
													},
													{
														"key": "Authorization",
														"value": "Bearer {{gaccess_token}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"activestageid@odata.bind\": \"/processstages({{gprospectstageid33}})\",\r\n    \"traversedpath\": \"{{gprospectstageid11}},{{gprospectstageid22}},{{gprospectstageid33}}\"\r\n\r\n}\r\n"
												},
												"url": {
													"raw": "{{Eresource_URL}}cmc_tripapprovalprocesses({{gbusinessprocessflowId11}})",
													"host": [
														"{{Eresource_URL}}cmc_tripapprovalprocesses({{gbusinessprocessflowId11}})"
													]
												}
											},
											"response": []
										}
									]
								}
							]
						},
						{
							"name": "Trip - 3",
							"item": [
								{
									"name": "Pre-requisite",
									"item": [
										{
											"name": "GetToken",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var data = JSON.parse(responseBody);",
															"postman.setGlobalVariable('gaccess_token', data.access_token);",
															"",
															"//pm.environment.set(\"Eaccess_token\", data.access_token);",
															"console.log(pm.globals.get(\"gaccess_token\"));",
															"",
															"",
															"",
															"",
															"",
															"",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/x-www-form-urlencoded"
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "grant_type",
															"value": "client_credentials",
															"type": "text"
														},
														{
															"key": "client_id",
															"value": "{{Esystemadmin_id}}",
															"type": "text"
														},
														{
															"key": "client_secret",
															"value": "{{Esystemadmin_secret}}",
															"type": "text"
														},
														{
															"key": "resource",
															"value": "{{Eresource}}",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "https://login.microsoftonline.com/{{Eredirectid}}/oauth2/token",
													"protocol": "https",
													"host": [
														"login",
														"microsoftonline",
														"com"
													],
													"path": [
														"{{Eredirectid}}",
														"oauth2",
														"token"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Create Trip",
									"item": [
										{
											"name": "Get Reviewer",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var instructorId, instructorName;",
															"",
															"pm.test(\"Get Reviewer\", function () {",
															"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
															"    var jsonData = JSON.parse(responseBody);",
															"    var result = jsonData.value;",
															"",
															"    instructorId = result[0].systemuserid;",
															"    instructorName = result[0].fullname;",
															"    console.log(\"instructor ID is : \" + instructorId);",
															"    console.log(\"instructor name is : \" + instructorName);",
															"});",
															"",
															"pm.globals.set('ginstructorId3a', instructorId);",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Prefer",
														"value": "return=representation"
													},
													{
														"key": "Authorization",
														"value": "Bearer {{gaccess_token}}"
													},
													{
														"key": "OData-Version",
														"value": "4.0"
													},
													{
														"key": "OData-MaxVersion",
														"value": "4.0"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": []
												},
												"url": {
													"raw": "{{Eresource_URL}}systemusers?$filter=internalemailaddress eq 'anthologyd365automation@campusnexus.dev'",
													"host": [
														"{{Eresource_URL}}systemusers"
													],
													"query": [
														{
															"key": "$filter",
															"value": "internalemailaddress eq 'anthologyd365automation@campusnexus.dev'"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get Trip owner",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var instructorId, instructorName;",
															"",
															"pm.test(\"Get Trip Owner\", function () {",
															"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
															"    var jsonData = JSON.parse(responseBody);",
															"    var result = jsonData.value;",
															"",
															"    instructorId = result[0].systemuserid;",
															"    instructorName = result[0].fullname;",
															"    console.log(\"instructor ID is : \" + instructorId);",
															"    console.log(\"instructor name is : \" + instructorName);",
															"});",
															"",
															"pm.globals.set('gsysadminid3', instructorId);",
															"",
															"",
															"",
															"",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Prefer",
														"value": "return=representation"
													},
													{
														"key": "Authorization",
														"value": "Bearer {{gaccess_token}}"
													},
													{
														"key": "OData-Version",
														"value": "4.0"
													},
													{
														"key": "OData-MaxVersion",
														"value": "4.0"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": []
												},
												"url": {
													"raw": "{{Eresource_URL}}systemusers?$filter=internalemailaddress eq 'sysadmin@api.com'",
													"host": [
														"{{Eresource_URL}}systemusers"
													],
													"query": [
														{
															"key": "$filter",
															"value": "internalemailaddress eq 'sysadmin@api.com'"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Provide Reviewer to Trip Owner",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var instructorId, instructorName;",
															"",
															"pm.test(\"Provide reviewer to trip\", function () {",
															"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
															"    var jsonData = JSON.parse(responseBody);",
															"    var result = jsonData.value;",
															"",
															"    instructorId = jsonData.systemuserid;",
															"    instructorName = jsonData.fullname;",
															"    console.log(\"instructor ID is : \" + instructorId);",
															"    console.log(\"instructor name is : \" + instructorName);",
															"});",
															"",
															"pm.globals.set('ginstructorId43', instructorId);",
															"",
															"",
															"",
															"",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Prefer",
														"value": "return=representation"
													},
													{
														"key": "Authorization",
														"value": "Bearer {{gaccess_token}}"
													},
													{
														"key": "OData-Version",
														"value": "4.0"
													},
													{
														"key": "OData-MaxVersion",
														"value": "4.0"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"parentsystemuserid@odata.bind\": \"/systemusers({{ginstructorId3a}})\"\r\n\r\n}"
												},
												"url": {
													"raw": "{{Eresource_URL}}systemusers({{gsysadminid3}})",
													"host": [
														"{{Eresource_URL}}systemusers({{gsysadminid3}})"
													]
												}
											},
											"response": []
										},
										{
											"name": "CreateTrip",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var tripid;",
															"var autoid;",
															"    pm.test(\"Create trip\", function () {",
															"        pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
															"        var jsonData = JSON.parse(responseBody);",
															"        tripid = jsonData.cmc_tripid;",
															"        autoid = jsonData.cmc_engagetripid;",
															"        var tripname=jsonData.cmc_tripname;",
															"",
															"        console.log(\"tripname is: \"+tripname);",
															"",
															"    });",
															"pm.globals.set('gtripid3', tripid);",
															"",
															"pm.test(\"Auto id validation\", function () {",
															"    pm.expect(autoid).to.include(\"TR-\");",
															"});",
															"",
															"",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"var current_timestamp = new Date();",
															"postman.setEnvironmentVariable(\"current_timestamp\", current_timestamp.toISOString());",
															"",
															"var moment = require('moment');",
															"pm.environment.set(\"timestamp\", moment().add(1, 'days').format(\"YYYY-MM-DD\"));",
															"",
															"pm.environment.set(\"timestampEndDate\", moment().add(11, 'days').format(\"YYYY-MM-DD\"));"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Prefer",
														"value": "return=representation"
													},
													{
														"key": "Authorization",
														"value": "Bearer {{gaccess_token}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"cmc_tripname\": \"UIAuto-Testtrip-772573c\",\r\n\t\"cmc_startdate\": \"{{current_timestamp}}\",\r\n\t\"cmc_enddate\": \"{{timestampEndDate}}\",\r\n\t\"cmc_description\":\"UIAuto-tripDesc-{{$randomInt}}\",\r\n\t\"ownerid@odata.bind\": \"/systemusers({{gsysadminid3}})\",\r\n\t\"cmc_statusdate\":\"{{current_timestamp}}\"\r\n}"
												},
												"url": {
													"raw": "{{Eresource_URL}}cmc_trips",
													"host": [
														"{{Eresource_URL}}cmc_trips"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Create TripActivity",
									"item": [
										{
											"name": "Create TripActivity",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Trip Activity Created\", function () {",
															"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
															"    var jsonData = JSON.parse(responseBody);",
															"    var tripid = jsonData.cmc_tripactivityid;",
															"    var tripName = jsonData.cmc_name;",
															"    console.log(\"Trip name is: \" + tripName);",
															"    pm.globals.set('gtripactivityid3', tripid);",
															"});"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"var current_timestamp = new Date();\r",
															"postman.setEnvironmentVariable(\"current_timestamp\", current_timestamp.toISOString());\r",
															"\r",
															"var moment = require('moment');\r",
															"pm.environment.set(\"timestamp\", moment().add(1, 'days').format(\"YYYY-MM-DD\"));\r",
															"\r",
															"pm.environment.set(\"timestampEndDate\", moment().add(11, 'days').format(\"YYYY-MM-DD\"));"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Prefer",
														"value": "return=representation"
													},
													{
														"key": "Authorization",
														"value": "Bearer {{gaccess_token}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"cmc_enddatetime\": \"{{timestampEndDate}}\",\r\n\t\"cmc_startdatetime\": \"{{current_timestamp}}\",\r\n\t\"cmc_tripactivitystatus\": 175490000,\r\n\t\"cmc_activitytype\": 175490002,\r\n\t\"cmc_trip@odata.bind\": \"/cmc_trips({{gtripid3}})\"\r\n}"
												},
												"url": {
													"raw": "{{Eresource_URL}}cmc_tripactivities",
													"host": [
														"{{Eresource_URL}}cmc_tripactivities"
													]
												}
											},
											"response": []
										}
									]
								}
							]
						}
					]
				}
			]
		}
	]
}