 Webdriver how you can perform double click

Syntax- Actions act = new Actions (driver);
act.doubleClick(webelement);

----------------------
 types of locators?


By.id()
By.name()
By.tagName()
By.className()
By.linkText()
By.partialLinkText()
By.xpath
By.cssSelector()
---------------------------------------
difference between findElement() and findElements()?
findElement(): It is used to find the first element within the current page using the given "locating mechanism". It returns a single WebElement.

findElements(): It uses the given "locating mechanism" to find all the elements within the current page. It returns a list of web elements.
----------------------
How many types of waits in selenium?
Implicit Wait:slows down test performance.
Explicit Wait
--------------------------
What are the different methods to refresh a web page in WebDriver?
There are multiple ways of refreshing a page in Webdriver.

1. Using driver.navigate command -
driver.navigate().refresh();  

2. Using driver.getCurrentUrl() with driver.get() command -
driver.get(driver.getCurrentUrl());  

3. Using driver.getCurrentUrl() with driver.navigate() command -
  driver.navigate().to(driver.getCurrentUrl());  
--------------------------------------

How to select value in a dropdown?

Syntax:

selectByValue:

Select selectByValue = new Select(driver.findElement(By.id("SelectID_One")));  
selectByValue.selectByValue("greenvalue");  

selectByVisibleText:
Select selectByVisibleText = new Select (driver.findElement(By.id("SelectID_Two")));  
selectByVisibleText.selectByVisibleText("Lime");  

Select selectByIndex = new Select(driver.findElement(By.id("SelectID_Three")));  
selectByIndex.selectByIndex(2);  

-----------------
navigation commands?

driver.navigate().back();  
driver.navigate().forward();  
driver.navigate().refresh();  
driver.navigate().to("https://google.com");  
------------
sleep() is a blocking operation that keeps a hold on the monitor / lock of the shared object for the specified number of milliseconds.

wait(), on the other hand, simply pauses the thread until either (a) the specified number of milliseconds have elapsed or (b) it receives a desired notification from another thread (whichever is first), without keeping a hold on the monitor/lock of the shared object.

sleep() is most commonly used for polling, or to check for certain results, at a regular interval. wait() is generally used in multithreaded applicat

In all versions of Java, the volatile keyword guarantees global ordering on reads and writes to a variable. This implies that every thread accessing a volatile field will read the variable’s current value instead of (potentially) using a cached value.
-------------------------------------------------------------------

Selenium WebDriver:WebDriver is a programming interface that helps create and run test cases.
Selenium Grid :The grid was designed to distribute commands to different machines simultaneously. It allows the parallel execution of tests on different browsers and different operating systems

What are the limitations of Selenium testing? 
Since Selenium is an open-source tool, it does not have dedicated tech support to resolve the user queries.

Same Origin policy is a feature adopted for security purposes. According to this policy, a web browser allows scripts from one webpage to access the contents of another webpage 

Mention the types of Web locators.
Locator by ID
 driver.findElement(By.id(“user”));
Locator by the link
 driver.findElement(By.linkText(“Today’s deals”)).click();

Locator by Name

driver.findElement(By.name(“books”).click());

Locator by TagName

driver.findElement(By.tagName(“button”).click());

Locator by XPath

 driver.findElement(By.xpath(“//span[contains(text(),’an account’)]”)).getText();
Locator by CSS Selector

driver.findElement(By.cssSelector(“input#email”)).sendKeys(“myemail@email.com”);

 What are the types of waits supported by WebDriver

Implicit wait
driver.manage().timeouts().implicitlyWait(TimeOut, TimeUnit.SECONDS);

Explicit wait
WebDriverWait wait = new WebDriverWait(WebDriver Reference, TimeOut);

Wait wait = new FluentWait(WebDriver reference).withTimeout(timeout, SECONDS).pollingEvery(timeout, SECONDS).ignoring(Exception.class)



-----------------------------------------------------------------------------------
How can you catch an exception thrown by another thread in Java?
// create our uncaught exception handler
Thread.UncaughtExceptionHandler handler = new Thread.UncaughtExceptionHandler() {
    public void uncaughtException(Thread th, Throwable ex) {
        System.out.println("Uncaught exception: " + ex);
    }
};


------------------
You can swap two values a and b without using any other variables as follows:

a = a + b;
b = a - b;
a = a - b;

--------
What is the Java Classloader? List and explain the purpose of the three types of class loaders.

The Java Classloader is the part of the Java runtime environment that loads classes on demand (lazy loading) into the JVM (Java Virtual Machine). Classes may be loaded from the local file system, a remote file system, or even the web.

When the JVM is started, three class loaders are used: 1. Bootstrap Classloader: Loads core java API file rt.jar from folder. 2. Extension Classloader: Loads jar files from folder. 3. System/Application Classloader: Loads jar files from path specified in the CLASSPATH environment variable.

---------------

Is a finally block executed when an exception is thrown from a try block that does not have a catch block, and if so, when?

public class FinallyExecution {
	public static void main(String[] args) {	
		try{			
			FinallyExecution.divide(100, 0);}
		finally{
			System.out.println("finally in main");
		}
	}	
	public static void divide(int n, int div){
		try{
			int ans = n/div; }
		finally{
			System.out.println("finally of divide");
		}
	}
}

106292899
-----------------------------------------------------------------------------------
What are static initializers and when would you use them?
A static initializer gives you the opportunity to run code during the initial loading of a class and it guarantees that this code will only run once and will finish running before your class can be accessed in any way.

They are useful for performing initialization of complex static objects or to register a type with a static registry, as JDBC drivers do.

Suppose you want to create a static, immutable Map containing some feature flags. Java doesn’t have a good one-liner for initializing maps, so you can use static initializers instead:

----------------------------------------------------------------
If one needs a Set, how do you choose between HashSet vs. TreeSet?

Hide answer
At first glance, HashSet is superior in almost every way: O(1) add, remove and contains, vs. O(log(N)) for TreeSet.

However, TreeSet is indispensable when you wish to maintain order over the inserted elements or query for a range of elements within the set.

Consider a Set of timestamped Event objects. They could be stored in a HashSet, with equals and hashCode based on that timestamp. This is efficient storage and permits looking up events by a specific timestamp, but how would you get all events that happened on any given day? That would require a O(n) traversal of the HashSet, but it’s only a O(log(n)) operation with TreeSet using the tailSet method:
-------------------------------------------------------------------
What is the difference between String s = "Test" and String s = new String("Test")? Which is better and why?
In general, String s = "Test" is more efficient to use than String s = new String("Test").

In the case of String s = "Test", a String with the value “Test” will be created in the String pool. If another String with the same value is then created (e.g., String s2 = "Test"), it will reference this same object in the String pool.


------------------
Even/Odd

if(n%2==0)
then even
else
odd
-----------------------------------
Prime Nubers:

for(int i=2;i<num-1;i++)
{
 if(num%i==0)
 {
flag=true;
break;
 }
}
if flag==true
 then not prime
else
prime
-------------------------------
String Reverse:
leng=str.Length
for(int i =str.Length-1;i>=0;i--)
{
rev+=str[i];
}
--------------------------------------
Palindrome/Reverse number:
reversenum=0
while(num>0)
{
int n=num%10;
reversenum+=reversenum*10+n;
num=num/10;
}
-------------------------------------
product of give number:
var str="";
var result=1
var num 10;
for(int i=1;i<=num;i++)
{
if(i<num)
{
str+=i+"*";
}
else
{
str+=i;
}
result*=i
}
console.writeline(str+"-"+result)
console.ReadLine()
-----------------------------------
fabinnoci

i=0;
previousnum=1

while(i<givenNum)
{

}

...void printFibonacci(int n){
  static int n1=0,n2=1,n3;
  if(n>0){
    n3 = n1 + n2;
    n1 = n2;
    n2=n3;    
 }  
  return 0;  
 }  
-------------------------------------------------------------------------
How to check any button is enabled or not?
    
By using isEnabled() method.

      driver.findElement(By.xpath(“locator of  button”)).isEnabled();


How to get a text from a textbox?
By using getText() method.

      driver.findElement(By.xpath(“xpath of textbox”)).getText();


What is difference between get() and navigate() ?

Get(): When we used get command the page will wait until the whole page gets loaded.

                   driver.get(“URL of the site”);
      
Navigate(): When we used navigate command then selenium just navigate the page to the given url.
                  driver.navigate().To(“URL”);

      Navigate is also used for move forward, back direction and refresh the page
                
                driver.navigate().forward();
                driver.navigate().back();
                driver.navigate().refresh();

How to handle the web based popup with Selenium?
By using Alert interface we are handle web based popup. It has different methods like accept(), dismiss() etc. So first we need to switch on alert popup then perform any action.

            driver.switchTo().alert().aceept(); // To click on OK button on alert.

            driver.switchTo().alert().dismiss(); // To click on cancel button on alert

            String alerttext=driver.switchTo().alert().getText();

How to get page title of the web application?
String pagetitle = driver.getTitle();
How to verify tooltip text in Selenium?
To verify the tooltip text first we have to mouse over on that element on which tooltip is coming then read the tooltip by using getAttribute() method.

In above image we will read tooltip of Gallery menu.

    // First we mouse hover on Gallery

      WebElement element = driver.findElement(By.xpath(“xpath of Gallery”));
      Action act = new Actions(driver);
      act.moveToElement(element).build().perform();

   // Read tooltip and store in a string
  
      String tooltip_text = element.getAttribute(“title”); // In title we can found tooltip text i.e see in image html section.

  // Use assert command to verify the tooltip text

      Assert.assertEquals(“visitor gallery”, tooltip_text);


What are the different exceptions we are facing in Selenium WebDriver?

 NoSuchElementException:This Exception occurs if an element could not be found.
 NoSuchWindowException :This Exception occurs if the window target to be switch does not exist..
 ElementNotVisibleException :This Selenium exception is thrown when any element is presented in the DOM. However, it is impossible to interact with such an element.
 TimeOutException:Thrown when there is not enough time for a command to be completed. For Example, the element searched wasn’t found in the specified time.
 StaleElementReferenceException:This Selenium exception occurs happens when the web element is detached from the current DOM.
 UnReachableBrowserException
WebDriverException:This Exception takes place when the WebDriver is acting right after you close the browser.

ConnectionClosedException:a disconnection in the driver.



How to upload the file using Selenium?
By using sendKeys() command we can upload it. In sendKeys we will pass the location of file, which we want to upload.
But Sometime when we click on upload file button then window popup is opened to select the file from the Pc. In this case sendKeys command is not working so we will use AutoIt, Robot third party tool to upload the file.
