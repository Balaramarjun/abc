{
	"info": {
		"_postman_id": "d1facf63-ee01-4614-a1bc-d0ed48144e73",
		"name": "TC_1092425_RecordAssignment_Contact",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Persona - DCRM Admin",
			"item": [
				{
					"name": "GetToken_DCRM Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody);",
									"postman.setGlobalVariable('gaccess_token', data.access_token);",
									"",
									"//pm.environment.set(\"Eaccess_token\", data.access_token);",
									"console.log(pm.globals.get(\"gaccess_token\"));",
									"",
									"//Genarate global session value",
									"",
									"var number = Math.floor(Math.random() * 1000);",
									"pm.globals.set('globalsessionvalue',number)",
									"",
									"console.log(pm.globals.get(\"globalsessionvalue\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "grant_type",
									"value": "client_credentials",
									"type": "text"
								},
								{
									"key": "client_id",
									"value": "{{Eadmin_id}}",
									"type": "text"
								},
								{
									"key": "client_secret",
									"value": "{{Eadmin_secret}}",
									"type": "text"
								},
								{
									"key": "resource",
									"value": "{{Eresource}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "https://login.microsoftonline.com/{{Eredirectid}}/oauth2/token",
							"protocol": "https",
							"host": [
								"login",
								"microsoftonline",
								"com"
							],
							"path": [
								"{{Eredirectid}}",
								"oauth2",
								"token"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Users-Assigned&Fallback",
			"item": [
				{
					"name": "Get Owner",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var userid1;",
									"pm.test(\"AssingedTO\", function() ",
									"{",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
									"    var jsonData =JSON.parse(responseBody);",
									"    userid1 = jsonData.value[0].systemuserid;    ",
									"});",
									"pm.globals.set('ownerid',userid1);",
									"",
									"console.log('ownerid:'+userid1);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Prefer",
								"value": "return=representation"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{gaccess_token}}"
							}
						],
						"url": {
							"raw": "{{Eresource_URL}}systemusers?$select=systemuserid&$filter=internalemailaddress eq '{{Owner}}'",
							"host": [
								"{{Eresource_URL}}systemusers"
							],
							"query": [
								{
									"key": "$select",
									"value": "systemuserid"
								},
								{
									"key": "$filter",
									"value": "internalemailaddress eq '{{Owner}}'"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "AssignDOMtoUser1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var AssigntoUser1,fullname1;",
									"pm.test(\"AssingedTO\", function() ",
									"{",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
									"    var jsonData =JSON.parse(responseBody);",
									"    AssigntoUser1 = jsonData.value[0].systemuserid;",
									"    fullname1=jsonData.value[0].yomifullname;    ",
									"});",
									"pm.globals.set('gAssigntoUser1',AssigntoUser1);",
									"pm.globals.set('gfullname1',fullname1);",
									"",
									"console.log('AssigntoUser1:'+AssigntoUser1);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Prefer",
								"value": "return=representation"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{gaccess_token}}"
							}
						],
						"url": {
							"raw": "{{Eresource_URL}}systemusers?$select=systemuserid,yomifullname&$filter=internalemailaddress eq '{{User1}}'",
							"host": [
								"{{Eresource_URL}}systemusers"
							],
							"query": [
								{
									"key": "$select",
									"value": "systemuserid,yomifullname"
								},
								{
									"key": "$filter",
									"value": "internalemailaddress eq '{{User1}}'"
								}
							]
						},
						"description": "Get user1 to assign to Account records"
					},
					"response": []
				},
				{
					"name": "AssignDOMtoUser2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var AssigntoUser2,fullname2;",
									"pm.test(\"AssingedTO\", function() ",
									"{",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
									"    var jsonData =JSON.parse(responseBody);",
									"    AssigntoUser2 = jsonData.value[0].systemuserid;",
									"    fullname2=jsonData.value[0].yomifullname;    ",
									"});",
									"pm.globals.set('gAssignDOMtoUser2',AssigntoUser2);",
									"pm.globals.set('gfullname2',fullname2);",
									"",
									"console.log('AssigntoUser2:'+AssigntoUser2);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Prefer",
								"value": "return=representation"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{gaccess_token}}"
							}
						],
						"url": {
							"raw": "{{Eresource_URL}}systemusers?$select=systemuserid,yomifullname&$filter=internalemailaddress eq '{{User2}}'",
							"host": [
								"{{Eresource_URL}}systemusers"
							],
							"query": [
								{
									"key": "$select",
									"value": "systemuserid,yomifullname"
								},
								{
									"key": "$filter",
									"value": "internalemailaddress eq '{{User2}}'"
								}
							]
						},
						"description": "Get user2 to assign to Account records"
					},
					"response": []
				},
				{
					"name": "AssignDOMtoUser 3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var AssigntoUser3,fullname3;",
									"pm.test(\"AssingedTO\", function() ",
									"{",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
									"    var jsonData =JSON.parse(responseBody);",
									"    AssigntoUser3 = jsonData.value[0].systemuserid;",
									"    fullname3=jsonData.value[0].yomifullname;    ",
									"});",
									"pm.globals.set('gAssignDOMtoUser3',AssigntoUser3);",
									"pm.globals.set('gfullname3',fullname3);",
									"",
									"console.log('AssigntoUser3:'+AssigntoUser3);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Prefer",
								"value": "return=representation"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{gaccess_token}}"
							}
						],
						"url": {
							"raw": "{{Eresource_URL}}systemusers?$select=systemuserid,yomifullname&$filter=internalemailaddress eq '{{User3}}'",
							"host": [
								"{{Eresource_URL}}systemusers"
							],
							"query": [
								{
									"key": "$select",
									"value": "systemuserid,yomifullname"
								},
								{
									"key": "$filter",
									"value": "internalemailaddress eq '{{User3}}'"
								}
							]
						},
						"description": "Get user3 to assign to Account records"
					},
					"response": []
				},
				{
					"name": "Get FallBack User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var Fallbackuser,fallBackusername;",
									"pm.test(\"Fallbackuser\", function() ",
									"{",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
									"    var jsonData =JSON.parse(responseBody);",
									"    Fallbackuser = jsonData.value[0].systemuserid;",
									"    fallBackusername=jsonData.value[0].yomifullname;    ",
									"});",
									"pm.globals.set('gFallbackuser',Fallbackuser);",
									"pm.globals.set('gfallBackusername',fallBackusername);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Prefer",
								"value": "return=representation"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{gaccess_token}}"
							}
						],
						"url": {
							"raw": "{{Eresource_URL}}systemusers?$select=systemuserid,yomifullname&$filter=internalemailaddress eq '{{Fallbackuser}}'",
							"host": [
								"{{Eresource_URL}}systemusers"
							],
							"query": [
								{
									"key": "$select",
									"value": "systemuserid,yomifullname"
								},
								{
									"key": "$filter",
									"value": "internalemailaddress eq '{{Fallbackuser}}'"
								}
							]
						},
						"description": "Get FallAbck User"
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Create Contacts",
			"item": [
				{
					"name": "GetToken_DCRM Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody);",
									"postman.setGlobalVariable('gaccess_token', data.access_token);",
									"",
									"//pm.environment.set(\"Eaccess_token\", data.access_token);",
									"console.log(pm.globals.get(\"gaccess_token\"));",
									"",
									"//Genarate global session value",
									"",
									"var number = Math.floor(Math.random() * 1000);",
									"pm.globals.set('globalsessionvalue',number)",
									"",
									"console.log(pm.globals.get(\"globalsessionvalue\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "grant_type",
									"value": "client_credentials",
									"type": "text"
								},
								{
									"key": "client_id",
									"value": "{{Eadmin_id}}",
									"type": "text"
								},
								{
									"key": "client_secret",
									"value": "{{Eadmin_secret}}",
									"type": "text"
								},
								{
									"key": "resource",
									"value": "{{Eresource}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "https://login.microsoftonline.com/{{Eredirectid}}/oauth2/token",
							"protocol": "https",
							"host": [
								"login",
								"microsoftonline",
								"com"
							],
							"path": [
								"{{Eredirectid}}",
								"oauth2",
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get SourceCategory",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var sourceCategoryid,sourceCategoryid1,sourceCategoryid2, sourceCategoryName,sourceCategoryName1,sourceCategoryName2;",
									"",
									"pm.test(\"Source Category Fetched\", function() ",
									"{",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202,204]);",
									"    var jsonData =JSON.parse(responseBody);",
									"    sourceCategoryid = jsonData.value[0].cmc_sourcecategoryid;",
									"    sourceCategoryName=jsonData.value[0].cmc_sourcecategoryname;",
									"    console.log('Source Category name is: '+sourceCategoryName);",
									"    ",
									"    //2nd record",
									"    sourceCategoryid1 = jsonData.value[1].cmc_sourcecategoryid;",
									"    sourceCategoryName1=jsonData.value[1].cmc_sourcecategoryname;",
									"    console.log('Source Category name is: '+sourceCategoryName1);",
									"    ",
									"    //3rd record",
									"    sourceCategoryid2 = jsonData.value[2].cmc_sourcecategoryid;",
									"    sourceCategoryName2=jsonData.value[2].cmc_sourcecategoryname;",
									"    console.log('Source Category name is: '+sourceCategoryName2);",
									"});",
									"",
									"pm.globals.set('gsourceCategoryid',sourceCategoryid);",
									"pm.globals.set('gsourceCategoryid1',sourceCategoryid1);",
									"pm.globals.set('gsourceCategoryid2',sourceCategoryid2);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Prefer",
								"value": "return=representation"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{gaccess_token}}"
							}
						],
						"url": {
							"raw": "{{Eresource_URL}}cmc_sourcecategories?$filter=cmc_sourcecategoryname ne 'Internet'",
							"host": [
								"{{Eresource_URL}}cmc_sourcecategories"
							],
							"query": [
								{
									"key": "$filter",
									"value": "cmc_sourcecategoryname ne 'Internet'"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get SourceMethod",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var sourceMethodid,sourceMethodid1,sourceMethodid2,sourceMethodid3, sourceMethodName,sourceMethodName1,sourceMethodName2,sourceMethodName3;",
									"",
									"pm.test(\"Fetching Source Method\", function() ",
									"{",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202,204]);",
									"    var jsonData =JSON.parse(responseBody);",
									"    sourceMethodid1= jsonData.value[0].cmc_sourcemethodid;",
									"    sourceMethodName1=jsonData.value[0].cmc_sourcemethodname;",
									"    console.log('Source Method name 1 is: '+sourceMethodName1);",
									"",
									"    sourceMethodid2 = jsonData.value[1].cmc_sourcemethodid;",
									"    sourceMethodName2=jsonData.value[1].cmc_sourcemethodname;",
									"    console.log('Source Method name 2 is: '+sourceMethodName2);",
									"  ",
									"    sourceMethodid3 = jsonData.value[2].cmc_sourcemethodid;",
									"    sourceMethodName3=jsonData.value[2].cmc_sourcemethodname;",
									"    console.log('Source Method name 3 is: '+sourceMethodName3); ",
									"});",
									"",
									"pm.globals.set('gsourceMethodid1',sourceMethodid1);",
									"pm.globals.set('gsourceMethodid2',sourceMethodid2);",
									"pm.globals.set('gsourceMethodid3',sourceMethodid3);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Prefer",
								"value": "return=representation"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{gaccess_token}}"
							}
						],
						"url": {
							"raw": "{{Eresource_URL}}cmc_sourcemethods",
							"host": [
								"{{Eresource_URL}}cmc_sourcemethods"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Contact1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var contact_id;",
									"var Name;",
									"",
									"pm.test(\"Contact Created\", function() ",
									"{",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
									"    var jsonData =JSON.parse(responseBody);",
									"    contact_id = jsonData.contactid;",
									"    Name = jsonData.firstname;",
									"});",
									" ",
									"pm.globals.set('gcontactid1',contact_id);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var moment = require('moment');\r",
									"pm.environment.set('currentdate', moment().format((\"YYYY-MM-DD\")));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Prefer",
								"value": "return=representation"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{gaccess_token}}"
							},
							{
								"key": "OData-Version",
								"value": "4.0"
							},
							{
								"key": "OData-MaxVersion",
								"value": "4.0"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\"firstname\": \"API{{globalsessionvalue}}{{$randomInt}}\",\r\n\"lastname\": \"DOM{{$randomLastName}}\",\r\n\"middlename\":\"mid763\",\r\n\"mshied_maidenname\":\"maid752\",\r\n\"mshied_legacy\":\"true\",\r\n\"emailaddress1\":\"641s{{$randomEmail}}@randon.com\",\r\n\"gendercode\":\"1\",\r\n\"anniversary\":\"2018-10-17\",\r\n\"lastonholdtime\":\"{{currentdate}}\",\r\n\"numberofchildren\":\"2\",\r\n\"nickname\":\"Nickname518\",\r\n\"familystatuscode\":2,\r\n\"cmc_sourcedate\":\"{{currentdate}}\",\r\n\"birthdate\":\"1985-04-01\",\r\n\"cmc_recentsat\":\"266\",\r\n\"cmc_recentact\":\"70\",\r\n\"mshied_contacttype\":\"494280011\",\r\n\"mshied_race\":494280001,\r\n\"mshied_ethnicgroup\":175490001,\r\n\"mshied_miltarystatus\":\"494280004\",\r\n\"mshied_hipaaindicator\":false,\r\n\"creditonhold\":\"true\",\r\n\"leadsourcecode\":1,\r\n\"territorycode\":1,\r\n\"spousesname\":\"wife848\",\r\n\"shippingmethodcode\":\"1\",\r\n\"preferredcontactmethodcode\": \"1\",\r\n\"mshied_nationality\":\"175490001\",\r\n\"cmc_sourcecategoryid@odata.bind\":\"/contacts({{gsourceCategoryid}})\",\r\n\"cmc_sourcemethodid@odata.bind\":\"/contacts({{gsourceMethodid1}})\",\r\n\"donotemail\":true,\r\n\"followemail\":true,\r\n\"cmc_donotsmstext\":true,\r\n\"donotbulkemail\":true,\r\n\"donotpostalmail\":true,\r\n\"donotphone\":true,\r\n\"donotfax\":true,\r\n\"cmc_autoupdatepicture\":true,\r\n\"fax\":\"7886598830\",\r\n\"mobilephone\":\"7896542230\",\r\n\"telephone1\":\"8569450230\",\r\n\"cmc_phone2extension\":\"8083453569\",\r\n\"websiteurl\":\"www.dcrm259.com\"\r\n     \r\n }"
						},
						"url": {
							"raw": "{{Eresource_URL}}contacts",
							"host": [
								"{{Eresource_URL}}contacts"
							]
						},
						"description": "Contact having testscore(ACT)- actmath field score should be <=20 AND CreatedoN or after June 1st\r\n\r\n\r\nThis contact is assosicated with Assignment Rule1"
					},
					"response": []
				},
				{
					"name": "Get Test Types",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var actid;",
									"var Testtypename;",
									"pm.test(\"Get ACT id\", function() ",
									"{",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202,204]);",
									"    var jsonData =JSON.parse(responseBody);",
									"    actid = jsonData.value[0].mshied_testtypeid;",
									"    Testtypename = jsonData.value[0].mshied_name;",
									"    ",
									"    console.log('TesttypeID:'+actid);",
									"    console.log('Testtype:'+Testtypename);",
									"});",
									"pm.globals.set('gactid',actid);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var current_timestamp = new Date();",
									"postman.setEnvironmentVariable(\"current_timestamp\", current_timestamp.toISOString());"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Prefer",
								"value": "return=representation"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{gaccess_token}}"
							}
						],
						"url": {
							"raw": "{{Eresource_URL}}mshied_testtypes?$select=mshied_testtypeid,mshied_name &$filter=mshied_name eq 'ACT'",
							"host": [
								"{{Eresource_URL}}mshied_testtypes"
							],
							"query": [
								{
									"key": "$select",
									"value": "mshied_testtypeid,mshied_name "
								},
								{
									"key": "$filter",
									"value": "mshied_name eq 'ACT'"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create TestScore ACT for Superscore calculation",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									" var ACTtestscoreid;",
									" var testscorevalue;",
									"pm.test(\"ACT TestScore Created\", function() ",
									"{",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202,204]);",
									"    var jsonData =JSON.parse(responseBody);",
									"    ACTtestscoreid = jsonData.mshied_testscoreid;",
									"    console.log('ACT test score id: '+ACTtestscoreid);",
									"    testscorevalue = jsonData.mshied_actcomposite;",
									"    console.log('mshied_actcomposite: '+testscorevalue);",
									"});",
									"pm.globals.set('gACTtestscore',ACTtestscoreid);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var current_timestamp = new Date();",
									"postman.setEnvironmentVariable(\"current_timestamp\", current_timestamp.toISOString());"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Prefer",
								"value": "return=representation"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{gaccess_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"mshied_StudentID@odata.bind\":\"/contacts({{gcontactid1}})\",\n    \"mshied_TestTypeId@odata.bind\": \"/mshied_testtypes({{gactid}})\",\n    \"mshied_testsource\": \"494280004\",\n    \"mshied_testlocation\": \"Bangalore\",\n    \"mshied_testdate\": \"{{current_timestamp}}\",\n    \"mshied_actmath\": 19,\n    \"mshied_actscience\": 36,\n    \"cmc_includeinscorecalculations\": true,\n    \"mshied_actstem\":27,\n    \"mshied_actenglish\": 29,\n    \"mshied_actreading\": 24,\n    \"mshied_actwriting\": 6,\n    \"mshied_actela\": 23,\n    \"mshied_actcomposite\": 32    \n}"
						},
						"url": {
							"raw": "{{Eresource_URL}}mshied_testscores",
							"host": [
								"{{Eresource_URL}}mshied_testscores"
							]
						},
						"description": "Contact having testscore(ACT)- actmath field score should <=20 AND CreatedoN or after June 1st"
					},
					"response": []
				},
				{
					"name": "Create Contact2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var contact_id;",
									"var Name;",
									"pm.test(\"Contact Created\", function() ",
									"{",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
									"    var jsonData =JSON.parse(responseBody);",
									"    contact_id = jsonData.contactid;",
									"    Name = jsonData.firstname;",
									"});",
									"pm.globals.set('gcontactid2',contact_id);",
									"console.log(Name);",
									"console.log('Contactid:'+contact_id);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var moment = require('moment');\r",
									"pm.environment.set('currentdate', moment().format((\"YYYY-MM-DD\")));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Prefer",
								"value": "return=representation"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{gaccess_token}}"
							},
							{
								"key": "OData-Version",
								"value": "4.0"
							},
							{
								"key": "OData-MaxVersion",
								"value": "4.0"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\"firstname\": \"API{{globalsessionvalue}}{{$randomInt}}\",\r\n\"lastname\": \"DOM{{$randomLastName}}\",\r\n\"middlename\":\"mid763\",\r\n\"mshied_maidenname\":\"maid752\",\r\n\"mshied_legacy\":\"true\",\r\n\"emailaddress1\":\"641s{{$randomEmail}}@randon.com\",\r\n\"gendercode\":\"1\",\r\n\"anniversary\":\"2018-10-17\",\r\n\"lastonholdtime\":\"{{currentdate}}\",\r\n\"numberofchildren\":\"2\",\r\n\"nickname\":\"Nickname518\",\r\n\"familystatuscode\":2,\r\n\"cmc_sourcedate\":\"{{currentdate}}\",\r\n\"birthdate\":\"1985-04-01\",\r\n\"cmc_recentsat\":\"266\",\r\n\"cmc_recentact\":\"100\",\r\n\"mshied_contacttype\":\"494280010 ,494280011\",\r\n\"mshied_race\":494280001,\r\n\"mshied_ethnicgroup\":175490001,\r\n\"mshied_miltarystatus\":\"494280004\",\r\n\"mshied_hipaaindicator\":false,\r\n\"creditonhold\":\"true\",\r\n\"leadsourcecode\":1,\r\n\"territorycode\":1,\r\n\"spousesname\":\"wife848\",\r\n\"shippingmethodcode\":\"1\",\r\n\"preferredcontactmethodcode\": \"1\",\r\n\"mshied_nationality\":\"175490001\",\r\n\"cmc_sourcecategoryid@odata.bind\":\"/contacts({{gsourceCategoryid}})\",\r\n\"cmc_sourcemethodid@odata.bind\":\"/contacts({{gsourceMethodid1}})\",\r\n\"donotemail\":true,\r\n\"followemail\":true,\r\n\"cmc_donotsmstext\":true,\r\n\"donotbulkemail\":true,\r\n\"donotpostalmail\":true,\r\n\"donotphone\":true,\r\n\"donotfax\":true,\r\n\"cmc_autoupdatepicture\":true,\r\n\"fax\":\"7886598830\",\r\n\"mobilephone\":\"7896542230\",\r\n\"telephone1\":\"8569450230\",\r\n\"cmc_phone2extension\":\"8083453569\",\r\n\"websiteurl\":\"www.dcrm259.com\"\r\n     \r\n }"
						},
						"url": {
							"raw": "{{Eresource_URL}}contacts",
							"host": [
								"{{Eresource_URL}}contacts"
							]
						},
						"description": "This contact recent Act score should be greater than 10\r\n\r\nThis contact is assosicated with Assignment Rule2"
					},
					"response": []
				},
				{
					"name": "Create Contact3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var contact_id;",
									"var Name;",
									"pm.test(\"Contact Created\", function() ",
									"{",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
									"    var jsonData =JSON.parse(responseBody);",
									"    contact_id = jsonData.contactid;",
									"    Name = jsonData.firstname;",
									"});",
									" ",
									"pm.globals.set('gcontactid3',contact_id);",
									"console.log(Name);",
									"console.log('Contactid:'+contact_id);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var moment = require('moment');\r",
									"pm.environment.set('currentdate', moment().format((\"YYYY-MM-DD\")));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Prefer",
								"value": "return=representation"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{gaccess_token}}"
							},
							{
								"key": "OData-Version",
								"value": "4.0"
							},
							{
								"key": "OData-MaxVersion",
								"value": "4.0"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\"firstname\": \"API{{globalsessionvalue}}{{$randomInt}}\",\r\n\"lastname\": \"DOM{{$randomLastName}}\",\r\n\"middlename\":\"mid763\",\r\n\"mshied_maidenname\":\"maid752\",\r\n\"mshied_legacy\":\"true\",\r\n\"emailaddress1\":\"641s{{$randomEmail}}@randon.com\",\r\n\"gendercode\":\"1\",\r\n\"anniversary\":\"2018-10-17\",\r\n\"lastonholdtime\":\"{{currentdate}}\",\r\n\"numberofchildren\":\"2\",\r\n\"nickname\":\"Nickname518\",\r\n\"familystatuscode\":2,\r\n\"cmc_sourcedate\":\"{{currentdate}}\",\r\n\"birthdate\":\"1985-04-01\",\r\n\"cmc_recentsat\":\"266\",\r\n\"cmc_recentact\":\"9\",\r\n\"mshied_contacttype\":\"494280001 ,494280002\",\r\n\"mshied_race\":494280001,\r\n\"mshied_ethnicgroup\":175490001,\r\n\"mshied_miltarystatus\":\"494280004\",\r\n\"mshied_hipaaindicator\":false,\r\n\"creditonhold\":\"true\",\r\n\"leadsourcecode\":1,\r\n\"territorycode\":1,\r\n\"spousesname\":\"wife848\",\r\n\"shippingmethodcode\":\"1\",\r\n\"preferredcontactmethodcode\": \"1\",\r\n\"mshied_nationality\":\"175490001\",\r\n\"cmc_sourcecategoryid@odata.bind\":\"/contacts({{gsourceCategoryid}})\",\r\n\"cmc_sourcemethodid@odata.bind\":\"/contacts({{gsourceMethodid1}})\",\r\n\"donotemail\":true,\r\n\"followemail\":true,\r\n\"cmc_donotsmstext\":true,\r\n\"donotbulkemail\":true,\r\n\"donotpostalmail\":true,\r\n\"donotphone\":true,\r\n\"donotfax\":true,\r\n\"cmc_autoupdatepicture\":true,\r\n\"fax\":\"7886598830\",\r\n\"mobilephone\":\"7896542230\",\r\n\"telephone1\":\"8569450230\",\r\n\"cmc_phone2extension\":\"8083453569\",\r\n\"websiteurl\":\"www.dcrm259.com\"\r\n     \r\n }"
						},
						"url": {
							"raw": "{{Eresource_URL}}contacts",
							"host": [
								"{{Eresource_URL}}contacts"
							]
						},
						"description": "Contact type: Donar && Allumini\r\n\r\n\r\nthis contact is assosicated with Assignment Rule3"
					},
					"response": []
				},
				{
					"name": "Create Contact4",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var contact_id;",
									"var Name;",
									"pm.test(\"Contact Created\", function() ",
									"{",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
									"    var jsonData =JSON.parse(responseBody);",
									"    contact_id = jsonData.contactid;",
									"    Name = jsonData.firstname;",
									"});",
									" ",
									"pm.globals.set('gcontactid4',contact_id);",
									"console.log(Name);",
									"console.log('Contactid:'+contact_id);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var moment = require('moment');\r",
									"pm.environment.set('currentdate', moment().format((\"YYYY-MM-DD\")));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Prefer",
								"value": "return=representation"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{gaccess_token}}"
							},
							{
								"key": "OData-Version",
								"value": "4.0"
							},
							{
								"key": "OData-MaxVersion",
								"value": "4.0"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\"firstname\": \"API{{globalsessionvalue}}{{$randomInt}}\",\r\n\"lastname\": \"DOM{{$randomLastName}}\",\r\n\"middlename\":\"mid763\",\r\n\"mshied_maidenname\":\"maid752\",\r\n\"mshied_legacy\":\"true\",\r\n\"emailaddress1\":\"641s{{$randomEmail}}@randon.com\",\r\n\"gendercode\":\"1\",\r\n\"anniversary\":\"2018-10-17\",\r\n\"lastonholdtime\":\"{{currentdate}}\",\r\n\"numberofchildren\":\"2\",\r\n\"nickname\":\"Nickname518\",\r\n\"familystatuscode\":2,\r\n\"cmc_sourcedate\":\"{{currentdate}}\",\r\n\"birthdate\":\"1985-04-01\",\r\n\"cmc_recentsat\":\"266\",\r\n\"cmc_recentact\":\"6\",\r\n\"mshied_contacttype\":\"494280001\",\r\n\"mshied_race\":494280001,\r\n\"mshied_ethnicgroup\":175490001,\r\n\"mshied_miltarystatus\":\"494280004\",\r\n\"mshied_hipaaindicator\":false,\r\n\"creditonhold\":\"true\",\r\n\"leadsourcecode\":1,\r\n\"territorycode\":1,\r\n\"spousesname\":\"wife848\",\r\n\"shippingmethodcode\":\"1\",\r\n\"preferredcontactmethodcode\": \"1\",\r\n\"mshied_nationality\":\"175490001\",\r\n\"cmc_sourcecategoryid@odata.bind\":\"/contacts({{gsourceCategoryid}})\",\r\n\"cmc_sourcemethodid@odata.bind\":\"/contacts({{gsourceMethodid1}})\",\r\n\"donotemail\":true,\r\n\"followemail\":true,\r\n\"cmc_donotsmstext\":true,\r\n\"donotbulkemail\":true,\r\n\"donotpostalmail\":true,\r\n\"donotphone\":true,\r\n\"donotfax\":true,\r\n\"cmc_autoupdatepicture\":true,\r\n\"fax\":\"7886598830\",\r\n\"mobilephone\":\"7896542230\",\r\n\"telephone1\":\"8569450230\",\r\n\"cmc_phone2extension\":\"8083453569\",\r\n\"websiteurl\":\"www.dcrm259.com\"\r\n     \r\n }"
						},
						"url": {
							"raw": "{{Eresource_URL}}contacts",
							"host": [
								"{{Eresource_URL}}contacts"
							]
						},
						"description": "This contact is to test Fallback user scenario\r\nDate of Brith = today ---But in contact we will give date birth is not equal to today\r\nThis Contact is Associated with Rule4"
					},
					"response": []
				}
			]
		},
		{
			"name": "AssignmentGroup&Rule",
			"item": [
				{
					"name": "Create Assignmentgroups",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var assignmentgroupid;",
									"",
									"pm.test(\"Assignmentgroups Created\", function() ",
									"{",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202,204]);",
									"    var jsonData =JSON.parse(responseBody);",
									"    assignmentgroupid = jsonData.cmc_assignmentgroupid; ",
									"});",
									"",
									"var academicperiodname = data.cmc_academicperiodname;",
									"var startDate = data.cmc_startdate;",
									"var endDate = data.cmc_enddate;",
									"var Code = data.cmc_code;",
									"var ownerid1 = data.ownerid;",
									"pm.globals.set('gassignmentgroupid',assignmentgroupid);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Prefer",
								"value": "return=representation"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{gaccess_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"cmc_fetchxml\":\"<fetch version=\\\"1.0\\\" output-format=\\\"xml-platform\\\" mapping=\\\"logical\\\" distinct=\\\"false\\\">\\n <entity name=\\\"contact\\\">\\n <attribute name=\\\"fullname\\\" />\\n <attribute name=\\\"telephone1\\\" />\\n <attribute name=\\\"contactid\\\" />\\n <order attribute=\\\"fullname\\\" descending=\\\"false\\\" />\\n <filter type=\\\"and\\\">\\n <condition attribute=\\\"firstname\\\" operator=\\\"like\\\" value=\\\"API{{globalsessionvalue}}%\\\" />\\n </filter>\\n </entity>\\n</fetch>\",\r\n   \"cmc_baseentity\":\"contact\",\r\n   \"cmc_FallBackUserId@odata.bind\":\"/systemusers({{gFallbackuser}})\",\r\n   \"cmc_assigntofield\":\"ownerid\",\r\n   \"cmc_name\":\"Balatest{{$randomInt}}\",\r\n   \"cmc_assigntofieldname\":\"Owner\",\r\n   \"statuscode\":1,\r\n   \"statecode\":0,\r\n   \"cmc_baseentityname\": \"Contact\",\r\n   \"ownerid@odata.bind\":\"/systemusers({{ownerid}})\"\r\n}"
						},
						"url": {
							"raw": "{{Eresource}}api/data/{{Eversion}}/cmc_assignmentgroups",
							"host": [
								"{{Eresource}}api"
							],
							"path": [
								"data",
								"{{Eversion}}",
								"cmc_assignmentgroups"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create cmc_assignmentrules 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var usertoassignid_value,assignmentruleid,assignmentgroupid_value;",
									"",
									"pm.test(\"Assignment Rule 1 Created\", function() ",
									"{",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202,204]);",
									"    var jsonData =JSON.parse(responseBody);",
									"    usertoassignid_value = jsonData._cmc_usertoassignid_value;",
									"    assignmentruleid = jsonData.cmc_assignmentruleid;",
									"    assignmentgroupid_value = jsonData._cmc_assignmentgroupid_value;  ",
									"",
									"    console.log(\" usertoassignid_value:\" +usertoassignid_value)",
									"    console.log(\" assignmentruleid:\" +assignmentruleid)",
									"    console.log(\" assignmentgroupid_value:\" +assignmentgroupid_value)",
									"  ",
									"});",
									"pm.globals.set('gusertoassignid_value1',usertoassignid_value);",
									"pm.globals.set('gassignmentruleid1',assignmentruleid);",
									"pm.globals.set('gassignmentgroupid_value1',assignmentgroupid_value);",
									"",
									"setTimeout(function () { }, 150000); "
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Prefer",
								"value": "return=representation"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{gaccess_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"cmc_fetchxml\":\"<fetch version=\\\"1.0\\\" output-format=\\\"xml-platform\\\" mapping=\\\"logical\\\" distinct=\\\"false\\\"><entity name=\\\"contact\\\"><attribute name=\\\"fullname\\\"/><attribute name=\\\"telephone1\\\"/><attribute name=\\\"contactid\\\"/><order attribute=\\\"fullname\\\" descending=\\\"false\\\"/><filter type=\\\"and\\\"><condition attribute=\\\"mshied_contacttype\\\" operator=\\\"eq\\\" value=\\\"494280011\\\"/><condition attribute=\\\"cmc_recentact\\\" operator=\\\"eq\\\" value=\\\"70\\\"/></filter></entity></fetch>\",\r\n   \"cmc_executionorder\":1,\r\n   \"cmc_assignmenttype\":175490000,\r\n   \"cmc_name\":\"balatest{{$randomInt}}\",\r\n   \"statuscode\":1,\r\n   \"statecode\":0,\r\n   \"ownerid@odata.bind\":\"/systemusers({{ownerid}})\",\r\n   \"cmc_baseentity\":\"contact\",\r\n   \"cmc_UsertoAssignId@odata.bind\": \"/systemusers({{gAssigntoUser1}})\",  \r\n   \"cmc_AssignmentGroupId@odata.bind\":\"/cmc_assignmentgroups({{gassignmentgroupid}})\"\r\n}"
						},
						"url": {
							"raw": "{{Eresource}}api/data/{{Eversion}}/cmc_assignmentrules",
							"host": [
								"{{Eresource}}api"
							],
							"path": [
								"data",
								"{{Eversion}}",
								"cmc_assignmentrules"
							]
						},
						"description": "Contacttype=Student and\r\nArea of Interest Name should starts with \"BIO\""
					},
					"response": []
				}
			]
		},
		{
			"name": "Validation-DOM Status and Uservalidation",
			"item": [
				{
					"name": "VerifyCurrentDOMStatus for Contact1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var Assgineduser;",
									"pm.test(\"GetDOM Status\", function() ",
									"{",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
									"    var jsonData =JSON.parse(responseBody);",
									"    ",
									"    var domstatus =jsonData.cmc_domstatus;",
									"    console.log('cmc_domstatus:'+domstatus);",
									"    ",
									"    Assgineduser = jsonData._ownerid_value;",
									"    console.log('Assgineduser:' +Assgineduser);",
									"    ",
									"    var declaredassigneduser = pm.globals.get(\"gAssigntoUser1\");",
									"    console.log('Assinged user:'+declaredassigneduser);",
									"    ",
									"    if (domstatus==175490000)",
									"    {",
									"        console.log(domstatus+\"is Pending Assignment\");",
									"        pm.expect.fail(1,2,\"Please Run 'Assignment - Entity Auto Assignment' flow'\")",
									"    }",
									"    else if (domstatus==175490001)",
									"    {",
									"        console.log(domstatus+\"is Assignment Complete\");",
									"        ",
									"        pm.test(\"Validate DOM status\", function()",
									"        {",
									"            pm.expect(domstatus).to.equal(175490001);",
									"        });",
									"        ",
									"        pm.test(\"Validate Owner\", function()",
									"        {",
									"            pm.expect(declaredassigneduser).to.equal(Assgineduser);",
									"        });",
									"    }",
									"    else if (domstatus==175490002)",
									"    {",
									"        console.log(domestatus+\"is Locked Assignment\");",
									"    }",
									"    else",
									"    {",
									"        console.log(\"Some Error Occured\");",
									"    } ",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{gaccess_token}}"
							},
							{
								"key": "Prefer",
								"value": "return=representation"
							}
						],
						"url": {
							"raw": "{{Eresource}}api/data/v9.1/contacts({{gcontactid1}})",
							"host": [
								"{{Eresource}}api"
							],
							"path": [
								"data",
								"v9.1",
								"contacts({{gcontactid1}})"
							]
						},
						"description": "Verify DOM Status and Assigned User validation"
					},
					"response": []
				},
				{
					"name": "VerifyCurrentDOMStatus for Contact2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var Assgineduser;",
									"pm.test(\"GetDOM Status\", function() ",
									"{",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
									"    var jsonData =JSON.parse(responseBody);",
									"    ",
									"    Assgineduser = jsonData._owninguser_value;",
									"    console.log('Assgineduser:' +Assgineduser);",
									"    ",
									"    var domstatus =jsonData.cmc_domstatus;",
									"    console.log('cmc_domstatus:'+domstatus);",
									"    var csv_domstatus = data.cmc_domstatus;",
									"    ",
									"    var fallbackuserid = pm.globals.get(\"gFallbackuser\");",
									"    ",
									"    if (domstatus==175490000)",
									"    {",
									"        console.log(domstatus+\"is Pending Assignment\");",
									"         pm.expect.fail(\"Please Run 'Assignment - Entity Auto Assignment' flow'\")",
									"    }",
									"    else if (domstatus==175490001)",
									"    {",
									"        console.log(domstatus+\" is Assignment Complete\");",
									"        ",
									"        pm.test(\"Validate DOM status\", function()",
									"        {",
									"            pm.expect(domstatus).to.equal(175490001);",
									"        });",
									"        ",
									"        pm.test(\"Validate Owner\", function()",
									"        {",
									"            pm.expect(Assgineduser).to.equal(fallbackuserid);",
									"        });",
									"    }",
									"    else if (domstatus==175490002)",
									"    {",
									"        console.log(domestatus+\"is Locked Assignment\");",
									"    }",
									"    else",
									"    {",
									"        console.log(\"Some Error Occured\");",
									"    }    ",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{gaccess_token}}"
							},
							{
								"key": "Prefer",
								"value": "return=representation"
							}
						],
						"url": {
							"raw": "{{Eresource}}api/data/v9.1/contacts({{gcontactid2}})",
							"host": [
								"{{Eresource}}api"
							],
							"path": [
								"data",
								"v9.1",
								"contacts({{gcontactid2}})"
							]
						}
					},
					"response": []
				},
				{
					"name": "VerifyCurrentDOMStatus for Contact3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var Assgineduser;",
									"pm.test(\"GetDOM Status\", function() ",
									"{",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
									"    var jsonData =JSON.parse(responseBody);",
									"    ",
									"    Assgineduser = jsonData._owninguser_value;",
									"    console.log('Assgineduser:' +Assgineduser);",
									"    ",
									"    var domstatus =jsonData.cmc_domstatus;",
									"    console.log('cmc_domstatus:'+domstatus);",
									"    ",
									"    var fallbackuserid = pm.globals.get(\"gFallbackuser\");",
									"    ",
									"    if (domstatus==175490000)",
									"    {",
									"        console.log(domstatus+\"is Pending Assignment\");",
									"    }",
									"    else if (domstatus==175490001)",
									"    {",
									"        console.log(domstatus+\" is Assignment Complete\");",
									"        ",
									"        pm.test(\"Validate DOM status\", function()",
									"        {",
									"            pm.expect(domstatus).to.equal(175490001);",
									"        });",
									"        ",
									"        pm.test(\"Validate Owner\", function()",
									"        {",
									"            pm.expect(Assgineduser).to.equal(fallbackuserid);",
									"        });",
									"    }",
									"    else if (domstatus==175490002)",
									"    {",
									"        console.log(domestatus+\"is Locked Assignment\");",
									"    }",
									"    else",
									"    {",
									"        console.log(\"Some Error Occured\");",
									"    }    ",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{gaccess_token}}"
							},
							{
								"key": "Prefer",
								"value": "return=representation"
							}
						],
						"url": {
							"raw": "{{Eresource}}api/data/v9.1/contacts({{gcontactid3}})",
							"host": [
								"{{Eresource}}api"
							],
							"path": [
								"data",
								"v9.1",
								"contacts({{gcontactid3}})"
							]
						}
					},
					"response": []
				},
				{
					"name": "VerifyCurrentDOMStatus for Contact4",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var Assgineduser;",
									"pm.test(\"GetDOM Status\", function() ",
									"{",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
									"    var jsonData =JSON.parse(responseBody);",
									"    ",
									"    Assgineduser = jsonData._owninguser_value;",
									"    console.log('Assgineduser:' +Assgineduser);",
									"    ",
									"    var domstatus =jsonData.cmc_domstatus;",
									"    console.log('cmc_domstatus:'+domstatus);",
									"    ",
									"    var fallbackuserid = pm.globals.get(\"gFallbackuser\");",
									"    ",
									"    if (domstatus==175490000)",
									"    {",
									"        console.log(domstatus+\"is Pending Assignment\");",
									"    }",
									"    else if (domstatus==175490001)",
									"    {",
									"        console.log(domstatus+\" is Assignment Complete\");",
									"        ",
									"        pm.test(\"Validate DOM status\", function()",
									"        {",
									"            pm.expect(domstatus).to.equal(175490001);",
									"        });",
									"        ",
									"        pm.test(\"Validate Owner\", function()",
									"        {",
									"            pm.expect(Assgineduser).to.equal(fallbackuserid);",
									"        });",
									"    }",
									"    else if (domstatus==175490002)",
									"    {",
									"        console.log(domestatus+\"is Locked Assignment\");",
									"    }",
									"    else",
									"    {",
									"        console.log(\"Some Error Occured\");",
									"    }    ",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{gaccess_token}}"
							},
							{
								"key": "Prefer",
								"value": "return=representation"
							}
						],
						"url": {
							"raw": "{{Eresource}}api/data/v9.1/contacts({{gcontactid4}})",
							"host": [
								"{{Eresource}}api"
							],
							"path": [
								"data",
								"v9.1",
								"contacts({{gcontactid4}})"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Deactivate Assignment Group",
			"item": [
				{
					"name": "Deactivate Assignment Group",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Assignment Group Deactivated\", function() ",
									"{",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202,204]);    ",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Prefer",
								"value": "return=representation"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{gaccess_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{   \r\n   \"statuscode\":2,\r\n   \"statecode\":1\r\n}"
						},
						"url": {
							"raw": "{{Eresource}}api/data/{{Eversion}}/cmc_assignmentgroups({{gassignmentgroupid}})",
							"host": [
								"{{Eresource}}api"
							],
							"path": [
								"data",
								"{{Eversion}}",
								"cmc_assignmentgroups({{gassignmentgroupid}})"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}