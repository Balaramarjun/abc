{
	"info": {
		"_postman_id": "a8622708-846f-4cdd-8ef1-d2ee2167d2b2",
		"name": "TC_1378625_SelectandAssociateParentContactandLifecycle",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Deactivate Auto Name Work Flow",
			"item": [
				{
					"name": "GetUser - DCRM System Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody);",
									"postman.setGlobalVariable('gaccess_token', data.access_token);",
									"",
									"//pm.environment.set(\"Eaccess_token\", data.access_token);",
									"console.log(pm.globals.get(\"gaccess_token\"));",
									"",
									"",
									"",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "grant_type",
									"value": "client_credentials",
									"type": "text"
								},
								{
									"key": "client_id",
									"value": "{{Esystemadmin_id}}",
									"type": "text"
								},
								{
									"key": "client_secret",
									"value": "{{Esystemadmin_secret}}",
									"type": "text"
								},
								{
									"key": "resource",
									"value": "{{Eresource}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "https://login.microsoftonline.com/{{Eredirectid}}/oauth2/token",
							"protocol": "https",
							"host": [
								"login",
								"microsoftonline",
								"com"
							],
							"path": [
								"{{Eredirectid}}",
								"oauth2",
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Inbound Interest - Auto Name_New",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var workflowid,workflowname;\r",
									"pm.test(\"GetWorkflow\", function() \r",
									"{\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
									"    var jsonData =JSON.parse(responseBody);\r",
									"    workflowid = jsonData.workflowid;\r",
									"    workflowname=jsonData.name;\r",
									"\r",
									"    console.log(\"Workflow name: \" +workflowname);\r",
									"});\r",
									"pm.globals.set('gworkflowid2',workflowid);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Prefer",
								"value": "return=representation"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{gaccess_token}}"
							},
							{
								"key": "MSCRM.SuppressDuplicateDetection",
								"type": "text",
								"value": "false"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{Eresource_URL}}workflows(e4e16e24-d6ef-4abf-9284-1a0f864d7d4d)",
							"host": [
								"{{Eresource_URL}}workflows(e4e16e24-d6ef-4abf-9284-1a0f864d7d4d)"
							]
						}
					},
					"response": []
				},
				{
					"name": "Deactivate Inbound Interest - Auto Name_New",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var workflowid,workflowname,statecode,statuscode;\r",
									"pm.test(\"Deactivate Workflow\", function() \r",
									"{\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
									"    var jsonData =JSON.parse(responseBody);\r",
									"    workflowid = jsonData.workflowid;\r",
									"    workflowname=jsonData.name;\r",
									"    statecode=jsonData.statecode;\r",
									"    statuscode=jsonData.statuscode;\r",
									"\r",
									"    console.log(\"Workflow name: \" +workflowname);\r",
									"\r",
									"    pm.test(\"statecode check\", function()\r",
									"        {\r",
									"            pm.expect(statecode).to.equal(0);\r",
									"        });\r",
									"     pm.test(\"statuscode check\", function()\r",
									"        {\r",
									"            pm.expect(statuscode).to.equal(1);\r",
									"        });\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Prefer",
								"value": "return=representation"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{gaccess_token}}"
							},
							{
								"key": "MSCRM.SuppressDuplicateDetection",
								"type": "text",
								"value": "false"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"statecode\": 0,\r\n    \"statuscode\": 1\r\n}"
						},
						"url": {
							"raw": "{{Eresource_URL}}workflows({{gworkflowid2}})",
							"host": [
								"{{Eresource_URL}}workflows({{gworkflowid2}})"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Scenario 1 contact not null",
			"item": [
				{
					"name": "Create Contact",
					"item": [
						{
							"name": "GetToken_DCRM Admin",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = JSON.parse(responseBody);",
											"postman.setGlobalVariable('gaccess_token', data.access_token);",
											"console.log(pm.globals.get(\"gaccess_token\"));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "grant_type",
											"value": "client_credentials",
											"type": "text"
										},
										{
											"key": "client_id",
											"value": "{{Eadmin_id}}",
											"type": "text"
										},
										{
											"key": "client_secret",
											"value": "{{Eadmin_secret}}",
											"type": "text"
										},
										{
											"key": "resource",
											"value": "{{Eresource}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "https://login.microsoftonline.com/{{Eredirectid}}/oauth2/token",
									"protocol": "https",
									"host": [
										"login",
										"microsoftonline",
										"com"
									],
									"path": [
										"{{Eredirectid}}",
										"oauth2",
										"token"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Academic period",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var academicperiodid;",
											"var academicperiodname;",
											"",
											"pm.test(\"Academicperiodid Created\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202,204]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    academicperiodid = jsonData.mshied_academicperiodid;",
											"    academicperiodname = jsonData.mshied_name;",
											"    console.log('academicperiodname: '+academicperiodname);",
											" ",
											"});",
											"pm.globals.set('gacademicperiodid7',academicperiodid);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var moment = require('moment');\r",
											"pm.environment.set(\"timestamp\", moment().add(1, 'days').format(\"YYYY-MM-DD\"));\r",
											"pm.environment.set(\"timestampEndDate\", moment().add(102, 'days').format(\"YYYY-MM-DD\"));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"mshied_name\": \"{{cmc_academicperiodname}}Inbound23{{$randomInt}}\",\r\n    \"mshied_startdate\": \"{{timestamp}}\",\r\n    \"mshied_enddate\": \"{{timestampEndDate}}\",\r\n    \"mshied_code\": \"{{$randomInt}}In77{{$randomInt}}dd{{$randomInt}}\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}mshied_academicperiods",
									"host": [
										"{{Eresource_URL}}mshied_academicperiods"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Account",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var account_id; ",
											"var Accname;",
											"pm.test(\"Account Created\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    account_id = jsonData.accountid;",
											"    Accname = jsonData.name;",
											"    console.log(Accname);",
											"    ",
											"});",
											"var accname = data.name;",
											"var accounttype = data.mshied_accounttype;",
											"pm.globals.set('gaccountId7',account_id);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"{{name}}{{$randomInt}}\",\r\n    \"mshied_accounttype\": \"{{mshied_accounttype}}\",\r\n    \"cmc_accountcode\": \"Acc{{$randomInt}}\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}accounts",
									"host": [
										"{{Eresource_URL}}accounts"
									]
								},
								"description": "Create Account with new Address"
							},
							"response": []
						},
						{
							"name": "Create Campaign",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var campaignid;",
											"pm.test(\"Account Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    campaignid = jsonData.campaignid;",
											"    console.log(\"campaignid: \", campaignid);",
											"});",
											"pm.globals.set('g_campaignid7', campaignid);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"{{$randomInt}}-TestCampaign-{{$randomInt}}\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}campaigns",
									"host": [
										"{{Eresource_URL}}campaigns"
									]
								},
								"description": "Create Account with new Address"
							},
							"response": []
						},
						{
							"name": "Create Source Category",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var sourcecategoryid;",
											"pm.test(\"Create Sourcecategory\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"",
											"    sourcecategoryid = jsonData.cmc_sourcecategoryid;",
											"    console.log(\"sourcecategoryid : \" + sourcecategoryid);",
											"});",
											"pm.globals.set('gsourcecategoryid7', sourcecategoryid);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"cmc_sourcecategoryname\": \"{{$randomInt}}-TestSoucreCategor-y{{$randomInt}}\"\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_sourcecategories",
									"host": [
										"{{Eresource_URL}}cmc_sourcecategories"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create SubCategory",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var subcategory;",
											"var Accname;",
											"pm.test(\"SourceSub Category Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
											"    var jsonData = JSON.parse(responseBody);",
											"",
											"    subcategory = jsonData.cmc_sourcesubcategoryid;",
											"    console.log(\"subcategory: \",subcategory);",
											"    pm.globals.set('gsubcategoryid7', subcategory);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_sourcesubcategoryname\": \"TestSubCategory{{$randomInt}}\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_sourcesubcategories",
									"host": [
										"{{Eresource_URL}}cmc_sourcesubcategories"
									]
								},
								"description": "Create Account with new Address"
							},
							"response": []
						},
						{
							"name": "Create Program",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var programid;",
											"var programname;",
											"pm.test(\"Get Program\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"",
											"    programid = jsonData.mshied_programid;",
											"    programname = jsonData.mshied_name;",
											"    console.log(\"Program ID: \" + programid);",
											"    console.log(\"Program Name: \" + programname);",
											"});",
											"pm.globals.set('gProgram7', programid);",
											"pm.globals.set('gProgramName7', programname);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"mshied_code\": \"{{$randomInt}}Prg1{{$randomInt}}{{$randomInt}}\",\n    \"mshied_name\": \"code4{{$randomInt}}\"\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}mshied_programs",
									"host": [
										"{{Eresource_URL}}mshied_programs"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Source Method",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var sourcemethodid;",
											"var sourcemethodname;",
											"pm.test(\"Create sourcemethod\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"",
											"    sourcemethodid = jsonData.cmc_sourcemethodid;",
											"    console.log(\"sourcemethodid : \" + sourcemethodid);",
											"",
											"    sourcemethodname = jsonData.cmc_sourcemethodname;",
											"    console.log(\"sourcemethodname : \" + sourcemethodname);",
											"});",
											"pm.globals.set('gsourcemethodid7', sourcemethodid);",
											"pm.globals.set('gsourcemethodname7', sourcemethodname);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n   \"cmc_sourcemethodname\": \"{{$randomInt}}-TestSoucreMethod{{$randomInt}}\"\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_sourcemethods",
									"host": [
										"{{Eresource_URL}}cmc_sourcemethods"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Role/Title",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var titleid;",
											"pm.test(\"Create title\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"",
											"    titleid = jsonData.cmc_titleid;",
											"    console.log(\"titleid : \" + titleid);",
											"});",
											"pm.globals.set('gtitleid7', titleid);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n   \"cmc_titlename\": \"{{$randomInt}}-Test-Title-{{$randomInt}}\"\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_titles",
									"host": [
										"{{Eresource_URL}}cmc_titles"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Program Level",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var programlevelid;",
											"pm.test(\"Create Sourcecategory\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"",
											"    programlevelid = jsonData.mshied_programlevelid;",
											"    console.log(\"programlevelid : \" + programlevelid);",
											"});",
											"pm.globals.set('gprogramlevelid7', programlevelid);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"mshied_code\": \"{{$randomInt}}-Code{{$randomInt}}{{$randomInt}}\",\n    \"mshied_name\": \"{{$randomInt}}-Test-PrgLevel-{{$randomInt}}\"\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}mshied_programlevels",
									"host": [
										"{{Eresource_URL}}mshied_programlevels"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Education Level",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var educationlevelid;",
											"pm.test(\"Create educationlevelid\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"",
											"    educationlevelid = jsonData.mshied_educationlevelid;",
											"    console.log(\"educationlevelid : \" + educationlevelid);",
											"});",
											"pm.globals.set('geducationlevelid7', educationlevelid);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"mshied_code\": \"{{$randomInt}}-Code{{$randomInt}}{{$randomInt}}\",\n    \"mshied_name\": \"{{$randomInt}}-Test-EduLevel-{{$randomInt}}\"\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}mshied_educationlevels",
									"host": [
										"{{Eresource_URL}}mshied_educationlevels"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Area of Interest",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var areaofinterestid;",
											"var areaofinterestname;",
											"",
											"pm.test(\"Create Area of Interest\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"",
											"    areaofinterestid = jsonData.mshied_areaofinterestid;",
											"    console.log(\"area of interest id : \" + areaofinterestid);",
											"",
											"    areaofinterestname = jsonData.mshied_name;",
											"    console.log(\"area of interest name : \" + areaofinterestname);",
											"",
											"});",
											"pm.globals.set('gareaofinterestid7', areaofinterestid);",
											"pm.globals.set('gareaofinterestname7', areaofinterestname);",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"mshied_code\": \"{{$randomInt}}-Code{{$randomInt}}{{$randomInt}}\",\n    \"mshied_name\": \"{{$randomInt}}-Test-AreaOfInterest-{{$randomInt}}\"\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}mshied_areaofinterests",
									"host": [
										"{{Eresource_URL}}mshied_areaofinterests"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Contact",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var contact_id;",
											"var Name;",
											"var campusid;",
											"var sourcemethodid;",
											"var programid;",
											"var programlevelid;",
											"var expectedstartid;",
											"var methodid;",
											"var categoryid;",
											"var subcategory;",
											"var campaign;",
											"",
											"pm.test(\"Contact Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    contact_id = jsonData.contactid;",
											"    Name = jsonData.fullname;",
											"    campusid = jsonData._cmc_sourcecampusid_value;",
											"    sourcemethodid = jsonData._cmc_sourcemethodid_value;",
											"    programid = jsonData._cmc_srcprogramid_value;",
											"    programlevelid = jsonData._cmc_srcpogramlevelid_value;",
											"    expectedstartid = jsonData._cmc_expectedstartid_value;",
											"    methodid = jsonData._cmc_sourcemethodid_value;",
											"    categoryid = jsonData._cmc_sourcecategoryid_value;",
											"    subcategory = jsonData._cmc_sourcesubcategoryid_value;",
											"    campaign = jsonData._cmc_sourcecampaignid_value;",
											"    console.log('Contact fullname: ' + Name);",
											"    console.log('campusid: ' + campusid);",
											"});",
											"",
											"var firstname = data.firstname;",
											"var lastname = data.lastname;",
											"var emailaddress1 = data.emailaddress1;",
											"var numberofchildren = data.numberofchildren;",
											"var recentsat = data.cmc_recentsat;",
											"var recentact = data.cmc_recentact;",
											"var mshied_contacttype = data.mshied_contacttype;",
											"var race = data.mshied_race;",
											"var ethnicgroup = data.mshied_ethnicgroup;",
											"var miltarystatus = data.mshied_miltarystatus;",
											"var shippingmethodcode = data.shippingmethodcode;",
											"var preferredcontactmethodcode = data.preferredcontactmethodcode;",
											"var nationality = data.mshied_nationality;",
											"var gendercode = data.gendercode;",
											"",
											"pm.globals.set('gcontactid7', contact_id);",
											"pm.globals.set('gexpectedstartid7', expectedstartid);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var moment = require('moment');\r",
											"pm.environment.set(\"timestamp\", moment().add(1, 'days').format(\"YYYY-MM-DD\"));\r",
											"pm.environment.set(\"timestampEndDate\", moment().add(100, 'days').format(\"YYYY-MM-DD\"));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									},
									{
										"key": "OData-Version",
										"value": "4.0"
									},
									{
										"key": "OData-MaxVersion",
										"value": "4.0"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "",
										"value": "",
										"type": "text",
										"disabled": true
									},
									{
										"key": "",
										"value": "",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"firstname\": \"{{firstname}}{{$randomInt}}\",\r\n    \"lastname\": \"{{lastname}}{{$randomInt}}\",\r\n    \"middlename\": \"mid{{$randomInt}}\",\r\n    \"mshied_maidenname\": \"maid{{$randomInt}}\",\r\n    \"mshied_legacy\": \"true\",\r\n    \"emailaddress1\": \"{{$randomInt}}{{emailaddress1}}\",\r\n    \"gendercode\": \"{{gendercode}}\",\r\n    \"anniversary\": \"{{timestamp}}\",\r\n    \"lastonholdtime\": \"{{timestamp}}\",\r\n    \"numberofchildren\": \"{{numberofchildren}}\",\r\n    \"nickname\": \"Nickname{{$randomInt}}\",\r\n    \"familystatuscode\": 2,\r\n    \"cmc_sourcedate\": \"{{timestamp}}\",\r\n    \"cmc_recentsat\": \"{{cmc_recentsat}}\",\r\n    \"cmc_recentact\": \"{{cmc_recentact}}\",\r\n    \"mshied_contacttype\": \"494280002,494280006\",\r\n    \"mshied_race\": {{mshied_race}},\r\n    \"mshied_ethnicgroup\": {{mshied_ethnicgroup}},\r\n    \"mshied_miltarystatus\": \"{{mshied_miltarystatus}}\",\r\n    \"mshied_nationality\": \"{{mshied_nationality}}\",\r\n    \"cmc_sourcecategoryid@odata.bind\": \"/contacts({{gsourcecategoryid7}})\",\r\n    \"cmc_sourcesubcategoryid@odata.bind\": \"/cmc_sourcesubcategories({{gsubcategoryid7}})\",\r\n    \"cmc_sourcecampaignid@odata.bind\": \"/campaigns({{g_campaignid7}})\",\r\n    \"cmc_sourcemethodid@odata.bind\": \"/contacts({{gsourcemethodid7}})\",\r\n    \"cmc_titleid@odata.bind\": \"/contacts({{gtitleid7}})\",\r\n    \"cmc_srcpogramlevelid@odata.bind\": \"/contacts({{gprogramlevelid7}})\",\r\n    \"cmc_srcprogramid@odata.bind\": \"/contacts({{gProgram7}})\",\r\n    \"cmc_educationlevelid@odata.bind\": \"/contacts({{geducationlevelid7}})\",\r\n    \"mshied_CurrentProgramLevelId@odata.bind\": \"/contacts({{gprogramlevelid7}})\",\r\n    \"mshied_CurrentProgramId@odata.bind\": \"/contacts({{gProgram7}})\",\r\n    \"mshied_CurrentAcademicPeriodId@odata.bind\": \"/mshied_academicperiods({{gacademicperiodid7}})\",\r\n    \"cmc_expectedstartid@odata.bind\": \"/mshied_academicperiods({{gacademicperiodid7}})\",\r\n    \"fax\": \"78865{{$randomInt}}30\",\r\n    \"cmc_phone2extension\": \"8083{{$randomInt}}569\",\r\n    \"websiteurl\": \"www.dcrm{{$randomInt}}.com\",\r\n    \"cmc_sourcecampusid@odata.bind\": \"/accounts({{gaccountId7}})\",\r\n    \"address1_county\":\"Delhi{{$randomInt}}\",\r\n    \"address1_country\":\"India{{$randomInt}}\",\r\n    \"address1_postalcode\":\"562109{{$randomInt}}\",\r\n    \"address1_stateorprovince\":\"Karanataka{{$randomInt}}\",\r\n    \"address1_city\":\"Bengaluru{{$randomInt}}\",\r\n    \"address1_line3\":\"Street3{{$randomInt}}\",\r\n    \"address1_line2\":\"Street2{{$randomInt}}\",\r\n    \"address1_line1\":\"Street1{{$randomInt}}\",\r\n    \"jobtitle\":\"QA{{$randomInt}}\",\r\n    \"telephone1\":\"988877{{$randomInt}}\",\r\n    \"mobilephone\":\"897678{{$randomInt}}\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}contacts",
									"host": [
										"{{Eresource_URL}}contacts"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get values from contact",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var lastname,contacttype ;",
											"var emailaddress1, programid,expectedstartid;",
											"",
											"pm.test(\"Fetching details from contact \", function()",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    lastname=jsonData.lastname;",
											"    console.log(\"lastname : \"+lastname);",
											"    emailaddress1=jsonData.emailaddress1;",
											"    console.log(\"emailaddress1 : \"+emailaddress1);",
											"    programid=jsonData._cmc_srcprogramid_value;",
											"    console.log(\"programid : \"+programid);",
											"    expectedstartid=jsonData._cmc_expectedstartid_value;",
											"    console.log(\"expectedstartid : \"+expectedstartid);",
											"    contacttype=jsonData.mshied_contacttype;",
											"    console.log(\"contacttype : \"+contacttype);",
											"",
											"});",
											"pm.globals.set('glastname7', lastname);",
											"pm.globals.set('gemailaddress17', emailaddress1);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{Eresource_URL}}contacts({{gcontactid7}})",
									"host": [
										"{{Eresource_URL}}contacts({{gcontactid7}})"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Create Inbound Interest1",
					"item": [
						{
							"name": "Create Area of Interest",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var areaofinterestid;",
											"var areaofinterestname;",
											"",
											"pm.test(\"Create Area of Interest\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"",
											"    areaofinterestid = jsonData.mshied_areaofinterestid;",
											"    console.log(\"area of interest id : \" + areaofinterestid);",
											"",
											"    areaofinterestname = jsonData.mshied_name;",
											"    console.log(\"area of interest name : \" + areaofinterestname);",
											"",
											"});",
											"pm.globals.set('gareaofinterestid8', areaofinterestid);",
											"pm.globals.set('gareaofinterestname8', areaofinterestname);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"mshied_code\": \"{{$randomInt}}-{{$randomInt}}e1 - {{$randomInt}}\",\n    \"mshied_name\": \"{{$randomInt}}-Test-AreaOfInterest1-{{$randomInt}}\"\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}mshied_areaofinterests",
									"host": [
										"{{Eresource_URL}}mshied_areaofinterests"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Account",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var account_id; ",
											"var Accname;",
											"pm.test(\"Account Created\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    account_id = jsonData.accountid;",
											"    Accname = jsonData.name;",
											"    console.log(Accname);",
											"});",
											"",
											"var accname = data.name;",
											"var accounttype = data.mshied_accounttype;",
											"pm.globals.set('gaccountId8',account_id);",
											"pm.globals.set('gAccname8',Accname);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n \"name\":\"{{name}}na{{$randomInt}}\",\r\n \"mshied_accounttype\":\"{{mshied_accounttype}}\",\r\n \"cmc_accountcode\":\"Acc2{{$randomInt}}\",\r\n \"preferredcontactmethodcode\":1\r\n} "
								},
								"url": {
									"raw": "{{Eresource_URL}}accounts",
									"host": [
										"{{Eresource_URL}}accounts"
									]
								},
								"description": "Create Account with new Address"
							},
							"response": []
						},
						{
							"name": "Create Program Level",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var programlevelid;",
											"pm.test(\"Create Program Level\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"",
											"    programlevelid = jsonData.mshied_programlevelid;",
											"    console.log(\"programlevelid : \" + programlevelid);",
											"});",
											"pm.globals.set('gprogramlevelid8', programlevelid);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"mshied_code\": \"{{$randomInt}}-C1{{$randomInt}} {{$randomInt}}\",\n    \"mshied_name\": \"{{$randomInt}}-Test-PrgLevel2-{{$randomInt}}\"\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}mshied_programlevels",
									"host": [
										"{{Eresource_URL}}mshied_programlevels"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Academic period",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var academicperiodid;",
											"var academicperiodname;",
											"",
											"pm.test(\"Academicperiodid Created\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202,204]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    academicperiodid = jsonData.mshied_academicperiodid;",
											"    academicperiodname = jsonData.mshied_name;",
											"    console.log('academicperiodname: '+academicperiodname);",
											" ",
											"});",
											"pm.globals.set('gacademicperiodid8',academicperiodid);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var moment = require('moment');\r",
											"pm.environment.set(\"timestamp\", moment().add(1, 'days').format(\"YYYY-MM-DD\"));\r",
											"pm.environment.set(\"timestampEndDate\", moment().add(102, 'days').format(\"YYYY-MM-DD\"));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"mshied_name\": \"{{cmc_academicperiodname}}Inbound23{{$randomInt}}\",\r\n    \"mshied_startdate\": \"{{timestamp}}\",\r\n    \"mshied_enddate\": \"{{timestampEndDate}}\",\r\n    \"mshied_code\": \"{{$randomInt}}In77{{$randomInt}}dd{{$randomInt}}\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}mshied_academicperiods",
									"host": [
										"{{Eresource_URL}}mshied_academicperiods"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Source Method",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var sourcemethodid;",
											"pm.test(\"Create sourcemethod\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"",
											"    sourcemethodid = jsonData.cmc_sourcemethodid;",
											"    console.log(\"sourcemethodid : \" + sourcemethodid);",
											"});",
											"pm.globals.set('gsourcemethodid8', sourcemethodid);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n   \"cmc_sourcemethodname\": \"{{$randomInt}}-TestSoucreMethod2{{$randomInt}}\"\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_sourcemethods",
									"host": [
										"{{Eresource_URL}}cmc_sourcemethods"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Program",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var programid;",
											"var programname;",
											"pm.test(\"Get Program\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"",
											"    programid = jsonData.mshied_programid;",
											"    programname = jsonData.mshied_name;",
											"    console.log(\"Program ID: \" + programid);",
											"    console.log(\"Program Name: \" + programname);",
											"});",
											"pm.globals.set('gProgram8', programid);",
											"pm.globals.set('gProgramName8', programname);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"mshied_code\": \"{{$randomInt}}Prg12{{$randomInt}}{{$randomInt}}\",\n    \"mshied_name\": \"code4{{$randomInt}}\"\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}mshied_programs",
									"host": [
										"{{Eresource_URL}}mshied_programs"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create SubCategory",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var subcategory;",
											"var Accname;",
											"pm.test(\"SourceSub Category Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
											"    var jsonData = JSON.parse(responseBody);",
											"",
											"    subcategory = jsonData.cmc_sourcesubcategoryid;",
											"    console.log(\"subcategory: \",subcategory);",
											"    pm.globals.set('gsubcategoryid8', subcategory);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_sourcesubcategoryname\": \"TestSubCategory1{{$randomInt}}\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_sourcesubcategories",
									"host": [
										"{{Eresource_URL}}cmc_sourcesubcategories"
									]
								},
								"description": "Create Account with new Address"
							},
							"response": []
						},
						{
							"name": "Create Source Category",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var sourcecategoryid;",
											"pm.test(\"Create Sourcecategory\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"",
											"    sourcecategoryid = jsonData.cmc_sourcecategoryid;",
											"    console.log(\"sourcecategoryid : \" + sourcecategoryid);",
											"});",
											"pm.globals.set('gsourcecategoryid8', sourcecategoryid);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"cmc_sourcecategoryname\": \"{{$randomInt}}-TestSoucreCategor2-y{{$randomInt}}\"\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_sourcecategories",
									"host": [
										"{{Eresource_URL}}cmc_sourcecategories"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create SubCategory",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var subcategory;",
											"var Accname;",
											"pm.test(\"SourceSub Category Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
											"    var jsonData = JSON.parse(responseBody);",
											"",
											"    subcategory = jsonData.cmc_sourcesubcategoryid;",
											"    console.log(\"subcategory: \",subcategory);",
											"    pm.globals.set('gsubcategoryid8', subcategory);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_sourcesubcategoryname\": \"TestSubCategory1{{$randomInt}}\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_sourcesubcategories",
									"host": [
										"{{Eresource_URL}}cmc_sourcesubcategories"
									]
								},
								"description": "Create Account with new Address"
							},
							"response": []
						},
						{
							"name": "Create Campaign",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var campaignid;",
											"pm.test(\"Account Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    campaignid = jsonData.campaignid;",
											"    console.log(\"campaignid: \", campaignid);",
											"});",
											"pm.globals.set('g_campaignid8', campaignid);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"{{$randomInt}}-TestCampaign1-{{$randomInt}}\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}campaigns",
									"host": [
										"{{Eresource_URL}}campaigns"
									]
								},
								"description": "Create Account with new Address"
							},
							"response": []
						},
						{
							"name": "Create Inbound Interest",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var Inboundid;",
											"var Inboundname;",
											"var contactid;",
											"var accountid;",
											"var methodid;",
											"var campaign;",
											"var categoryid;",
											"var programid;",
											"var programlevelid;",
											"var expectedstartid;",
											"var comments;",
											"var subcategory;",
											"var areaofinterestid;",
											"var type;",
											"var subcategory;",
											"",
											"pm.test(\"Lead Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
											"    var jsonData = JSON.parse(responseBody);",
											"",
											"    Inboundid = jsonData.leadid;",
											"    Inboundname = jsonData.fullname;",
											"    contactid = jsonData._customerid_value;",
											"    accountid = jsonData._cmc_sourcecampusid_value;",
											"    methodid = jsonData._cmc_sourcemethodid_value;",
											"    categoryid = jsonData._cmc_sourcecategoryid_value;",
											"    programid = jsonData._cmc_sourceprgmid_value;",
											"    programlevelid = jsonData._cmc_sourceprgmlevelid_value;",
											"    expectedstartid = jsonData._cmc_expectedstartid_value;",
											"    subcategory = jsonData._cmc_sourcesubcategoryid_value;",
											"    campaign = jsonData._cmc_sourcecampaignid_value",
											"    comments = jsonData.cmc_comments;",
											"    areaofinterestid = jsonData.cmc_areaofinterestid;",
											"    type = jsonData.cmc_type;",
											"",
											"    console.log('InboundID:' + Inboundid);",
											"    console.log('InBoundName:' + Inboundname);",
											"    console.log('ExpectedstartID:' + expectedstartid);",
											"});",
											"",
											"pm.globals.set('gInboundid7', Inboundid);",
											"pm.globals.set('gexpectedstartId7', expectedstartid);",
											"pm.globals.set('gtype7', type);",
											"setTimeout(function(){}, 25000);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const dateNow= new Date();\r",
											"pm.environment.set('currentDate', dateNow.toISOString());"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"address1_county\":\"Delhi{{$randomInt}}\",\r\n   \"address1_country\":\"India{{$randomInt}}\",\r\n   \"address1_postalcode\":\"562109{{$randomInt}}\",\r\n   \"address1_stateorprovince\":\"Karanataka{{$randomInt}}\",\r\n   \"address1_city\":\"Bengaluru{{$randomInt}}\",\r\n   \"address1_line3\":\"Street3{{$randomInt}}\",\r\n   \"address1_line2\":\"Street2{{$randomInt}}\",\r\n   \"address1_line1\":\"Street1{{$randomInt}}\",\r\n   \"jobtitle\":\"QA{{$randomInt}}\",\r\n   \"telephone1\":\"988877{{$randomInt}}\",\r\n   \"mobilephone\":\"897678{{$randomInt}}\",\r\n   \"emailaddress1\":\"{{$randomInt}}mailemail{{$randomInt}}@xyz.com\",\r\n   \"lastname\":\"{{$randomInt}}-lastname-99-{{$randomInt}}\",\r\n   \"firstname\":\"Lead-FirstName{{$randomInt}}{{$randomInt}}\",\r\n   \"cmc_sourcedate\": \"{{currentDate}}\",\r\n    \"cmc_sourcecampusid@odata.bind\": \"/accounts({{gaccountId8}})\",\r\n    \"cmc_sourceprgmid@odata.bind\": \"/leads({{gProgram8}})\",\r\n    \"cmc_sourceprgmlevelid@odata.bind\": \"/leads({{gprogramlevelid8}})\",\r\n    \"cmc_sourcecategoryid@odata.bind\": \"/leads({{gsourcecategoryid8}})\",\r\n    \"cmc_sourcecampaignid@odata.bind\": \"/campaigns({{g_campaignid8}})\",\r\n    \"cmc_sourcemethodid@odata.bind\": \"/leads({{gsourcemethodid8}})\",\r\n    \"cmc_sourcesubcategoryid@odata.bind\": \"/cmc_sourcesubcategories({{gsubcategoryid8}})\",\r\n    \"cmc_expectedstartid@odata.bind\": \"/mshied_academicperiods({{gacademicperiodid8}})\",\r\n    \"cmc_comments\":\"I'm Interested for MCA and MBA\",\r\n    \"cmc_areaofinterestid@odata.bind\":\"/mshied_areaofinterests({{gareaofinterestid8}})\",\r\n    \"customerid_contact@odata.bind\": \"/contacts({{gcontactid7}})\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}leads",
									"host": [
										"{{Eresource_URL}}leads"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Values from Inbound",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var parentcontactid;\r",
											"var contactid,statecode;\r",
											"var qualifyingopportunityid;\r",
											"var mobilephone;\r",
											"var emailaddress1;\r",
											"var address1_county;\r",
											"var campagin,sourcecampusid,areaofinterestid;\r",
											"var firstname,lastname;\r",
											"var stateorprovince,postalcode, city;\r",
											"var country,telephone1;\r",
											"var address1_country;\r",
											"var address1_line1,address1_line2,address1_line3;\r",
											"var sourcedate,expectedstartid,sourcemethodid;\r",
											"var sourcecategoryid,sourcesubcategoryid;\r",
											"var sourceprgmid,primary,sourceprgmlevelid,contacttype;\r",
											"\r",
											"pm.test(\"Fetch Values from lead\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);\r",
											"    var jsonData = JSON.parse(responseBody);\r",
											"    parentcontactid = jsonData._parentcontactid_value;\r",
											"    console.log('Parentcontactid:' + parentcontactid);\r",
											"    contactid = jsonData._customerid_value;\r",
											"    console.log('contactid:' + contactid);\r",
											"    primary = jsonData.cmc_primary;\r",
											"    console.log('primary:' + primary);\r",
											"    qualifyingopportunityid=jsonData._qualifyingopportunityid_value;\r",
											"    console.log('qualifyingopportunityid:' + qualifyingopportunityid);\r",
											"    mobilephone = jsonData.mobilephone;\r",
											"    console.log('mobilephone:' + mobilephone);\r",
											"    emailaddress1 = jsonData.emailaddress1;\r",
											"    console.log('emailaddress1:' + emailaddress1);\r",
											"    address1_county = jsonData.address1_county;\r",
											"    console.log('address1_county:' + address1_county);\r",
											"    areaofinterestid = jsonData._cmc_areaofinterestid_value;\r",
											"    console.log('areaofinterestid:' + areaofinterestid);\r",
											"    lastname = jsonData.lastname;\r",
											"    console.log('lastname:' + lastname);\r",
											"    campagin = jsonData._cmc_sourcecampaignid_value;\r",
											"    console.log('campagin:' + campagin);\r",
											"    firstname = jsonData.firstname;\r",
											"    console.log('firstname:' + firstname);\r",
											"    city = jsonData.address1_city;\r",
											"    console.log('city:' + city);\r",
											"    stateorprovince = jsonData.address1_stateorprovince;\r",
											"    console.log('stateorprovince:' + stateorprovince);\r",
											"    address1_country = jsonData.address1_country;\r",
											"    console.log('country:' + country);\r",
											"    address1_line1 = jsonData.address1_line1;\r",
											"    console.log('address1_line1:' + address1_line1);\r",
											"    address1_line2 = jsonData.address1_line2;\r",
											"    console.log('address1_line2:' + address1_line2);\r",
											"    address1_line3 = jsonData.address1_line3;\r",
											"    console.log('address1_line3:' + address1_line3);\r",
											"    telephone1 = jsonData.telephone1;\r",
											"    console.log('telephone1:' + telephone1);\r",
											"    sourcemethodid = jsonData._cmc_sourcemethodid_value;\r",
											"    console.log('sourcemethodid:' + sourcemethodid);\r",
											"    sourcedate = jsonData.cmc_sourcedate;\r",
											"    console.log('sourcedate:' + sourcedate);\r",
											"    sourcecategoryid = jsonData._cmc_sourcecategoryid_value;\r",
											"    console.log('sourcecategoryid:' + sourcecategoryid);\r",
											"    sourceprgmid = jsonData._cmc_sourceprgmid_value;\r",
											"    console.log('sourceprgmid:' + sourceprgmid);\r",
											"    sourcecampusid = jsonData._cmc_sourcecampusid_value;\r",
											"    console.log('sourcecampusid:' +sourcecampusid);\r",
											"    postalcode = jsonData.address1_postalcode;\r",
											"    console.log('postalcode:' + postalcode);\r",
											"    expectedstartid = jsonData._cmc_expectedstartid_value;\r",
											"    console.log('expectedstartid:' +expectedstartid);\r",
											"    sourcesubcategoryid = jsonData._cmc_sourcesubcategoryid_value;\r",
											"    console.log('sourcesubcategoryid:' + sourcesubcategoryid);\r",
											"    sourceprgmlevelid = jsonData._cmc_sourceprgmlevelid_value;\r",
											"    console.log('sourceprgmlevelid:' +sourceprgmlevelid); \r",
											"    contacttype = jsonData.cmc_contacttype;\r",
											"    console.log('contacttype:' +contacttype); \r",
											"    statecode = jsonData.statecode;\r",
											"    console.log('statecode:' +statecode);\r",
											"});\r",
											"\r",
											"    pm.test(\"Validate contacttype\", function () {\r",
											"    pm.expect(contacttype).to.equal(494280011);\r",
											"    });\r",
											"\r",
											"    pm.test(\"Validate Qualify status\", function () {\r",
											"    pm.expect(statecode).to.equal(0);\r",
											"    });\r",
											"    \r",
											"    pm.test(\"Validate Primary\", function () {\r",
											"    pm.expect(primary).to.equal(true);\r",
											"    });\r",
											"    \r",
											"    pm.test(\"Validate qualifyingopportunityid\", function () {\r",
											"    pm.expect(qualifyingopportunityid).to.equal(null);\r",
											"    });\r",
											"\r",
											"pm.globals.set('gqualifyingopportunityid8', qualifyingopportunityid);\r",
											"pm.globals.set('gmobilephone8', mobilephone);\r",
											"pm.globals.set('gemailaddress18', emailaddress1);\r",
											"pm.globals.set('gaddress1_county8', address1_county);\r",
											"pm.globals.set('glastname8', lastname);\r",
											"pm.globals.set('gfirstname8', firstname);\r",
											"pm.globals.set('gcity8', city);\r",
											"pm.globals.set('gstateorprovince8', stateorprovince);\r",
											"pm.globals.set('gcountry8', country);\r",
											"pm.globals.set('gaddress1_country8', address1_country);\r",
											"pm.globals.set('gaddress1_line18', address1_line1);\r",
											"pm.globals.set('gaddress1_line28', address1_line2);\r",
											"pm.globals.set('gaddress1_line38', address1_line3);\r",
											"pm.globals.set('gtelephone18', telephone1);\r",
											"pm.globals.set('gsourcedate8', sourcedate);\r",
											"pm.globals.set('gpostalcode8', postalcode);\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Prefer",
										"value": "return=representation",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Eresource_URL}}leads({{gInboundid7}})",
									"host": [
										"{{Eresource_URL}}leads({{gInboundid7}})"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Details from Contact",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var concustomerid;",
											"var concampusid;",
											"var conmethodid;",
											"var concategoryid;",
											"var conprogramid;",
											"var conprogramlevelid;",
											"var conexpectedstartid;",
											"var consubsourcecategoryid; ",
											"var concampaign,conlastname;",
											"var originatinginboundinterest;",
											"var conmobilephone,conemailaddress1;",
											"var conaddress1_county,conaddress1_country,confirstname;",
											"var conaddress1_city,constateorprovince;",
											"var conaddress1_line1,conaddress1_line2,conaddress1_line3;",
											"var contelephone1,consourcedate,conpostalcode,contacttype;",
											"",
											"var leadcustomerid = pm.globals.get(\"gcontactid7\");",
											"var leadcampusid = pm.globals.get(\"gaccountId8\");",
											"var leadmethodid = pm.globals.get(\"gsourcemethodid8\");",
											"var leadcategoryid = pm.globals.get(\"gsourcecategoryid8\");",
											"var leadprogramid = pm.globals.get(\"gProgram8\");",
											"var leadprogramlevelid = pm.globals.get(\"gprogramlevelid8\");",
											"var leadexpectedstartid = pm.globals.get(\"gacademicperiodid8\");",
											"var leadsubsourcecategoryid = pm.globals.get(\"gsubcategoryid8\");",
											"var leadcampaign = pm.globals.get(\"g_campaignid8\");",
											"var inboundid = pm.globals.get(\"gInboundid7\");",
											"var mobilephone = pm.globals.get(\"gmobilephone8\");",
											"var emailaddress1 = pm.globals.get(\"gemailaddress18\");",
											"var address1_county = pm.globals.get(\"gaddress1_county8\");",
											"var address1_country = pm.globals.get(\"gaddress1_country8\");",
											"var lastname = pm.globals.get(\"glastname8\");",
											"var firstname = pm.globals.get(\"gfirstname8\");",
											"var city = pm.globals.get(\"gcity8\");",
											"var stateorprovince = pm.globals.get(\"gstateorprovince8\");",
											"var address1_line1 = pm.globals.get(\"gaddress1_line18\");",
											"var address1_line2 = pm.globals.get(\"gaddress1_line28\");",
											"var address1_line3 = pm.globals.get(\"gaddress1_line38\");",
											"var telephone1 = pm.globals.get(\"gtelephone18\");",
											"var sourcedate = pm.globals.get(\"gsourcedate8\");",
											"var postalcode = pm.globals.get(\"gpostalcode8\");",
											"",
											"pm.test(\"Copied Fields values\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
											"    var jsonData = JSON.parse(responseBody);",
											"",
											"    concustomerid = jsonData.contactid;",
											"    console.log('concustomerid: ' + concustomerid);",
											"",
											"    concampusid = jsonData._cmc_sourcecampusid_value;",
											"    console.log('leadcampusid: ' + concampusid);",
											"",
											"    conprogramid = jsonData._cmc_srcprogramid_value;",
											"    console.log('leadprogramid: ' + conprogramid);",
											"",
											"     conprogramlevelid = jsonData._cmc_srcpogramlevelid_value;",
											"    console.log('leadprogramlevelid: ' + conprogramlevelid);",
											"",
											"    conexpectedstartid = jsonData._cmc_expectedstartid_value;",
											"    console.log('leadexpectedstartid: ' + conexpectedstartid);",
											"",
											"    conmethodid = jsonData._cmc_sourcemethodid_value;",
											"    console.log('conmethodid: ' + conmethodid);",
											"",
											"    concategoryid = jsonData._cmc_sourcecategoryid_value;",
											"    console.log('concategoryid: ' + concategoryid);",
											"",
											"    consubsourcecategoryid = jsonData._cmc_sourcesubcategoryid_value;",
											"    console.log('Consubsourcecategoryid: ' + consubsourcecategoryid);",
											"",
											"    concampaign = jsonData._cmc_sourcecampaignid_value;",
											"    console.log('concampaign: ' + concampaign);",
											"",
											"    originatinginboundinterest = jsonData._cmc_originatinginboundinterest_value;",
											"    console.log('originatinginboundinterest: ' + originatinginboundinterest);",
											"",
											"    conmobilephone = jsonData.mobilephone;",
											"    console.log('conmobilephone: ' + mobilephone);",
											"",
											"    conemailaddress1 = jsonData.emailaddress1;",
											"    console.log('conemailaddress1: ' + emailaddress1);",
											"",
											"    conaddress1_county = jsonData.address1_county;",
											"    console.log('conaddress1_county: ' + conaddress1_county);",
											"",
											"    conaddress1_country = jsonData.address1_country;",
											"    console.log('conaddress1_country: ' + conaddress1_country);",
											"     ",
											"    conlastname = jsonData.lastname;",
											"    console.log('conlastname: ' + conlastname);",
											"",
											"    confirstname = jsonData.firstname;",
											"    console.log('confirstname: ' + confirstname);",
											"",
											"    conaddress1_city = jsonData.address1_city;",
											"    console.log('conaddress1_city: ' + conaddress1_city);",
											"",
											"    constateorprovince = jsonData.address1_stateorprovince;",
											"    console.log('constateorprovince: ' + constateorprovince);",
											"     ",
											"    conaddress1_line1 = jsonData.address1_line1;",
											"    console.log('conaddress1_line1: ' + conaddress1_line1);",
											"",
											"    conaddress1_line2 = jsonData.address1_line2;",
											"    console.log('conaddress1_line2: ' + conaddress1_line2);",
											"",
											"    conaddress1_line3 = jsonData.address1_line3;",
											"    console.log('conaddress1_line3: ' + conaddress1_line3);",
											"     ",
											"    contelephone1 = jsonData.telephone1;",
											"    console.log('contelephone1: ' + contelephone1);",
											"",
											"    consourcedate = jsonData.cmc_sourcedate;",
											"    console.log('consourcedate: ' + consourcedate);",
											"",
											"    conpostalcode = jsonData.address1_postalcode;",
											"    console.log('conpostalcode: ' + conpostalcode);",
											"",
											"   //Student should not append",
											"     contacttype = jsonData.mshied_contacttype;",
											"     console.log('contacttype: ' + contacttype);",
											"",
											"      pm.test(\"Validate contacttype\", function () {",
											"        pm.expect(contacttype).to.equal('494280002,494280006');",
											"    });",
											"",
											"    pm.test(\"Validate method\", function () {",
											"        pm.expect(conmethodid).to.equal(leadmethodid);",
											"    });",
											"",
											"    pm.test(\"Validate mobilephone\", function () {",
											"        pm.expect(conmobilephone).not.equal(mobilephone);",
											"    });",
											"    ",
											"    pm.test(\"Validate emailaddress1\", function () {",
											"        pm.expect(conemailaddress1).not.equal(emailaddress1);",
											"    });",
											"    ",
											"    pm.test(\"Validate address1_county\", function () {",
											"         pm.expect(conaddress1_county).not.equal(address1_county);",
											"    });",
											"",
											"    pm.test(\"Validate address1_country\", function () {",
											"        pm.expect(conaddress1_country).not.equal(address1_country);",
											"    });",
											"",
											"    pm.test(\"Validate lastname\", function () {",
											"        pm.expect(conlastname).not.equal(lastname);",
											"    });",
											"",
											"    pm.test(\"Validate firstname\", function () {",
											"        pm.expect(confirstname).not.equal(firstname);",
											"    });",
											"",
											"    pm.test(\"Validate city\", function () {",
											"        pm.expect(conaddress1_city).not.equal(city);",
											"    });",
											"",
											"    pm.test(\"Validate stateorprovince\", function () {",
											"        pm.expect(constateorprovince).not.equal(stateorprovince);",
											"    });",
											"",
											"    pm.test(\"Validate address1_line1\", function () {",
											"        pm.expect(conaddress1_line1).not.equal(address1_line1);",
											"    });",
											"",
											"    pm.test(\"Validate address1_line2\", function () {",
											"        pm.expect(conaddress1_line2).not.equal(address1_line2);",
											"    });",
											"",
											"   pm.test(\"Validate address1_line3\", function () {",
											"        pm.expect(conaddress1_line3).not.equal(address1_line3);",
											"   });",
											"   ",
											"   pm.test(\"Validate telephone1\", function () {",
											"        pm.expect(contelephone1).not.equal(telephone1);",
											"   });",
											"   ",
											"   pm.test(\"Validate sourcedate\", function () {",
											"        pm.expect(consourcedate).to.equal(sourcedate);",
											"   });",
											"",
											"   pm.test(\"Validate postalcode\", function () {",
											"        pm.expect(conpostalcode).not.equal(postalcode);",
											"   });",
											"",
											"     pm.test(\"Validate Campus\", function () {",
											"        pm.expect(concampusid).to.equal(leadcampusid);",
											"     });",
											"",
											"     pm.test(\"Validate ProgramLevel\", function () {",
											"        pm.expect(conprogramlevelid).to.equal(leadprogramlevelid);",
											"     });",
											"",
											"     pm.test(\"Validate ExpectedStartDate\", function () {",
											"         pm.expect(conexpectedstartid).to.equal(leadexpectedstartid);",
											"     });",
											"",
											"      pm.test(\"Validate Program\", function () {",
											"         pm.expect(conprogramid).to.equal(leadprogramid);",
											"     });",
											"",
											"    pm.test(\"Validate Category\", function () {",
											"        pm.expect(concategoryid).to.equal(leadcategoryid);",
											"    });",
											"",
											"    pm.test(\"Validate Subcategory\", function () {",
											"        pm.expect(consubsourcecategoryid).to.equal(leadsubsourcecategoryid);",
											"    });",
											"",
											"    pm.test(\"Validate Campaign\", function () {",
											"        pm.expect(concampaign).to.equal(leadcampaign);",
											"    });",
											"",
											"    pm.test(\"Validate originatinginboundinterest\", function () {",
											"        pm.expect(inboundid).to.equal(originatinginboundinterest);",
											"    });",
											"",
											"",
											"    if (conmethodid === leadmethodid && concategoryid === leadcategoryid && consubsourcecategoryid === leadsubsourcecategoryid && concampaign === leadcampaign && inboundid === originatinginboundinterest) {",
											"        console.log('Initial Source Field Copied');",
											"    }",
											"    else {",
											"        console.log('Initial Source Field NOT Copied');",
											"    }",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{Eresource_URL}}contacts({{gcontactid7}})",
									"host": [
										"{{Eresource_URL}}contacts({{gcontactid7}})"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Scenario 2 type-blank",
			"item": [
				{
					"name": "Create Contact1",
					"item": [
						{
							"name": "GetToken_DCRM Admin",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = JSON.parse(responseBody);",
											"postman.setGlobalVariable('gaccess_token', data.access_token);",
											"console.log(pm.globals.get(\"gaccess_token\"));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "grant_type",
											"value": "client_credentials",
											"type": "text"
										},
										{
											"key": "client_id",
											"value": "{{Eadmin_id}}",
											"type": "text"
										},
										{
											"key": "client_secret",
											"value": "{{Eadmin_secret}}",
											"type": "text"
										},
										{
											"key": "resource",
											"value": "{{Eresource}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "https://login.microsoftonline.com/{{Eredirectid}}/oauth2/token",
									"protocol": "https",
									"host": [
										"login",
										"microsoftonline",
										"com"
									],
									"path": [
										"{{Eredirectid}}",
										"oauth2",
										"token"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Academic period 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var academicperiodid;",
											"var academicperiodname;",
											"",
											"pm.test(\"Academicperiodid Created\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202,204]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    academicperiodid = jsonData.mshied_academicperiodid;",
											"    academicperiodname = jsonData.mshied_name;",
											"    console.log('academicperiodname: '+academicperiodname);",
											" ",
											"});",
											"pm.globals.set('gacademicperiodid',academicperiodid);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var moment = require('moment');\r",
											"pm.environment.set(\"timestamp\", moment().add(1, 'days').format(\"YYYY-MM-DD\"));\r",
											"pm.environment.set(\"timestampEndDate\", moment().add(102, 'days').format(\"YYYY-MM-DD\"));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"mshied_name\": \"{{cmc_academicperiodname}}Inbound23{{$randomInt}}\",\r\n    \"mshied_startdate\": \"{{timestamp}}\",\r\n    \"mshied_enddate\": \"{{timestampEndDate}}\",\r\n    \"mshied_code\": \"{{$randomInt}}In77{{$randomInt}}dd{{$randomInt}}\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}mshied_academicperiods",
									"host": [
										"{{Eresource_URL}}mshied_academicperiods"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Account 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var account_id; ",
											"var Accname;",
											"pm.test(\"Account Created\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    account_id = jsonData.accountid;",
											"    Accname = jsonData.name;",
											"    console.log(Accname);",
											"    ",
											"});",
											"var accname = data.name;",
											"var accounttype = data.mshied_accounttype;",
											"pm.globals.set('gaccountId',account_id);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"{{name}}{{$randomInt}}\",\r\n    \"mshied_accounttype\": \"{{mshied_accounttype}}\",\r\n    \"cmc_accountcode\": \"Acc{{$randomInt}}\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}accounts",
									"host": [
										"{{Eresource_URL}}accounts"
									]
								},
								"description": "Create Account with new Address"
							},
							"response": []
						},
						{
							"name": "Create Campaign 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var campaignid;",
											"pm.test(\"Account Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    campaignid = jsonData.campaignid;",
											"    console.log(\"campaignid: \", campaignid);",
											"});",
											"pm.globals.set('g_campaignid', campaignid);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"{{$randomInt}}-TestCampaign-{{$randomInt}}\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}campaigns",
									"host": [
										"{{Eresource_URL}}campaigns"
									]
								},
								"description": "Create Account with new Address"
							},
							"response": []
						},
						{
							"name": "Create Source Category 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var sourcecategoryid;",
											"pm.test(\"Create Sourcecategory\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"",
											"    sourcecategoryid = jsonData.cmc_sourcecategoryid;",
											"    console.log(\"sourcecategoryid : \" + sourcecategoryid);",
											"});",
											"pm.globals.set('gsourcecategoryid', sourcecategoryid);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"cmc_sourcecategoryname\": \"{{$randomInt}}-TestSoucreCategor-y{{$randomInt}}\"\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_sourcecategories",
									"host": [
										"{{Eresource_URL}}cmc_sourcecategories"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create SubCategory 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var subcategory;",
											"var Accname;",
											"pm.test(\"SourceSub Category Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
											"    var jsonData = JSON.parse(responseBody);",
											"",
											"    subcategory = jsonData.cmc_sourcesubcategoryid;",
											"    console.log(\"subcategory: \",subcategory);",
											"    pm.globals.set('gsubcategoryid', subcategory);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_sourcesubcategoryname\": \"TestSubCategory{{$randomInt}}\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_sourcesubcategories",
									"host": [
										"{{Eresource_URL}}cmc_sourcesubcategories"
									]
								},
								"description": "Create Account with new Address"
							},
							"response": []
						},
						{
							"name": "Create Program 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var programid;",
											"var programname;",
											"pm.test(\"Get Program\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"",
											"    programid = jsonData.mshied_programid;",
											"    programname = jsonData.mshied_name;",
											"    console.log(\"Program ID: \" + programid);",
											"    console.log(\"Program Name: \" + programname);",
											"});",
											"pm.globals.set('gProgram1', programid);",
											"pm.globals.set('gProgramName1', programname);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"mshied_code\": \"{{$randomInt}}Prg1{{$randomInt}}{{$randomInt}}\",\n    \"mshied_name\": \"code4{{$randomInt}}\"\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}mshied_programs",
									"host": [
										"{{Eresource_URL}}mshied_programs"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Source Method 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var sourcemethodid;",
											"var sourcemethodname;",
											"pm.test(\"Create sourcemethod\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"",
											"    sourcemethodid = jsonData.cmc_sourcemethodid;",
											"    console.log(\"sourcemethodid : \" + sourcemethodid);",
											"",
											"    sourcemethodname = jsonData.cmc_sourcemethodname;",
											"    console.log(\"sourcemethodname : \" + sourcemethodname);",
											"});",
											"pm.globals.set('gsourcemethodid1', sourcemethodid);",
											"pm.globals.set('gsourcemethodname1', sourcemethodname);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n   \"cmc_sourcemethodname\": \"{{$randomInt}}-TestSoucreMethod{{$randomInt}}\"\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_sourcemethods",
									"host": [
										"{{Eresource_URL}}cmc_sourcemethods"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Role/Title 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var titleid;",
											"pm.test(\"Create title\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"",
											"    titleid = jsonData.cmc_titleid;",
											"    console.log(\"titleid : \" + titleid);",
											"});",
											"pm.globals.set('gtitleid', titleid);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n   \"cmc_titlename\": \"{{$randomInt}}-Test-Title-{{$randomInt}}\"\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_titles",
									"host": [
										"{{Eresource_URL}}cmc_titles"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Program Level 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var programlevelid;",
											"pm.test(\"Create Sourcecategory\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"",
											"    programlevelid = jsonData.mshied_programlevelid;",
											"    console.log(\"programlevelid : \" + programlevelid);",
											"});",
											"pm.globals.set('gprogramlevelid', programlevelid);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"mshied_code\": \"{{$randomInt}}-Code{{$randomInt}}{{$randomInt}}\",\n    \"mshied_name\": \"{{$randomInt}}-Test-PrgLevel-{{$randomInt}}\"\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}mshied_programlevels",
									"host": [
										"{{Eresource_URL}}mshied_programlevels"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Education Level 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var educationlevelid;",
											"pm.test(\"Create educationlevelid\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"",
											"    educationlevelid = jsonData.mshied_educationlevelid;",
											"    console.log(\"educationlevelid : \" + educationlevelid);",
											"});",
											"pm.globals.set('geducationlevelid', educationlevelid);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"mshied_code\": \"{{$randomInt}}-Code{{$randomInt}}{{$randomInt}}\",\n    \"mshied_name\": \"{{$randomInt}}-Test-EduLevel-{{$randomInt}}\"\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}mshied_educationlevels",
									"host": [
										"{{Eresource_URL}}mshied_educationlevels"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Area of Interest 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var areaofinterestid;",
											"var areaofinterestname;",
											"",
											"pm.test(\"Create Area of Interest\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"",
											"    areaofinterestid = jsonData.mshied_areaofinterestid;",
											"    console.log(\"area of interest id : \" + areaofinterestid);",
											"",
											"    areaofinterestname = jsonData.mshied_name;",
											"    console.log(\"area of interest name : \" + areaofinterestname);",
											"",
											"});",
											"pm.globals.set('gareaofinterestid', areaofinterestid);",
											"pm.globals.set('gareaofinterestname', areaofinterestname);",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"mshied_code\": \"{{$randomInt}}-Code{{$randomInt}}{{$randomInt}}\",\n    \"mshied_name\": \"{{$randomInt}}-Test-AreaOfInterest-{{$randomInt}}\"\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}mshied_areaofinterests",
									"host": [
										"{{Eresource_URL}}mshied_areaofinterests"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Contact",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var contact_id;",
											"var Name;",
											"var campusid;",
											"var sourcemethodid;",
											"var programid;",
											"var programlevelid;",
											"var expectedstartid;",
											"var methodid;",
											"var categoryid;",
											"var subcategory;",
											"var campaign;",
											"",
											"pm.test(\"Contact Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    contact_id = jsonData.contactid;",
											"    Name = jsonData.fullname;",
											"    campusid = jsonData._cmc_sourcecampusid_value;",
											"    sourcemethodid = jsonData._cmc_sourcemethodid_value;",
											"    programid = jsonData._cmc_srcprogramid_value;",
											"    programlevelid = jsonData._cmc_srcpogramlevelid_value;",
											"    expectedstartid = jsonData._cmc_expectedstartid_value;",
											"    methodid = jsonData._cmc_sourcemethodid_value;",
											"    categoryid = jsonData._cmc_sourcecategoryid_value;",
											"    subcategory = jsonData._cmc_sourcesubcategoryid_value;",
											"    campaign = jsonData._cmc_sourcecampaignid_value;",
											"    console.log('Contact fullname: ' + Name);",
											"    console.log('campusid: ' + campusid);",
											"});",
											"",
											"var firstname = data.firstname;",
											"var lastname = data.lastname;",
											"var emailaddress1 = data.emailaddress1;",
											"var numberofchildren = data.numberofchildren;",
											"var recentsat = data.cmc_recentsat;",
											"var recentact = data.cmc_recentact;",
											"var mshied_contacttype = data.mshied_contacttype;",
											"var race = data.mshied_race;",
											"var ethnicgroup = data.mshied_ethnicgroup;",
											"var miltarystatus = data.mshied_miltarystatus;",
											"var shippingmethodcode = data.shippingmethodcode;",
											"var preferredcontactmethodcode = data.preferredcontactmethodcode;",
											"var nationality = data.mshied_nationality;",
											"var gendercode = data.gendercode;",
											"",
											"pm.globals.set('gcontactid', contact_id);",
											"pm.globals.set('gexpectedstartid', expectedstartid);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var moment = require('moment');\r",
											"pm.environment.set(\"timestamp\", moment().add(1, 'days').format(\"YYYY-MM-DD\"));\r",
											"pm.environment.set(\"timestampEndDate\", moment().add(100, 'days').format(\"YYYY-MM-DD\"));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									},
									{
										"key": "OData-Version",
										"value": "4.0"
									},
									{
										"key": "OData-MaxVersion",
										"value": "4.0"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "",
										"value": "",
										"type": "text",
										"disabled": true
									},
									{
										"key": "",
										"value": "",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"firstname\": \"{{firstname}}{{$randomInt}}\",\r\n    \"lastname\": \"{{lastname}}{{$randomInt}}\",\r\n    \"middlename\": \"mid{{$randomInt}}\",\r\n    \"mshied_maidenname\": \"maid{{$randomInt}}\",\r\n    \"mshied_legacy\": \"true\",\r\n    \"emailaddress1\": \"{{$randomInt}}{{emailaddress1}}\",\r\n    \"gendercode\": \"{{gendercode}}\",\r\n    \"anniversary\": \"{{timestamp}}\",\r\n    \"lastonholdtime\": \"{{timestamp}}\",\r\n    \"numberofchildren\": \"{{numberofchildren}}\",\r\n    \"nickname\": \"Nickname{{$randomInt}}\",\r\n    \"familystatuscode\": 2,\r\n    \"cmc_sourcedate\": \"{{timestamp}}\",\r\n    \"cmc_recentsat\": \"{{cmc_recentsat}}\",\r\n    \"cmc_recentact\": \"{{cmc_recentact}}\",\r\n    \"mshied_contacttype\": \"494280002,494280006\",\r\n    \"mshied_race\": {{mshied_race}},\r\n    \"mshied_ethnicgroup\": {{mshied_ethnicgroup}},\r\n    \"mshied_miltarystatus\": \"{{mshied_miltarystatus}}\",\r\n    \"mshied_nationality\": \"{{mshied_nationality}}\",\r\n    \"cmc_sourcecategoryid@odata.bind\": \"/contacts({{gsourcecategoryid}})\",\r\n    \"cmc_sourcesubcategoryid@odata.bind\": \"/cmc_sourcesubcategories({{gsubcategoryid}})\",\r\n    \"cmc_sourcecampaignid@odata.bind\": \"/campaigns({{g_campaignid}})\",\r\n    \"cmc_sourcemethodid@odata.bind\": \"/contacts({{gsourcemethodid1}})\",\r\n    \"cmc_titleid@odata.bind\": \"/contacts({{gtitleid}})\",\r\n    \"cmc_srcpogramlevelid@odata.bind\": \"/contacts({{gprogramlevelid}})\",\r\n    \"cmc_srcprogramid@odata.bind\": \"/contacts({{gProgram1}})\",\r\n    \"cmc_educationlevelid@odata.bind\": \"/contacts({{geducationlevelid}})\",\r\n    \"mshied_CurrentProgramLevelId@odata.bind\": \"/contacts({{gprogramlevelid}})\",\r\n    \"mshied_CurrentProgramId@odata.bind\": \"/contacts({{gProgram1}})\",\r\n    \"mshied_CurrentAcademicPeriodId@odata.bind\": \"/mshied_academicperiods({{gacademicperiodid}})\",\r\n    \"cmc_expectedstartid@odata.bind\": \"/mshied_academicperiods({{gacademicperiodid}})\",\r\n    \"fax\": \"78865{{$randomInt}}30\",\r\n    \"cmc_phone2extension\": \"8083{{$randomInt}}569\",\r\n    \"websiteurl\": \"www.dcrm{{$randomInt}}.com\",\r\n    \"cmc_sourcecampusid@odata.bind\": \"/accounts({{gaccountId}})\",\r\n    \"address1_county\":\"Delhi{{$randomInt}}\",\r\n    \"address1_country\":\"India{{$randomInt}}\",\r\n    \"address1_postalcode\":\"562109{{$randomInt}}\",\r\n    \"address1_stateorprovince\":\"Karanataka{{$randomInt}}\",\r\n    \"address1_city\":\"Bengaluru{{$randomInt}}\",\r\n    \"address1_line3\":\"Street3{{$randomInt}}\",\r\n    \"address1_line2\":\"Street2{{$randomInt}}\",\r\n    \"address1_line1\":\"Street1{{$randomInt}}\",\r\n    \"jobtitle\":\"QA{{$randomInt}}\",\r\n    \"telephone1\":\"988877{{$randomInt}}\",\r\n    \"mobilephone\":\"897678{{$randomInt}}\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}contacts",
									"host": [
										"{{Eresource_URL}}contacts"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get values from contact",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var lastname,contacttype ;",
											"var emailaddress1, programid,expectedstartid;",
											"",
											"pm.test(\"Fetching details from contact \", function()",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    lastname=jsonData.lastname;",
											"    console.log(\"lastname : \"+lastname);",
											"    emailaddress1=jsonData.emailaddress1;",
											"    console.log(\"emailaddress1 : \"+emailaddress1);",
											"    programid=jsonData._cmc_srcprogramid_value;",
											"    console.log(\"programid : \"+programid);",
											"    expectedstartid=jsonData._cmc_expectedstartid_value;",
											"    console.log(\"expectedstartid : \"+expectedstartid);",
											"    contacttype=jsonData.mshied_contacttype;",
											"    console.log(\"contacttype : \"+contacttype);",
											"",
											"});",
											"pm.globals.set('glastname', lastname);",
											"pm.globals.set('gcontacttype', contacttype);",
											"pm.globals.set('gemailaddress1', emailaddress1);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{Eresource_URL}}contacts({{gcontactid}})",
									"host": [
										"{{Eresource_URL}}contacts({{gcontactid}})"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Create Lifecycle",
					"item": [
						{
							"name": "Create Account 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var account_id; ",
											"var Accname;",
											"pm.test(\"Account Created\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    account_id = jsonData.accountid;",
											"    Accname = jsonData.name;",
											"    console.log(Accname);",
											"});",
											"",
											"pm.globals.set('gaccountId4',account_id);",
											"pm.globals.set('gaccountname4',Accname);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"name\":\"{{name}}{{$randomInt}}\",\r\n\t\"mshied_accounttype\":\"{{mshied_accounttype}}\",\r\n\t\"cmc_accountcode\":\"Accc{{$randomInt}}\",\r\n\t\"preferredcontactmethodcode\":1\r\n}"
								},
								"url": {
									"raw": "{{Eresource}}api/data/{{Eversion}}/accounts",
									"host": [
										"{{Eresource}}api"
									],
									"path": [
										"data",
										"{{Eversion}}",
										"accounts"
									]
								},
								"description": "Create Account with new Address"
							},
							"response": []
						},
						{
							"name": "Create Academic period 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var academicperiodid;",
											"var apname;",
											"var code;",
											"",
											"pm.test(\"Academicperiodid Created\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202,204]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    academicperiodid = jsonData.mshied_academicperiodid;",
											"    apname = jsonData.mshied_name;",
											"    code = jsonData.mshied_code;",
											" ",
											"});",
											"",
											"pm.globals.set('gacademicperiodid4',academicperiodid);",
											"pm.globals.set('gacademicperiodname4',apname);",
											"pm.globals.set('gacademicperiodcode4',code);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var moment = require('moment');\r",
											"pm.environment.set(\"timestamp\", moment().add(1, 'days').format(\"YYYY-MM-DD\"));\r",
											"pm.environment.set(\"timestampEndDate\", moment().add(100, 'days').format(\"YYYY-MM-DD\"));\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"mshied_name\":\"{{cmc_academicperiodname}}{{$randomInt}}\",\r\n\t\"mshied_startdate\":\"{{timestamp}}\",\r\n\t\"mshied_enddate\":\"{{timestampEndDate}}\",\r\n\t\"mshied_code\":\"{{$randomInt}}{{cmc_code}}LH{{$randomInt}}\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource}}api/data/{{Eversion}}/mshied_academicperiods",
									"host": [
										"{{Eresource}}api"
									],
									"path": [
										"data",
										"{{Eversion}}",
										"mshied_academicperiods"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Program 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var programid;",
											"var programname;",
											"pm.test(\"Get Program\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"",
											"    programid = jsonData.mshied_programid;",
											"    programname = jsonData.mshied_name;",
											"    console.log(\"Program ID: \" + programid);",
											"    console.log(\"Program Name: \" + programname);",
											"});",
											"pm.globals.set('gProgram4', programid);",
											"pm.globals.set('gProgramName4', programname);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"mshied_code\": \"{{$randomInt}}Pr{{$randomInt}}rg1{{$randomInt}}\",\n    \"mshied_name\": \"code{{$randomInt}}\"\n}\n"
								},
								"url": {
									"raw": "{{Eresource_URL}}mshied_programs",
									"host": [
										"{{Eresource_URL}}mshied_programs"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Source Category 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var sourcecategoryid;",
											"pm.test(\"Create Sourcecategory\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"",
											"    sourcecategoryid = jsonData.cmc_sourcecategoryid;",
											"    console.log(\"sourcecategoryid : \" + sourcecategoryid);",
											"});",
											"pm.globals.set('gsourcecategoryid4', sourcecategoryid);",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"cmc_sourcecategoryname\": \"{{$randomInt}}-TestSoucreCategor-yy{{$randomInt}}\"\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_sourcecategories",
									"host": [
										"{{Eresource_URL}}cmc_sourcecategories"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Source Method 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var sourcemethodid;",
											"pm.test(\"Create sourcemethod\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"",
											"    sourcemethodid = jsonData.cmc_sourcemethodid;",
											"    console.log(\"sourcemethodid : \" + sourcemethodid);",
											"});",
											"pm.globals.set('gsourcemethodid4', sourcemethodid);",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n   \"cmc_sourcemethodname\": \"{{$randomInt}}-TestSoucreMethod{{$randomInt}}\"\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_sourcemethods",
									"host": [
										"{{Eresource_URL}}cmc_sourcemethods"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Program Level 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var programlevelid;",
											"pm.test(\"Create Sourcecategory\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"",
											"    programlevelid = jsonData.mshied_programlevelid;",
											"    console.log(\"programlevelid : \" + programlevelid);",
											"});",
											"pm.globals.set('gprogramlevelid4', programlevelid);",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"mshied_code\": \"{{$randomInt}}-{{$randomInt}} {{$randomInt}}\",\n    \"mshied_name\": \"{{$randomInt}}-Test-PrgLevel-{{$randomInt}}\"\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}mshied_programlevels",
									"host": [
										"{{Eresource_URL}}mshied_programlevels"
									]
								}
							},
							"response": []
						},
						{
							"name": "LifeCycle",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var lifecycleid ;",
											"var contactid ;",
											"var accountid;",
											"var lifecyclename;",
											"var createdon;",
											"var shortname;",
											"",
											"pm.test(\"LifeCycle Created\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    lifecycleid  = jsonData.opportunityid ;",
											"    contactid = jsonData._cmc_campusid_value;",
											"    accountid = jsonData._cmc_contactid_value;",
											"    lifecyclename = jsonData.name;",
											"    createdon = jsonData.createdon;",
											"    shortname = jsonData.cmc_shortname;",
											"    ",
											"    console.log('Lifecycle name: '+lifecyclename);",
											"});",
											"",
											"pm.globals.set('glifecycleid',lifecycleid);",
											"pm.globals.set('glifecyclename',lifecyclename);",
											"",
											"var cmc_lifecycletypeid=data.cmc_lifecycletype;",
											"var cmc_sourcemethod =data.cmc_sourcemethodid;",
											"var cmc_sourcecategory =data.cmc_sourcecategoryid;",
											"var cmc_programid1 =data.cmc_programid;",
											"var cmc_programlevelid1 =data.cmc_programlevelid;",
											"var cmc_sourceprogram =data.cmc_sourceprogramid;",
											"var cmc_sourceexpectedstart =data.cmc_sourceexpectedstartid;",
											"var cmc_expectedstartdate =data.cmc_expectedstartdateid;",
											"var cmc_sourceprogramlevelid =data.cmc_sourceprogramlevelid;"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"cmc_lifecycletype\":\"175490002\",\r\n\t\"cmc_campusid@odata.bind\":\"/accounts({{gaccountId4}})\",\r\n\t\"cmc_contactid@odata.bind\":\"/contacts({{gcontactid}})\",\r\n\t\"cmc_prgmid@odata.bind\":\"/opportunities({{gProgram4}})\",\r\n\t\"cmc_prgmlevelid@odata.bind\":\"/opportunities({{gprogramlevelid4}})\",\r\n\t\"cmc_expectedstartid@odata.bind\":\"/opportunities({{gacademicperiodid4}})\",\r\n\t\"cmc_sourcecategoryid@odata.bind\":\"/opportunities({{gsourcecategoryid4}})\",\r\n\t\"cmc_sourcemethodid@odata.bind\":\"/opportunities({{gsourcemethodid4}})\",\r\n\t\"cmc_srcprgmlevelid@odata.bind\":\"/opportunities({{gprogramlevelid4}})\",\r\n\t\"cmc_sourcereferringcontactid@odata.bind\":\"/contacts({{gcontactid}})\",\r\n\t\"cmc_sourceprgmid@odata.bind\":\"/opportunities({{gProgram4}})\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource}}api/data/{{Eversion}}/opportunities",
									"host": [
										"{{Eresource}}api"
									],
									"path": [
										"data",
										"{{Eversion}}",
										"opportunities"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Create Inbound Interest1",
					"item": [
						{
							"name": "Create Area of Interest",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var areaofinterestid;",
											"var areaofinterestname;",
											"",
											"pm.test(\"Create Area of Interest\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"",
											"    areaofinterestid = jsonData.mshied_areaofinterestid;",
											"    console.log(\"area of interest id : \" + areaofinterestid);",
											"",
											"    areaofinterestname = jsonData.mshied_name;",
											"    console.log(\"area of interest name : \" + areaofinterestname);",
											"",
											"});",
											"pm.globals.set('gareaofinterestid1', areaofinterestid);",
											"pm.globals.set('gareaofinterestname1', areaofinterestname);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"mshied_code\": \"{{$randomInt}}-{{$randomInt}}e1 - {{$randomInt}}\",\n    \"mshied_name\": \"{{$randomInt}}-Test-AreaOfInterest1-{{$randomInt}}\"\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}mshied_areaofinterests",
									"host": [
										"{{Eresource_URL}}mshied_areaofinterests"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Account",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var account_id; ",
											"var Accname;",
											"pm.test(\"Account Created\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    account_id = jsonData.accountid;",
											"    Accname = jsonData.name;",
											"    console.log(Accname);",
											"});",
											"",
											"var accname = data.name;",
											"var accounttype = data.mshied_accounttype;",
											"pm.globals.set('gaccountId2',account_id);",
											"pm.globals.set('gAccname1',Accname);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n \"name\":\"{{name}}na{{$randomInt}}\",\r\n \"mshied_accounttype\":\"{{mshied_accounttype}}\",\r\n \"cmc_accountcode\":\"Acc2{{$randomInt}}\",\r\n \"preferredcontactmethodcode\":1\r\n} "
								},
								"url": {
									"raw": "{{Eresource_URL}}accounts",
									"host": [
										"{{Eresource_URL}}accounts"
									]
								},
								"description": "Create Account with new Address"
							},
							"response": []
						},
						{
							"name": "Create Program Level",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var programlevelid;",
											"pm.test(\"Create Program Level\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"",
											"    programlevelid = jsonData.mshied_programlevelid;",
											"    console.log(\"programlevelid : \" + programlevelid);",
											"});",
											"pm.globals.set('gprogramlevelid2', programlevelid);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"mshied_code\": \"{{$randomInt}}-C1{{$randomInt}} {{$randomInt}}\",\n    \"mshied_name\": \"{{$randomInt}}-Test-PrgLevel2-{{$randomInt}}\"\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}mshied_programlevels",
									"host": [
										"{{Eresource_URL}}mshied_programlevels"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Source Method",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var sourcemethodid;",
											"pm.test(\"Create sourcemethod\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"",
											"    sourcemethodid = jsonData.cmc_sourcemethodid;",
											"    console.log(\"sourcemethodid : \" + sourcemethodid);",
											"});",
											"pm.globals.set('gsourcemethodid2', sourcemethodid);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n   \"cmc_sourcemethodname\": \"{{$randomInt}}-TestSoucreMethod2{{$randomInt}}\"\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_sourcemethods",
									"host": [
										"{{Eresource_URL}}cmc_sourcemethods"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create SubCategory",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var subcategory;",
											"var Accname;",
											"pm.test(\"SourceSub Category Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
											"    var jsonData = JSON.parse(responseBody);",
											"",
											"    subcategory = jsonData.cmc_sourcesubcategoryid;",
											"    console.log(\"subcategory: \",subcategory);",
											"    pm.globals.set('gsubcategoryid1', subcategory);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_sourcesubcategoryname\": \"TestSubCategory1{{$randomInt}}\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_sourcesubcategories",
									"host": [
										"{{Eresource_URL}}cmc_sourcesubcategories"
									]
								},
								"description": "Create Account with new Address"
							},
							"response": []
						},
						{
							"name": "Create Source Category",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var sourcecategoryid;",
											"pm.test(\"Create Sourcecategory\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"",
											"    sourcecategoryid = jsonData.cmc_sourcecategoryid;",
											"    console.log(\"sourcecategoryid : \" + sourcecategoryid);",
											"});",
											"pm.globals.set('gsourcecategoryid2', sourcecategoryid);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"cmc_sourcecategoryname\": \"{{$randomInt}}-TestSoucreCategor2-y{{$randomInt}}\"\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_sourcecategories",
									"host": [
										"{{Eresource_URL}}cmc_sourcecategories"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create SubCategory",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var subcategory;",
											"var Accname;",
											"pm.test(\"SourceSub Category Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
											"    var jsonData = JSON.parse(responseBody);",
											"",
											"    subcategory = jsonData.cmc_sourcesubcategoryid;",
											"    console.log(\"subcategory: \",subcategory);",
											"    pm.globals.set('gsubcategoryid1', subcategory);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_sourcesubcategoryname\": \"TestSubCategory1{{$randomInt}}\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_sourcesubcategories",
									"host": [
										"{{Eresource_URL}}cmc_sourcesubcategories"
									]
								},
								"description": "Create Account with new Address"
							},
							"response": []
						},
						{
							"name": "Create Campaign",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var campaignid;",
											"pm.test(\"Account Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    campaignid = jsonData.campaignid;",
											"    console.log(\"campaignid: \", campaignid);",
											"});",
											"pm.globals.set('g_campaignid1', campaignid);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"{{$randomInt}}-TestCampaign1-{{$randomInt}}\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}campaigns",
									"host": [
										"{{Eresource_URL}}campaigns"
									]
								},
								"description": "Create Account with new Address"
							},
							"response": []
						},
						{
							"name": "Create Inbound Interest",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var Inboundid;",
											"var Inboundname;",
											"var contactid;",
											"var accountid;",
											"var methodid;",
											"var campaign;",
											"var categoryid;",
											"var programid;",
											"var programlevelid;",
											"var expectedstartid;",
											"var comments;",
											"var subcategory;",
											"var areaofinterestid;",
											"var type;",
											"var subcategory;",
											"",
											"pm.test(\"Lead Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
											"    var jsonData = JSON.parse(responseBody);",
											"",
											"    Inboundid = jsonData.leadid;",
											"    Inboundname = jsonData.fullname;",
											"    contactid = jsonData._customerid_value;",
											"    accountid = jsonData._cmc_sourcecampusid_value;",
											"    methodid = jsonData._cmc_sourcemethodid_value;",
											"    categoryid = jsonData._cmc_sourcecategoryid_value;",
											"    programid = jsonData._cmc_sourceprgmid_value;",
											"    programlevelid = jsonData._cmc_sourceprgmlevelid_value;",
											"    expectedstartid = jsonData._cmc_expectedstartid_value;",
											"    subcategory = jsonData._cmc_sourcesubcategoryid_value;",
											"    campaign = jsonData._cmc_sourcecampaignid_value",
											"    comments = jsonData.cmc_comments;",
											"    areaofinterestid = jsonData.cmc_areaofinterestid;",
											"    type = jsonData.cmc_type;",
											"",
											"    console.log('InboundID:' + Inboundid);",
											"    console.log('InBoundName:' + Inboundname);",
											"    console.log('ExpectedstartID:' + expectedstartid);",
											"});",
											"",
											"pm.globals.set('gInboundid', Inboundid);",
											"pm.globals.set('gexpectedstartId', expectedstartid);",
											"pm.globals.set('gtype', type);",
											"setTimeout(function(){}, 25000);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const dateNow= new Date();\r",
											"pm.environment.set('currentDate', dateNow.toISOString());"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"address1_county\":\"Delhi{{$randomInt}}\",\r\n   \"address1_country\":\"India{{$randomInt}}\",\r\n   \"address1_postalcode\":\"562109{{$randomInt}}\",\r\n   \"address1_stateorprovince\":\"Karanataka{{$randomInt}}\",\r\n   \"address1_city\":\"Bengaluru{{$randomInt}}\",\r\n   \"address1_line3\":\"Street3{{$randomInt}}\",\r\n   \"address1_line2\":\"Street2{{$randomInt}}\",\r\n   \"address1_line1\":\"Street1{{$randomInt}}\",\r\n   \"jobtitle\":\"QA{{$randomInt}}\",\r\n   \"telephone1\":\"988877{{$randomInt}}\",\r\n   \"mobilephone\":\"897678{{$randomInt}}\",\r\n   \"emailaddress1\":\"{{gemailaddress1}}\",\r\n   \"lastname\":\"{{glastname}}\",\r\n   \"firstname\":\"Lead-FirstName{{$randomInt}}{{$randomInt}}\",\r\n   \"cmc_sourcedate\": \"{{currentDate}}\",\r\n    \"cmc_sourcecampusid@odata.bind\": \"/accounts({{gaccountId2}})\",\r\n    \"cmc_sourceprgmid@odata.bind\": \"/leads({{gProgram4}})\",\r\n    \"cmc_sourceprgmlevelid@odata.bind\": \"/leads({{gprogramlevelid2}})\",\r\n    \"cmc_sourcecategoryid@odata.bind\": \"/leads({{gsourcecategoryid2}})\",\r\n    \"cmc_sourcecampaignid@odata.bind\": \"/campaigns({{g_campaignid1}})\",\r\n    \"cmc_sourcemethodid@odata.bind\": \"/leads({{gsourcemethodid2}})\",\r\n    \"cmc_sourcesubcategoryid@odata.bind\": \"/cmc_sourcesubcategories({{gsubcategoryid1}})\",\r\n    \"cmc_expectedstartid@odata.bind\": \"/mshied_academicperiods({{gacademicperiodid4}})\",\r\n    \"cmc_comments\":\"I'm Interested for MCA and MBA\",\r\n    \"cmc_areaofinterestid@odata.bind\":\"/mshied_areaofinterests({{gareaofinterestid1}})\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}leads",
									"host": [
										"{{Eresource_URL}}leads"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Values from Inbound",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var parentcontactid;\r",
											"var contactid;\r",
											"var qualifyingopportunityid;\r",
											"\r",
											"var mobilephone;\r",
											"var emailaddress1;\r",
											"var address1_county;\r",
											"var campagin,sourcecampusid,areaofinterestid;\r",
											"var firstname,lastname;\r",
											"var stateorprovince,postalcode, city;\r",
											"var country,telephone1;\r",
											"var address1_country,statecode;\r",
											"var address1_line1,address1_line2,address1_line3;\r",
											"var sourcedate,expectedstartid,sourcemethodid;\r",
											"var sourcecategoryid,sourcesubcategoryid;\r",
											"var sourceprgmid,primary,sourceprgmlevelid,contacttype;\r",
											"\r",
											"pm.test(\"Fetch Values from lead\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);\r",
											"    var jsonData = JSON.parse(responseBody);\r",
											"    parentcontactid = jsonData._parentcontactid_value;\r",
											"    console.log('Parentcontactid:' + parentcontactid);\r",
											"    contactid = jsonData._customerid_value;\r",
											"    console.log('contactid:' + contactid);\r",
											"    primary = jsonData.cmc_primary;\r",
											"    console.log('primary:' + primary);\r",
											"    qualifyingopportunityid=jsonData._qualifyingopportunityid_value;\r",
											"    console.log('qualifyingopportunityid:' + qualifyingopportunityid);\r",
											"    mobilephone = jsonData.mobilephone;\r",
											"    console.log('mobilephone:' + mobilephone);\r",
											"    emailaddress1 = jsonData.emailaddress1;\r",
											"    console.log('emailaddress1:' + emailaddress1);\r",
											"    address1_county = jsonData.address1_county;\r",
											"    console.log('address1_county:' + address1_county);\r",
											"    areaofinterestid = jsonData._cmc_areaofinterestid_value;\r",
											"    console.log('areaofinterestid:' + areaofinterestid);\r",
											"    lastname = jsonData.lastname;\r",
											"    console.log('lastname:' + lastname);\r",
											"    campagin = jsonData._cmc_sourcecampaignid_value;\r",
											"    console.log('campagin:' + campagin);\r",
											"    firstname = jsonData.firstname;\r",
											"    console.log('firstname:' + firstname);\r",
											"    city = jsonData.address1_city;\r",
											"    console.log('city:' + city);\r",
											"    stateorprovince = jsonData.address1_stateorprovince;\r",
											"    console.log('stateorprovince:' + stateorprovince);\r",
											"    address1_country = jsonData.address1_country;\r",
											"    console.log('country:' + country);\r",
											"    address1_line1 = jsonData.address1_line1;\r",
											"    console.log('address1_line1:' + address1_line1);\r",
											"    address1_line2 = jsonData.address1_line2;\r",
											"    console.log('address1_line2:' + address1_line2);\r",
											"    address1_line3 = jsonData.address1_line3;\r",
											"    console.log('address1_line3:' + address1_line3);\r",
											"    telephone1 = jsonData.telephone1;\r",
											"    console.log('telephone1:' + telephone1);\r",
											"    sourcemethodid = jsonData._cmc_sourcemethodid_value;\r",
											"    console.log('sourcemethodid:' + sourcemethodid);\r",
											"    sourcedate = jsonData.cmc_sourcedate;\r",
											"    console.log('sourcedate:' + sourcedate);\r",
											"    sourcecategoryid = jsonData._cmc_sourcecategoryid_value;\r",
											"    console.log('sourcecategoryid:' + sourcecategoryid);\r",
											"    sourceprgmid = jsonData._cmc_sourceprgmid_value;\r",
											"    console.log('sourceprgmid:' + sourceprgmid);\r",
											"    sourcecampusid = jsonData._cmc_sourcecampusid_value;\r",
											"    console.log('sourcecampusid:' +sourcecampusid);\r",
											"    postalcode = jsonData.address1_postalcode;\r",
											"    console.log('postalcode:' + postalcode);\r",
											"    expectedstartid = jsonData._cmc_expectedstartid_value;\r",
											"    console.log('expectedstartid:' +expectedstartid);\r",
											"    sourcesubcategoryid = jsonData._cmc_sourcesubcategoryid_value;\r",
											"    console.log('sourcesubcategoryid:' + sourcesubcategoryid);\r",
											"    sourceprgmlevelid = jsonData._cmc_sourceprgmlevelid_value;\r",
											"    console.log('sourceprgmlevelid:' +sourceprgmlevelid); \r",
											"    contacttype = jsonData.cmc_contacttype;\r",
											"    console.log('contacttype:' +contacttype); \r",
											"    statecode = jsonData.statecode;\r",
											"    console.log('statecode:' +statecode);\r",
											"});\r",
											"\r",
											"    pm.test(\"Validate contacttype\", function () {\r",
											"    pm.expect(contacttype).to.equal(494280011);\r",
											"    });\r",
											"\r",
											"    pm.test(\"Validate Primary\", function () {\r",
											"    pm.expect(primary).to.equal(true);\r",
											"    });\r",
											"\r",
											"    pm.test(\"Validate Qualify status\", function () {\r",
											"    pm.expect(statecode).to.equal(1);\r",
											"    });\r",
											"\r",
											"pm.globals.set('gqualifyingopportunityid', qualifyingopportunityid);\r",
											"pm.globals.set('gmobilephone', mobilephone);\r",
											"pm.globals.set('gemailaddress1', emailaddress1);\r",
											"pm.globals.set('gaddress1_county', address1_county);\r",
											"pm.globals.set('glastname', lastname);\r",
											"pm.globals.set('gfirstname', firstname);\r",
											"pm.globals.set('gcity', city);\r",
											"pm.globals.set('gstateorprovince', stateorprovince);\r",
											"pm.globals.set('gcountry', country);\r",
											"pm.globals.set('gaddress1_country', address1_country);\r",
											"pm.globals.set('gaddress1_line1', address1_line1);\r",
											"pm.globals.set('gaddress1_line2', address1_line2);\r",
											"pm.globals.set('gaddress1_line3', address1_line3);\r",
											"pm.globals.set('gtelephone1', telephone1);\r",
											"pm.globals.set('gsourcedate', sourcedate);\r",
											"pm.globals.set('gpostalcode', postalcode);\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Prefer",
										"value": "return=representation",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Eresource_URL}}leads({{gInboundid}})",
									"host": [
										"{{Eresource_URL}}leads({{gInboundid}})"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Details from Contact",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var concustomerid;",
											"var concampusid;",
											"var conmethodid;",
											"var concategoryid;",
											"var conprogramid;",
											"var conprogramlevelid;",
											"var conexpectedstartid;",
											"var consubsourcecategoryid; ",
											"var concampaign,conlastname;",
											"var originatinginboundinterest;",
											"var conmobilephone,conemailaddress1;",
											"var conaddress1_county,conaddress1_country,confirstname;",
											"var conaddress1_city,constateorprovince;",
											"var conaddress1_line1,conaddress1_line2,conaddress1_line3;",
											"var contelephone1,consourcedate,conpostalcode,contacttype;",
											"",
											"var leadcustomerid = pm.globals.get(\"gcontactid\");",
											"var leadcampusid = pm.globals.get(\"gaccountId2\");",
											"var leadmethodid = pm.globals.get(\"gsourcemethodid2\");",
											"var leadcategoryid = pm.globals.get(\"gsourcecategoryid2\");",
											"var leadprogramid = pm.globals.get(\"gProgram4\");",
											"var leadprogramlevelid = pm.globals.get(\"gprogramlevelid2\");",
											"var leadexpectedstartid = pm.globals.get(\"gexpectedstartId\");",
											"var leadsubsourcecategoryid = pm.globals.get(\"gsubcategoryid1\");",
											"var leadcampaign = pm.globals.get(\"g_campaignid1\");",
											"var inboundid = pm.globals.get(\"gInboundid\");",
											"var mobilephone = pm.globals.get(\"gmobilephone\");",
											"var emailaddress1 = pm.globals.get(\"gemailaddress1\");",
											"var address1_county = pm.globals.get(\"gaddress1_county\");",
											"var address1_country = pm.globals.get(\"gaddress1_country\");",
											"var lastname = pm.globals.get(\"glastname\");",
											"var firstname = pm.globals.get(\"gfirstname\");",
											"var city = pm.globals.get(\"gcity\");",
											"var stateorprovince = pm.globals.get(\"gstateorprovince\");",
											"var address1_line1 = pm.globals.get(\"gaddress1_line1\");",
											"var address1_line2 = pm.globals.get(\"gaddress1_line2\");",
											"var address1_line3 = pm.globals.get(\"gaddress1_line3\");",
											"var telephone1 = pm.globals.get(\"gtelephone1\");",
											"var sourcedate = pm.globals.get(\"gsourcedate\");",
											"var postalcode = pm.globals.get(\"gpostalcode\");",
											"",
											"pm.test(\"Copied Fields values\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
											"    var jsonData = JSON.parse(responseBody);",
											"",
											"    concustomerid = jsonData.contactid;",
											"    console.log('concustomerid: ' + concustomerid);",
											"",
											"    concampusid = jsonData._cmc_sourcecampusid_value;",
											"    console.log('leadcampusid: ' + concampusid);",
											"",
											"    conprogramid = jsonData._cmc_srcprogramid_value;",
											"    console.log('leadprogramid: ' + conprogramid);",
											"",
											"     conprogramlevelid = jsonData._cmc_srcpogramlevelid_value;",
											"    console.log('leadprogramlevelid: ' + conprogramlevelid);",
											"",
											"    conexpectedstartid = jsonData._cmc_expectedstartid_value;",
											"    console.log('leadexpectedstartid: ' + conexpectedstartid);",
											"",
											"    conmethodid = jsonData._cmc_sourcemethodid_value;",
											"    console.log('conmethodid: ' + conmethodid);",
											"",
											"    concategoryid = jsonData._cmc_sourcecategoryid_value;",
											"    console.log('concategoryid: ' + concategoryid);",
											"",
											"    consubsourcecategoryid = jsonData._cmc_sourcesubcategoryid_value;",
											"    console.log('Consubsourcecategoryid: ' + consubsourcecategoryid);",
											"",
											"    concampaign = jsonData._cmc_sourcecampaignid_value;",
											"    console.log('concampaign: ' + concampaign);",
											"",
											"    originatinginboundinterest = jsonData._cmc_originatinginboundinterest_value;",
											"    console.log('originatinginboundinterest: ' + originatinginboundinterest);",
											"",
											"    conmobilephone = jsonData.mobilephone;",
											"    console.log('conmobilephone: ' + mobilephone);",
											"",
											"    conemailaddress1 = jsonData.emailaddress1;",
											"    console.log('conemailaddress1: ' + emailaddress1);",
											"",
											"    conaddress1_county = jsonData.address1_county;",
											"    console.log('conaddress1_county: ' + conaddress1_county);",
											"",
											"    conaddress1_country = jsonData.address1_country;",
											"    console.log('conaddress1_country: ' + conaddress1_country);",
											"     ",
											"    conlastname = jsonData.lastname;",
											"    console.log('conlastname: ' + conlastname);",
											"",
											"    confirstname = jsonData.firstname;",
											"    console.log('confirstname: ' + confirstname);",
											"",
											"    conaddress1_city = jsonData.address1_city;",
											"    console.log('conaddress1_city: ' + conaddress1_city);",
											"",
											"    constateorprovince = jsonData.address1_stateorprovince;",
											"    console.log('constateorprovince: ' + constateorprovince);",
											"     ",
											"    conaddress1_line1 = jsonData.address1_line1;",
											"    console.log('conaddress1_line1: ' + conaddress1_line1);",
											"",
											"    conaddress1_line2 = jsonData.address1_line2;",
											"    console.log('conaddress1_line2: ' + conaddress1_line2);",
											"",
											"    conaddress1_line3 = jsonData.address1_line3;",
											"    console.log('conaddress1_line3: ' + conaddress1_line3);",
											"     ",
											"    contelephone1 = jsonData.telephone1;",
											"    console.log('contelephone1: ' + contelephone1);",
											"",
											"    consourcedate = jsonData.cmc_sourcedate;",
											"    console.log('consourcedate: ' + consourcedate);",
											"",
											"    conpostalcode = jsonData.address1_postalcode;",
											"    console.log('conpostalcode: ' + conpostalcode);",
											"",
											"    //append student contact type",
											"     contacttype = jsonData.mshied_contacttype;",
											"     console.log('contacttype: ' + contacttype);",
											"",
											"      pm.test(\"Validate contacttype\", function () {",
											"        pm.expect(contacttype).to.equal('494280002,494280006,494280011');",
											"    });",
											"",
											"    pm.test(\"Validate method\", function () {",
											"        pm.expect(conmethodid).to.equal(leadmethodid);",
											"    });",
											"",
											"    pm.test(\"Validate mobilephone\", function () {",
											"        pm.expect(conmobilephone).not.equal(mobilephone);",
											"    });",
											"    ",
											"    pm.test(\"Validate emailaddress1\", function () {",
											"        pm.expect(conemailaddress1).to.equal(emailaddress1);",
											"    });",
											"    ",
											"    pm.test(\"Validate address1_county\", function () {",
											"         pm.expect(conaddress1_county).not.equal(address1_county);",
											"    });",
											"",
											"    pm.test(\"Validate address1_country\", function () {",
											"        pm.expect(conaddress1_country).not.equal(address1_country);",
											"    });",
											"",
											"    pm.test(\"Validate lastname\", function () {",
											"        pm.expect(conlastname).to.equal(lastname);",
											"    });",
											"",
											"    pm.test(\"Validate firstname\", function () {",
											"        pm.expect(confirstname).not.equal(firstname);",
											"    });",
											"",
											"    pm.test(\"Validate city\", function () {",
											"        pm.expect(conaddress1_city).not.equal(city);",
											"    });",
											"",
											"    pm.test(\"Validate stateorprovince\", function () {",
											"        pm.expect(constateorprovince).not.equal(stateorprovince);",
											"    });",
											"",
											"    pm.test(\"Validate address1_line1\", function () {",
											"        pm.expect(conaddress1_line1).not.equal(address1_line1);",
											"    });",
											"",
											"    pm.test(\"Validate address1_line2\", function () {",
											"        pm.expect(conaddress1_line2).not.equal(address1_line2);",
											"    });",
											"",
											"   pm.test(\"Validate address1_line3\", function () {",
											"        pm.expect(conaddress1_line3).not.equal(address1_line3);",
											"   });",
											"   ",
											"   pm.test(\"Validate telephone1\", function () {",
											"        pm.expect(contelephone1).not.equal(telephone1);",
											"   });",
											"   ",
											"   pm.test(\"Validate sourcedate\", function () {",
											"        pm.expect(consourcedate).to.equal(sourcedate);",
											"   });",
											"",
											"   pm.test(\"Validate postalcode\", function () {",
											"        pm.expect(conpostalcode).not.equal(postalcode);",
											"   });",
											"",
											"     pm.test(\"Validate Campus\", function () {",
											"        pm.expect(concampusid).to.equal(leadcampusid);",
											"     });",
											"",
											"     pm.test(\"Validate ProgramLevel\", function () {",
											"        pm.expect(conprogramlevelid).to.equal(leadprogramlevelid);",
											"     });",
											"",
											"     pm.test(\"Validate ExpectedStartDate\", function () {",
											"         pm.expect(conexpectedstartid).to.equal(leadexpectedstartid);",
											"     });",
											"",
											"      pm.test(\"Validate Program\", function () {",
											"         pm.expect(conprogramid).to.equal(leadprogramid);",
											"     });",
											"",
											"    pm.test(\"Validate Category\", function () {",
											"        pm.expect(concategoryid).to.equal(leadcategoryid);",
											"    });",
											"",
											"    pm.test(\"Validate Subcategory\", function () {",
											"        pm.expect(consubsourcecategoryid).to.equal(leadsubsourcecategoryid);",
											"    });",
											"",
											"    pm.test(\"Validate Campaign\", function () {",
											"        pm.expect(concampaign).to.equal(leadcampaign);",
											"    });",
											"",
											"    pm.test(\"Validate originatinginboundinterest\", function () {",
											"        pm.expect(inboundid).to.equal(originatinginboundinterest);",
											"    });",
											"",
											"",
											"    if (conmethodid === leadmethodid && concategoryid === leadcategoryid && consubsourcecategoryid === leadsubsourcecategoryid && concampaign === leadcampaign && inboundid === originatinginboundinterest) {",
											"        console.log('Initial Source Field Copied');",
											"    }",
											"    else {",
											"        console.log('Initial Source Field NOT Copied');",
											"    }",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{Eresource_URL}}contacts({{gcontactid}})",
									"host": [
										"{{Eresource_URL}}contacts({{gcontactid}})"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Scenario 3 type-Undergraduate Admissions",
			"item": [
				{
					"name": "Create Contact2",
					"item": [
						{
							"name": "Create Academic period3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var academicperiodid;",
											"var academicperiodname;",
											"",
											"pm.test(\"Academicperiodid Created\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202,204]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    academicperiodid = jsonData.mshied_academicperiodid;",
											"    academicperiodname = jsonData.mshied_name;",
											"    console.log('academicperiodname: '+academicperiodname);",
											" ",
											"});",
											"pm.globals.set('gacademicperiodid6',academicperiodid);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var moment = require('moment');\r",
											"pm.environment.set(\"timestamp\", moment().add(1, 'days').format(\"YYYY-MM-DD\"));\r",
											"pm.environment.set(\"timestampEndDate\", moment().add(102, 'days').format(\"YYYY-MM-DD\"));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"mshied_name\": \"{{cmc_academicperiodname}}Inbound23{{$randomInt}}\",\r\n    \"mshied_startdate\": \"{{timestamp}}\",\r\n    \"mshied_enddate\": \"{{timestampEndDate}}\",\r\n    \"mshied_code\": \"{{$randomInt}}In77{{$randomInt}}dd{{$randomInt}}\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}mshied_academicperiods",
									"host": [
										"{{Eresource_URL}}mshied_academicperiods"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Account3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var account_id; ",
											"var Accname;",
											"pm.test(\"Account Created\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    account_id = jsonData.accountid;",
											"    Accname = jsonData.name;",
											"    console.log(Accname);",
											"    ",
											"});",
											"var accname = data.name;",
											"var accounttype = data.mshied_accounttype;",
											"pm.globals.set('gaccountId6',account_id);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"{{name}}{{$randomInt}}\",\r\n    \"mshied_accounttype\": \"{{mshied_accounttype}}\",\r\n    \"cmc_accountcode\": \"Acc{{$randomInt}}\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}accounts",
									"host": [
										"{{Eresource_URL}}accounts"
									]
								},
								"description": "Create Account with new Address"
							},
							"response": []
						},
						{
							"name": "Create Campaign3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var campaignid;",
											"pm.test(\"Account Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    campaignid = jsonData.campaignid;",
											"    console.log(\"campaignid: \", campaignid);",
											"});",
											"pm.globals.set('g_campaignid6', campaignid);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"{{$randomInt}}-TestCampaign-{{$randomInt}}\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}campaigns",
									"host": [
										"{{Eresource_URL}}campaigns"
									]
								},
								"description": "Create Account with new Address"
							},
							"response": []
						},
						{
							"name": "Create Source Category3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var sourcecategoryid;",
											"pm.test(\"Create Sourcecategory\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"",
											"    sourcecategoryid = jsonData.cmc_sourcecategoryid;",
											"    console.log(\"sourcecategoryid : \" + sourcecategoryid);",
											"});",
											"pm.globals.set('gsourcecategoryid6', sourcecategoryid);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"cmc_sourcecategoryname\": \"{{$randomInt}}-TestSoucreCategor-y{{$randomInt}}\"\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_sourcecategories",
									"host": [
										"{{Eresource_URL}}cmc_sourcecategories"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create SubCategory3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var subcategory;",
											"var Accname;",
											"pm.test(\"SourceSub Category Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
											"    var jsonData = JSON.parse(responseBody);",
											"",
											"    subcategory = jsonData.cmc_sourcesubcategoryid;",
											"    console.log(\"subcategory: \",subcategory);",
											"    pm.globals.set('gsubcategoryid6', subcategory);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_sourcesubcategoryname\": \"TestSubCategory{{$randomInt}}\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_sourcesubcategories",
									"host": [
										"{{Eresource_URL}}cmc_sourcesubcategories"
									]
								},
								"description": "Create Account with new Address"
							},
							"response": []
						},
						{
							"name": "Create Program3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var programid;",
											"var programname;",
											"pm.test(\"Get Program\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"",
											"    programid = jsonData.mshied_programid;",
											"    programname = jsonData.mshied_name;",
											"    console.log(\"Program ID: \" + programid);",
											"    console.log(\"Program Name: \" + programname);",
											"});",
											"pm.globals.set('gProgram6', programid);",
											"pm.globals.set('gProgramName6', programname);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"mshied_code\": \"{{$randomInt}}Prg1{{$randomInt}}{{$randomInt}}\",\n    \"mshied_name\": \"code4{{$randomInt}}\"\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}mshied_programs",
									"host": [
										"{{Eresource_URL}}mshied_programs"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Source Method3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var sourcemethodid;",
											"var sourcemethodname;",
											"pm.test(\"Create sourcemethod\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"",
											"    sourcemethodid = jsonData.cmc_sourcemethodid;",
											"    console.log(\"sourcemethodid : \" + sourcemethodid);",
											"",
											"    sourcemethodname = jsonData.cmc_sourcemethodname;",
											"    console.log(\"sourcemethodname : \" + sourcemethodname);",
											"});",
											"pm.globals.set('gsourcemethodid6', sourcemethodid);",
											"pm.globals.set('gsourcemethodname6', sourcemethodname);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n   \"cmc_sourcemethodname\": \"{{$randomInt}}-TestSoucreMethod{{$randomInt}}\"\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_sourcemethods",
									"host": [
										"{{Eresource_URL}}cmc_sourcemethods"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Role/Title3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var titleid;",
											"pm.test(\"Create title\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"",
											"    titleid = jsonData.cmc_titleid;",
											"    console.log(\"titleid : \" + titleid);",
											"});",
											"pm.globals.set('gtitleid6', titleid);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n   \"cmc_titlename\": \"{{$randomInt}}-Test-Title-{{$randomInt}}\"\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_titles",
									"host": [
										"{{Eresource_URL}}cmc_titles"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Program Level3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var programlevelid;",
											"pm.test(\"Create Sourcecategory\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"",
											"    programlevelid = jsonData.mshied_programlevelid;",
											"    console.log(\"programlevelid : \" + programlevelid);",
											"});",
											"pm.globals.set('gprogramlevelid6', programlevelid);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"mshied_code\": \"{{$randomInt}}-Code{{$randomInt}}{{$randomInt}}\",\n    \"mshied_name\": \"{{$randomInt}}-Test-PrgLevel-{{$randomInt}}\"\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}mshied_programlevels",
									"host": [
										"{{Eresource_URL}}mshied_programlevels"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Education Level3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var educationlevelid;",
											"pm.test(\"Create educationlevelid\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"",
											"    educationlevelid = jsonData.mshied_educationlevelid;",
											"    console.log(\"educationlevelid : \" + educationlevelid);",
											"});",
											"pm.globals.set('geducationlevelid6', educationlevelid);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"mshied_code\": \"{{$randomInt}}-Code{{$randomInt}}{{$randomInt}}\",\n    \"mshied_name\": \"{{$randomInt}}-Test-EduLevel-{{$randomInt}}\"\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}mshied_educationlevels",
									"host": [
										"{{Eresource_URL}}mshied_educationlevels"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Area of Interest3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var areaofinterestid;",
											"var areaofinterestname;",
											"",
											"pm.test(\"Create Area of Interest\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"",
											"    areaofinterestid = jsonData.mshied_areaofinterestid;",
											"    console.log(\"area of interest id : \" + areaofinterestid);",
											"",
											"    areaofinterestname = jsonData.mshied_name;",
											"    console.log(\"area of interest name : \" + areaofinterestname);",
											"",
											"});",
											"pm.globals.set('gareaofinterestid6', areaofinterestid);",
											"pm.globals.set('gareaofinterestname6', areaofinterestname);",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"mshied_code\": \"{{$randomInt}}-Code{{$randomInt}}{{$randomInt}}\",\n    \"mshied_name\": \"{{$randomInt}}-Test-AreaOfInterest-{{$randomInt}}\"\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}mshied_areaofinterests",
									"host": [
										"{{Eresource_URL}}mshied_areaofinterests"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Contact",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var contact_id;",
											"var Name;",
											"var campusid;",
											"var sourcemethodid;",
											"var programid;",
											"var programlevelid;",
											"var expectedstartid;",
											"var methodid;",
											"var categoryid;",
											"var subcategory;",
											"var campaign;",
											"",
											"pm.test(\"Contact Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    contact_id = jsonData.contactid;",
											"    Name = jsonData.fullname;",
											"    campusid = jsonData._cmc_sourcecampusid_value;",
											"    sourcemethodid = jsonData._cmc_sourcemethodid_value;",
											"    programid = jsonData._cmc_srcprogramid_value;",
											"    programlevelid = jsonData._cmc_srcpogramlevelid_value;",
											"    expectedstartid = jsonData._cmc_expectedstartid_value;",
											"    methodid = jsonData._cmc_sourcemethodid_value;",
											"    categoryid = jsonData._cmc_sourcecategoryid_value;",
											"    subcategory = jsonData._cmc_sourcesubcategoryid_value;",
											"    campaign = jsonData._cmc_sourcecampaignid_value;",
											"    console.log('Contact fullname: ' + Name);",
											"    console.log('campusid: ' + campusid);",
											"});",
											"",
											"var firstname = data.firstname;",
											"var lastname = data.lastname;",
											"var emailaddress1 = data.emailaddress1;",
											"var numberofchildren = data.numberofchildren;",
											"var recentsat = data.cmc_recentsat;",
											"var recentact = data.cmc_recentact;",
											"var mshied_contacttype = data.mshied_contacttype;",
											"var race = data.mshied_race;",
											"var ethnicgroup = data.mshied_ethnicgroup;",
											"var miltarystatus = data.mshied_miltarystatus;",
											"var shippingmethodcode = data.shippingmethodcode;",
											"var preferredcontactmethodcode = data.preferredcontactmethodcode;",
											"var nationality = data.mshied_nationality;",
											"var gendercode = data.gendercode;",
											"",
											"pm.globals.set('gcontactid2', contact_id);",
											"pm.globals.set('gexpectedstartid2', expectedstartid);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var moment = require('moment');\r",
											"pm.environment.set(\"timestamp\", moment().add(1, 'days').format(\"YYYY-MM-DD\"));\r",
											"pm.environment.set(\"timestampEndDate\", moment().add(100, 'days').format(\"YYYY-MM-DD\"));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									},
									{
										"key": "OData-Version",
										"value": "4.0"
									},
									{
										"key": "OData-MaxVersion",
										"value": "4.0"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "",
										"value": "",
										"type": "text",
										"disabled": true
									},
									{
										"key": "",
										"value": "",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"firstname\": \"{{firstname}}{{$randomInt}}\",\r\n    \"lastname\": \"{{lastname}}{{$randomInt}}\",\r\n    \"middlename\": \"mid{{$randomInt}}\",\r\n    \"mshied_maidenname\": \"maid{{$randomInt}}\",\r\n    \"mshied_legacy\": \"true\",\r\n    \"emailaddress1\": \"{{$randomInt}}{{emailaddress1}}\",\r\n    \"gendercode\": \"{{gendercode}}\",\r\n    \"anniversary\": \"{{timestamp}}\",\r\n    \"lastonholdtime\": \"{{timestamp}}\",\r\n    \"numberofchildren\": \"{{numberofchildren}}\",\r\n    \"nickname\": \"Nickname{{$randomInt}}\",\r\n    \"familystatuscode\": 2,\r\n    \"cmc_sourcedate\": \"{{timestamp}}\",\r\n    \"cmc_recentsat\": \"{{cmc_recentsat}}\",\r\n    \"cmc_recentact\": \"{{cmc_recentact}}\",\r\n    \"mshied_contacttype\": \"494280002,494280006\",\r\n    \"cmc_sourcecategoryid@odata.bind\": \"/contacts({{gsourcecategoryid6}})\",\r\n    \"cmc_sourcesubcategoryid@odata.bind\": \"/cmc_sourcesubcategories({{gsubcategoryid6}})\",\r\n    \"cmc_sourcecampaignid@odata.bind\": \"/campaigns({{g_campaignid6}})\",\r\n    \"cmc_sourcemethodid@odata.bind\": \"/contacts({{gsourcemethodid6}})\",\r\n    \"cmc_titleid@odata.bind\": \"/contacts({{gtitleid6}})\",\r\n    \"cmc_srcpogramlevelid@odata.bind\": \"/contacts({{gprogramlevelid6}})\",\r\n    \"cmc_srcprogramid@odata.bind\": \"/contacts({{gProgram6}})\",\r\n    \"cmc_educationlevelid@odata.bind\": \"/contacts({{geducationlevelid6}})\",\r\n    \"mshied_CurrentProgramLevelId@odata.bind\": \"/contacts({{gprogramlevelid6}})\",\r\n    \"mshied_CurrentProgramId@odata.bind\": \"/contacts({{gProgram6}})\",\r\n    \"mshied_CurrentAcademicPeriodId@odata.bind\": \"/mshied_academicperiods({{gacademicperiodid6}})\",\r\n    \"cmc_expectedstartid@odata.bind\": \"/mshied_academicperiods({{gacademicperiodid6}})\",\r\n    \"fax\": \"78865{{$randomInt}}30\",\r\n    \"cmc_phone2extension\": \"8083{{$randomInt}}569\",\r\n    \"websiteurl\": \"www.dcrm{{$randomInt}}.com\",\r\n    \"cmc_sourcecampusid@odata.bind\": \"/accounts({{gaccountId6}})\",\r\n    \"address1_county\":\"Delhi{{$randomInt}}\",\r\n    \"address1_country\":\"India{{$randomInt}}\",\r\n    \"address1_postalcode\":\"562109{{$randomInt}}\",\r\n    \"address1_stateorprovince\":\"Karanataka{{$randomInt}}\",\r\n    \"address1_city\":\"Bengaluru{{$randomInt}}\",\r\n    \"address1_line3\":\"Street3{{$randomInt}}\",\r\n    \"address1_line2\":\"Street2{{$randomInt}}\",\r\n    \"address1_line1\":\"Street1{{$randomInt}}\",\r\n    \"jobtitle\":\"QA{{$randomInt}}\",\r\n    \"telephone1\":\"988877{{$randomInt}}\",\r\n    \"mobilephone\":\"897678{{$randomInt}}\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}contacts",
									"host": [
										"{{Eresource_URL}}contacts"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get values from contact",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var lastname,contacttype ;",
											"var emailaddress1, programid,expectedstartid;",
											"",
											"pm.test(\"Fetching details from contact \", function()",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    lastname=jsonData.lastname;",
											"    console.log(\"lastname : \"+lastname);",
											"    emailaddress1=jsonData.emailaddress1;",
											"    console.log(\"emailaddress1 : \"+emailaddress1);",
											"    programid=jsonData._cmc_srcprogramid_value;",
											"    console.log(\"programid : \"+programid);",
											"    expectedstartid=jsonData._cmc_expectedstartid_value;",
											"    console.log(\"expectedstartid : \"+expectedstartid);",
											"    contacttype=jsonData.mshied_contacttype;",
											"    console.log(\"contacttype : \"+contacttype);",
											"});",
											"pm.globals.set('glastname6', lastname);",
											"pm.globals.set('gemailaddress6', emailaddress1);",
											"setTimeout(function(){}, 20000);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{Eresource_URL}}contacts({{gcontactid2}})",
									"host": [
										"{{Eresource_URL}}contacts({{gcontactid2}})"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Create Inbound Interest2",
					"item": [
						{
							"name": "Create Area of Interest3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var areaofinterestid;",
											"var areaofinterestname;",
											"",
											"pm.test(\"Create Area of Interest\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"",
											"    areaofinterestid = jsonData.mshied_areaofinterestid;",
											"    console.log(\"area of interest id : \" + areaofinterestid);",
											"",
											"    areaofinterestname = jsonData.mshied_name;",
											"    console.log(\"area of interest name : \" + areaofinterestname);",
											"",
											"});",
											"pm.globals.set('gareaofinterestid5', areaofinterestid);",
											"pm.globals.set('gareaofinterestname5', areaofinterestname);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"mshied_code\": \"{{$randomInt}}-{{$randomInt}}e1 - {{$randomInt}}\",\n    \"mshied_name\": \"{{$randomInt}}-Test-AreaOfInterest1-{{$randomInt}}\"\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}mshied_areaofinterests",
									"host": [
										"{{Eresource_URL}}mshied_areaofinterests"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Account3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var account_id; ",
											"var Accname;",
											"pm.test(\"Account Created\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    account_id = jsonData.accountid;",
											"    Accname = jsonData.name;",
											"    console.log(Accname);",
											"});",
											"",
											"var accname = data.name;",
											"var accounttype = data.mshied_accounttype;",
											"pm.globals.set('gaccountId5',account_id);",
											"pm.globals.set('gAccname5',Accname);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n \"name\":\"{{name}}na{{$randomInt}}\",\r\n \"mshied_accounttype\":\"{{mshied_accounttype}}\",\r\n \"cmc_accountcode\":\"Acc2{{$randomInt}}\",\r\n \"preferredcontactmethodcode\":1\r\n} "
								},
								"url": {
									"raw": "{{Eresource_URL}}accounts",
									"host": [
										"{{Eresource_URL}}accounts"
									]
								},
								"description": "Create Account with new Address"
							},
							"response": []
						},
						{
							"name": "Create Program Level3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var programlevelid;",
											"pm.test(\"Create Program Level\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"",
											"    programlevelid = jsonData.mshied_programlevelid;",
											"    console.log(\"programlevelid : \" + programlevelid);",
											"});",
											"pm.globals.set('gprogramlevelid5', programlevelid);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"mshied_code\": \"{{$randomInt}}-C1{{$randomInt}} {{$randomInt}}\",\n    \"mshied_name\": \"{{$randomInt}}-Test-PrgLevel2-{{$randomInt}}\"\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}mshied_programlevels",
									"host": [
										"{{Eresource_URL}}mshied_programlevels"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Source Method3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var sourcemethodid;",
											"pm.test(\"Create sourcemethod\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"",
											"    sourcemethodid = jsonData.cmc_sourcemethodid;",
											"    console.log(\"sourcemethodid : \" + sourcemethodid);",
											"});",
											"pm.globals.set('gsourcemethodid5', sourcemethodid);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n   \"cmc_sourcemethodname\": \"{{$randomInt}}-TestSoucreMethod2{{$randomInt}}\"\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_sourcemethods",
									"host": [
										"{{Eresource_URL}}cmc_sourcemethods"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create SubCategory3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var subcategory;",
											"var Accname;",
											"pm.test(\"SourceSub Category Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
											"    var jsonData = JSON.parse(responseBody);",
											"",
											"    subcategory = jsonData.cmc_sourcesubcategoryid;",
											"    console.log(\"subcategory: \",subcategory);",
											"    pm.globals.set('gsubcategoryid5', subcategory);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_sourcesubcategoryname\": \"TestSubCategory1{{$randomInt}}\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_sourcesubcategories",
									"host": [
										"{{Eresource_URL}}cmc_sourcesubcategories"
									]
								},
								"description": "Create Account with new Address"
							},
							"response": []
						},
						{
							"name": "Create Source Category3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var sourcecategoryid;",
											"pm.test(\"Create Sourcecategory\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"",
											"    sourcecategoryid = jsonData.cmc_sourcecategoryid;",
											"    console.log(\"sourcecategoryid : \" + sourcecategoryid);",
											"});",
											"pm.globals.set('gsourcecategoryid5', sourcecategoryid);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"cmc_sourcecategoryname\": \"{{$randomInt}}-TestSoucreCategor2-y{{$randomInt}}\"\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_sourcecategories",
									"host": [
										"{{Eresource_URL}}cmc_sourcecategories"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Academic period3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var academicperiodid;",
											"var apname;",
											"var code;",
											"",
											"pm.test(\"Academicperiodid Created\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202,204]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    academicperiodid = jsonData.mshied_academicperiodid;",
											"    apname = jsonData.mshied_name;",
											"    code = jsonData.mshied_code;",
											" ",
											"});",
											"",
											"pm.globals.set('gacademicperiodid5',academicperiodid);",
											"pm.globals.set('gacademicperiodname5',apname);",
											"pm.globals.set('gacademicperiodcode5',code);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var moment = require('moment');\r",
											"pm.environment.set(\"timestamp\", moment().add(1, 'days').format(\"YYYY-MM-DD\"));\r",
											"pm.environment.set(\"timestampEndDate\", moment().add(100, 'days').format(\"YYYY-MM-DD\"));\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"mshied_name\":\"{{cmc_academicperiodname}}{{$randomInt}}\",\r\n\t\"mshied_startdate\":\"{{timestamp}}\",\r\n\t\"mshied_enddate\":\"{{timestampEndDate}}\",\r\n\t\"mshied_code\":\"{{$randomInt}}{{cmc_code}}LH{{$randomInt}}\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource}}api/data/{{Eversion}}/mshied_academicperiods",
									"host": [
										"{{Eresource}}api"
									],
									"path": [
										"data",
										"{{Eversion}}",
										"mshied_academicperiods"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create SubCategory3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var subcategory;",
											"var Accname;",
											"pm.test(\"SourceSub Category Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
											"    var jsonData = JSON.parse(responseBody);",
											"",
											"    subcategory = jsonData.cmc_sourcesubcategoryid;",
											"    console.log(\"subcategory: \",subcategory);",
											"    pm.globals.set('gsubcategoryid5', subcategory);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_sourcesubcategoryname\": \"TestSubCategory1{{$randomInt}}\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_sourcesubcategories",
									"host": [
										"{{Eresource_URL}}cmc_sourcesubcategories"
									]
								},
								"description": "Create Account with new Address"
							},
							"response": []
						},
						{
							"name": "Create Program3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var programid;",
											"var programname;",
											"pm.test(\"Get Program\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"",
											"    programid = jsonData.mshied_programid;",
											"    programname = jsonData.mshied_name;",
											"    console.log(\"Program ID: \" + programid);",
											"    console.log(\"Program Name: \" + programname);",
											"});",
											"pm.globals.set('gProgram5', programid);",
											"pm.globals.set('gProgramName5', programname);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"mshied_code\": \"{{$randomInt}}Pr{{$randomInt}}rg1{{$randomInt}}\",\n    \"mshied_name\": \"code{{$randomInt}}\"\n}\n"
								},
								"url": {
									"raw": "{{Eresource_URL}}mshied_programs",
									"host": [
										"{{Eresource_URL}}mshied_programs"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Campaign3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var campaignid;",
											"pm.test(\"Account Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    campaignid = jsonData.campaignid;",
											"    console.log(\"campaignid: \", campaignid);",
											"});",
											"pm.globals.set('g_campaignid5', campaignid);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"{{$randomInt}}-TestCampaign1-{{$randomInt}}\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}campaigns",
									"host": [
										"{{Eresource_URL}}campaigns"
									]
								},
								"description": "Create Account with new Address"
							},
							"response": []
						},
						{
							"name": "Create Inbound Interest",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var Inboundid;",
											"var Inboundname;",
											"var contactid;",
											"var accountid;",
											"var methodid;",
											"var campaign;",
											"var categoryid;",
											"var programid;",
											"var programlevelid;",
											"var expectedstartid;",
											"var comments;",
											"var subcategory;",
											"var areaofinterestid;",
											"var type;",
											"var subcategory;",
											"",
											"pm.test(\"Lead Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    Inboundid = jsonData.leadid;",
											"    Inboundname = jsonData.fullname;",
											"    contactid = jsonData._customerid_value;",
											"    accountid = jsonData._cmc_sourcecampusid_value;",
											"    methodid = jsonData._cmc_sourcemethodid_value;",
											"    categoryid = jsonData._cmc_sourcecategoryid_value;",
											"    programid = jsonData._cmc_sourceprgmid_value;",
											"    programlevelid = jsonData._cmc_sourceprgmlevelid_value;",
											"    expectedstartid = jsonData._cmc_expectedstartid_value;",
											"    subcategory = jsonData._cmc_sourcesubcategoryid_value;",
											"    campaign = jsonData._cmc_sourcecampaignid_value",
											"    comments = jsonData.cmc_comments;",
											"    areaofinterestid = jsonData.cmc_areaofinterestid;",
											"    type = jsonData.cmc_type;",
											"",
											"    console.log('InboundID:' + Inboundid);",
											"    console.log('InBoundName:' + Inboundname);",
											"    console.log('ExpectedstartID:' + expectedstartid);",
											"});",
											"",
											"pm.globals.set('gInboundid2', Inboundid);",
											"pm.globals.set('gexpectedstartId2', expectedstartid);",
											"pm.globals.set('gtype2', type);",
											"setTimeout(function(){}, 25000);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const dateNow= new Date();\r",
											"pm.environment.set('currentDate', dateNow.toISOString());"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"address1_county\":\"Delhi{{$randomInt}}\",\r\n   \"address1_country\":\"India{{$randomInt}}\",\r\n   \"address1_postalcode\":\"562109{{$randomInt}}\",\r\n   \"address1_stateorprovince\":\"Karanataka{{$randomInt}}\",\r\n   \"address1_city\":\"Bengaluru{{$randomInt}}\",\r\n   \"address1_line3\":\"Street3{{$randomInt}}\",\r\n   \"address1_line2\":\"Street2{{$randomInt}}\",\r\n   \"address1_line1\":\"Street1{{$randomInt}}\",\r\n   \"jobtitle\":\"QA{{$randomInt}}\",\r\n   \"telephone1\":\"988877{{$randomInt}}\",\r\n   \"mobilephone\":\"897678{{$randomInt}}\",\r\n   \"emailaddress1\":\"{{gemailaddress6}}\",\r\n   \"lastname\":\"{{glastname6}}\",\r\n   \"firstname\":\"Lead-FirstNameInbound{{$randomInt}}{{$randomInt}}\",\r\n   \"cmc_sourcedate\": \"{{currentDate}}\",\r\n    \"cmc_sourcecampusid@odata.bind\": \"/accounts({{gaccountId5}})\",\r\n    \"cmc_sourceprgmid@odata.bind\": \"/leads({{gProgram5}})\",\r\n    \"cmc_sourceprgmlevelid@odata.bind\": \"/leads({{gprogramlevelid5}})\",\r\n    \"cmc_sourcecategoryid@odata.bind\": \"/leads({{gsourcecategoryid5}})\",\r\n    \"cmc_sourcecampaignid@odata.bind\": \"/campaigns({{g_campaignid5}})\",\r\n    \"cmc_sourcemethodid@odata.bind\": \"/leads({{gsourcemethodid5}})\",\r\n    \"cmc_sourcesubcategoryid@odata.bind\": \"/cmc_sourcesubcategories({{gsubcategoryid5}})\",\r\n    \"cmc_expectedstartid@odata.bind\": \"/mshied_academicperiods({{gacademicperiodid5}})\",\r\n    \"cmc_comments\":\"I'm Interested for MCA and MBA\",\r\n    \"cmc_areaofinterestid@odata.bind\":\"/mshied_areaofinterests({{gareaofinterestid5}})\",\r\n    \"cmc_type\":175490001\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}leads",
									"host": [
										"{{Eresource_URL}}leads"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Values from Inbound",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var parentcontactid;\r",
											"var contactid;\r",
											"var qualifyingopportunityid;\r",
											"var mobilephone;\r",
											"var emailaddress1;\r",
											"var address1_county;\r",
											"var campagin,sourcecampusid,areaofinterestid;\r",
											"var firstname,lastname;\r",
											"var stateorprovince,postalcode, city;\r",
											"var country,telephone1;\r",
											"var address1_country,statecode;\r",
											"var address1_line1,address1_line2,address1_line3;\r",
											"var sourcedate,expectedstartid,sourcemethodid;\r",
											"var sourcecategoryid,sourcesubcategoryid;\r",
											"var sourceprgmid,primary,sourceprgmlevelid,contacttype;\r",
											"\r",
											"pm.test(\"Fetch Values from lead\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);\r",
											"    var jsonData = JSON.parse(responseBody);\r",
											"    parentcontactid = jsonData._parentcontactid_value;\r",
											"    console.log('Parentcontactid:' + parentcontactid);\r",
											"    contactid = jsonData._customerid_value;\r",
											"    console.log('contactid:' + contactid);\r",
											"    primary = jsonData.cmc_primary;\r",
											"    console.log('primary:' + primary);\r",
											"    mobilephone = jsonData.mobilephone;\r",
											"    console.log('mobilephone:' + mobilephone);\r",
											"    emailaddress1 = jsonData.emailaddress1;\r",
											"    console.log('emailaddress1:' + emailaddress1);\r",
											"    address1_county = jsonData.address1_county;\r",
											"    console.log('address1_county:' + address1_county);\r",
											"    areaofinterestid = jsonData._cmc_areaofinterestid_value;\r",
											"    console.log('areaofinterestid:' + areaofinterestid);\r",
											"    lastname = jsonData.lastname;\r",
											"    console.log('lastname:' + lastname);\r",
											"    campagin = jsonData._cmc_sourcecampaignid_value;\r",
											"    console.log('campagin:' + campagin);\r",
											"    firstname = jsonData.firstname;\r",
											"    console.log('firstname:' + firstname);\r",
											"    city = jsonData.address1_city;\r",
											"    console.log('city:' + city);\r",
											"    stateorprovince = jsonData.address1_stateorprovince;\r",
											"    console.log('stateorprovince:' + stateorprovince);\r",
											"    address1_country = jsonData.address1_country;\r",
											"    console.log('country:' + country);\r",
											"    address1_line1 = jsonData.address1_line1;\r",
											"    console.log('address1_line1:' + address1_line1);\r",
											"    address1_line2 = jsonData.address1_line2;\r",
											"    console.log('address1_line2:' + address1_line2);\r",
											"    address1_line3 = jsonData.address1_line3;\r",
											"    console.log('address1_line3:' + address1_line3);\r",
											"    telephone1 = jsonData.telephone1;\r",
											"    console.log('telephone1:' + telephone1);\r",
											"    sourcemethodid = jsonData._cmc_sourcemethodid_value;\r",
											"    console.log('sourcemethodid:' + sourcemethodid);\r",
											"    sourcedate = jsonData.cmc_sourcedate;\r",
											"    console.log('sourcedate:' + sourcedate);\r",
											"    sourcecategoryid = jsonData._cmc_sourcecategoryid_value;\r",
											"    console.log('sourcecategoryid:' + sourcecategoryid);\r",
											"    sourceprgmid = jsonData._cmc_sourceprgmid_value;\r",
											"    console.log('sourceprgmid:' + sourceprgmid);\r",
											"    sourcecampusid = jsonData._cmc_sourcecampusid_value;\r",
											"    console.log('sourcecampusid:' +sourcecampusid);\r",
											"    postalcode = jsonData.address1_postalcode;\r",
											"    console.log('postalcode:' + postalcode);\r",
											"    expectedstartid = jsonData._cmc_expectedstartid_value;\r",
											"    console.log('expectedstartid:' +expectedstartid);\r",
											"    sourcesubcategoryid = jsonData._cmc_sourcesubcategoryid_value;\r",
											"    console.log('sourcesubcategoryid:' + sourcesubcategoryid);\r",
											"    sourceprgmlevelid = jsonData._cmc_sourceprgmlevelid_value;\r",
											"    console.log('sourceprgmlevelid:' +sourceprgmlevelid);\r",
											"    qualifyingopportunityid=jsonData._qualifyingopportunityid_value;\r",
											"    console.log('qualifyingopportunityid:' + qualifyingopportunityid);\r",
											"    contacttype = jsonData.cmc_contacttype;\r",
											"    console.log('contacttype:' +contacttype);\r",
											"    statecode = jsonData.statecode;\r",
											"    console.log('statecode:' +statecode);\r",
											"});\r",
											"pm.test(\"Validate  contacttype\", function () {\r",
											"pm.expect(contacttype).to.equal(494280011);\r",
											"    });\r",
											"\r",
											"pm.test(\"Validate Primary\", function () {\r",
											"pm.expect(primary).to.equal(true);\r",
											"    }); \r",
											"\r",
											"pm.test(\"Validate Qualify status\", function () {\r",
											"pm.expect(statecode).to.equal(1);\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											"pm.globals.set('gqualifyingopportunityid5', qualifyingopportunityid);\r",
											"pm.globals.set('gmobilephone5', mobilephone);\r",
											"pm.globals.set('gemailaddress5', emailaddress1);\r",
											"pm.globals.set('gaddress1_county5', address1_county);\r",
											"pm.globals.set('glastname5', lastname);\r",
											"pm.globals.set('gfirstname5', firstname);\r",
											"pm.globals.set('gcity5', city);\r",
											"pm.globals.set('gstateorprovince5', stateorprovince);\r",
											"pm.globals.set('gcountry5', country);\r",
											"pm.globals.set('gaddress1_country5', address1_country);\r",
											"pm.globals.set('gaddress1_line15', address1_line1);\r",
											"pm.globals.set('gaddress1_line25', address1_line2);\r",
											"pm.globals.set('gaddress1_line35', address1_line3);\r",
											"pm.globals.set('gtelephone5', telephone1);\r",
											"pm.globals.set('gsourcedate5', sourcedate);\r",
											"pm.globals.set('gpostalcode5', postalcode);"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Prefer",
										"value": "return=representation",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Eresource_URL}}leads({{gInboundid2}})",
									"host": [
										"{{Eresource_URL}}leads({{gInboundid2}})"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Details from Lifecycle",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var lifecampusid;",
											"var lifemethodid;",
											"var lifecategoryid;",
											"var lifeprogramid;",
											"var lifeprogramlevelid;",
											"var lifeexpectedstartid;",
											"var lifecustomerid;",
											"var lifecycletype;",
											"",
											"var campusid = pm.globals.get(\"gaccountId5\");",
											"var sourcemethodid = pm.globals.get(\"gsourcemethodid5\");",
											"var sourcecategoryid = pm.globals.get(\"gsourcecategoryid5\");",
											"var programid = pm.globals.get(\"gProgram5\");",
											"var programlevelid = pm.globals.get(\"gprogramlevelid5\");",
											"var expectedstartid = pm.globals.get(\"gexpectedstartId2\");",
											"var contactid = pm.globals.get(\"gcontactid2\");",
											"var type = pm.globals.get(\"gtype2\");",
											"var Inboundid = pm.globals.get(\"gInboundid2\");",
											"",
											"pm.test(\"Copied initial Source Fields\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
											"    var jsonData = JSON.parse(responseBody);",
											"",
											"    lifecampusid = jsonData._cmc_sourcecampusid_value;",
											"    console.log('lifecampusid: ' + lifecampusid);",
											"",
											"    lifemethodid = jsonData._cmc_sourcemethodid_value;",
											"    console.log('lifemethodid: ' + lifemethodid);",
											"",
											"    lifecategoryid = jsonData._cmc_sourcecategoryid_value;",
											"    console.log('lifecategoryid: ' + lifecategoryid);",
											"",
											"    lifeprogramid = jsonData._cmc_sourceprgmid_value;",
											"    console.log('lifeprogramid: ' + lifeprogramid);",
											"",
											"    lifeprogramlevelid = jsonData._cmc_srcprgmlevelid_value;",
											"    console.log('lifeprogramlevelid: ' + lifeprogramlevelid);",
											"",
											"    lifeexpectedstartid = jsonData._cmc_expectedstartid_value;",
											"    console.log('lifeexpectedstartid: ' + lifeexpectedstartid);",
											"",
											"    lifecustomerid = jsonData._customerid_value;",
											"    console.log('lifecustomerid: ' + lifecustomerid);",
											"",
											"    lifecycletype = jsonData.cmc_lifecycletype;",
											"    console.log('lifecycletype: ' + lifecycletype);",
											"",
											"    pm.test(\"Validate  lifecycletype\", function () {",
											"        pm.expect(type).to.equal( lifecycletype);",
											"    });",
											"",
											"    pm.test(\"Validate Campus\", function () {",
											"        pm.expect(campusid).to.equal(lifecampusid);",
											"    });",
											"",
											"    pm.test(\"Validate method\", function () {",
											"        pm.expect(sourcemethodid).to.equal(lifemethodid);",
											"    });",
											"",
											"    pm.test(\"Validate Category\", function () {",
											"        pm.expect(sourcecategoryid).to.equal(lifecategoryid);",
											"    });",
											"",
											"    pm.test(\"Validate Program\", function () {",
											"        pm.expect(programid).to.equal(lifeprogramid);",
											"    });",
											"",
											"    pm.test(\"Validate ProgramLevel\", function () {",
											"        pm.expect(programlevelid).to.equal(lifeprogramlevelid);",
											"    });",
											"",
											"    pm.test(\"Validate ExpectedStartDate\", function () {",
											"        pm.expect(expectedstartid).to.equal(lifeexpectedstartid);",
											"    });",
											"",
											"    pm.test(\"Validate contactid\", function () {",
											"        pm.expect(contactid).to.equal(lifecustomerid);",
											"    });",
											"",
											"     if (campusid === lifecampusid && sourcemethodid === lifemethodid && sourcecategoryid === lifecategoryid && programid === lifeprogramid && programlevelid === lifeprogramlevelid && expectedstartid === lifeexpectedstartid && contactid === lifecustomerid) {",
											"        console.log('Initial Source Field Copied');",
											"    }",
											"    else {",
											"        console.log('Initial Source Field NOT Copied');",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{Eresource_URL}}opportunities({{gqualifyingopportunityid5}})",
									"host": [
										"{{Eresource_URL}}opportunities({{gqualifyingopportunityid5}})"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Details from Contact",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var concustomerid;",
											"var concampusid;",
											"var conmethodid;",
											"var concategoryid;",
											"var conprogramid;",
											"var conprogramlevelid;",
											"var conexpectedstartid;",
											"var consubsourcecategoryid; ",
											"var concampaign,conlastname;",
											"var originatinginboundinterest;",
											"var conmobilephone,conemailaddress1;",
											"var conaddress1_county,conaddress1_country,confirstname;",
											"var conaddress1_city,constateorprovince;",
											"var conaddress1_line1,conaddress1_line2,conaddress1_line3;",
											"var contelephone1,consourcedate,conpostalcode,contacttype;",
											"",
											"var leadcustomerid = pm.globals.get(\"gcontactid2\");",
											"var leadcampusid = pm.globals.get(\"gaccountId5\");",
											"var leadmethodid = pm.globals.get(\"gsourcemethodid5\");",
											"var leadcategoryid = pm.globals.get(\"gsourcecategoryid5\");",
											"var leadprogramid = pm.globals.get(\"gProgram5\");",
											"var leadprogramlevelid = pm.globals.get(\"gprogramlevelid5\");",
											"var leadexpectedstartid = pm.globals.get(\"gacademicperiodid5\");",
											"var leadsubsourcecategoryid = pm.globals.get(\"gsubcategoryid5\");",
											"var leadcampaign = pm.globals.get(\"g_campaignid5\");",
											"var inboundid = pm.globals.get(\"gInboundid2\");",
											"var mobilephone = pm.globals.get(\"gmobilephone5\");",
											"var emailaddress1 = pm.globals.get(\"gemailaddress5\");",
											"var address1_county = pm.globals.get(\"gcountry5\");",
											"var address1_country = pm.globals.get(\"gaddress1_country5\");",
											"var lastname = pm.globals.get(\"glastname5\");",
											"var firstname = pm.globals.get(\"gfirstname5\");",
											"var city = pm.globals.get(\"gcity5\");",
											"var stateorprovince = pm.globals.get(\"gstateorprovince5\");",
											"var address1_line1 = pm.globals.get(\"gaddress1_line15\");",
											"var address1_line2 = pm.globals.get(\"gaddress1_line25\");",
											"var address1_line3 = pm.globals.get(\"gaddress1_line35\");",
											"var telephone1 = pm.globals.get(\"gtelephone5\");",
											"var sourcedate = pm.globals.get(\"gsourcedate5\");",
											"var postalcode = pm.globals.get(\"gpostalcode5\");",
											"",
											"pm.test(\"Copied Fields values\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
											"    var jsonData = JSON.parse(responseBody);",
											"",
											"    concustomerid = jsonData.contactid;",
											"    console.log('concustomerid: ' + concustomerid);",
											"",
											"    concampusid = jsonData._cmc_sourcecampusid_value;",
											"    console.log('leadcampusid: ' + concampusid);",
											"",
											"    conprogramid = jsonData._cmc_srcprogramid_value;",
											"    console.log('leadprogramid: ' + conprogramid);",
											"",
											"     conprogramlevelid = jsonData._cmc_srcpogramlevelid_value;",
											"    console.log('leadprogramlevelid: ' + conprogramlevelid);",
											"",
											"    conexpectedstartid = jsonData._cmc_expectedstartid_value;",
											"    console.log('leadexpectedstartid: ' + conexpectedstartid);",
											"",
											"    conmethodid = jsonData._cmc_sourcemethodid_value;",
											"    console.log('conmethodid: ' + conmethodid);",
											"",
											"    concategoryid = jsonData._cmc_sourcecategoryid_value;",
											"    console.log('concategoryid: ' + concategoryid);",
											"",
											"    consubsourcecategoryid = jsonData._cmc_sourcesubcategoryid_value;",
											"    console.log('Consubsourcecategoryid: ' + consubsourcecategoryid);",
											"",
											"    concampaign = jsonData._cmc_sourcecampaignid_value;",
											"    console.log('concampaign: ' + concampaign);",
											"",
											"    originatinginboundinterest = jsonData._cmc_originatinginboundinterest_value;",
											"    console.log('originatinginboundinterest: ' + originatinginboundinterest);",
											"",
											"    conmobilephone = jsonData.mobilephone;",
											"    console.log('conmobilephone: ' + mobilephone);",
											"",
											"    conemailaddress1 = jsonData.emailaddress1;",
											"    console.log('conemailaddress1: ' + emailaddress1);",
											"",
											"    conaddress1_county = jsonData.address1_county;",
											"    console.log('conaddress1_county: ' + conaddress1_county);",
											"",
											"    conaddress1_country = jsonData.address1_country;",
											"    console.log('conaddress1_country: ' + conaddress1_country);",
											"     ",
											"    conlastname = jsonData.lastname;",
											"    console.log('conlastname: ' + conlastname);",
											"",
											"    confirstname = jsonData.firstname;",
											"    console.log('confirstname: ' + confirstname);",
											"",
											"    conaddress1_city = jsonData.address1_city;",
											"    console.log('conaddress1_city: ' + conaddress1_city);",
											"",
											"    constateorprovince = jsonData.address1_stateorprovince;",
											"    console.log('constateorprovince: ' + constateorprovince);",
											"     ",
											"    conaddress1_line1 = jsonData.address1_line1;",
											"    console.log('conaddress1_line1: ' + conaddress1_line1);",
											"",
											"    conaddress1_line2 = jsonData.address1_line2;",
											"    console.log('conaddress1_line2: ' + conaddress1_line2);",
											"",
											"    conaddress1_line3 = jsonData.address1_line3;",
											"    console.log('conaddress1_line3: ' + conaddress1_line3);",
											"     ",
											"    contelephone1 = jsonData.telephone1;",
											"    console.log('contelephone1: ' + contelephone1);",
											"",
											"    consourcedate = jsonData.cmc_sourcedate;",
											"    console.log('consourcedate: ' + consourcedate);",
											"",
											"    conpostalcode = jsonData.address1_postalcode;",
											"    console.log('conpostalcode: ' + conpostalcode);",
											"",
											"    //append student contact type",
											"    contacttype = jsonData.mshied_contacttype;",
											"     console.log('contacttype: ' + contacttype);",
											"",
											"    pm.test(\"Validate contacttype\", function () {",
											"        pm.expect(contacttype).to.equal(\"494280002,494280006,494280011\");",
											"    });",
											"",
											"    pm.test(\"Validate method\", function () {",
											"        pm.expect(conmethodid).to.equal(leadmethodid);",
											"    });",
											"",
											"    pm.test(\"Validate mobilephone\", function () {",
											"        pm.expect(conmobilephone).not.equal(mobilephone);",
											"    });",
											"    ",
											"    pm.test(\"Validate emailaddress1\", function () {",
											"        pm.expect(conemailaddress1).to.equal(emailaddress1);",
											"    });",
											"    ",
											"    pm.test(\"Validate address1_county\", function () {",
											"         pm.expect(conaddress1_county).not.equal(address1_county);",
											"    });",
											"",
											"    pm.test(\"Validate address1_country\", function () {",
											"        pm.expect(conaddress1_country).not.equal(address1_country);",
											"    });",
											"",
											"    pm.test(\"Validate lastname\", function () {",
											"        pm.expect(conlastname).to.equal(lastname);",
											"    });",
											"",
											"    pm.test(\"Validate firstname\", function () {",
											"        pm.expect(confirstname).not.equal(firstname);",
											"    });",
											"",
											"    pm.test(\"Validate city\", function () {",
											"        pm.expect(conaddress1_city).not.equal(city);",
											"    });",
											"",
											"    pm.test(\"Validate stateorprovince\", function () {",
											"        pm.expect(constateorprovince).not.equal(stateorprovince);",
											"    });",
											"",
											"    pm.test(\"Validate address1_line1\", function () {",
											"        pm.expect(conaddress1_line1).not.equal(address1_line1);",
											"    });",
											"",
											"    pm.test(\"Validate address1_line2\", function () {",
											"        pm.expect(conaddress1_line2).not.equal(address1_line2);",
											"    });",
											"",
											"   pm.test(\"Validate address1_line3\", function () {",
											"        pm.expect(conaddress1_line3).not.equal(address1_line3);",
											"   });",
											"   ",
											"   pm.test(\"Validate telephone1\", function () {",
											"        pm.expect(contelephone1).not.equal(telephone1);",
											"   });",
											"   ",
											"   pm.test(\"Validate sourcedate\", function () {",
											"        pm.expect(consourcedate).to.equal(sourcedate);",
											"   });",
											"",
											"   pm.test(\"Validate postalcode\", function () {",
											"        pm.expect(conpostalcode).not.equal(postalcode);",
											"   });",
											"",
											"     pm.test(\"Validate Campus\", function () {",
											"        pm.expect(concampusid).to.equal(leadcampusid);",
											"     });",
											"",
											"     pm.test(\"Validate ProgramLevel\", function () {",
											"        pm.expect(conprogramlevelid).to.equal(leadprogramlevelid);",
											"     });",
											"",
											"     pm.test(\"Validate ExpectedStartDate\", function () {",
											"         pm.expect(conexpectedstartid).to.equal(leadexpectedstartid);",
											"     });",
											"",
											"      pm.test(\"Validate Program\", function () {",
											"         pm.expect(conprogramid).to.equal(leadprogramid);",
											"     });",
											"",
											"    pm.test(\"Validate Category\", function () {",
											"        pm.expect(concategoryid).to.equal(leadcategoryid);",
											"    });",
											"",
											"    pm.test(\"Validate Subcategory\", function () {",
											"        pm.expect(consubsourcecategoryid).to.equal(leadsubsourcecategoryid);",
											"    });",
											"",
											"    pm.test(\"Validate Campaign\", function () {",
											"        pm.expect(concampaign).to.equal(leadcampaign);",
											"    });",
											"",
											"    pm.test(\"Validate originatinginboundinterest\", function () {",
											"        pm.expect(inboundid).to.equal(originatinginboundinterest);",
											"    });",
											"",
											"",
											"    if (conmethodid === leadmethodid && concategoryid === leadcategoryid && consubsourcecategoryid === leadsubsourcecategoryid && concampaign === leadcampaign && inboundid === originatinginboundinterest) {",
											"        console.log('Initial Source Field Copied');",
											"    }",
											"    else {",
											"        console.log('Initial Source Field NOT Copied');",
											"    }",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{Eresource_URL}}contacts({{gcontactid2}})",
									"host": [
										"{{Eresource_URL}}contacts({{gcontactid2}})"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Scenario 4 type-New Donor",
			"item": [
				{
					"name": "Create Inbound Interest3",
					"item": [
						{
							"name": "Create Area of Interest4",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var areaofinterestid;",
											"var areaofinterestname;",
											"",
											"pm.test(\"Create Area of Interest\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"",
											"    areaofinterestid = jsonData.mshied_areaofinterestid;",
											"    console.log(\"area of interest id : \" + areaofinterestid);",
											"",
											"    areaofinterestname = jsonData.mshied_name;",
											"    console.log(\"area of interest name : \" + areaofinterestname);",
											"",
											"});",
											"pm.globals.set('gareaofinterestid6', areaofinterestid);",
											"pm.globals.set('gareaofinterestname6', areaofinterestname);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"mshied_code\": \"{{$randomInt}}-{{$randomInt}}e1 - {{$randomInt}}\",\n    \"mshied_name\": \"{{$randomInt}}-Test-AreaOfInterest1-{{$randomInt}}\"\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}mshied_areaofinterests",
									"host": [
										"{{Eresource_URL}}mshied_areaofinterests"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Account4",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var account_id; ",
											"var Accname;",
											"pm.test(\"Account Created\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    account_id = jsonData.accountid;",
											"    Accname = jsonData.name;",
											"    console.log(Accname);",
											"});",
											"",
											"var accname = data.name;",
											"var accounttype = data.mshied_accounttype;",
											"pm.globals.set('gaccountId6',account_id);",
											"pm.globals.set('gAccname6',Accname);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n \"name\":\"{{name}}na{{$randomInt}}\",\r\n \"mshied_accounttype\":\"{{mshied_accounttype}}\",\r\n \"cmc_accountcode\":\"Acc2{{$randomInt}}\",\r\n \"preferredcontactmethodcode\":1\r\n} "
								},
								"url": {
									"raw": "{{Eresource_URL}}accounts",
									"host": [
										"{{Eresource_URL}}accounts"
									]
								},
								"description": "Create Account with new Address"
							},
							"response": []
						},
						{
							"name": "Create Program Level4",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var programlevelid;",
											"pm.test(\"Create Program Level\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"",
											"    programlevelid = jsonData.mshied_programlevelid;",
											"    console.log(\"programlevelid : \" + programlevelid);",
											"});",
											"pm.globals.set('gprogramlevelid6', programlevelid);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"mshied_code\": \"{{$randomInt}}-C1{{$randomInt}} {{$randomInt}}\",\n    \"mshied_name\": \"{{$randomInt}}-Test-PrgLevel2-{{$randomInt}}\"\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}mshied_programlevels",
									"host": [
										"{{Eresource_URL}}mshied_programlevels"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Source Method4",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var sourcemethodid;",
											"pm.test(\"Create sourcemethod\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"",
											"    sourcemethodid = jsonData.cmc_sourcemethodid;",
											"    console.log(\"sourcemethodid : \" + sourcemethodid);",
											"});",
											"pm.globals.set('gsourcemethodid6', sourcemethodid);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n   \"cmc_sourcemethodname\": \"{{$randomInt}}-TestSoucreMethod2{{$randomInt}}\"\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_sourcemethods",
									"host": [
										"{{Eresource_URL}}cmc_sourcemethods"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create SubCategory4",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var subcategory;",
											"var Accname;",
											"pm.test(\"SourceSub Category Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
											"    var jsonData = JSON.parse(responseBody);",
											"",
											"    subcategory = jsonData.cmc_sourcesubcategoryid;",
											"    console.log(\"subcategory: \",subcategory);",
											"    pm.globals.set('gsubcategoryid6', subcategory);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_sourcesubcategoryname\": \"TestSubCategory1{{$randomInt}}\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_sourcesubcategories",
									"host": [
										"{{Eresource_URL}}cmc_sourcesubcategories"
									]
								},
								"description": "Create Account with new Address"
							},
							"response": []
						},
						{
							"name": "Create Source Category4",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var sourcecategoryid;",
											"pm.test(\"Create Sourcecategory\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"",
											"    sourcecategoryid = jsonData.cmc_sourcecategoryid;",
											"    console.log(\"sourcecategoryid : \" + sourcecategoryid);",
											"});",
											"pm.globals.set('gsourcecategoryid6', sourcecategoryid);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"cmc_sourcecategoryname\": \"{{$randomInt}}-TestSoucreCategor2-y{{$randomInt}}\"\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_sourcecategories",
									"host": [
										"{{Eresource_URL}}cmc_sourcecategories"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Academic period4",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var academicperiodid;",
											"var apname;",
											"var code;",
											"",
											"pm.test(\"Academicperiodid Created\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202,204]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    academicperiodid = jsonData.mshied_academicperiodid;",
											"    apname = jsonData.mshied_name;",
											"    code = jsonData.mshied_code;",
											" ",
											"});",
											"",
											"pm.globals.set('gacademicperiodid6',academicperiodid);",
											"pm.globals.set('gacademicperiodname6',apname);",
											"pm.globals.set('gacademicperiodcode6',code);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var moment = require('moment');\r",
											"pm.environment.set(\"timestamp\", moment().add(1, 'days').format(\"YYYY-MM-DD\"));\r",
											"pm.environment.set(\"timestampEndDate\", moment().add(100, 'days').format(\"YYYY-MM-DD\"));\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"mshied_name\":\"{{cmc_academicperiodname}}{{$randomInt}}\",\r\n\t\"mshied_startdate\":\"{{timestamp}}\",\r\n\t\"mshied_enddate\":\"{{timestampEndDate}}\",\r\n\t\"mshied_code\":\"{{$randomInt}}{{cmc_code}}LH{{$randomInt}}\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource}}api/data/{{Eversion}}/mshied_academicperiods",
									"host": [
										"{{Eresource}}api"
									],
									"path": [
										"data",
										"{{Eversion}}",
										"mshied_academicperiods"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create SubCategory4",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var subcategory;",
											"var Accname;",
											"pm.test(\"SourceSub Category Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
											"    var jsonData = JSON.parse(responseBody);",
											"",
											"    subcategory = jsonData.cmc_sourcesubcategoryid;",
											"    console.log(\"subcategory: \",subcategory);",
											"    pm.globals.set('gsubcategoryid6', subcategory);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_sourcesubcategoryname\": \"TestSubCategory1{{$randomInt}}\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_sourcesubcategories",
									"host": [
										"{{Eresource_URL}}cmc_sourcesubcategories"
									]
								},
								"description": "Create Account with new Address"
							},
							"response": []
						},
						{
							"name": "Create Program4",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var programid;",
											"var programname;",
											"pm.test(\"Get Program\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"",
											"    programid = jsonData.mshied_programid;",
											"    programname = jsonData.mshied_name;",
											"    console.log(\"Program ID: \" + programid);",
											"    console.log(\"Program Name: \" + programname);",
											"});",
											"pm.globals.set('gProgram6', programid);",
											"pm.globals.set('gProgramName6', programname);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"mshied_code\": \"{{$randomInt}}Pr{{$randomInt}}rg1{{$randomInt}}\",\n    \"mshied_name\": \"code{{$randomInt}}\"\n}\n"
								},
								"url": {
									"raw": "{{Eresource_URL}}mshied_programs",
									"host": [
										"{{Eresource_URL}}mshied_programs"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Campaign4",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var campaignid;",
											"pm.test(\"Account Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    campaignid = jsonData.campaignid;",
											"    console.log(\"campaignid: \", campaignid);",
											"});",
											"pm.globals.set('g_campaignid6', campaignid);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"{{$randomInt}}-TestCampaign1-{{$randomInt}}\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}campaigns",
									"host": [
										"{{Eresource_URL}}campaigns"
									]
								},
								"description": "Create Account with new Address"
							},
							"response": []
						},
						{
							"name": "Create Inbound Interest 3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var Inboundid;",
											"var Inboundname;",
											"var contactid;",
											"var accountid;",
											"var methodid;",
											"var campaign;",
											"var categoryid;",
											"var programid;",
											"var programlevelid;",
											"var expectedstartid;",
											"var comments;",
											"var subcategory;",
											"var areaofinterestid;",
											"var type;",
											"var subcategory;",
											"",
											"pm.test(\"Lead Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    Inboundid = jsonData.leadid;",
											"    Inboundname = jsonData.fullname;",
											"    contactid = jsonData._customerid_value;",
											"    accountid = jsonData._cmc_sourcecampusid_value;",
											"    methodid = jsonData._cmc_sourcemethodid_value;",
											"    categoryid = jsonData._cmc_sourcecategoryid_value;",
											"    programid = jsonData._cmc_sourceprgmid_value;",
											"    programlevelid = jsonData._cmc_sourceprgmlevelid_value;",
											"    expectedstartid = jsonData._cmc_expectedstartid_value;",
											"    subcategory = jsonData._cmc_sourcesubcategoryid_value;",
											"    campaign = jsonData._cmc_sourcecampaignid_value",
											"    comments = jsonData.cmc_comments;",
											"    areaofinterestid = jsonData.cmc_areaofinterestid;",
											"    type = jsonData.cmc_type;",
											"",
											"    console.log('InboundID:' + Inboundid);",
											"    console.log('InBoundName:' + Inboundname);",
											"    console.log('ExpectedstartID:' + expectedstartid);",
											"});",
											"",
											"pm.globals.set('gInboundid3', Inboundid);",
											"pm.globals.set('gexpectedstartId3', expectedstartid);",
											"pm.globals.set('gtype3', type);",
											"setTimeout(function(){}, 25000);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const dateNow= new Date();\r",
											"pm.environment.set('currentDate', dateNow.toISOString());"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"address1_county\":\"Delhi{{$randomInt}}\",\r\n   \"address1_country\":\"India{{$randomInt}}\",\r\n   \"address1_postalcode\":\"562109{{$randomInt}}\",\r\n   \"address1_stateorprovince\":\"Karanataka{{$randomInt}}\",\r\n   \"address1_city\":\"Bengaluru{{$randomInt}}\",\r\n   \"address1_line3\":\"Street3{{$randomInt}}\",\r\n   \"address1_line2\":\"Street2{{$randomInt}}\",\r\n   \"address1_line1\":\"Street1{{$randomInt}}\",\r\n   \"jobtitle\":\"QA{{$randomInt}}\",\r\n   \"telephone1\":\"988877{{$randomInt}}\",\r\n   \"mobilephone\":\"897678{{$randomInt}}\",\r\n   \"emailaddress1\":\"emailaddress198{{$randomInt}}@xyz.com\",\r\n   \"lastname\":\"Lead-LastName3{{$randomInt}}{{$randomInt}}\",\r\n   \"firstname\":\"Lead-FirstName3{{$randomInt}}{{$randomInt}}\",\r\n   \"cmc_sourcedate\": \"{{currentDate}}\",\r\n    \"cmc_sourcecampusid@odata.bind\": \"/accounts({{gaccountId6}})\",\r\n    \"cmc_sourceprgmid@odata.bind\": \"/leads({{gProgram6}})\",\r\n    \"cmc_sourceprgmlevelid@odata.bind\": \"/leads({{gprogramlevelid6}})\",\r\n    \"cmc_sourcecategoryid@odata.bind\": \"/leads({{gsourcecategoryid6}})\",\r\n    \"cmc_sourcecampaignid@odata.bind\": \"/campaigns({{g_campaignid6}})\",\r\n    \"cmc_sourcemethodid@odata.bind\": \"/leads({{gsourcemethodid6}})\",\r\n    \"cmc_sourcesubcategoryid@odata.bind\": \"/cmc_sourcesubcategories({{gsubcategoryid6}})\",\r\n    \"cmc_expectedstartid@odata.bind\": \"/mshied_academicperiods({{gacademicperiodid6}})\",\r\n    \"cmc_comments\":\"I'm Interested for MCA and MBA\",\r\n    \"cmc_areaofinterestid@odata.bind\":\"/mshied_areaofinterests({{gareaofinterestid6}})\",\r\n    \"cmc_type\":175490000,\r\n    \"cmc_contacttype\":494280002\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}leads",
									"host": [
										"{{Eresource_URL}}leads"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Values from Inbound3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var parentcontactid;\r",
											"var contactid;\r",
											"var qualifyingopportunityid;\r",
											"var mobilephone;\r",
											"var emailaddress1;\r",
											"var address1_county;\r",
											"var campagin,sourcecampusid,areaofinterestid;\r",
											"var firstname,lastname;\r",
											"var stateorprovince,postalcode, city;\r",
											"var country,telephone1;\r",
											"var address1_country;\r",
											"var address1_line1,address1_line2,address1_line3;\r",
											"var sourcedate,expectedstartid,sourcemethodid;\r",
											"var sourcecategoryid,sourcesubcategoryid;\r",
											"var sourceprgmid,primary,sourceprgmlevelid,contacttype,statecode;\r",
											"\r",
											"pm.test(\"Fetch Values from lead\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);\r",
											"    var jsonData = JSON.parse(responseBody);\r",
											"    parentcontactid = jsonData._parentcontactid_value;\r",
											"    console.log('Parentcontactid:' + parentcontactid);\r",
											"    contactid = jsonData._customerid_value;\r",
											"    console.log('contactid:' + contactid);\r",
											"    primary = jsonData.cmc_primary;\r",
											"    console.log('primary:' + primary);\r",
											"    mobilephone = jsonData.mobilephone;\r",
											"    console.log('mobilephone:' + mobilephone);\r",
											"    emailaddress1 = jsonData.emailaddress1;\r",
											"    console.log('emailaddress1:' + emailaddress1);\r",
											"    address1_county = jsonData.address1_county;\r",
											"    console.log('address1_county:' + address1_county);\r",
											"    areaofinterestid = jsonData._cmc_areaofinterestid_value;\r",
											"    console.log('areaofinterestid:' + areaofinterestid);\r",
											"    lastname = jsonData.lastname;\r",
											"    console.log('lastname:' + lastname);\r",
											"    campagin = jsonData._cmc_sourcecampaignid_value;\r",
											"    console.log('campagin:' + campagin);\r",
											"    firstname = jsonData.firstname;\r",
											"    console.log('firstname:' + firstname);\r",
											"    city = jsonData.address1_city;\r",
											"    console.log('city:' + city);\r",
											"    stateorprovince = jsonData.address1_stateorprovince;\r",
											"    console.log('stateorprovince:' + stateorprovince);\r",
											"    address1_country = jsonData.address1_country;\r",
											"    console.log('country:' + country);\r",
											"    address1_line1 = jsonData.address1_line1;\r",
											"    console.log('address1_line1:' + address1_line1);\r",
											"    address1_line2 = jsonData.address1_line2;\r",
											"    console.log('address1_line2:' + address1_line2);\r",
											"    address1_line3 = jsonData.address1_line3;\r",
											"    console.log('address1_line3:' + address1_line3);\r",
											"    telephone1 = jsonData.telephone1;\r",
											"    console.log('telephone1:' + telephone1);\r",
											"    sourcemethodid = jsonData._cmc_sourcemethodid_value;\r",
											"    console.log('sourcemethodid:' + sourcemethodid);\r",
											"    sourcedate = jsonData.cmc_sourcedate;\r",
											"    console.log('sourcedate:' + sourcedate);\r",
											"    sourcecategoryid = jsonData._cmc_sourcecategoryid_value;\r",
											"    console.log('sourcecategoryid:' + sourcecategoryid);\r",
											"    sourceprgmid = jsonData._cmc_sourceprgmid_value;\r",
											"    console.log('sourceprgmid:' + sourceprgmid);\r",
											"    sourcecampusid = jsonData._cmc_sourcecampusid_value;\r",
											"    console.log('sourcecampusid:' +sourcecampusid);\r",
											"    postalcode = jsonData.address1_postalcode;\r",
											"    console.log('postalcode:' + postalcode);\r",
											"    expectedstartid = jsonData._cmc_expectedstartid_value;\r",
											"    console.log('expectedstartid:' +expectedstartid);\r",
											"    sourcesubcategoryid = jsonData._cmc_sourcesubcategoryid_value;\r",
											"    console.log('sourcesubcategoryid:' + sourcesubcategoryid);\r",
											"    sourceprgmlevelid = jsonData._cmc_sourceprgmlevelid_value;\r",
											"    console.log('sourceprgmlevelid:' +sourceprgmlevelid);\r",
											"    qualifyingopportunityid=jsonData._qualifyingopportunityid_value;\r",
											"    console.log('qualifyingopportunityid:' + qualifyingopportunityid);\r",
											"    contacttype = jsonData.cmc_contacttype;\r",
											"    console.log('contacttype:' +contacttype);\r",
											"    statecode = jsonData.statecode;\r",
											"    console.log('statecode:' +statecode);\r",
											"});\r",
											"\r",
											" pm.test(\"Validate  contacttype\", function () {\r",
											" pm.expect(contacttype).to.equal(494280002);\r",
											"});\r",
											"\r",
											"pm.test(\"Validate Qualify status\", function () {\r",
											" pm.expect(statecode).to.equal(1);\r",
											"});\r",
											"\r",
											"pm.test(\"Validate Primary\", function () {\r",
											"pm.expect(primary).to.equal(true);\r",
											"});\r",
											"\r",
											"\r",
											"pm.globals.set('gcontactid3', contactid);\r",
											"pm.globals.set('gqualifyingopportunityid6', qualifyingopportunityid);\r",
											"pm.globals.set('gmobilephone6', mobilephone);\r",
											"pm.globals.set('gemailaddress6', emailaddress1);\r",
											"pm.globals.set('gaddress1_county6', address1_county);\r",
											"pm.globals.set('glastname6', lastname);\r",
											"pm.globals.set('gfirstname6', firstname);\r",
											"pm.globals.set('gcity6', city);\r",
											"pm.globals.set('gstateorprovince6', stateorprovince);\r",
											"pm.globals.set('gcountry6', country);\r",
											"pm.globals.set('gaddress1_country6', address1_country);\r",
											"pm.globals.set('gaddress1_line16', address1_line1);\r",
											"pm.globals.set('gaddress1_line26', address1_line2);\r",
											"pm.globals.set('gaddress1_line36', address1_line3);\r",
											"pm.globals.set('gtelephone6', telephone1);\r",
											"pm.globals.set('gsourcedate6', sourcedate);\r",
											"pm.globals.set('gpostalcode6', postalcode);"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Prefer",
										"value": "return=representation",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Eresource_URL}}leads({{gInboundid3}})",
									"host": [
										"{{Eresource_URL}}leads({{gInboundid3}})"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Details from Contact3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var concustomerid;",
											"var concampusid;",
											"var conmethodid;",
											"var concategoryid;",
											"var conprogramid;",
											"var conprogramlevelid;",
											"var conexpectedstartid;",
											"var consubsourcecategoryid; ",
											"var concampaign,conlastname;",
											"var originatinginboundinterest;",
											"var conmobilephone,conemailaddress1;",
											"var conaddress1_county,conaddress1_country,confirstname;",
											"var conaddress1_city,constateorprovince;",
											"var conaddress1_line1,conaddress1_line2,conaddress1_line3;",
											"var contelephone1,consourcedate,conpostalcode,contacttype;",
											"",
											"var leadcustomerid = pm.globals.get(\"gcontactid3\");",
											"var leadcampusid = pm.globals.get(\"gaccountId6\");",
											"var leadmethodid = pm.globals.get(\"gsourcemethodid6\");",
											"var leadcategoryid = pm.globals.get(\"gsourcecategoryid6\");",
											"var leadprogramid = pm.globals.get(\"gProgram6\");",
											"var leadprogramlevelid = pm.globals.get(\"gprogramlevelid6\");",
											"var leadexpectedstartid = pm.globals.get(\"gacademicperiodid6\");",
											"var leadsubsourcecategoryid = pm.globals.get(\"gsubcategoryid6\");",
											"var leadcampaign = pm.globals.get(\"g_campaignid6\");",
											"var inboundid = pm.globals.get(\"gInboundid3\");",
											"var mobilephone = pm.globals.get(\"gmobilephone6\");",
											"var emailaddress1 = pm.globals.get(\"gemailaddress6\");",
											"var address1_county = pm.globals.get(\"gaddress1_county6\");",
											"var address1_country = pm.globals.get(\"gaddress1_country6\");",
											"var lastname = pm.globals.get(\"glastname6\");",
											"var firstname = pm.globals.get(\"gfirstname6\");",
											"var city = pm.globals.get(\"gcity6\");",
											"var stateorprovince = pm.globals.get(\"gstateorprovince6\");",
											"var address1_line1 = pm.globals.get(\"gaddress1_line16\");",
											"var address1_line2 = pm.globals.get(\"gaddress1_line26\");",
											"var address1_line3 = pm.globals.get(\"gaddress1_line36\");",
											"var telephone1 = pm.globals.get(\"gtelephone6\");",
											"var sourcedate = pm.globals.get(\"gsourcedate6\");",
											"var postalcode = pm.globals.get(\"gpostalcode6\");",
											"",
											"pm.test(\"Copied Fields values\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
											"    var jsonData = JSON.parse(responseBody);",
											"",
											"    concustomerid = jsonData.contactid;",
											"    console.log('concustomerid: ' + concustomerid);",
											"",
											"    concampusid = jsonData._cmc_sourcecampusid_value;",
											"    console.log('leadcampusid: ' + concampusid);",
											"",
											"    conprogramid = jsonData._cmc_srcprogramid_value;",
											"    console.log('leadprogramid: ' + conprogramid);",
											"",
											"     conprogramlevelid = jsonData._cmc_srcpogramlevelid_value;",
											"    console.log('leadprogramlevelid: ' + conprogramlevelid);",
											"",
											"    conexpectedstartid = jsonData._cmc_expectedstartid_value;",
											"    console.log('leadexpectedstartid: ' + conexpectedstartid);",
											"",
											"    conmethodid = jsonData._cmc_sourcemethodid_value;",
											"    console.log('conmethodid: ' + conmethodid);",
											"",
											"    concategoryid = jsonData._cmc_sourcecategoryid_value;",
											"    console.log('concategoryid: ' + concategoryid);",
											"",
											"    consubsourcecategoryid = jsonData._cmc_sourcesubcategoryid_value;",
											"    console.log('Consubsourcecategoryid: ' + consubsourcecategoryid);",
											"",
											"    concampaign = jsonData._cmc_sourcecampaignid_value;",
											"    console.log('concampaign: ' + concampaign);",
											"",
											"    originatinginboundinterest = jsonData._cmc_originatinginboundinterest_value;",
											"    console.log('originatinginboundinterest: ' + originatinginboundinterest);",
											"",
											"    conmobilephone = jsonData.mobilephone;",
											"    console.log('conmobilephone: ' + mobilephone);",
											"",
											"    conemailaddress1 = jsonData.emailaddress1;",
											"    console.log('conemailaddress1: ' + emailaddress1);",
											"",
											"    conaddress1_county = jsonData.address1_county;",
											"    console.log('conaddress1_county: ' + conaddress1_county);",
											"",
											"    conaddress1_country = jsonData.address1_country;",
											"    console.log('conaddress1_country: ' + conaddress1_country);",
											"     ",
											"    conlastname = jsonData.lastname;",
											"    console.log('conlastname: ' + conlastname);",
											"",
											"    confirstname = jsonData.firstname;",
											"    console.log('confirstname: ' + confirstname);",
											"",
											"    conaddress1_city = jsonData.address1_city;",
											"    console.log('conaddress1_city: ' + conaddress1_city);",
											"",
											"    constateorprovince = jsonData.address1_stateorprovince;",
											"    console.log('constateorprovince: ' + constateorprovince);",
											"     ",
											"    conaddress1_line1 = jsonData.address1_line1;",
											"    console.log('conaddress1_line1: ' + conaddress1_line1);",
											"",
											"    conaddress1_line2 = jsonData.address1_line2;",
											"    console.log('conaddress1_line2: ' + conaddress1_line2);",
											"",
											"    conaddress1_line3 = jsonData.address1_line3;",
											"    console.log('conaddress1_line3: ' + conaddress1_line3);",
											"     ",
											"    contelephone1 = jsonData.telephone1;",
											"    console.log('contelephone1: ' + contelephone1);",
											"",
											"    consourcedate = jsonData.cmc_sourcedate;",
											"    console.log('consourcedate: ' + consourcedate);",
											"",
											"    conpostalcode = jsonData.address1_postalcode;",
											"    console.log('conpostalcode: ' + conpostalcode);",
											"",
											"    //append student contact type",
											"    contacttype = jsonData.mshied_contacttype;",
											"     console.log('contacttype: ' + contacttype);",
											"",
											"    pm.test(\"Validate contacttype\", function () {",
											"        pm.expect(contacttype).to.equal('494280002');",
											"    });",
											"",
											"    pm.test(\"Validate method\", function () {",
											"        pm.expect(conmethodid).to.equal(leadmethodid);",
											"    });",
											"",
											"    pm.test(\"Validate mobilephone\", function () {",
											"        pm.expect(conmobilephone).to.equal(mobilephone);",
											"    });",
											"    ",
											"    pm.test(\"Validate emailaddress1\", function () {",
											"        pm.expect(conemailaddress1).to.equal(emailaddress1);",
											"    });",
											"    ",
											"    pm.test(\"Validate address1_county\", function () {",
											"         pm.expect(conaddress1_county).to.equal(address1_county);",
											"    });",
											"",
											"    pm.test(\"Validate address1_country\", function () {",
											"        pm.expect(conaddress1_country).to.equal(address1_country);",
											"    });",
											"",
											"    pm.test(\"Validate lastname\", function () {",
											"        pm.expect(conlastname).to.equal(lastname);",
											"    });",
											"",
											"    pm.test(\"Validate firstname\", function () {",
											"        pm.expect(confirstname).to.equal(firstname);",
											"    });",
											"",
											"    pm.test(\"Validate city\", function () {",
											"        pm.expect(conaddress1_city).to.equal(city);",
											"    });",
											"",
											"    pm.test(\"Validate stateorprovince\", function () {",
											"        pm.expect(constateorprovince).to.equal(stateorprovince);",
											"    });",
											"",
											"    pm.test(\"Validate address1_line1\", function () {",
											"        pm.expect(conaddress1_line1).to.equal(address1_line1);",
											"    });",
											"",
											"    pm.test(\"Validate address1_line2\", function () {",
											"        pm.expect(conaddress1_line2).to.equal(address1_line2);",
											"    });",
											"",
											"   pm.test(\"Validate address1_line3\", function () {",
											"        pm.expect(conaddress1_line3).to.equal(address1_line3);",
											"   });",
											"   ",
											"   pm.test(\"Validate telephone1\", function () {",
											"        pm.expect(contelephone1).not.equal(telephone1);",
											"   });",
											"   ",
											"   pm.test(\"Validate sourcedate\", function () {",
											"        pm.expect(consourcedate).to.equal(sourcedate);",
											"   });",
											"",
											"   pm.test(\"Validate postalcode\", function () {",
											"        pm.expect(conpostalcode).to.equal(postalcode);",
											"   });",
											"",
											"     pm.test(\"Validate Campus\", function () {",
											"        pm.expect(concampusid).to.equal(leadcampusid);",
											"     });",
											"",
											"     pm.test(\"Validate ProgramLevel\", function () {",
											"        pm.expect(conprogramlevelid).to.equal(leadprogramlevelid);",
											"     });",
											"",
											"     pm.test(\"Validate ExpectedStartDate\", function () {",
											"         pm.expect(conexpectedstartid).to.equal(leadexpectedstartid);",
											"     });",
											"",
											"      pm.test(\"Validate Program\", function () {",
											"         pm.expect(conprogramid).to.equal(leadprogramid);",
											"     });",
											"",
											"    pm.test(\"Validate Category\", function () {",
											"        pm.expect(concategoryid).to.equal(leadcategoryid);",
											"    });",
											"",
											"    pm.test(\"Validate Subcategory\", function () {",
											"        pm.expect(consubsourcecategoryid).to.equal(leadsubsourcecategoryid);",
											"    });",
											"",
											"    pm.test(\"Validate Campaign\", function () {",
											"        pm.expect(concampaign).to.equal(leadcampaign);",
											"    });",
											"",
											"    pm.test(\"Validate originatinginboundinterest\", function () {",
											"        pm.expect(inboundid).to.equal(originatinginboundinterest);",
											"    });",
											"",
											"",
											"    if (conmethodid === leadmethodid && concategoryid === leadcategoryid && consubsourcecategoryid === leadsubsourcecategoryid && concampaign === leadcampaign && inboundid === originatinginboundinterest) {",
											"        console.log('Initial Source Field Copied');",
											"    }",
											"    else {",
											"        console.log('Initial Source Field NOT Copied');",
											"    }",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{Eresource_URL}}contacts({{gcontactid3}})",
									"host": [
										"{{Eresource_URL}}contacts({{gcontactid3}})"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Details from Lifecycle3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var lifecampusid;",
											"var lifemethodid;",
											"var lifecategoryid;",
											"var lifeprogramid;",
											"var lifeprogramlevelid;",
											"var lifeexpectedstartid;",
											"var lifecustomerid;",
											"var lifecycletype;",
											"",
											"var campusid = pm.globals.get(\"gaccountId6\");",
											"var sourcemethodid = pm.globals.get(\"gsourcemethodid6\");",
											"var sourcecategoryid = pm.globals.get(\"gsourcecategoryid6\");",
											"var programid = pm.globals.get(\"gProgram6\");",
											"var programlevelid = pm.globals.get(\"gprogramlevelid6\");",
											"var expectedstartid = pm.globals.get(\"gexpectedstartId3\");",
											"var contactid = pm.globals.get(\"gcontactid3\");",
											"var type = pm.globals.get(\"gtype3\");",
											"var Inboundid = pm.globals.get(\"gInboundid6\");",
											"",
											"pm.test(\"Copied initial Source Fields\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
											"    var jsonData = JSON.parse(responseBody);",
											"",
											"    lifecampusid = jsonData._cmc_sourcecampusid_value;",
											"    console.log('lifecampusid: ' + lifecampusid);",
											"",
											"    lifemethodid = jsonData._cmc_sourcemethodid_value;",
											"    console.log('lifemethodid: ' + lifemethodid);",
											"",
											"    lifecategoryid = jsonData._cmc_sourcecategoryid_value;",
											"    console.log('lifecategoryid: ' + lifecategoryid);",
											"",
											"    lifeprogramid = jsonData._cmc_sourceprgmid_value;",
											"    console.log('lifeprogramid: ' + lifeprogramid);",
											"",
											"    lifeprogramlevelid = jsonData._cmc_srcprgmlevelid_value;",
											"    console.log('lifeprogramlevelid: ' + lifeprogramlevelid);",
											"",
											"    lifeexpectedstartid = jsonData._cmc_expectedstartid_value;",
											"    console.log('lifeexpectedstartid: ' + lifeexpectedstartid);",
											"",
											"    lifecustomerid = jsonData._customerid_value;",
											"    console.log('lifecustomerid: ' + lifecustomerid);",
											"",
											"    lifecycletype = jsonData.cmc_lifecycletype;",
											"    console.log('lifecycletype: ' + lifecycletype);",
											"",
											"    pm.test(\"Validate  lifecycletype\", function () {",
											"        pm.expect(type).to.equal( lifecycletype);",
											"    });",
											"",
											"    pm.test(\"Validate Campus\", function () {",
											"        pm.expect(campusid).to.equal(lifecampusid);",
											"    });",
											"",
											"    pm.test(\"Validate method\", function () {",
											"        pm.expect(sourcemethodid).to.equal(lifemethodid);",
											"    });",
											"",
											"    pm.test(\"Validate Category\", function () {",
											"        pm.expect(sourcecategoryid).to.equal(lifecategoryid);",
											"    });",
											"",
											"    pm.test(\"Validate Program\", function () {",
											"        pm.expect(programid).to.equal(lifeprogramid);",
											"    });",
											"",
											"    pm.test(\"Validate ProgramLevel\", function () {",
											"        pm.expect(programlevelid).to.equal(lifeprogramlevelid);",
											"    });",
											"",
											"    pm.test(\"Validate ExpectedStartDate\", function () {",
											"        pm.expect(expectedstartid).to.equal(lifeexpectedstartid);",
											"    });",
											"",
											"    pm.test(\"Validate contactid\", function () {",
											"        pm.expect(contactid).to.equal(lifecustomerid);",
											"    });",
											"",
											"     if (campusid === lifecampusid && sourcemethodid === lifemethodid && sourcecategoryid === lifecategoryid && programid === lifeprogramid && programlevelid === lifeprogramlevelid && expectedstartid === lifeexpectedstartid && contactid === lifecustomerid) {",
											"        console.log('Initial Source Field Copied');",
											"    }",
											"    else {",
											"        console.log('Initial Source Field NOT Copied');",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{Eresource_URL}}opportunities({{gqualifyingopportunityid6}})",
									"host": [
										"{{Eresource_URL}}opportunities({{gqualifyingopportunityid6}})"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Scenario 5 type-Graduate Admissions",
			"item": [
				{
					"name": "Create Contact3",
					"item": [
						{
							"name": "Create Contact4",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var contact_id;",
											"var Name;",
											"var campusid;",
											"var sourcemethodid;",
											"var programid;",
											"var programlevelid;",
											"var expectedstartid;",
											"var methodid;",
											"var categoryid;",
											"var subcategory;",
											"var campaign;",
											"",
											"pm.test(\"Contact Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    contact_id = jsonData.contactid;",
											"    Name = jsonData.fullname;",
											"    campusid = jsonData._cmc_sourcecampusid_value;",
											"    sourcemethodid = jsonData._cmc_sourcemethodid_value;",
											"    programid = jsonData._cmc_srcprogramid_value;",
											"    programlevelid = jsonData._cmc_srcpogramlevelid_value;",
											"    expectedstartid = jsonData._cmc_expectedstartid_value;",
											"    methodid = jsonData._cmc_sourcemethodid_value;",
											"    categoryid = jsonData._cmc_sourcecategoryid_value;",
											"    subcategory = jsonData._cmc_sourcesubcategoryid_value;",
											"    campaign = jsonData._cmc_sourcecampaignid_value;",
											"    console.log('Contact fullname: ' + Name);",
											"    console.log('campusid: ' + campusid);",
											"});",
											"",
											"var firstname = data.firstname;",
											"var lastname = data.lastname;",
											"var emailaddress1 = data.emailaddress1;",
											"var numberofchildren = data.numberofchildren;",
											"var recentsat = data.cmc_recentsat;",
											"var recentact = data.cmc_recentact;",
											"var mshied_contacttype = data.mshied_contacttype;",
											"var race = data.mshied_race;",
											"var ethnicgroup = data.mshied_ethnicgroup;",
											"var miltarystatus = data.mshied_miltarystatus;",
											"var shippingmethodcode = data.shippingmethodcode;",
											"var preferredcontactmethodcode = data.preferredcontactmethodcode;",
											"var nationality = data.mshied_nationality;",
											"var gendercode = data.gendercode;",
											"",
											"pm.globals.set('gcontactid4', contact_id);",
											"pm.globals.set('gexpectedstartid4', expectedstartid);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var moment = require('moment');\r",
											"pm.environment.set(\"timestamp\", moment().add(1, 'days').format(\"YYYY-MM-DD\"));\r",
											"pm.environment.set(\"timestampEndDate\", moment().add(100, 'days').format(\"YYYY-MM-DD\"));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									},
									{
										"key": "OData-Version",
										"value": "4.0"
									},
									{
										"key": "OData-MaxVersion",
										"value": "4.0"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "",
										"value": "",
										"type": "text",
										"disabled": true
									},
									{
										"key": "",
										"value": "",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"firstname\": \"{{$randomInt}}{{firstname}}{{$randomInt}}\",\r\n    \"lastname\": \"{{$randomInt}}{{lastname}}{{$randomInt}}\",\r\n    \"middlename\": \"mid{{$randomInt}}\",\r\n    \"mshied_maidenname\": \"maid{{$randomInt}}\",\r\n    \"mshied_legacy\": \"true\",\r\n    \"emailaddress1\": \"{{$randomInt}}{{emailaddress1}}\",\r\n    \"gendercode\": \"{{gendercode}}\",\r\n    \"anniversary\": \"{{timestamp}}\",\r\n    \"lastonholdtime\": \"{{timestamp}}\",\r\n    \"numberofchildren\": \"{{numberofchildren}}\",\r\n    \"nickname\": \"Nickname{{$randomInt}}\",\r\n    \"familystatuscode\": 2,\r\n    \"cmc_sourcedate\": \"{{timestamp}}\",\r\n    \"cmc_recentsat\": \"{{cmc_recentsat}}\",\r\n    \"cmc_recentact\": \"{{cmc_recentact}}\",\r\n    \"mshied_contacttype\": \"494280002,494280006\",\r\n    \"cmc_sourcecategoryid@odata.bind\": \"/contacts({{gsourcecategoryid6}})\",\r\n    \"cmc_sourcesubcategoryid@odata.bind\": \"/cmc_sourcesubcategories({{gsubcategoryid6}})\",\r\n    \"cmc_sourcecampaignid@odata.bind\": \"/campaigns({{g_campaignid6}})\",\r\n    \"cmc_sourcemethodid@odata.bind\": \"/contacts({{gsourcemethodid6}})\",\r\n    \"cmc_titleid@odata.bind\": \"/contacts({{gtitleid6}})\",\r\n    \"cmc_srcpogramlevelid@odata.bind\": \"/contacts({{gprogramlevelid6}})\",\r\n    \"cmc_srcprogramid@odata.bind\": \"/contacts({{gProgram6}})\",\r\n    \"cmc_educationlevelid@odata.bind\": \"/contacts({{geducationlevelid6}})\",\r\n    \"mshied_CurrentProgramLevelId@odata.bind\": \"/contacts({{gprogramlevelid6}})\",\r\n    \"mshied_CurrentProgramId@odata.bind\": \"/contacts({{gProgram6}})\",\r\n    \"mshied_CurrentAcademicPeriodId@odata.bind\": \"/mshied_academicperiods({{gacademicperiodid6}})\",\r\n    \"cmc_expectedstartid@odata.bind\": \"/mshied_academicperiods({{gacademicperiodid6}})\",\r\n    \"fax\": \"78865{{$randomInt}}30\",\r\n    \"cmc_phone2extension\": \"8083{{$randomInt}}569\",\r\n    \"websiteurl\": \"www.dcrm{{$randomInt}}.com\",\r\n    \"cmc_sourcecampusid@odata.bind\": \"/accounts({{gaccountId6}})\",\r\n    \"address1_county\":\"Delhi{{$randomInt}}\",\r\n    \"address1_country\":\"India{{$randomInt}}\",\r\n    \"address1_postalcode\":\"562109{{$randomInt}}\",\r\n    \"address1_stateorprovince\":\"Karanataka{{$randomInt}}\",\r\n    \"address1_city\":\"Bengaluru{{$randomInt}}\",\r\n    \"address1_line3\":\"Street3{{$randomInt}}\",\r\n    \"address1_line2\":\"Street2{{$randomInt}}\",\r\n    \"address1_line1\":\"Street1{{$randomInt}}\",\r\n    \"jobtitle\":\"QA{{$randomInt}}\",\r\n    \"telephone1\":\"988877{{$randomInt}}\",\r\n    \"mobilephone\":\"897678{{$randomInt}}\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}contacts",
									"host": [
										"{{Eresource_URL}}contacts"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get values from contact",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var lastname,contacttype ;",
											"var emailaddress1, programid,expectedstartid;",
											"",
											"pm.test(\"Fetching details from contact \", function()",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    lastname=jsonData.lastname;",
											"    console.log(\"lastname : \"+lastname);",
											"    emailaddress1=jsonData.emailaddress1;",
											"    console.log(\"emailaddress1 : \"+emailaddress1);",
											"    programid=jsonData._cmc_srcprogramid_value;",
											"    console.log(\"programid : \"+programid);",
											"    expectedstartid=jsonData._cmc_expectedstartid_value;",
											"    console.log(\"expectedstartid : \"+expectedstartid);",
											"    contacttype=jsonData.mshied_contacttype;",
											"    console.log(\"contacttype : \"+contacttype);",
											"});",
											"pm.globals.set('glastname7', lastname);",
											"pm.globals.set('gemailaddress7', emailaddress1);",
											"setTimeout(function(){}, 20000);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{Eresource_URL}}contacts({{gcontactid4}})",
									"host": [
										"{{Eresource_URL}}contacts({{gcontactid4}})"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Create Inbound Interest2",
					"item": [
						{
							"name": "Create Inbound Interest",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var Inboundid;",
											"var Inboundname;",
											"var contactid;",
											"var accountid;",
											"var methodid;",
											"var campaign;",
											"var categoryid;",
											"var programid;",
											"var programlevelid;",
											"var expectedstartid;",
											"var comments;",
											"var subcategory;",
											"var areaofinterestid;",
											"var type;",
											"var subcategory;",
											"",
											"pm.test(\"Lead Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    Inboundid = jsonData.leadid;",
											"    Inboundname = jsonData.fullname;",
											"    contactid = jsonData._customerid_value;",
											"    accountid = jsonData._cmc_sourcecampusid_value;",
											"    methodid = jsonData._cmc_sourcemethodid_value;",
											"    categoryid = jsonData._cmc_sourcecategoryid_value;",
											"    programid = jsonData._cmc_sourceprgmid_value;",
											"    programlevelid = jsonData._cmc_sourceprgmlevelid_value;",
											"    expectedstartid = jsonData._cmc_expectedstartid_value;",
											"    subcategory = jsonData._cmc_sourcesubcategoryid_value;",
											"    campaign = jsonData._cmc_sourcecampaignid_value",
											"    comments = jsonData.cmc_comments;",
											"    areaofinterestid = jsonData.cmc_areaofinterestid;",
											"    type = jsonData.cmc_type;",
											"",
											"    console.log('InboundID:' + Inboundid);",
											"    console.log('InBoundName:' + Inboundname);",
											"    console.log('ExpectedstartID:' + expectedstartid);",
											"});",
											"",
											"pm.globals.set('gInboundid4', Inboundid);",
											"pm.globals.set('gexpectedstartId4', expectedstartid);",
											"pm.globals.set('gtype4', type);",
											"setTimeout(function(){}, 26000);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const dateNow= new Date();\r",
											"pm.environment.set('currentDate', dateNow.toISOString());"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"address1_county\":\"Delhi{{$randomInt}}\",\r\n   \"address1_country\":\"India{{$randomInt}}\",\r\n   \"address1_postalcode\":\"562109{{$randomInt}}\",\r\n   \"address1_stateorprovince\":\"Karanataka{{$randomInt}}\",\r\n   \"address1_city\":\"Bengaluru{{$randomInt}}\",\r\n   \"address1_line3\":\"Street3{{$randomInt}}\",\r\n   \"address1_line2\":\"Street2{{$randomInt}}\",\r\n   \"address1_line1\":\"Street1{{$randomInt}}\",\r\n   \"jobtitle\":\"QA{{$randomInt}}\",\r\n   \"telephone1\":\"988877{{$randomInt}}\",\r\n   \"mobilephone\":\"897678{{$randomInt}}\",\r\n   \"emailaddress1\":\"{{gemailaddress7}}\",\r\n   \"lastname\":\"{{glastname7}}\",\r\n   \"firstname\":\"Lead-FirstName{{$randomInt}}{{$randomInt}}\",\r\n   \"cmc_sourcedate\": \"{{currentDate}}\",\r\n    \"cmc_sourcecampusid@odata.bind\": \"/accounts({{gaccountId5}})\",\r\n    \"cmc_sourceprgmlevelid@odata.bind\": \"/leads({{gprogramlevelid5}})\",\r\n    \"cmc_sourcecategoryid@odata.bind\": \"/leads({{gsourcecategoryid5}})\",\r\n    \"cmc_sourcecampaignid@odata.bind\": \"/campaigns({{g_campaignid5}})\",\r\n    \"cmc_sourcemethodid@odata.bind\": \"/leads({{gsourcemethodid5}})\",\r\n    \"cmc_sourcesubcategoryid@odata.bind\": \"/cmc_sourcesubcategories({{gsubcategoryid5}})\",\r\n    \"cmc_comments\":\"I'm Interested for MCA and MBA\",\r\n    \"cmc_areaofinterestid@odata.bind\":\"/mshied_areaofinterests({{gareaofinterestid5}})\",\r\n    \"cmc_type\":175490002\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}leads",
									"host": [
										"{{Eresource_URL}}leads"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Values from Inbound",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var parentcontactid;\r",
											"var contactid;\r",
											"var qualifyingopportunityid;\r",
											"var mobilephone;\r",
											"var emailaddress1;\r",
											"var address1_county;\r",
											"var campagin,sourcecampusid,areaofinterestid;\r",
											"var firstname,lastname;\r",
											"var stateorprovince,postalcode, city;\r",
											"var country,telephone1;\r",
											"var address1_country;\r",
											"var address1_line1,address1_line2,address1_line3;\r",
											"var sourcedate,expectedstartid,sourcemethodid;\r",
											"var sourcecategoryid,sourcesubcategoryid;\r",
											"var sourceprgmid,primary,sourceprgmlevelid,contacttype,statecode;\r",
											"\r",
											"pm.test(\"Fetch Values from lead\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);\r",
											"    var jsonData = JSON.parse(responseBody);\r",
											"    parentcontactid = jsonData._parentcontactid_value;\r",
											"    console.log('Parentcontactid:' + parentcontactid);\r",
											"    contactid = jsonData._customerid_value;\r",
											"    console.log('contactid:' + contactid);\r",
											"    primary = jsonData.cmc_primary;\r",
											"    console.log('primary:' + primary);\r",
											"    mobilephone = jsonData.mobilephone;\r",
											"    console.log('mobilephone:' + mobilephone);\r",
											"    emailaddress1 = jsonData.emailaddress1;\r",
											"    console.log('emailaddress1:' + emailaddress1);\r",
											"    address1_county = jsonData.address1_county;\r",
											"    console.log('address1_county:' + address1_county);\r",
											"    areaofinterestid = jsonData._cmc_areaofinterestid_value;\r",
											"    console.log('areaofinterestid:' + areaofinterestid);\r",
											"    lastname = jsonData.lastname;\r",
											"    console.log('lastname:' + lastname);\r",
											"    campagin = jsonData._cmc_sourcecampaignid_value;\r",
											"    console.log('campagin:' + campagin);\r",
											"    firstname = jsonData.firstname;\r",
											"    console.log('firstname:' + firstname);\r",
											"    city = jsonData.address1_city;\r",
											"    console.log('city:' + city);\r",
											"    stateorprovince = jsonData.address1_stateorprovince;\r",
											"    console.log('stateorprovince:' + stateorprovince);\r",
											"    address1_country = jsonData.address1_country;\r",
											"    console.log('country:' + country);\r",
											"    address1_line1 = jsonData.address1_line1;\r",
											"    console.log('address1_line1:' + address1_line1);\r",
											"    address1_line2 = jsonData.address1_line2;\r",
											"    console.log('address1_line2:' + address1_line2);\r",
											"    address1_line3 = jsonData.address1_line3;\r",
											"    console.log('address1_line3:' + address1_line3);\r",
											"    telephone1 = jsonData.telephone1;\r",
											"    console.log('telephone1:' + telephone1);\r",
											"    sourcemethodid = jsonData._cmc_sourcemethodid_value;\r",
											"    console.log('sourcemethodid:' + sourcemethodid);\r",
											"    sourcedate = jsonData.cmc_sourcedate;\r",
											"    console.log('sourcedate:' + sourcedate);\r",
											"    sourcecategoryid = jsonData._cmc_sourcecategoryid_value;\r",
											"    console.log('sourcecategoryid:' + sourcecategoryid);\r",
											"    sourceprgmid = jsonData._cmc_sourceprgmid_value;\r",
											"    console.log('sourceprgmid:' + sourceprgmid);\r",
											"    sourcecampusid = jsonData._cmc_sourcecampusid_value;\r",
											"    console.log('sourcecampusid:' +sourcecampusid);\r",
											"    postalcode = jsonData.address1_postalcode;\r",
											"    console.log('postalcode:' + postalcode);\r",
											"    expectedstartid = jsonData._cmc_expectedstartid_value;\r",
											"    console.log('expectedstartid:' +expectedstartid);\r",
											"    sourcesubcategoryid = jsonData._cmc_sourcesubcategoryid_value;\r",
											"    console.log('sourcesubcategoryid:' + sourcesubcategoryid);\r",
											"    sourceprgmlevelid = jsonData._cmc_sourceprgmlevelid_value;\r",
											"    console.log('sourceprgmlevelid:' +sourceprgmlevelid);\r",
											"    qualifyingopportunityid=jsonData._qualifyingopportunityid_value;\r",
											"    console.log('qualifyingopportunityid:' + qualifyingopportunityid);\r",
											"    contacttype = jsonData.cmc_contacttype;\r",
											"    console.log('contacttype:' +contacttype);\r",
											"    statecode = jsonData.statecode;\r",
											"    console.log('statecode:' +statecode);\r",
											"});\r",
											"\r",
											" pm.test(\"Validate  contacttype\", function () {\r",
											" pm.expect(contacttype).to.equal(494280011);\r",
											"    });\r",
											"\r",
											"pm.test(\"Validate  qualifyingopportunityid\", function () {\r",
											"pm.expect(qualifyingopportunityid).to.equal(null);\r",
											"    });\r",
											"\r",
											"pm.test(\"Validate Primary\", function () {\r",
											"pm.expect(primary).to.equal(true);\r",
											"});\r",
											"\r",
											"pm.test(\"Validate Qualify status\", function () {\r",
											" pm.expect(statecode).to.equal(0);\r",
											"});\r",
											"\r",
											"pm.globals.set('gcontactid4', contactid);\r",
											"pm.globals.set('gqualifyingopportunityid7', qualifyingopportunityid);\r",
											"pm.globals.set('gmobilephone7', mobilephone);\r",
											"pm.globals.set('gemailaddress7', emailaddress1);\r",
											"pm.globals.set('gaddress1_county7', address1_county);\r",
											"pm.globals.set('glastname7', lastname);\r",
											"pm.globals.set('gfirstname7', firstname);\r",
											"pm.globals.set('gcity7', city);\r",
											"pm.globals.set('gstateorprovince7', stateorprovince);\r",
											"pm.globals.set('gcountry7', country);\r",
											"pm.globals.set('gaddress1_country7', address1_country);\r",
											"pm.globals.set('gaddress1_line17', address1_line1);\r",
											"pm.globals.set('gaddress1_line27', address1_line2);\r",
											"pm.globals.set('gaddress1_line37', address1_line3);\r",
											"pm.globals.set('gtelephone7', telephone1);\r",
											"pm.globals.set('gsourcedate7', sourcedate);\r",
											"pm.globals.set('gpostalcode7', postalcode);"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Prefer",
										"value": "return=representation",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Eresource_URL}}leads({{gInboundid4}})",
									"host": [
										"{{Eresource_URL}}leads({{gInboundid4}})"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Details from Contact",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var concustomerid;",
											"var concampusid;",
											"var conmethodid;",
											"var concategoryid;",
											"var conprogramid;",
											"var conprogramlevelid;",
											"var conexpectedstartid;",
											"var consubsourcecategoryid; ",
											"var concampaign,conlastname;",
											"var originatinginboundinterest;",
											"var conmobilephone,conemailaddress1;",
											"var conaddress1_county,conaddress1_country,confirstname;",
											"var conaddress1_city,constateorprovince;",
											"var conaddress1_line1,conaddress1_line2,conaddress1_line3;",
											"var contelephone1,consourcedate,conpostalcode,contacttype;",
											"",
											"var leadcustomerid = pm.globals.get(\"gcontactid4\");",
											"var leadcampusid = pm.globals.get(\"gaccountId5\");",
											"var leadmethodid = pm.globals.get(\"gsourcemethodid5\");",
											"var leadcategoryid = pm.globals.get(\"gsourcecategoryid5\");",
											"var leadprogramid = pm.globals.get(\"gProgram5\");",
											"var leadprogramlevelid = pm.globals.get(\"gprogramlevelid5\");",
											"var leadexpectedstartid = pm.globals.get(\"gexpectedstartId5\");",
											"var leadsubsourcecategoryid = pm.globals.get(\"gsubcategoryid5\");",
											"var leadcampaign = pm.globals.get(\"g_campaignid5\");",
											"var inboundid = pm.globals.get(\"gInboundid4\");",
											"var mobilephone = pm.globals.get(\"gmobilephone7\");",
											"var emailaddress1 = pm.globals.get(\"gemailaddress7\");",
											"var address1_county = pm.globals.get(\"gaddress1_county7\");",
											"var address1_country = pm.globals.get(\"gaddress1_country5\");",
											"var lastname = pm.globals.get(\"glastname7\");",
											"var firstname = pm.globals.get(\"gfirstname7\");",
											"var city = pm.globals.get(\"gcity7\");",
											"var stateorprovince = pm.globals.get(\"gstateorprovince7\");",
											"var address1_line1 = pm.globals.get(\"gaddress1_line17\");",
											"var address1_line2 = pm.globals.get(\"gaddress1_line27\");",
											"var address1_line3 = pm.globals.get(\"gaddress1_line37\");",
											"var telephone1 = pm.globals.get(\"gtelephone7\");",
											"var sourcedate = pm.globals.get(\"gsourcedate7\");",
											"var postalcode = pm.globals.get(\"gpostalcode7\");",
											"",
											"pm.test(\"Copied Fields values\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
											"    var jsonData = JSON.parse(responseBody);",
											"",
											"    concustomerid = jsonData.contactid;",
											"    console.log('concustomerid: ' + concustomerid);",
											"",
											"    concampusid = jsonData._cmc_sourcecampusid_value;",
											"    console.log('leadcampusid: ' + concampusid);",
											"",
											"    conprogramid = jsonData._cmc_srcprogramid_value;",
											"    console.log('leadprogramid: ' + conprogramid);",
											"",
											"     conprogramlevelid = jsonData._cmc_srcpogramlevelid_value;",
											"    console.log('leadprogramlevelid: ' + conprogramlevelid);",
											"",
											"    conexpectedstartid = jsonData._cmc_expectedstartid_value;",
											"    console.log('leadexpectedstartid: ' + conexpectedstartid);",
											"",
											"    conmethodid = jsonData._cmc_sourcemethodid_value;",
											"    console.log('conmethodid: ' + conmethodid);",
											"",
											"    concategoryid = jsonData._cmc_sourcecategoryid_value;",
											"    console.log('concategoryid: ' + concategoryid);",
											"",
											"    consubsourcecategoryid = jsonData._cmc_sourcesubcategoryid_value;",
											"    console.log('Consubsourcecategoryid: ' + consubsourcecategoryid);",
											"",
											"    concampaign = jsonData._cmc_sourcecampaignid_value;",
											"    console.log('concampaign: ' + concampaign);",
											"",
											"    originatinginboundinterest = jsonData._cmc_originatinginboundinterest_value;",
											"    console.log('originatinginboundinterest: ' + originatinginboundinterest);",
											"",
											"    conmobilephone = jsonData.mobilephone;",
											"    console.log('conmobilephone: ' + mobilephone);",
											"",
											"    conemailaddress1 = jsonData.emailaddress1;",
											"    console.log('conemailaddress1: ' + emailaddress1);",
											"",
											"    conaddress1_county = jsonData.address1_county;",
											"    console.log('conaddress1_county: ' + conaddress1_county);",
											"",
											"    conaddress1_country = jsonData.address1_country;",
											"    console.log('conaddress1_country: ' + conaddress1_country);",
											"     ",
											"    conlastname = jsonData.lastname;",
											"    console.log('conlastname: ' + conlastname);",
											"",
											"    confirstname = jsonData.firstname;",
											"    console.log('confirstname: ' + confirstname);",
											"",
											"    conaddress1_city = jsonData.address1_city;",
											"    console.log('conaddress1_city: ' + conaddress1_city);",
											"",
											"    constateorprovince = jsonData.address1_stateorprovince;",
											"    console.log('constateorprovince: ' + constateorprovince);",
											"     ",
											"    conaddress1_line1 = jsonData.address1_line1;",
											"    console.log('conaddress1_line1: ' + conaddress1_line1);",
											"",
											"    conaddress1_line2 = jsonData.address1_line2;",
											"    console.log('conaddress1_line2: ' + conaddress1_line2);",
											"",
											"    conaddress1_line3 = jsonData.address1_line3;",
											"    console.log('conaddress1_line3: ' + conaddress1_line3);",
											"     ",
											"    contelephone1 = jsonData.telephone1;",
											"    console.log('contelephone1: ' + contelephone1);",
											"",
											"    consourcedate = jsonData.cmc_sourcedate;",
											"    console.log('consourcedate: ' + consourcedate);",
											"",
											"    conpostalcode = jsonData.address1_postalcode;",
											"    console.log('conpostalcode: ' + conpostalcode);",
											"",
											"    //append student contact type",
											"    contacttype = jsonData.mshied_contacttype;",
											"     console.log('contacttype: ' + contacttype);",
											"",
											"    pm.test(\"Validate contacttype\", function () {",
											"        pm.expect(contacttype).to.equal(\"494280002,494280006\");",
											"    });",
											"",
											"    pm.test(\"Validate method\", function () {",
											"        pm.expect(conmethodid).to.equal(leadmethodid);",
											"    });",
											"",
											"    pm.test(\"Validate mobilephone\", function () {",
											"        pm.expect(conmobilephone).not.equal(mobilephone);",
											"    });",
											"    ",
											"    pm.test(\"Validate emailaddress1\", function () {",
											"        pm.expect(conemailaddress1).to.equal(emailaddress1);",
											"    });",
											"    ",
											"    pm.test(\"Validate address1_county\", function () {",
											"         pm.expect(conaddress1_county).not.equal(address1_county);",
											"    });",
											"",
											"    pm.test(\"Validate address1_country\", function () {",
											"        pm.expect(conaddress1_country).not.equal(address1_country);",
											"    });",
											"",
											"    pm.test(\"Validate lastname\", function () {",
											"        pm.expect(conlastname).to.equal(lastname);",
											"    });",
											"",
											"    pm.test(\"Validate firstname\", function () {",
											"        pm.expect(confirstname).not.equal(firstname);",
											"    });",
											"",
											"    pm.test(\"Validate city\", function () {",
											"        pm.expect(conaddress1_city).not.equal(city);",
											"    });",
											"",
											"    pm.test(\"Validate stateorprovince\", function () {",
											"        pm.expect(constateorprovince).not.equal(stateorprovince);",
											"    });",
											"",
											"    pm.test(\"Validate address1_line1\", function () {",
											"        pm.expect(conaddress1_line1).not.equal(address1_line1);",
											"    });",
											"",
											"    pm.test(\"Validate address1_line2\", function () {",
											"        pm.expect(conaddress1_line2).not.equal(address1_line2);",
											"    });",
											"",
											"   pm.test(\"Validate address1_line3\", function () {",
											"        pm.expect(conaddress1_line3).not.equal(address1_line3);",
											"   });",
											"   ",
											"   pm.test(\"Validate telephone1\", function () {",
											"        pm.expect(contelephone1).not.equal(telephone1);",
											"   });",
											"   ",
											"   pm.test(\"Validate sourcedate\", function () {",
											"        pm.expect(consourcedate).to.equal(sourcedate);",
											"   });",
											"",
											"   pm.test(\"Validate postalcode\", function () {",
											"        pm.expect(conpostalcode).not.equal(postalcode);",
											"   });",
											"",
											"     pm.test(\"Validate Campus\", function () {",
											"        pm.expect(concampusid).to.equal(leadcampusid);",
											"     });",
											"",
											"     pm.test(\"Validate ProgramLevel\", function () {",
											"        pm.expect(conprogramlevelid).to.equal(leadprogramlevelid);",
											"     });",
											"",
											"      pm.test(\"Validate Program\", function () {",
											"         pm.expect(conprogramid).not.equal(leadprogramid);",
											"     });",
											"",
											"    pm.test(\"Validate Category\", function () {",
											"        pm.expect(concategoryid).to.equal(leadcategoryid);",
											"    });",
											"",
											"    pm.test(\"Validate Subcategory\", function () {",
											"        pm.expect(consubsourcecategoryid).to.equal(leadsubsourcecategoryid);",
											"    });",
											"",
											"    pm.test(\"Validate Campaign\", function () {",
											"        pm.expect(concampaign).to.equal(leadcampaign);",
											"    });",
											"",
											"    pm.test(\"Validate originatinginboundinterest\", function () {",
											"        pm.expect(inboundid).to.equal(originatinginboundinterest);",
											"    });",
											"",
											"",
											"    if (conmethodid === leadmethodid && concategoryid === leadcategoryid && consubsourcecategoryid === leadsubsourcecategoryid && concampaign === leadcampaign && inboundid === originatinginboundinterest) {",
											"        console.log('Initial Source Field Copied');",
											"    }",
											"    else {",
											"        console.log('Initial Source Field NOT Copied');",
											"    }",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{Eresource_URL}}contacts({{gcontactid4}})",
									"host": [
										"{{Eresource_URL}}contacts({{gcontactid4}})"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Activate Auto Name Work Flow",
			"item": [
				{
					"name": "GetUser - DCRM System Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody);",
									"postman.setGlobalVariable('gaccess_token', data.access_token);",
									"",
									"//pm.environment.set(\"Eaccess_token\", data.access_token);",
									"console.log(pm.globals.get(\"gaccess_token\"));",
									"",
									"",
									"",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "grant_type",
									"value": "client_credentials",
									"type": "text"
								},
								{
									"key": "client_id",
									"value": "{{Esystemadmin_id}}",
									"type": "text"
								},
								{
									"key": "client_secret",
									"value": "{{Esystemadmin_secret}}",
									"type": "text"
								},
								{
									"key": "resource",
									"value": "{{Eresource}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "https://login.microsoftonline.com/{{Eredirectid}}/oauth2/token",
							"protocol": "https",
							"host": [
								"login",
								"microsoftonline",
								"com"
							],
							"path": [
								"{{Eredirectid}}",
								"oauth2",
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Inbound Interest - Auto Name_New",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var workflowid,workflowname;\r",
									"pm.test(\"GetWorkflow\", function() \r",
									"{\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
									"    var jsonData =JSON.parse(responseBody);\r",
									"    workflowid = jsonData.workflowid;\r",
									"    workflowname=jsonData.name;\r",
									"\r",
									"    console.log(\"Workflow name: \" +workflowname);\r",
									"});\r",
									"pm.globals.set('gworkflowid2',workflowid);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Prefer",
								"value": "return=representation"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{gaccess_token}}"
							},
							{
								"key": "MSCRM.SuppressDuplicateDetection",
								"type": "text",
								"value": "false"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{Eresource_URL}}workflows(e4e16e24-d6ef-4abf-9284-1a0f864d7d4d)",
							"host": [
								"{{Eresource_URL}}workflows(e4e16e24-d6ef-4abf-9284-1a0f864d7d4d)"
							]
						}
					},
					"response": []
				},
				{
					"name": "Activate Inbound Interest - Auto Name_New",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var workflowid,workflowname,statecode,statuscode;\r",
									"pm.test(\"Activate Workflow\", function() \r",
									"{\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
									"    var jsonData =JSON.parse(responseBody);\r",
									"    workflowid = jsonData.workflowid;\r",
									"    workflowname=jsonData.name;\r",
									"    statecode=jsonData.statecode;\r",
									"    statuscode=jsonData.statuscode;\r",
									"\r",
									"    console.log(\"Workflow name: \" +workflowname);\r",
									"\r",
									"    pm.test(\"statecode check\", function()\r",
									"        {\r",
									"            pm.expect(statecode).to.equal(1);\r",
									"        });\r",
									"     pm.test(\"statuscode check\", function()\r",
									"        {\r",
									"            pm.expect(statuscode).to.equal(2);\r",
									"        });\r",
									"\r",
									"    \r",
									"    \r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Prefer",
								"value": "return=representation"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{gaccess_token}}"
							},
							{
								"key": "MSCRM.SuppressDuplicateDetection",
								"type": "text",
								"value": "false"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"statecode\": 1,\r\n    \"statuscode\": 2\r\n}"
						},
						"url": {
							"raw": "{{Eresource_URL}}workflows({{gworkflowid2}})",
							"host": [
								"{{Eresource_URL}}workflows({{gworkflowid2}})"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}