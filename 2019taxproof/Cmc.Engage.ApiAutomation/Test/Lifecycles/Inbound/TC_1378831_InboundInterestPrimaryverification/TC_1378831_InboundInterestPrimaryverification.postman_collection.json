{
	"info": {
		"_postman_id": "c713d9a8-7817-4c49-8ef7-995d626672d2",
		"name": "TC_1378831_InboundInterestPrimaryverification",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Create Contact",
			"item": [
				{
					"name": "GetToken_DCRM Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody);",
									"postman.setGlobalVariable('gaccess_token', data.access_token);",
									"console.log(pm.globals.get(\"gaccess_token\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "grant_type",
									"value": "client_credentials",
									"type": "text"
								},
								{
									"key": "client_id",
									"value": "{{Eadmin_id}}",
									"type": "text"
								},
								{
									"key": "client_secret",
									"value": "{{Eadmin_secret}}",
									"type": "text"
								},
								{
									"key": "resource",
									"value": "{{Eresource}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "https://login.microsoftonline.com/{{Eredirectid}}/oauth2/token",
							"protocol": "https",
							"host": [
								"login",
								"microsoftonline",
								"com"
							],
							"path": [
								"{{Eredirectid}}",
								"oauth2",
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Academic period",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var academicperiodid;",
									"var academicperiodname;",
									"",
									"pm.test(\"Academicperiodid Created\", function() ",
									"{",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202,204]);",
									"    var jsonData =JSON.parse(responseBody);",
									"    academicperiodid = jsonData.mshied_academicperiodid;",
									"    academicperiodname = jsonData.mshied_name;",
									"    console.log('academicperiodname: '+academicperiodname);",
									" ",
									"});",
									"pm.globals.set('gacademicperiodid',academicperiodid);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var moment = require('moment');\r",
									"pm.environment.set(\"timestamp\", moment().add(1, 'days').format(\"YYYY-MM-DD\"));\r",
									"pm.environment.set(\"timestampEndDate\", moment().add(102, 'days').format(\"YYYY-MM-DD\"));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Prefer",
								"value": "return=representation"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{gaccess_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"mshied_name\": \"{{cmc_academicperiodname}}Inbound23{{$randomInt}}\",\r\n    \"mshied_startdate\": \"{{timestamp}}\",\r\n    \"mshied_enddate\": \"{{timestampEndDate}}\",\r\n    \"mshied_code\": \"{{$randomInt}}In77{{$randomInt}}dd{{$randomInt}}\"\r\n}"
						},
						"url": {
							"raw": "{{Eresource_URL}}mshied_academicperiods",
							"host": [
								"{{Eresource_URL}}mshied_academicperiods"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Account",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var account_id; ",
									"var Accname;",
									"pm.test(\"Account Created\", function() ",
									"{",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
									"    var jsonData =JSON.parse(responseBody);",
									"    account_id = jsonData.accountid;",
									"    Accname = jsonData.name;",
									"    console.log(Accname);",
									"    ",
									"});",
									"var accname = data.name;",
									"var accounttype = data.mshied_accounttype;",
									"pm.globals.set('gaccountId',account_id);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Prefer",
								"value": "return=representation"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{gaccess_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"{{name}}{{$randomInt}}\",\r\n    \"mshied_accounttype\": \"{{mshied_accounttype}}\",\r\n    \"cmc_accountcode\": \"Acc{{$randomInt}}\"\r\n}"
						},
						"url": {
							"raw": "{{Eresource_URL}}accounts",
							"host": [
								"{{Eresource_URL}}accounts"
							]
						},
						"description": "Create Account with new Address"
					},
					"response": []
				},
				{
					"name": "Create Campaign",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var campaignid;",
									"pm.test(\"Account Created\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
									"    var jsonData = JSON.parse(responseBody);",
									"    campaignid = jsonData.campaignid;",
									"    console.log(\"campaignid: \", campaignid);",
									"});",
									"pm.globals.set('g_campaignid', campaignid);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Prefer",
								"value": "return=representation"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{gaccess_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"{{$randomInt}}-TestCampaign-{{$randomInt}}\"\r\n}"
						},
						"url": {
							"raw": "{{Eresource_URL}}campaigns",
							"host": [
								"{{Eresource_URL}}campaigns"
							]
						},
						"description": "Create Account with new Address"
					},
					"response": []
				},
				{
					"name": "Create Source Category",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var sourcecategoryid;",
									"pm.test(\"Create Sourcecategory\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
									"    var jsonData = JSON.parse(responseBody);",
									"",
									"    sourcecategoryid = jsonData.cmc_sourcecategoryid;",
									"    console.log(\"sourcecategoryid : \" + sourcecategoryid);",
									"});",
									"pm.globals.set('gsourcecategoryid', sourcecategoryid);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Prefer",
								"value": "return=representation"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{gaccess_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"cmc_sourcecategoryname\": \"{{$randomInt}}-TestSoucreCategor-y{{$randomInt}}\"\n}"
						},
						"url": {
							"raw": "{{Eresource_URL}}cmc_sourcecategories",
							"host": [
								"{{Eresource_URL}}cmc_sourcecategories"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create SubCategory",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var subcategory;",
									"var Accname;",
									"pm.test(\"SourceSub Category Created\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
									"    var jsonData = JSON.parse(responseBody);",
									"",
									"    subcategory = jsonData.cmc_sourcesubcategoryid;",
									"    console.log(\"subcategory: \",subcategory);",
									"    pm.globals.set('gsubcategoryid', subcategory);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Prefer",
								"value": "return=representation"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{gaccess_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"cmc_sourcesubcategoryname\": \"TestSubCategory{{$randomInt}}\"\r\n}"
						},
						"url": {
							"raw": "{{Eresource_URL}}cmc_sourcesubcategories",
							"host": [
								"{{Eresource_URL}}cmc_sourcesubcategories"
							]
						},
						"description": "Create Account with new Address"
					},
					"response": []
				},
				{
					"name": "Create Program",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var programid;",
									"var programname;",
									"pm.test(\"Get Program\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
									"    var jsonData = JSON.parse(responseBody);",
									"",
									"    programid = jsonData.mshied_programid;",
									"    programname = jsonData.mshied_name;",
									"    console.log(\"Program ID: \" + programid);",
									"    console.log(\"Program Name: \" + programname);",
									"});",
									"pm.globals.set('gProgram1', programid);",
									"pm.globals.set('gProgramName1', programname);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Prefer",
								"value": "return=representation"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{gaccess_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"mshied_code\": \"{{$randomInt}}Prg1{{$randomInt}}{{$randomInt}}\",\n    \"mshied_name\": \"code{{$randomInt}}\"\n}"
						},
						"url": {
							"raw": "{{Eresource_URL}}mshied_programs",
							"host": [
								"{{Eresource_URL}}mshied_programs"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Source Method1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var sourcemethodid;",
									"var sourcemethodname;",
									"pm.test(\"Create sourcemethod\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
									"    var jsonData = JSON.parse(responseBody);",
									"",
									"    sourcemethodid = jsonData.cmc_sourcemethodid;",
									"    console.log(\"sourcemethodid : \" + sourcemethodid);",
									"",
									"    sourcemethodname = jsonData.cmc_sourcemethodname;",
									"    console.log(\"sourcemethodname : \" + sourcemethodname);",
									"});",
									"pm.globals.set('gsourcemethodid1', sourcemethodid);",
									"pm.globals.set('gsourcemethodname1', sourcemethodname);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Prefer",
								"value": "return=representation"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{gaccess_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"cmc_sourcemethodname\": \"{{$randomInt}}-TestSoucreMethod{{$randomInt}}\"\n}"
						},
						"url": {
							"raw": "{{Eresource_URL}}cmc_sourcemethods",
							"host": [
								"{{Eresource_URL}}cmc_sourcemethods"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Role/Title",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var titleid;",
									"pm.test(\"Create title\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
									"    var jsonData = JSON.parse(responseBody);",
									"",
									"    titleid = jsonData.cmc_titleid;",
									"    console.log(\"titleid : \" + titleid);",
									"});",
									"pm.globals.set('gtitleid', titleid);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Prefer",
								"value": "return=representation"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{gaccess_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"cmc_titlename\": \"{{$randomInt}}-Test-Title-{{$randomInt}}\"\n}"
						},
						"url": {
							"raw": "{{Eresource_URL}}cmc_titles",
							"host": [
								"{{Eresource_URL}}cmc_titles"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Program Level",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var programlevelid;",
									"pm.test(\"Create Sourcecategory\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
									"    var jsonData = JSON.parse(responseBody);",
									"",
									"    programlevelid = jsonData.mshied_programlevelid;",
									"    console.log(\"programlevelid : \" + programlevelid);",
									"});",
									"pm.globals.set('gprogramlevelid', programlevelid);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Prefer",
								"value": "return=representation"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{gaccess_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"mshied_code\": \"{{$randomInt}}-Code{{$randomInt}}{{$randomInt}}\",\n    \"mshied_name\": \"{{$randomInt}}-Test-PrgLevel-{{$randomInt}}\"\n}"
						},
						"url": {
							"raw": "{{Eresource_URL}}mshied_programlevels",
							"host": [
								"{{Eresource_URL}}mshied_programlevels"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Education Level",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var educationlevelid;",
									"pm.test(\"Create educationlevelid\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
									"    var jsonData = JSON.parse(responseBody);",
									"",
									"    educationlevelid = jsonData.mshied_educationlevelid;",
									"    console.log(\"educationlevelid : \" + educationlevelid);",
									"});",
									"pm.globals.set('geducationlevelid', educationlevelid);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Prefer",
								"value": "return=representation"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{gaccess_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"mshied_code\": \"{{$randomInt}}-Code{{$randomInt}}{{$randomInt}}\",\n    \"mshied_name\": \"{{$randomInt}}-Test-EduLevel-{{$randomInt}}\"\n}"
						},
						"url": {
							"raw": "{{Eresource_URL}}mshied_educationlevels",
							"host": [
								"{{Eresource_URL}}mshied_educationlevels"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Area of Interest",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var areaofinterestid;",
									"var areaofinterestname;",
									"",
									"pm.test(\"Create Area of Interest\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
									"    var jsonData = JSON.parse(responseBody);",
									"",
									"    areaofinterestid = jsonData.mshied_areaofinterestid;",
									"    console.log(\"area of interest id : \" + areaofinterestid);",
									"",
									"    areaofinterestname = jsonData.mshied_name;",
									"    console.log(\"area of interest name : \" + areaofinterestname);",
									"",
									"});",
									"pm.globals.set('gareaofinterestid', areaofinterestid);",
									"pm.globals.set('gareaofinterestname', areaofinterestname);",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Prefer",
								"value": "return=representation"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{gaccess_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"mshied_code\": \"{{$randomInt}}-Code{{$randomInt}}{{$randomInt}}\",\n    \"mshied_name\": \"{{$randomInt}}-Test-AreaOfInterest-{{$randomInt}}\"\n}"
						},
						"url": {
							"raw": "{{Eresource_URL}}mshied_areaofinterests",
							"host": [
								"{{Eresource_URL}}mshied_areaofinterests"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Contact",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var contact_id;",
									"var Name;",
									"var campusid;",
									"var sourcemethodid;",
									"var programid;",
									"var programlevelid;",
									"var expectedstartid;",
									"var methodid;",
									"var categoryid;",
									"var subcategory;",
									"var campaign,contacttype;",
									"",
									"pm.test(\"Contact Created\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
									"    var jsonData = JSON.parse(responseBody);",
									"    contact_id = jsonData.contactid;",
									"    Name = jsonData.fullname;",
									"    campusid = jsonData._cmc_sourcecampusid_value;",
									"    sourcemethodid = jsonData._cmc_sourcemethodid_value;",
									"    programid = jsonData._cmc_srcprogramid_value;",
									"    programlevelid = jsonData._cmc_srcpogramlevelid_value;",
									"    expectedstartid = jsonData._cmc_expectedstartid_value;",
									"    methodid = jsonData._cmc_sourcemethodid_value;",
									"    categoryid = jsonData._cmc_sourcecategoryid_value;",
									"    subcategory = jsonData._cmc_sourcesubcategoryid_value;",
									"    campaign = jsonData._cmc_sourcecampaignid_value;",
									"    console.log('Contact fullname: ' + Name);",
									"    console.log('campusid: ' + campusid);",
									"    contacttype = jsonData.mshied_contacttype;",
									"    console.log('contacttype: ' + contacttype);",
									"});",
									"",
									"var firstname = data.firstname;",
									"var lastname = data.lastname;",
									"var emailaddress1 = data.emailaddress1;",
									"",
									"",
									"pm.globals.set('gcontactid', contact_id);",
									"pm.globals.set('gcontacttype', contacttype);",
									"pm.globals.set('gexpectedstartid', expectedstartid);",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var moment = require('moment');\r",
									"pm.environment.set(\"timestamp\", moment().add(1, 'days').format(\"YYYY-MM-DD\"));\r",
									"pm.environment.set(\"timestampEndDate\", moment().add(100, 'days').format(\"YYYY-MM-DD\"));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Prefer",
								"value": "return=representation"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{gaccess_token}}"
							},
							{
								"key": "OData-Version",
								"value": "4.0"
							},
							{
								"key": "OData-MaxVersion",
								"value": "4.0"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							},
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"firstname\": \"{{firstname}}{{$randomInt}}\",\r\n    \"lastname\": \"{{lastname}}{{$randomInt}}\",\r\n    \"middlename\": \"mid{{$randomInt}}\",\r\n    \"mshied_maidenname\": \"maid{{$randomInt}}\",\r\n    \"emailaddress1\": \"{{$randomInt}}{{emailaddress1}}\",\r\n    \"lastonholdtime\": \"{{timestamp}}\",\r\n    \"cmc_sourcedate\": \"{{timestamp}}\",\r\n    \"mshied_contacttype\": \"494280002,494280006\",\r\n    \"cmc_sourcecategoryid@odata.bind\": \"/contacts({{gsourcecategoryid}})\",\r\n    \"cmc_sourcesubcategoryid@odata.bind\": \"/cmc_sourcesubcategories({{gsubcategoryid}})\",\r\n    \"cmc_sourcecampaignid@odata.bind\": \"/campaigns({{g_campaignid}})\",\r\n    \"cmc_sourcemethodid@odata.bind\": \"/contacts({{gsourcemethodid1}})\",\r\n    \"cmc_titleid@odata.bind\": \"/contacts({{gtitleid}})\",\r\n    \"cmc_srcpogramlevelid@odata.bind\": \"/contacts({{gprogramlevelid}})\",\r\n    \"cmc_srcprogramid@odata.bind\": \"/contacts({{gProgram1}})\",\r\n    \"cmc_educationlevelid@odata.bind\": \"/contacts({{geducationlevelid}})\",\r\n    \"mshied_CurrentProgramLevelId@odata.bind\": \"/contacts({{gprogramlevelid}})\",\r\n    \"mshied_CurrentProgramId@odata.bind\": \"/contacts({{gProgram1}})\",\r\n    \"mshied_CurrentAcademicPeriodId@odata.bind\": \"/mshied_academicperiods({{gacademicperiodid}})\",\r\n    \"cmc_expectedstartid@odata.bind\": \"/mshied_academicperiods({{gacademicperiodid}})\",\r\n    \"fax\": \"78865{{$randomInt}}30\",\r\n    \"mobilephone\": \"78965{{$randomInt}}30\",\r\n    \"telephone1\": \"8569{{$randomInt}}230\",\r\n    \"cmc_phone2extension\": \"8083{{$randomInt}}569\",\r\n    \"websiteurl\": \"www.dcrm{{$randomInt}}.com\",\r\n    \"cmc_sourcecampusid@odata.bind\": \"/accounts({{gaccountId}})\"\r\n}"
						},
						"url": {
							"raw": "{{Eresource_URL}}contacts",
							"host": [
								"{{Eresource_URL}}contacts"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Qualify",
			"item": [
				{
					"name": "Create Inbound Interest 1",
					"item": [
						{
							"name": "Create Area of Interest",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var areaofinterestid;",
											"var areaofinterestname;",
											"",
											"pm.test(\"Create Area of Interest\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"",
											"    areaofinterestid = jsonData.mshied_areaofinterestid;",
											"    console.log(\"area of interest id : \" + areaofinterestid);",
											"",
											"    areaofinterestname = jsonData.mshied_name;",
											"    console.log(\"area of interest name : \" + areaofinterestname);",
											"",
											"});",
											"pm.globals.set('gareaofinterestid1', areaofinterestid);",
											"pm.globals.set('gareaofinterestname1', areaofinterestname);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"mshied_code\": \"{{$randomInt}}-{{$randomInt}}e1 - {{$randomInt}}\",\n    \"mshied_name\": \"{{$randomInt}}-Test-AreaOfInterest1-{{$randomInt}}\"\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}mshied_areaofinterests",
									"host": [
										"{{Eresource_URL}}mshied_areaofinterests"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Account",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var account_id; ",
											"var Accname;",
											"pm.test(\"Account Created\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    account_id = jsonData.accountid;",
											"    Accname = jsonData.name;",
											"    console.log(Accname);",
											"});",
											"",
											"var accname = data.name;",
											"var accounttype = data.mshied_accounttype;",
											"pm.globals.set('gaccountId2',account_id);",
											"pm.globals.set('gAccname1',Accname);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n \"name\":\"{{name}}na{{$randomInt}}\",\r\n \"mshied_accounttype\":\"{{mshied_accounttype}}\",\r\n \"cmc_accountcode\":\"Acc2{{$randomInt}}\",\r\n \"preferredcontactmethodcode\":1\r\n} "
								},
								"url": {
									"raw": "{{Eresource_URL}}accounts",
									"host": [
										"{{Eresource_URL}}accounts"
									]
								},
								"description": "Create Account with new Address"
							},
							"response": []
						},
						{
							"name": "Create Program",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var programid;",
											"var programname;",
											"pm.test(\"Create Program\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"",
											"    programid = jsonData.mshied_programid;",
											"    programname = jsonData.mshied_name;",
											"    console.log(\"Program ID: \" + programid);",
											"    console.log(\"Program Name: \" + programname);",
											"});",
											"pm.globals.set('gProgram2', programid);",
											"pm.globals.set('gProgramName2', programname);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"mshied_code\": \"{{$randomInt}}Pr{{$randomInt}}g2{{$randomInt}}\",\n    \"mshied_name\": \"codee{{$randomInt}}\"\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}mshied_programs",
									"host": [
										"{{Eresource_URL}}mshied_programs"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Program Level",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var programlevelid;",
											"pm.test(\"Create Program Level\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"",
											"    programlevelid = jsonData.mshied_programlevelid;",
											"    console.log(\"programlevelid : \" + programlevelid);",
											"});",
											"pm.globals.set('gprogramlevelid2', programlevelid);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"mshied_code\": \"{{$randomInt}}-C1{{$randomInt}} {{$randomInt}}\",\n    \"mshied_name\": \"{{$randomInt}}-Test-PrgLevel2-{{$randomInt}}\"\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}mshied_programlevels",
									"host": [
										"{{Eresource_URL}}mshied_programlevels"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Academic period",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var academicperiodid;",
											"var academicperiodname;",
											"",
											"pm.test(\"Academicperiodid Created\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202,204]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    academicperiodid = jsonData.mshied_academicperiodid;",
											" academicperiodname = jsonData.mshied_name;",
											" console.log('academicperiodname: '+academicperiodname);",
											" ",
											"});",
											"",
											"var startDate = data.cmc_startdate;",
											"var endDate = data.cmc_enddate;",
											"var Code = data.cmc_code;",
											"var ownerid1 = data.ownerid;",
											"pm.globals.set('gacademicperiodid1',academicperiodid);",
											"pm.globals.set('gacademicperiodname1',academicperiodname);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var moment = require('moment');\r",
											"pm.environment.set(\"timestamp\", moment().add(1, 'days').format(\"YYYY-MM-DD\"));\r",
											"pm.environment.set(\"timestampEndDate\", moment().add(100, 'days').format(\"YYYY-MM-DD\"));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"mshied_name\":\"academicperiodname21{{$randomInt}}\",\r\n\"mshied_startdate\": \"{{timestamp}}\",\r\n\"mshied_enddate\": \"{{timestampEndDate}}\",\r\n\"mshied_code\":\"{{$randomInt}}{{cmc_code}}In2111{{$randomInt}}\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}mshied_academicperiods",
									"host": [
										"{{Eresource_URL}}mshied_academicperiods"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Source Method",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var sourcemethodid;",
											"pm.test(\"Create sourcemethod\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"",
											"    sourcemethodid = jsonData.cmc_sourcemethodid;",
											"    console.log(\"sourcemethodid : \" + sourcemethodid);",
											"});",
											"pm.globals.set('gsourcemethodid2', sourcemethodid);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n   \"cmc_sourcemethodname\": \"{{$randomInt}}-TestSoucreMethod2{{$randomInt}}\"\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_sourcemethods",
									"host": [
										"{{Eresource_URL}}cmc_sourcemethods"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create SubCategory",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var subcategory;",
											"var Accname;",
											"pm.test(\"SourceSub Category Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
											"    var jsonData = JSON.parse(responseBody);",
											"",
											"    subcategory = jsonData.cmc_sourcesubcategoryid;",
											"    console.log(\"subcategory: \",subcategory);",
											"    pm.globals.set('gsubcategoryid1', subcategory);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_sourcesubcategoryname\": \"TestSubCategory1{{$randomInt}}\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_sourcesubcategories",
									"host": [
										"{{Eresource_URL}}cmc_sourcesubcategories"
									]
								},
								"description": "Create Account with new Address"
							},
							"response": []
						},
						{
							"name": "Create Source Category",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var sourcecategoryid;",
											"pm.test(\"Create Sourcecategory\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"",
											"    sourcecategoryid = jsonData.cmc_sourcecategoryid;",
											"    console.log(\"sourcecategoryid : \" + sourcecategoryid);",
											"});",
											"pm.globals.set('gsourcecategoryid2', sourcecategoryid);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"cmc_sourcecategoryname\": \"{{$randomInt}}-TestSoucreCategor2-y{{$randomInt}}\"\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_sourcecategories",
									"host": [
										"{{Eresource_URL}}cmc_sourcecategories"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create SubCategory",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var subcategory;",
											"var Accname;",
											"pm.test(\"SourceSub Category Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
											"    var jsonData = JSON.parse(responseBody);",
											"",
											"    subcategory = jsonData.cmc_sourcesubcategoryid;",
											"    console.log(\"subcategory: \",subcategory);",
											"    pm.globals.set('gsubcategoryid1', subcategory);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_sourcesubcategoryname\": \"TestSubCategory1{{$randomInt}}\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_sourcesubcategories",
									"host": [
										"{{Eresource_URL}}cmc_sourcesubcategories"
									]
								},
								"description": "Create Account with new Address"
							},
							"response": []
						},
						{
							"name": "Create Campaign",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var campaignid;",
											"pm.test(\"Account Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    campaignid = jsonData.campaignid;",
											"    console.log(\"campaignid: \", campaignid);",
											"});",
											"pm.globals.set('g_campaignid1', campaignid);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"{{$randomInt}}-TestCampaign1-{{$randomInt}}\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}campaigns",
									"host": [
										"{{Eresource_URL}}campaigns"
									]
								},
								"description": "Create Account with new Address"
							},
							"response": []
						},
						{
							"name": "Create Inbound Interest",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var Inboundid;",
											"var Inboundname;",
											"var contactid;",
											"var accountid;",
											"var methodid;",
											"var campaign;",
											"var categoryid;",
											"var programid;",
											"var programlevelid;",
											"var expectedstartid;",
											"var comments;",
											"var subcategory;",
											"var areaofinterestid;",
											"var type;",
											"var subcategory;",
											"",
											"pm.test(\"Lead Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
											"    var jsonData = JSON.parse(responseBody);",
											"",
											"    Inboundid = jsonData.leadid;",
											"    Inboundname = jsonData.fullname;",
											"    contactid = jsonData._customerid_value;",
											"    accountid = jsonData._cmc_sourcecampusid_value;",
											"    methodid = jsonData._cmc_sourcemethodid_value;",
											"    categoryid = jsonData._cmc_sourcecategoryid_value;",
											"    programid = jsonData._cmc_sourceprgmid_value;",
											"    programlevelid = jsonData._cmc_sourceprgmlevelid_value;",
											"    expectedstartid = jsonData._cmc_expectedstartid_value;",
											"    subcategory = jsonData._cmc_sourcesubcategoryid_value;",
											"    campaign = jsonData._cmc_sourcecampaignid_value",
											"    comments = jsonData.cmc_comments;",
											"    areaofinterestid = jsonData.cmc_areaofinterestid;",
											"    type = jsonData.cmc_type;",
											"",
											"    console.log('InboundID:' + Inboundid);",
											"    console.log('InBoundName:' + Inboundname);",
											"    console.log('ExpectedstartID:' + expectedstartid);",
											"});",
											"",
											"pm.globals.set('ginboundid', Inboundid);",
											"pm.globals.set('gexpectedstartId', expectedstartid);",
											"pm.globals.set('gtype', type);",
											"setTimeout(function(){}, 25000);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const dateNow= new Date();\r",
											"pm.environment.set('currentDate', dateNow.toISOString());"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"address1_county\":\"Delhi{{$randomInt}}\",\r\n   \"address1_country\":\"India{{$randomInt}}\",\r\n   \"address1_postalcode\":\"562109{{$randomInt}}\",\r\n   \"address1_stateorprovince\":\"Karanataka{{$randomInt}}\",\r\n   \"address1_city\":\"Bengaluru{{$randomInt}}\",\r\n   \"address1_line3\":\"Street3{{$randomInt}}\",\r\n   \"address1_line2\":\"Street2{{$randomInt}}\",\r\n   \"address1_line1\":\"Street1{{$randomInt}}\",\r\n   \"jobtitle\":\"QA{{$randomInt}}\",\r\n   \"telephone1\":\"988877{{$randomInt}}\",\r\n   \"mobilephone\":\"897678{{$randomInt}}\",\r\n   \"emailaddress1\":\"{{$randomInt}}{{emailaddress1}}\",\r\n   \"lastname\":\"Lead-Last{{$randomInt}}\",\r\n   \"firstname\":\"Lead-FirstName{{$randomInt}}{{$randomInt}}\",\r\n   \"cmc_sourcedate\": \"{{currentDate}}\",\r\n   \"customerid_contact@odata.bind\": \"/contacts({{gcontactid}})\",\r\n    \"cmc_sourcecampusid@odata.bind\": \"/accounts({{gaccountId2}})\",\r\n    \"cmc_sourceprgmid@odata.bind\": \"/leads({{gProgram2}})\",\r\n    \"cmc_sourceprgmlevelid@odata.bind\": \"/leads({{gprogramlevelid2}})\",\r\n    \"cmc_sourcecategoryid@odata.bind\": \"/leads({{gsourcecategoryid2}})\",\r\n    \"cmc_sourcecampaignid@odata.bind\": \"/campaigns({{g_campaignid1}})\",\r\n    \"cmc_sourcemethodid@odata.bind\": \"/leads({{gsourcemethodid2}})\",\r\n    \"cmc_sourcesubcategoryid@odata.bind\": \"/cmc_sourcesubcategories({{gsubcategoryid1}})\",\r\n    \"cmc_expectedstartid@odata.bind\": \"/mshied_academicperiods({{gacademicperiodid1}})\",\r\n    \"cmc_comments\":\"I'm Interested for MCA and MBA\",\r\n    \"cmc_areaofinterestid@odata.bind\":\"/mshied_areaofinterests({{gareaofinterestid1}})\",\r\n    \"cmc_type\":175490002\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}leads",
									"host": [
										"{{Eresource_URL}}leads"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Values from Inbound",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var contactid;\r",
											"var primary;\r",
											"var contacttype;\r",
											"pm.test(\"Fetch Values from lead\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);\r",
											"    var jsonData = JSON.parse(responseBody);\r",
											"    contactid = jsonData._customerid_value;\r",
											"    console.log('contactid:' + contactid);\r",
											"    primary = jsonData.cmc_primary;\r",
											"    console.log('primary:' + primary);\r",
											"    contacttype = jsonData.cmc_contacttype;\r",
											"    console.log('contacttype:' +contacttype); \r",
											"\r",
											"    pm.test(\"Validate Primary\", function () {\r",
											"        pm.expect(primary).to.equal(true);\r",
											"    });\r",
											"\r",
											"    pm.test(\"Validate contacttype\", function () {\r",
											"        pm.expect(contacttype).to.equal(494280011);\r",
											"    });\r",
											"    \r",
											"    \r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Prefer",
										"value": "return=representation",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Eresource_URL}}leads({{ginboundid}})",
									"host": [
										"{{Eresource_URL}}leads({{ginboundid}})"
									]
								}
							},
							"response": []
						},
						{
							"name": "Qualify Inbound Interest",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var opportunityID;",
											"",
											"pm.test(\"Inbound Qualify\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    ",
											"    opportunityID= jsonData.value[0].opportunityid;",
											"    console.log('opportunityID :'+opportunityID);",
											"    ",
											"    if(opportunityID!==null){",
											"        console.log(\"Inbound Qualified\");",
											"    }",
											"    else",
											"    {",
											"        console.log(\"Inbound not Qualified\");",
											"    }",
											"setTimeout(function(){}, 20000);",
											"  });"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"entity\": {\n        \"@odata.type\": \"Microsoft.Dynamics.CRM.lead\",\n        \"leadid\": \"{{ginboundid}}\"\n    },\n    \"CreateAccount\": false,\n    \"CreateContact\": false,\n    \"CreateOpportunity\": true,\n    \"OpportunityCustomerId\": {\n        \"@odata.type\": \"Microsoft.Dynamics.CRM.contact\",\n        \"contactid\": \"{{gcontactid}}\"\n    },\n    \"Status\": -1,\n    \"SuppressDuplicateDetection\":false\n}\n"
								},
								"url": {
									"raw": "{{Eresource_URL}}leads({{ginboundid}})/Microsoft.Dynamics.CRM.QualifyLead",
									"host": [
										"{{Eresource_URL}}leads({{ginboundid}})"
									],
									"path": [
										"Microsoft.Dynamics.CRM.QualifyLead"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Values from Inbound",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var contactid;\r",
											"var primary;\r",
											"var mobilephone;\r",
											"var emailaddress1;\r",
											"var address1_county;\r",
											"var campagin,sourcecampusid,areaofinterestid;\r",
											"var firstname,lastname;\r",
											"var stateorprovince,postalcode, city;\r",
											"var country,telephone1;\r",
											"var address1_country;\r",
											"var address1_line1,address1_line2,address1_line3;\r",
											"var sourcedate,expectedstartid,sourcemethodid;\r",
											"var sourcecategoryid,sourcesubcategoryid;\r",
											"var sourceprgmid,primary,sourceprgmlevelid;\r",
											"var type,contacttype,qualifyingopportunityid,statecode;\r",
											"pm.test(\"Fetch Values from lead\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);\r",
											"    var jsonData = JSON.parse(responseBody);\r",
											"    contactid = jsonData._customerid_value;\r",
											"    console.log('contactid:' + contactid);\r",
											"    primary = jsonData.cmc_primary;\r",
											"    console.log('primary:' + primary);\r",
											"    parentcontactid = jsonData._parentcontactid_value;\r",
											"    console.log('Parentcontactid:' + parentcontactid);\r",
											"    console.log('sourcemethodid:' + sourcemethodid);\r",
											"    sourcedate = jsonData.cmc_sourcedate;\r",
											"    console.log('sourcedate:' + sourcedate);\r",
											"    sourcecategoryid = jsonData._cmc_sourcecategoryid_value;\r",
											"    console.log('sourcecategoryid:' + sourcecategoryid);\r",
											"    sourceprgmid = jsonData._cmc_sourceprgmid_value;\r",
											"    console.log('sourceprgmid:' + sourceprgmid);\r",
											"    sourcecampusid = jsonData._cmc_sourcecampusid_value;\r",
											"    console.log('sourcecampusid:' +sourcecampusid);\r",
											"    expectedstartid = jsonData._cmc_expectedstartid_value;\r",
											"    console.log('expectedstartid:' +expectedstartid);\r",
											"    sourcesubcategoryid = jsonData._cmc_sourcesubcategoryid_value;\r",
											"    console.log('sourcesubcategoryid:' + sourcesubcategoryid);\r",
											"    primary = jsonData.cmc_primary;\r",
											"    console.log('primary:' + primary);\r",
											"    sourceprgmlevelid = jsonData._cmc_sourceprgmlevelid_value;\r",
											"    console.log('sourceprgmlevelid:' +sourceprgmlevelid);\r",
											"    type = jsonData.cmc_type;\r",
											"    console.log('type:' +type);\r",
											"    contacttype = jsonData.cmc_contacttype;\r",
											"    console.log('contacttype:' +contacttype);\r",
											"    qualifyingopportunityid=jsonData._qualifyingopportunityid_value;\r",
											"    console.log('qualifyingopportunityid:' +qualifyingopportunityid);\r",
											"    statecode = jsonData.statecode;\r",
											"    console.log('statecode:' +statecode);\r",
											"\r",
											"    pm.test(\"Validate Qualify status\", function () {\r",
											"        pm.expect(statecode).to.equal(1);\r",
											"    });\r",
											"    \r",
											"    pm.test(\"Validate Primary\", function () {\r",
											"        pm.expect(primary).to.equal(true);\r",
											"    });\r",
											"});\r",
											"\r",
											"pm.globals.set('gcontactid2', contactid);\r",
											"pm.globals.set('gqualifyingopportunityid2', qualifyingopportunityid);\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Prefer",
										"value": "return=representation",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Eresource_URL}}leads({{ginboundid}})",
									"host": [
										"{{Eresource_URL}}leads({{ginboundid}})"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Details from contact",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var concustomerid;",
											"var concampusid;",
											"var conmethodid;",
											"var concategoryid;",
											"var conprogramid;",
											"var conprogramlevelid;",
											"var conexpectedstartid;",
											"var consubsourcecategoryid; ",
											"var concampaign;",
											"var originatinginboundinterest;",
											"var contacttype;",
											"",
											"var leadcustomerid = pm.globals.get(\"gcontactid2\");",
											"var leadcampusid = pm.globals.get(\"gaccountId2\");",
											"var leadmethodid = pm.globals.get(\"gsourcemethodid2\");",
											"var leadcategoryid = pm.globals.get(\"gsourcecategoryid2\");",
											"var leadprogramid = pm.globals.get(\"gProgram2\");",
											"var leadprogramlevelid = pm.globals.get(\"gprogramlevelid2\");",
											"var leadexpectedstartid = pm.globals.get(\"gexpectedstartId\");",
											"var leadsubsourcecategoryid = pm.globals.get(\"gsubcategoryid1\");",
											"var leadcampaign = pm.globals.get(\"g_campaignid1\");",
											"var inboundid = pm.globals.get(\"ginboundid\");",
											"",
											"pm.test(\"Copied Fields values\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
											"    var jsonData = JSON.parse(responseBody);",
											"",
											"    concustomerid = jsonData.contactid;",
											"    console.log('concustomerid: ' + concustomerid);",
											"",
											"    concampusid = jsonData._cmc_sourcecampusid_value;",
											"    console.log('campusid: ' + concampusid);",
											"",
											"    conprogramid = jsonData._cmc_srcprogramid_value;",
											"    console.log('programid: ' + conprogramid);",
											"",
											"     conprogramlevelid = jsonData._cmc_srcpogramlevelid_value;",
											"    console.log('programlevelid: ' + conprogramlevelid);",
											"",
											"    conexpectedstartid = jsonData._cmc_expectedstartid_value;",
											"    console.log('expectedstartid: ' + conexpectedstartid);",
											"",
											"    conmethodid = jsonData._cmc_sourcemethodid_value;",
											"    console.log('conmethodid: ' + conmethodid);",
											"",
											"    concategoryid = jsonData._cmc_sourcecategoryid_value;",
											"    console.log('concategoryid: ' + concategoryid);",
											"",
											"    consubsourcecategoryid = jsonData._cmc_sourcesubcategoryid_value;",
											"    console.log('Consubsourcecategoryid: ' + consubsourcecategoryid);",
											"",
											"    concampaign = jsonData._cmc_sourcecampaignid_value;",
											"    console.log('concampaign: ' + concampaign);",
											"",
											"    originatinginboundinterest = jsonData._cmc_originatinginboundinterest_value;",
											"    console.log('originatinginboundinterest: ' + originatinginboundinterest);",
											"",
											"    //append student contact type",
											"     contacttype = jsonData.mshied_contacttype;",
											"     console.log('contacttype: ' + contacttype);",
											"",
											"      pm.test(\"Validate contacttype\", function () {",
											"        pm.expect(contacttype).to.equal('494280002,494280006,494280011');",
											"    });",
											"",
											"    pm.test(\"Validate method\", function () {",
											"        pm.expect(conmethodid).to.equal(leadmethodid);",
											"    });",
											"",
											"     pm.test(\"Validate Campus\", function () {",
											"        pm.expect(concampusid).to.equal(leadcampusid);",
											"     });",
											"",
											"     pm.test(\"Validate ProgramLevel\", function () {",
											"        pm.expect(conprogramlevelid).to.equal(leadprogramlevelid);",
											"     });",
											"",
											"     pm.test(\"Validate ExpectedStartDate\", function () {",
											"         pm.expect(conexpectedstartid).to.equal(leadexpectedstartid);",
											"     });",
											"",
											"      pm.test(\"Validate Program\", function () {",
											"         pm.expect(conprogramid).to.equal(leadprogramid);",
											"     });",
											"",
											"    pm.test(\"Validate Category\", function () {",
											"        pm.expect(concategoryid).to.equal(leadcategoryid);",
											"    });",
											"",
											"    pm.test(\"Validate Subcategory\", function () {",
											"        pm.expect(consubsourcecategoryid).to.equal(leadsubsourcecategoryid);",
											"    });",
											"",
											"    pm.test(\"Validate Campaign\", function () {",
											"        pm.expect(concampaign).to.equal(leadcampaign);",
											"    });",
											"",
											"    pm.test(\"Validate originatinginboundinterest\", function () {",
											"        pm.expect(inboundid).to.equal(originatinginboundinterest);",
											"    });",
											"",
											"",
											"    if (conmethodid === leadmethodid && concategoryid === leadcategoryid && consubsourcecategoryid === leadsubsourcecategoryid && concampaign === leadcampaign && inboundid === originatinginboundinterest) {",
											"        console.log('Initial Source Field Copied');",
											"    }",
											"    else {",
											"        console.log('Initial Source Field NOT Copied');",
											"    }",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{Eresource_URL}}contacts({{gcontactid}})",
									"host": [
										"{{Eresource_URL}}contacts({{gcontactid}})"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Create Inbound Interest 2",
					"item": [
						{
							"name": "Create Area of Interest",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var areaofinterestid;",
											"var areaofinterestname;",
											"",
											"pm.test(\"Create Area of Interest\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"",
											"    areaofinterestid = jsonData.mshied_areaofinterestid;",
											"    console.log(\"area of interest id : \" + areaofinterestid);",
											"",
											"    areaofinterestname = jsonData.mshied_name;",
											"    console.log(\"area of interest name : \" + areaofinterestname);",
											"",
											"});",
											"pm.globals.set('gareaofinterestid2', areaofinterestid);",
											"pm.globals.set('gareaofinterestname2', areaofinterestname);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"mshied_code\": \"{{$randomInt}}-{{$randomInt}}e2 - {{$randomInt}}\",\n    \"mshied_name\": \"{{$randomInt}}-Test-AreaOfInterest2-{{$randomInt}}\"\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}mshied_areaofinterests",
									"host": [
										"{{Eresource_URL}}mshied_areaofinterests"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Account",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var account_id; ",
											"var Accname;",
											"pm.test(\"Account Created\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    account_id = jsonData.accountid;",
											"    Accname = jsonData.name;",
											"    console.log(Accname);",
											"});",
											"",
											"var accname = data.name;",
											"var accounttype = data.mshied_accounttype;",
											"pm.globals.set('gaccountId3',account_id);",
											"pm.globals.set('gAccname3',Accname);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n \"name\":\"{{name}}na3{{$randomInt}}\",\r\n \"mshied_accounttype\":\"{{mshied_accounttype}}\",\r\n \"cmc_accountcode\":\"Acc3{{$randomInt}}\",\r\n \"preferredcontactmethodcode\":1\r\n} "
								},
								"url": {
									"raw": "{{Eresource_URL}}accounts",
									"host": [
										"{{Eresource_URL}}accounts"
									]
								},
								"description": "Create Account with new Address"
							},
							"response": []
						},
						{
							"name": "Create Program",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var programid;",
											"var programname;",
											"pm.test(\"Create Program\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"",
											"    programid = jsonData.mshied_programid;",
											"    programname = jsonData.mshied_name;",
											"    console.log(\"Program ID: \" + programid);",
											"    console.log(\"Program Name: \" + programname);",
											"});",
											"pm.globals.set('gProgram3', programid);",
											"pm.globals.set('gProgramName3', programname);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"mshied_code\": \"{{$randomInt}}Pr{{$randomInt}}g3{{$randomInt}}\",\n    \"mshied_name\": \"codee{{$randomInt}}\"\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}mshied_programs",
									"host": [
										"{{Eresource_URL}}mshied_programs"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Program Level",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var programlevelid;",
											"pm.test(\"Create Program Level\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"",
											"    programlevelid = jsonData.mshied_programlevelid;",
											"    console.log(\"programlevelid : \" + programlevelid);",
											"});",
											"pm.globals.set('gprogramlevelid3', programlevelid);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"mshied_code\": \"{{$randomInt}}-C3{{$randomInt}} {{$randomInt}}\",\n    \"mshied_name\": \"{{$randomInt}}-Test-PrgLevel3-{{$randomInt}}\"\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}mshied_programlevels",
									"host": [
										"{{Eresource_URL}}mshied_programlevels"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Academic period",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var academicperiodid;",
											"var academicperiodname;",
											"",
											"pm.test(\"Academicperiodid Created\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202,204]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    academicperiodid = jsonData.mshied_academicperiodid;",
											" academicperiodname = jsonData.mshied_name;",
											" console.log('academicperiodname: '+academicperiodname);",
											" ",
											"});",
											"",
											"var startDate = data.cmc_startdate;",
											"var endDate = data.cmc_enddate;",
											"var Code = data.cmc_code;",
											"var ownerid1 = data.ownerid;",
											"pm.globals.set('gacademicperiodid3',academicperiodid);",
											"pm.globals.set('gacademicperiodname3',academicperiodname);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var moment = require('moment');\r",
											"pm.environment.set(\"timestamp\", moment().add(1, 'days').format(\"YYYY-MM-DD\"));\r",
											"pm.environment.set(\"timestampEndDate\", moment().add(100, 'days').format(\"YYYY-MM-DD\"));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"mshied_name\":\"academicperiodname31{{$randomInt}}\",\r\n\"mshied_startdate\": \"{{timestamp}}\",\r\n\"mshied_enddate\": \"{{timestampEndDate}}\",\r\n\"mshied_code\":\"{{$randomInt}}{{cmc_code}}In23{{$randomInt}}\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}mshied_academicperiods",
									"host": [
										"{{Eresource_URL}}mshied_academicperiods"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Source Method",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var sourcemethodid;",
											"pm.test(\"Create sourcemethod\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"",
											"    sourcemethodid = jsonData.cmc_sourcemethodid;",
											"    console.log(\"sourcemethodid : \" + sourcemethodid);",
											"});",
											"pm.globals.set('gsourcemethodid3', sourcemethodid);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n   \"cmc_sourcemethodname\": \"{{$randomInt}}-TestSoucreMethod3{{$randomInt}}\"\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_sourcemethods",
									"host": [
										"{{Eresource_URL}}cmc_sourcemethods"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create SubCategory",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var subcategory;",
											"var Accname;",
											"pm.test(\"SourceSub Category Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
											"    var jsonData = JSON.parse(responseBody);",
											"",
											"    subcategory = jsonData.cmc_sourcesubcategoryid;",
											"    console.log(\"subcategory: \",subcategory);",
											"    pm.globals.set('gsubcategoryid3', subcategory);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_sourcesubcategoryname\": \"TestSubCategory2{{$randomInt}}\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_sourcesubcategories",
									"host": [
										"{{Eresource_URL}}cmc_sourcesubcategories"
									]
								},
								"description": "Create Account with new Address"
							},
							"response": []
						},
						{
							"name": "Create Source Category",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var sourcecategoryid;",
											"pm.test(\"Create Sourcecategory\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"",
											"    sourcecategoryid = jsonData.cmc_sourcecategoryid;",
											"    console.log(\"sourcecategoryid : \" + sourcecategoryid);",
											"});",
											"pm.globals.set('gsourcecategoryid3', sourcecategoryid);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"cmc_sourcecategoryname\": \"{{$randomInt}}-TestSoucreCategor3-y{{$randomInt}}\"\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_sourcecategories",
									"host": [
										"{{Eresource_URL}}cmc_sourcecategories"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create SubCategory",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var subcategory;",
											"var Accname;",
											"pm.test(\"SourceSub Category Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
											"    var jsonData = JSON.parse(responseBody);",
											"",
											"    subcategory = jsonData.cmc_sourcesubcategoryid;",
											"    console.log(\"subcategory: \",subcategory);",
											"    pm.globals.set('gsubcategoryid2', subcategory);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_sourcesubcategoryname\": \"TestSubCategory2{{$randomInt}}\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_sourcesubcategories",
									"host": [
										"{{Eresource_URL}}cmc_sourcesubcategories"
									]
								},
								"description": "Create Account with new Address"
							},
							"response": []
						},
						{
							"name": "Create Campaign",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var campaignid;",
											"pm.test(\"Account Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    campaignid = jsonData.campaignid;",
											"    console.log(\"campaignid: \", campaignid);",
											"});",
											"pm.globals.set('g_campaignid2', campaignid);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"{{$randomInt}}-TestCampaign2-{{$randomInt}}\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}campaigns",
									"host": [
										"{{Eresource_URL}}campaigns"
									]
								},
								"description": "Create Account with new Address"
							},
							"response": []
						},
						{
							"name": "Create Inbound Interest",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var Inboundid;",
											"var Inboundname;",
											"var contactid;",
											"var accountid;",
											"var methodid;",
											"var campaign;",
											"var categoryid;",
											"var programid;",
											"var programlevelid;",
											"var expectedstartid;",
											"var comments;",
											"var subcategory;",
											"var areaofinterestid;",
											"var type;",
											"var subcategory;",
											"",
											"pm.test(\"Lead Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
											"    var jsonData = JSON.parse(responseBody);",
											"",
											"    Inboundid = jsonData.leadid;",
											"    Inboundname = jsonData.fullname;",
											"    contactid = jsonData._customerid_value;",
											"    accountid = jsonData._cmc_sourcecampusid_value;",
											"    methodid = jsonData._cmc_sourcemethodid_value;",
											"    categoryid = jsonData._cmc_sourcecategoryid_value;",
											"    programid = jsonData._cmc_sourceprgmid_value;",
											"    programlevelid = jsonData._cmc_sourceprgmlevelid_value;",
											"    expectedstartid = jsonData._cmc_expectedstartid_value;",
											"    subcategory = jsonData._cmc_sourcesubcategoryid_value;",
											"    campaign = jsonData._cmc_sourcecampaignid_value",
											"    comments = jsonData.cmc_comments;",
											"    areaofinterestid = jsonData.cmc_areaofinterestid;",
											"    type = jsonData.cmc_type;",
											"",
											"    console.log('InboundID:' + Inboundid);",
											"    console.log('InBoundName:' + Inboundname);",
											"    console.log('ExpectedstartID:' + expectedstartid);",
											"});",
											"",
											"pm.globals.set('ginboundid1', Inboundid);",
											"pm.globals.set('gexpectedstartId1', expectedstartid);",
											"pm.globals.set('gtype1', type);",
											"setTimeout(function(){}, 25000);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const dateNow= new Date();\r",
											"pm.environment.set('currentDate', dateNow.toISOString());"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"address1_county\":\"Delhi{{$randomInt}}\",\r\n   \"address1_country\":\"India{{$randomInt}}\",\r\n   \"address1_postalcode\":\"562109{{$randomInt}}\",\r\n   \"address1_stateorprovince\":\"Karanataka{{$randomInt}}\",\r\n   \"address1_city\":\"Bengaluru{{$randomInt}}\",\r\n   \"address1_line3\":\"Street3{{$randomInt}}\",\r\n   \"address1_line2\":\"Street2{{$randomInt}}\",\r\n   \"address1_line1\":\"Street1{{$randomInt}}\",\r\n   \"jobtitle\":\"QA{{$randomInt}}\",\r\n   \"telephone1\":\"988877{{$randomInt}}\",\r\n   \"mobilephone\":\"897678{{$randomInt}}\",\r\n   \"emailaddress1\":\"{{$randomInt}}{{emailaddress1}}\",\r\n   \"lastname\":\"Lead-Last{{$randomInt}}\",\r\n   \"firstname\":\"Lead-FirstName{{$randomInt}}{{$randomInt}}\",\r\n   \"cmc_sourcedate\": \"{{currentDate}}\",\r\n   \"customerid_contact@odata.bind\": \"/contacts({{gcontactid}})\",\r\n    \"cmc_sourcecampusid@odata.bind\": \"/accounts({{gaccountId3}})\",\r\n    \"cmc_sourceprgmid@odata.bind\": \"/leads({{gProgram3}})\",\r\n    \"cmc_sourceprgmlevelid@odata.bind\": \"/leads({{gprogramlevelid3}})\",\r\n    \"cmc_sourcecategoryid@odata.bind\": \"/leads({{gsourcecategoryid3}})\",\r\n    \"cmc_sourcecampaignid@odata.bind\": \"/campaigns({{g_campaignid2}})\",\r\n    \"cmc_sourcemethodid@odata.bind\": \"/leads({{gsourcemethodid3}})\",\r\n    \"cmc_sourcesubcategoryid@odata.bind\": \"/cmc_sourcesubcategories({{gsubcategoryid2}})\",\r\n    \"cmc_expectedstartid@odata.bind\": \"/mshied_academicperiods({{gacademicperiodid3}})\",\r\n    \"cmc_comments\":\"I'm Interested for MCA and MBA\",\r\n    \"cmc_areaofinterestid@odata.bind\":\"/mshied_areaofinterests({{gareaofinterestid2}})\",\r\n    \"cmc_type\":175490001\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}leads",
									"host": [
										"{{Eresource_URL}}leads"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Values from Inbound",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var contactid;\r",
											"var primary;\r",
											"pm.test(\"Fetch Values from lead\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);\r",
											"    var jsonData = JSON.parse(responseBody);\r",
											"    contactid = jsonData._customerid_value;\r",
											"    console.log('contactid:' + contactid);\r",
											"    primary = jsonData.cmc_primary;\r",
											"    console.log('primary:' + primary);\r",
											"\r",
											"     pm.test(\"Validate Primary\", function () {\r",
											"        pm.expect(primary).to.equal(false);\r",
											"    });\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Prefer",
										"value": "return=representation",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Eresource_URL}}leads({{ginboundid1}})",
									"host": [
										"{{Eresource_URL}}leads({{ginboundid1}})"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Primary",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Update Inbound\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
											"    var jsonData =JSON.parse(responseBody);",
											"",
											"  });",
											"  setTimeout(function(){}, 25000);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\"cmc_primary\":true\n}\n"
								},
								"url": {
									"raw": "{{Eresource_URL}}leads({{ginboundid1}})",
									"host": [
										"{{Eresource_URL}}leads({{ginboundid1}})"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Values from Inbound1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var primary;\r",
											"pm.test(\"Fetch Values from lead\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);\r",
											"    var jsonData = JSON.parse(responseBody);\r",
											"    primary = jsonData.cmc_primary;\r",
											"    console.log('primary:' + primary);\r",
											"\r",
											"     pm.test(\"Validate Primary\", function () {\r",
											"        pm.expect(primary).to.equal(false);\r",
											"    });\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Prefer",
										"value": "return=representation",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Eresource_URL}}leads({{ginboundid}})",
									"host": [
										"{{Eresource_URL}}leads({{ginboundid}})"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Values from Inbound2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var primary;\r",
											"pm.test(\"Fetch Values from lead\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);\r",
											"    var jsonData = JSON.parse(responseBody);\r",
											"    primary = jsonData.cmc_primary;\r",
											"    console.log('primary:' + primary);\r",
											"     pm.test(\"Validate Primary\", function () {\r",
											"        pm.expect(primary).to.equal(true);\r",
											"    });\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Prefer",
										"value": "return=representation",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Eresource_URL}}leads({{ginboundid1}})",
									"host": [
										"{{Eresource_URL}}leads({{ginboundid1}})"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Disqualify",
			"item": [
				{
					"name": "Create Inbound Interest 3",
					"item": [
						{
							"name": "Create Area of Interest",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var areaofinterestid;",
											"var areaofinterestname;",
											"",
											"pm.test(\"Create Area of Interest\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"",
											"    areaofinterestid = jsonData.mshied_areaofinterestid;",
											"    console.log(\"area of interest id : \" + areaofinterestid);",
											"",
											"    areaofinterestname = jsonData.mshied_name;",
											"    console.log(\"area of interest name : \" + areaofinterestname);",
											"",
											"});",
											"pm.globals.set('gareaofinterestid12', areaofinterestid);",
											"pm.globals.set('gareaofinterestname12', areaofinterestname);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"mshied_code\": \"{{$randomInt}}-{{$randomInt}}e1 - {{$randomInt}}\",\n    \"mshied_name\": \"{{$randomInt}}-Test-AreaOfInterest1-{{$randomInt}}\"\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}mshied_areaofinterests",
									"host": [
										"{{Eresource_URL}}mshied_areaofinterests"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Account",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var account_id; ",
											"var Accname;",
											"pm.test(\"Account Created\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    account_id = jsonData.accountid;",
											"    Accname = jsonData.name;",
											"    console.log(Accname);",
											"});",
											"",
											"var accname = data.name;",
											"var accounttype = data.mshied_accounttype;",
											"pm.globals.set('gaccountId22',account_id);",
											"pm.globals.set('gAccname12',Accname);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n \"name\":\"{{name}}na{{$randomInt}}\",\r\n \"mshied_accounttype\":\"{{mshied_accounttype}}\",\r\n \"cmc_accountcode\":\"Acc2{{$randomInt}}\",\r\n \"preferredcontactmethodcode\":1\r\n} "
								},
								"url": {
									"raw": "{{Eresource_URL}}accounts",
									"host": [
										"{{Eresource_URL}}accounts"
									]
								},
								"description": "Create Account with new Address"
							},
							"response": []
						},
						{
							"name": "Create Program",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var programid;",
											"var programname;",
											"pm.test(\"Create Program\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"",
											"    programid = jsonData.mshied_programid;",
											"    programname = jsonData.mshied_name;",
											"    console.log(\"Program ID: \" + programid);",
											"    console.log(\"Program Name: \" + programname);",
											"});",
											"pm.globals.set('gProgram22', programid);",
											"pm.globals.set('gProgramName22', programname);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"mshied_code\": \"{{$randomInt}}Pr{{$randomInt}}g2{{$randomInt}}\",\n    \"mshied_name\": \"codee{{$randomInt}}\"\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}mshied_programs",
									"host": [
										"{{Eresource_URL}}mshied_programs"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Program Level",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var programlevelid;",
											"pm.test(\"Create Program Level\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"",
											"    programlevelid = jsonData.mshied_programlevelid;",
											"    console.log(\"programlevelid : \" + programlevelid);",
											"});",
											"pm.globals.set('gprogramlevelid22', programlevelid);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"mshied_code\": \"{{$randomInt}}-C1{{$randomInt}} {{$randomInt}}\",\n    \"mshied_name\": \"{{$randomInt}}-Test-PrgLevel2-{{$randomInt}}\"\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}mshied_programlevels",
									"host": [
										"{{Eresource_URL}}mshied_programlevels"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Academic period",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var academicperiodid;",
											"var academicperiodname;",
											"",
											"pm.test(\"Academicperiodid Created\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202,204]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    academicperiodid = jsonData.mshied_academicperiodid;",
											" academicperiodname = jsonData.mshied_name;",
											" console.log('academicperiodname: '+academicperiodname);",
											" ",
											"});",
											"",
											"var startDate = data.cmc_startdate;",
											"var endDate = data.cmc_enddate;",
											"var Code = data.cmc_code;",
											"var ownerid1 = data.ownerid;",
											"pm.globals.set('gacademicperiodid12',academicperiodid);",
											"pm.globals.set('gacademicperiodname12',academicperiodname);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var moment = require('moment');\r",
											"pm.environment.set(\"timestamp\", moment().add(1, 'days').format(\"YYYY-MM-DD\"));\r",
											"pm.environment.set(\"timestampEndDate\", moment().add(100, 'days').format(\"YYYY-MM-DD\"));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"mshied_name\":\"academicperiodname21{{$randomInt}}\",\r\n\"mshied_startdate\": \"{{timestamp}}\",\r\n\"mshied_enddate\": \"{{timestampEndDate}}\",\r\n\"mshied_code\":\"{{$randomInt}}{{cmc_code}}In2111{{$randomInt}}\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}mshied_academicperiods",
									"host": [
										"{{Eresource_URL}}mshied_academicperiods"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Source Method",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var sourcemethodid;",
											"pm.test(\"Create sourcemethod\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"",
											"    sourcemethodid = jsonData.cmc_sourcemethodid;",
											"    console.log(\"sourcemethodid : \" + sourcemethodid);",
											"});",
											"pm.globals.set('gsourcemethodid22', sourcemethodid);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n   \"cmc_sourcemethodname\": \"{{$randomInt}}-TestSoucreMethod2{{$randomInt}}\"\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_sourcemethods",
									"host": [
										"{{Eresource_URL}}cmc_sourcemethods"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create SubCategory",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var subcategory;",
											"var Accname;",
											"pm.test(\"SourceSub Category Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
											"    var jsonData = JSON.parse(responseBody);",
											"",
											"    subcategory = jsonData.cmc_sourcesubcategoryid;",
											"    console.log(\"subcategory: \",subcategory);",
											"    pm.globals.set('gsubcategoryid12', subcategory);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_sourcesubcategoryname\": \"TestSubCategory1{{$randomInt}}\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_sourcesubcategories",
									"host": [
										"{{Eresource_URL}}cmc_sourcesubcategories"
									]
								},
								"description": "Create Account with new Address"
							},
							"response": []
						},
						{
							"name": "Create Source Category",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var sourcecategoryid;",
											"pm.test(\"Create Sourcecategory\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"",
											"    sourcecategoryid = jsonData.cmc_sourcecategoryid;",
											"    console.log(\"sourcecategoryid : \" + sourcecategoryid);",
											"});",
											"pm.globals.set('gsourcecategoryid22', sourcecategoryid);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"cmc_sourcecategoryname\": \"{{$randomInt}}-TestSoucreCategor2-y{{$randomInt}}\"\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_sourcecategories",
									"host": [
										"{{Eresource_URL}}cmc_sourcecategories"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create SubCategory",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var subcategory;",
											"var Accname;",
											"pm.test(\"SourceSub Category Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
											"    var jsonData = JSON.parse(responseBody);",
											"",
											"    subcategory = jsonData.cmc_sourcesubcategoryid;",
											"    console.log(\"subcategory: \",subcategory);",
											"    pm.globals.set('gsubcategoryid12', subcategory);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_sourcesubcategoryname\": \"TestSubCategory1{{$randomInt}}\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_sourcesubcategories",
									"host": [
										"{{Eresource_URL}}cmc_sourcesubcategories"
									]
								},
								"description": "Create Account with new Address"
							},
							"response": []
						},
						{
							"name": "Create Campaign",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var campaignid;",
											"pm.test(\"Account Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    campaignid = jsonData.campaignid;",
											"    console.log(\"campaignid: \", campaignid);",
											"});",
											"pm.globals.set('g_campaignid12', campaignid);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"{{$randomInt}}-TestCampaign1-{{$randomInt}}\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}campaigns",
									"host": [
										"{{Eresource_URL}}campaigns"
									]
								},
								"description": "Create Account with new Address"
							},
							"response": []
						},
						{
							"name": "Create Inbound Interest",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var Inboundid;",
											"var Inboundname;",
											"var contactid;",
											"var accountid;",
											"var methodid;",
											"var campaign;",
											"var categoryid;",
											"var programid;",
											"var programlevelid;",
											"var expectedstartid;",
											"var comments;",
											"var subcategory;",
											"var areaofinterestid;",
											"var type;",
											"var subcategory;",
											"",
											"pm.test(\"Lead Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
											"    var jsonData = JSON.parse(responseBody);",
											"",
											"    Inboundid = jsonData.leadid;",
											"    Inboundname = jsonData.fullname;",
											"    contactid = jsonData._customerid_value;",
											"    accountid = jsonData._cmc_sourcecampusid_value;",
											"    methodid = jsonData._cmc_sourcemethodid_value;",
											"    categoryid = jsonData._cmc_sourcecategoryid_value;",
											"    programid = jsonData._cmc_sourceprgmid_value;",
											"    programlevelid = jsonData._cmc_sourceprgmlevelid_value;",
											"    expectedstartid = jsonData._cmc_expectedstartid_value;",
											"    subcategory = jsonData._cmc_sourcesubcategoryid_value;",
											"    campaign = jsonData._cmc_sourcecampaignid_value",
											"    comments = jsonData.cmc_comments;",
											"    areaofinterestid = jsonData.cmc_areaofinterestid;",
											"    type = jsonData.cmc_type;",
											"",
											"    console.log('InboundID:' + Inboundid);",
											"    console.log('InBoundName:' + Inboundname);",
											"    console.log('ExpectedstartID:' + expectedstartid);",
											"});",
											"",
											"pm.globals.set('ginboundid22', Inboundid);",
											"pm.globals.set('gexpectedstartId22', expectedstartid);",
											"pm.globals.set('gtype22', type);",
											"setTimeout(function(){}, 25000);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const dateNow= new Date();\r",
											"pm.environment.set('currentDate', dateNow.toISOString());"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"address1_county\":\"Delhi{{$randomInt}}\",\r\n   \"address1_country\":\"India{{$randomInt}}\",\r\n   \"address1_postalcode\":\"562109{{$randomInt}}\",\r\n   \"address1_stateorprovince\":\"Karanataka{{$randomInt}}\",\r\n   \"address1_city\":\"Bengaluru{{$randomInt}}\",\r\n   \"address1_line3\":\"Street3{{$randomInt}}\",\r\n   \"address1_line2\":\"Street2{{$randomInt}}\",\r\n   \"address1_line1\":\"Street1{{$randomInt}}\",\r\n   \"jobtitle\":\"QA{{$randomInt}}\",\r\n   \"telephone1\":\"988877{{$randomInt}}\",\r\n   \"mobilephone\":\"897678{{$randomInt}}\",\r\n   \"emailaddress1\":\"{{$randomInt}}{{emailaddress1}}\",\r\n   \"lastname\":\"Lead-Last{{$randomInt}}\",\r\n   \"firstname\":\"Lead-FirstName{{$randomInt}}{{$randomInt}}\",\r\n   \"cmc_sourcedate\": \"{{currentDate}}\",\r\n    \"customerid_contact@odata.bind\": \"/contacts({{gcontactid}})\",\r\n    \"cmc_sourcecampusid@odata.bind\": \"/accounts({{gaccountId22}})\",\r\n    \"cmc_sourceprgmid@odata.bind\": \"/leads({{gProgram22}})\",\r\n    \"cmc_sourceprgmlevelid@odata.bind\": \"/leads({{gprogramlevelid22}})\",\r\n    \"cmc_sourcecategoryid@odata.bind\": \"/leads({{gsourcecategoryid22}})\",\r\n    \"cmc_sourcecampaignid@odata.bind\": \"/campaigns({{g_campaignid12}})\",\r\n    \"cmc_sourcemethodid@odata.bind\": \"/leads({{gsourcemethodid22}})\",\r\n    \"cmc_sourcesubcategoryid@odata.bind\": \"/cmc_sourcesubcategories({{gsubcategoryid12}})\",\r\n    \"cmc_expectedstartid@odata.bind\": \"/mshied_academicperiods({{gacademicperiodid12}})\",\r\n    \"cmc_comments\":\"I'm Interested for MCA and MBA\",\r\n    \"cmc_areaofinterestid@odata.bind\":\"/mshied_areaofinterests({{gareaofinterestid12}})\",\r\n    \"cmc_type\":175490001\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}leads",
									"host": [
										"{{Eresource_URL}}leads"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Values from Inbound",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var contactid;\r",
											"var primary;\r",
											"pm.test(\"Fetch Values from lead\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);\r",
											"    var jsonData = JSON.parse(responseBody);\r",
											"    contactid = jsonData._customerid_value;\r",
											"    console.log('contactid:' + contactid);\r",
											"    primary = jsonData.cmc_primary;\r",
											"    console.log('primary:' + primary);\r",
											"     pm.test(\"Validate Primary\", function () {\r",
											"        pm.expect(primary).to.equal(false);\r",
											"    });\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Prefer",
										"value": "return=representation",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Eresource_URL}}leads({{ginboundid22}})",
									"host": [
										"{{Eresource_URL}}leads({{ginboundid22}})"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Primary",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Update Inbound\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
											"    var jsonData =JSON.parse(responseBody);",
											"",
											"  });",
											"  setTimeout(function(){}, 25000);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\"cmc_primary\":true\n}\n"
								},
								"url": {
									"raw": "{{Eresource_URL}}leads({{ginboundid22}})",
									"host": [
										"{{Eresource_URL}}leads({{ginboundid22}})"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Values from Inbound",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var contactid;\r",
											"var primary;\r",
											"pm.test(\"Fetch Values from lead\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);\r",
											"    var jsonData = JSON.parse(responseBody);\r",
											"    contactid = jsonData._customerid_value;\r",
											"    console.log('contactid:' + contactid);\r",
											"    primary = jsonData.cmc_primary;\r",
											"    console.log('primary:' + primary);\r",
											"     pm.test(\"Validate Primary\", function () {\r",
											"        pm.expect(primary).to.equal(true);\r",
											"    });\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Prefer",
										"value": "return=representation",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Eresource_URL}}leads({{ginboundid22}})",
									"host": [
										"{{Eresource_URL}}leads({{ginboundid22}})"
									]
								}
							},
							"response": []
						},
						{
							"name": "Disqualify Inbound Interest",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Inbound DidQualify\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
											"    var jsonData =JSON.parse(responseBody);",
											"  });"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n   \"statecode\":2,\n   \"statuscode\":6\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}leads({{ginboundid22}})",
									"host": [
										"{{Eresource_URL}}leads({{ginboundid22}})"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Values from Inbound",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var contactid;\r",
											"var primary, statecode;\r",
											"pm.test(\"Fetch Values from lead\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);\r",
											"    var jsonData = JSON.parse(responseBody);\r",
											"    contactid = jsonData._customerid_value;\r",
											"    console.log('contactid:' + contactid);\r",
											"    primary = jsonData.cmc_primary;\r",
											"    console.log('primary:' + primary);\r",
											"\r",
											"    statecode = jsonData.statecode;\r",
											"    console.log('statecode:' +statecode);\r",
											"\r",
											"    pm.test(\"Validate Qualify status\", function () {\r",
											"        pm.expect(statecode).to.equal(2);\r",
											"    });\r",
											"     pm.test(\"Validate Primary\", function () {\r",
											"        pm.expect(primary).to.equal(true);\r",
											"    });\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Prefer",
										"value": "return=representation",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Eresource_URL}}leads({{ginboundid22}})",
									"host": [
										"{{Eresource_URL}}leads({{ginboundid22}})"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Create Inbound Interest 4",
					"item": [
						{
							"name": "Create Area of Interest",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var areaofinterestid;",
											"var areaofinterestname;",
											"",
											"pm.test(\"Create Area of Interest\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"",
											"    areaofinterestid = jsonData.mshied_areaofinterestid;",
											"    console.log(\"area of interest id : \" + areaofinterestid);",
											"",
											"    areaofinterestname = jsonData.mshied_name;",
											"    console.log(\"area of interest name : \" + areaofinterestname);",
											"",
											"});",
											"pm.globals.set('gareaofinterestid13', areaofinterestid);",
											"pm.globals.set('gareaofinterestname13', areaofinterestname);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"mshied_code\": \"{{$randomInt}}-{{$randomInt}}e1 - {{$randomInt}}\",\n    \"mshied_name\": \"{{$randomInt}}-Test-AreaOfInterest1-{{$randomInt}}\"\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}mshied_areaofinterests",
									"host": [
										"{{Eresource_URL}}mshied_areaofinterests"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Account",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var account_id; ",
											"var Accname;",
											"pm.test(\"Account Created\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    account_id = jsonData.accountid;",
											"    Accname = jsonData.name;",
											"    console.log(Accname);",
											"});",
											"",
											"var accname = data.name;",
											"var accounttype = data.mshied_accounttype;",
											"pm.globals.set('gaccountId23',account_id);",
											"pm.globals.set('gAccname13',Accname);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n \"name\":\"{{name}}na{{$randomInt}}\",\r\n \"mshied_accounttype\":\"{{mshied_accounttype}}\",\r\n \"cmc_accountcode\":\"Acc2{{$randomInt}}\",\r\n \"preferredcontactmethodcode\":1\r\n} "
								},
								"url": {
									"raw": "{{Eresource_URL}}accounts",
									"host": [
										"{{Eresource_URL}}accounts"
									]
								},
								"description": "Create Account with new Address"
							},
							"response": []
						},
						{
							"name": "Create Program",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var programid;",
											"var programname;",
											"pm.test(\"Create Program\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"",
											"    programid = jsonData.mshied_programid;",
											"    programname = jsonData.mshied_name;",
											"    console.log(\"Program ID: \" + programid);",
											"    console.log(\"Program Name: \" + programname);",
											"});",
											"pm.globals.set('gProgram23', programid);",
											"pm.globals.set('gProgramName23', programname);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"mshied_code\": \"{{$randomInt}}Pr{{$randomInt}}g2{{$randomInt}}\",\n    \"mshied_name\": \"codee{{$randomInt}}\"\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}mshied_programs",
									"host": [
										"{{Eresource_URL}}mshied_programs"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Program Level",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var programlevelid;",
											"pm.test(\"Create Program Level\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"",
											"    programlevelid = jsonData.mshied_programlevelid;",
											"    console.log(\"programlevelid : \" + programlevelid);",
											"});",
											"pm.globals.set('gprogramlevelid23', programlevelid);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"mshied_code\": \"{{$randomInt}}-C1{{$randomInt}} {{$randomInt}}\",\n    \"mshied_name\": \"{{$randomInt}}-Test-PrgLevel2-{{$randomInt}}\"\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}mshied_programlevels",
									"host": [
										"{{Eresource_URL}}mshied_programlevels"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Academic period",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var academicperiodid;",
											"var academicperiodname;",
											"",
											"pm.test(\"Academicperiodid Created\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202,204]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    academicperiodid = jsonData.mshied_academicperiodid;",
											" academicperiodname = jsonData.mshied_name;",
											" console.log('academicperiodname: '+academicperiodname);",
											" ",
											"});",
											"",
											"var startDate = data.cmc_startdate;",
											"var endDate = data.cmc_enddate;",
											"var Code = data.cmc_code;",
											"var ownerid1 = data.ownerid;",
											"pm.globals.set('gacademicperiodid13',academicperiodid);",
											"pm.globals.set('gacademicperiodname13',academicperiodname);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var moment = require('moment');\r",
											"pm.environment.set(\"timestamp\", moment().add(1, 'days').format(\"YYYY-MM-DD\"));\r",
											"pm.environment.set(\"timestampEndDate\", moment().add(100, 'days').format(\"YYYY-MM-DD\"));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"mshied_name\":\"academicperiodname21{{$randomInt}}\",\r\n\"mshied_startdate\": \"{{timestamp}}\",\r\n\"mshied_enddate\": \"{{timestampEndDate}}\",\r\n\"mshied_code\":\"{{$randomInt}}{{cmc_code}}In2111{{$randomInt}}\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}mshied_academicperiods",
									"host": [
										"{{Eresource_URL}}mshied_academicperiods"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Source Method",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var sourcemethodid;",
											"pm.test(\"Create sourcemethod\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"",
											"    sourcemethodid = jsonData.cmc_sourcemethodid;",
											"    console.log(\"sourcemethodid : \" + sourcemethodid);",
											"});",
											"pm.globals.set('gsourcemethodid23', sourcemethodid);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n   \"cmc_sourcemethodname\": \"{{$randomInt}}-TestSoucreMethod2{{$randomInt}}\"\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_sourcemethods",
									"host": [
										"{{Eresource_URL}}cmc_sourcemethods"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create SubCategory",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var subcategory;",
											"var Accname;",
											"pm.test(\"SourceSub Category Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
											"    var jsonData = JSON.parse(responseBody);",
											"",
											"    subcategory = jsonData.cmc_sourcesubcategoryid;",
											"    console.log(\"subcategory: \",subcategory);",
											"    pm.globals.set('gsubcategoryid13', subcategory);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_sourcesubcategoryname\": \"TestSubCategory1{{$randomInt}}\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_sourcesubcategories",
									"host": [
										"{{Eresource_URL}}cmc_sourcesubcategories"
									]
								},
								"description": "Create Account with new Address"
							},
							"response": []
						},
						{
							"name": "Create Source Category",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var sourcecategoryid;",
											"pm.test(\"Create Sourcecategory\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"",
											"    sourcecategoryid = jsonData.cmc_sourcecategoryid;",
											"    console.log(\"sourcecategoryid : \" + sourcecategoryid);",
											"});",
											"pm.globals.set('gsourcecategoryid23', sourcecategoryid);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"cmc_sourcecategoryname\": \"{{$randomInt}}-TestSoucreCategor2-y{{$randomInt}}\"\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_sourcecategories",
									"host": [
										"{{Eresource_URL}}cmc_sourcecategories"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create SubCategory",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var subcategory;",
											"var Accname;",
											"pm.test(\"SourceSub Category Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
											"    var jsonData = JSON.parse(responseBody);",
											"",
											"    subcategory = jsonData.cmc_sourcesubcategoryid;",
											"    console.log(\"subcategory: \",subcategory);",
											"    pm.globals.set('gsubcategoryid13', subcategory);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_sourcesubcategoryname\": \"TestSubCategory1{{$randomInt}}\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_sourcesubcategories",
									"host": [
										"{{Eresource_URL}}cmc_sourcesubcategories"
									]
								},
								"description": "Create Account with new Address"
							},
							"response": []
						},
						{
							"name": "Create Campaign",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var campaignid;",
											"pm.test(\"Account Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    campaignid = jsonData.campaignid;",
											"    console.log(\"campaignid: \", campaignid);",
											"});",
											"pm.globals.set('g_campaignid13', campaignid);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"{{$randomInt}}-TestCampaign1-{{$randomInt}}\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}campaigns",
									"host": [
										"{{Eresource_URL}}campaigns"
									]
								},
								"description": "Create Account with new Address"
							},
							"response": []
						},
						{
							"name": "Create Inbound Interest primary 'true'",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var Inboundid;",
											"var Inboundname;",
											"var contactid;",
											"var accountid;",
											"var methodid;",
											"var campaign;",
											"var categoryid;",
											"var programid;",
											"var programlevelid;",
											"var expectedstartid;",
											"var comments;",
											"var subcategory;",
											"var areaofinterestid;",
											"var type;",
											"var subcategory;",
											"",
											"pm.test(\"Lead Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
											"    var jsonData = JSON.parse(responseBody);",
											"",
											"    Inboundid = jsonData.leadid;",
											"    Inboundname = jsonData.fullname;",
											"    contactid = jsonData._customerid_value;",
											"    accountid = jsonData._cmc_sourcecampusid_value;",
											"    methodid = jsonData._cmc_sourcemethodid_value;",
											"    categoryid = jsonData._cmc_sourcecategoryid_value;",
											"    programid = jsonData._cmc_sourceprgmid_value;",
											"    programlevelid = jsonData._cmc_sourceprgmlevelid_value;",
											"    expectedstartid = jsonData._cmc_expectedstartid_value;",
											"    subcategory = jsonData._cmc_sourcesubcategoryid_value;",
											"    campaign = jsonData._cmc_sourcecampaignid_value",
											"    comments = jsonData.cmc_comments;",
											"    areaofinterestid = jsonData.cmc_areaofinterestid;",
											"    type = jsonData.cmc_type;",
											"",
											"    console.log('InboundID:' + Inboundid);",
											"    console.log('InBoundName:' + Inboundname);",
											"    console.log('ExpectedstartID:' + expectedstartid);",
											"});",
											"",
											"pm.globals.set('ginboundid23', Inboundid);",
											"pm.globals.set('gexpectedstartId23', expectedstartid);",
											"pm.globals.set('gtype23', type);",
											"setTimeout(function(){}, 25000);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const dateNow= new Date();\r",
											"pm.environment.set('currentDate', dateNow.toISOString());"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_primary\":true,\r\n    \"address1_county\":\"Delhi{{$randomInt}}\",\r\n   \"address1_country\":\"India{{$randomInt}}\",\r\n   \"address1_postalcode\":\"562109{{$randomInt}}\",\r\n   \"address1_stateorprovince\":\"Karanataka{{$randomInt}}\",\r\n   \"address1_city\":\"Bengaluru{{$randomInt}}\",\r\n   \"address1_line3\":\"Street3{{$randomInt}}\",\r\n   \"address1_line2\":\"Street2{{$randomInt}}\",\r\n   \"address1_line1\":\"Street1{{$randomInt}}\",\r\n   \"jobtitle\":\"QA{{$randomInt}}\",\r\n   \"telephone1\":\"988877{{$randomInt}}\",\r\n   \"mobilephone\":\"897678{{$randomInt}}\",\r\n   \"emailaddress1\":\"{{$randomInt}}{{emailaddress1}}\",\r\n   \"lastname\":\"Lead-Last{{$randomInt}}\",\r\n   \"firstname\":\"Lead-FirstName{{$randomInt}}{{$randomInt}}\",\r\n   \"cmc_sourcedate\": \"{{currentDate}}\",\r\n    \"customerid_contact@odata.bind\": \"/contacts({{gcontactid}})\",\r\n    \"cmc_sourcecampusid@odata.bind\": \"/accounts({{gaccountId23}})\",\r\n    \"cmc_sourceprgmid@odata.bind\": \"/leads({{gProgram23}})\",\r\n    \"cmc_sourceprgmlevelid@odata.bind\": \"/leads({{gprogramlevelid23}})\",\r\n    \"cmc_sourcecategoryid@odata.bind\": \"/leads({{gsourcecategoryid23}})\",\r\n    \"cmc_sourcecampaignid@odata.bind\": \"/campaigns({{g_campaignid13}})\",\r\n    \"cmc_sourcemethodid@odata.bind\": \"/leads({{gsourcemethodid23}})\",\r\n    \"cmc_sourcesubcategoryid@odata.bind\": \"/cmc_sourcesubcategories({{gsubcategoryid13}})\",\r\n    \"cmc_expectedstartid@odata.bind\": \"/mshied_academicperiods({{gacademicperiodid13}})\",\r\n    \"cmc_comments\":\"I'm Interested for MCA and MBA\",\r\n    \"cmc_areaofinterestid@odata.bind\":\"/mshied_areaofinterests({{gareaofinterestid13}})\",\r\n    \"cmc_type\":175490001\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}leads",
									"host": [
										"{{Eresource_URL}}leads"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Values from Inbound",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var contactid;\r",
											"var primary;\r",
											"pm.test(\"Fetch Values from lead\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);\r",
											"    var jsonData = JSON.parse(responseBody);\r",
											"    contactid = jsonData._customerid_value;\r",
											"    console.log('contactid:' + contactid);\r",
											"    primary = jsonData.cmc_primary;\r",
											"    console.log('primary:' + primary);\r",
											"     pm.test(\"Validate Primary\", function () {\r",
											"        pm.expect(primary).to.equal(true);\r",
											"    });\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Prefer",
										"value": "return=representation",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Eresource_URL}}leads({{ginboundid23}})",
									"host": [
										"{{Eresource_URL}}leads({{ginboundid23}})"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Values from Inbound1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var primary;\r",
											"pm.test(\"Fetch Values from lead\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);\r",
											"    var jsonData = JSON.parse(responseBody);\r",
											"    primary = jsonData.cmc_primary;\r",
											"    console.log('primary:' + primary);\r",
											"\r",
											"     pm.test(\"Validate Primary\", function () {\r",
											"        pm.expect(primary).to.equal(false);\r",
											"    });\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Prefer",
										"value": "return=representation",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Eresource_URL}}leads({{ginboundid}})",
									"host": [
										"{{Eresource_URL}}leads({{ginboundid}})"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Values from Inbound2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var primary;\r",
											"pm.test(\"Fetch Values from lead\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);\r",
											"    var jsonData = JSON.parse(responseBody);\r",
											"    primary = jsonData.cmc_primary;\r",
											"    console.log('primary:' + primary);\r",
											"     pm.test(\"Validate Primary\", function () {\r",
											"        pm.expect(primary).to.equal(false);\r",
											"    });\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Prefer",
										"value": "return=representation",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Eresource_URL}}leads({{ginboundid1}})",
									"host": [
										"{{Eresource_URL}}leads({{ginboundid1}})"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Values from Inbound3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var primary;\r",
											"pm.test(\"Fetch Values from lead\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);\r",
											"    var jsonData = JSON.parse(responseBody);\r",
											"    primary = jsonData.cmc_primary;\r",
											"    console.log('primary:' + primary);\r",
											"     pm.test(\"Validate Primary\", function () {\r",
											"        pm.expect(primary).to.equal(false);\r",
											"    });\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Prefer",
										"value": "return=representation",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Eresource_URL}}leads({{ginboundid22}})",
									"host": [
										"{{Eresource_URL}}leads({{ginboundid22}})"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Values from Inbound4",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var primary;\r",
											"pm.test(\"Fetch Values from lead\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);\r",
											"    var jsonData = JSON.parse(responseBody);\r",
											"    primary = jsonData.cmc_primary;\r",
											"    console.log('primary:' + primary);\r",
											"     pm.test(\"Validate Primary\", function () {\r",
											"        pm.expect(primary).to.equal(true);\r",
											"    });\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Prefer",
										"value": "return=representation",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Eresource_URL}}leads({{ginboundid23}})",
									"host": [
										"{{Eresource_URL}}leads({{ginboundid23}})"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		}
	]
}