{
	"info": {
		"_postman_id": "e780abec-74be-4e3c-bde8-e8f58c8fd352",
		"name": "TC_906018_ConditionalRequirement_AQB",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Persona - Application Admin",
			"item": [
				{
					"name": "GetToken_DCRM Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody);",
									"postman.setGlobalVariable('gaccess_token', data.access_token);",
									"",
									"//pm.environment.set(\"Eaccess_token\", data.access_token);",
									"console.log(pm.globals.get(\"gaccess_token\"));",
									"",
									"",
									"",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "grant_type",
									"value": "client_credentials",
									"type": "text"
								},
								{
									"key": "client_id",
									"value": "{{Eadmin_id}}",
									"type": "text"
								},
								{
									"key": "client_secret",
									"value": "{{Eadmin_secret}}",
									"type": "text"
								},
								{
									"key": "resource",
									"value": "{{Eresource}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "https://login.microsoftonline.com/{{Eredirectid}}/oauth2/token",
							"protocol": "https",
							"host": [
								"login",
								"microsoftonline",
								"com"
							],
							"path": [
								"{{Eredirectid}}",
								"oauth2",
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetUser - DCRM Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var userid,fullname;",
									"pm.test(\"GetUserID\", function() ",
									"{",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
									"    var jsonData =JSON.parse(responseBody);",
									"    userid = jsonData.value[0].systemuserid;",
									"    fullname=jsonData.value[0].fullname;",
									"",
									"    console.log(\"Application User name: \" +fullname);",
									"    ",
									"});",
									"pm.globals.set('gownerid',userid);",
									"console.log('Systemuser:'+userid);",
									"",
									"",
									"",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Prefer",
								"value": "return=representation"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{gaccess_token}}"
							}
						],
						"url": {
							"raw": "{{Eresource_URL}}systemusers?$filter=internalemailaddress eq 'admin@api.com'",
							"host": [
								"{{Eresource_URL}}systemusers"
							],
							"query": [
								{
									"key": "$filter",
									"value": "internalemailaddress eq 'admin@api.com'"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Create Query",
			"item": [
				{
					"name": "Create Query 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									" var queryId1;",
									"pm.test(\"Query with Query Condition 1 is Created\", function()",
									"{",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
									"    var jsonData = JSON.parse(responseBody);",
									"    queryId1 = jsonData.cmc_queryid;",
									"    console.log('Query ID is :' +queryId1);",
									"    var queryName= jsonData.cmc_queryname;",
									"    console.log('Query name that is created is:' +queryName);",
									"",
									"});",
									"",
									"pm.globals.set('gqueryId1',queryId1);",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Prefer",
								"value": "return=representation"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{gaccess_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"cmc_queryname\": \"Query {{$randomInt}} {{$randomInt}}\",\r\n\t\"cmc_conditiontype\": false,\r\n\t\"cmc_baseentity\": \"{{cmc_baseentity}}\",\r\n\t\r\n\t\"cmc_conditionxml\": \"<fetch version=\\\"1.0\\\" output-format=\\\"xml-platform\\\" mapping=\\\"logical\\\" distinct=\\\"false\\\"><entity name=\\\"cmc_application\\\"><attribute name=\\\"cmc_applicationid\\\"/><attribute name=\\\"createdon\\\"/><order attribute=\\\"createdon\\\" descending=\\\"false\\\"/><filter type=\\\"and\\\"><condition attribute=\\\"cmc_applicationname\\\" operator=\\\"like\\\" value=\\\"C%\\\"/></filter></entity></fetch>\",\r\n\t\r\n\t\"cmc_layoutxml\": \"<grid name=\\\"resultset\\\" jump=\\\"cmc_applicationname\\\" select=\\\"1\\\" icon=\\\"1\\\" preview=\\\"1\\\" object=\\\"10073\\\"><row name=\\\"result\\\" id=\\\"cmc_applicationid\\\"><cell name=\\\"createdon\\\" width=\\\"125\\\"/></row></grid>\",\r\n\t\r\n\t\"ownerid@odata.bind\": \"/systemusers({{gownerid}})\"\r\n}"
						},
						"url": {
							"raw": "{{Eresource_URL}}cmc_queries",
							"host": [
								"{{Eresource_URL}}cmc_queries"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Query 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									" var queryId1;",
									"pm.test(\"Query with Query Condition 2 is Created\", function()",
									"{",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
									"    var jsonData = JSON.parse(responseBody);",
									"    queryId1 = jsonData.cmc_queryid;",
									"    console.log('Query ID is :' +queryId1);",
									"    var queryName= jsonData.cmc_queryname;",
									"    console.log('Query name that is created is:' +queryName);",
									"",
									"});",
									"",
									"pm.globals.set('gqueryId2',queryId1);",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Prefer",
								"value": "return=representation"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{gaccess_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"cmc_queryname\": \"Query2 {{$randomInt}} {{$randomInt}}\",\r\n\t\"cmc_conditiontype\": false,\r\n\t\"cmc_baseentity\": \"{{cmc_baseentity}}\",\r\n\t\r\n\t\"cmc_conditionxml\": \"<fetch version=\\\"1.0\\\" output-format=\\\"xml-platform\\\" mapping=\\\"logical\\\" distinct=\\\"false\\\"><entity name=\\\"cmc_application\\\"><attribute name=\\\"cmc_applicationid\\\"/><attribute name=\\\"createdon\\\"/><attribute name=\\\"cmc_applicationregistration\\\"/><attribute name=\\\"cmc_applicationname\\\"/><order attribute=\\\"createdon\\\" descending=\\\"false\\\"/><link-entity name=\\\"cmc_applicationregistration\\\" from=\\\"cmc_applicationregistrationid\\\" to=\\\"cmc_applicationregistration\\\" link-type=\\\"inner\\\" alias=\\\"ag\\\"><link-entity name=\\\"cmc_applicationdefinitionversion\\\" from=\\\"cmc_applicationdefinitionversionid\\\" to=\\\"cmc_applicationdefinitionversionid\\\" link-type=\\\"inner\\\" alias=\\\"ah\\\"><filter type=\\\"and\\\"><condition attribute=\\\"cmc_lifecycletype\\\" operator=\\\"eq\\\" value=\\\"175490001\\\"/></filter></link-entity></link-entity></entity></fetch>\",\r\n\t\r\n\t\"cmc_layoutxml\": \"<grid name=\\\"resultset\\\" jump=\\\"cmc_applicationname\\\" select=\\\"1\\\" icon=\\\"1\\\" preview=\\\"1\\\" object=\\\"10073\\\"><row name=\\\"result\\\" id=\\\"cmc_applicationid\\\"><cell name=\\\"createdon\\\" width=\\\"125\\\"/><cell name=\\\"cmc_applicationname\\\" width=\\\"100\\\"/><cell name=\\\"cmc_applicationregistration\\\" width=\\\"100\\\"/></row></grid>\",\r\n\t\r\n\t\"ownerid@odata.bind\": \"/systemusers({{gownerid}})\"\r\n}"
						},
						"url": {
							"raw": "{{Eresource_URL}}cmc_queries",
							"host": [
								"{{Eresource_URL}}cmc_queries"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Query 3_Use Existing View",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									" var queryId1;",
									"pm.test(\"Query with Query Condition 3 is Created\", function()",
									"{",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
									"    var jsonData = JSON.parse(responseBody);",
									"    queryId1 = jsonData.cmc_queryid;",
									"    console.log('Query ID is :' +queryId1);",
									"    var queryName= jsonData.cmc_queryname;",
									"    console.log('Query name that is created is:' +queryName);",
									"",
									"});",
									"",
									"pm.globals.set('gqueryId3',queryId1);",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Prefer",
								"value": "return=representation"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{gaccess_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"cmc_queryname\": \"Query3_ExistingView {{$randomInt}} {{$randomInt}}\",\r\n\t\"cmc_conditiontype\": false,\r\n\t\"cmc_baseentity\": \"{{cmc_baseentity}}\",\r\n\t\r\n\t\"cmc_conditionxml\": \"<fetch version=\\\"1.0\\\" mapping=\\\"logical\\\"><entity name=\\\"cmc_application\\\"><attribute name=\\\"cmc_applicationname\\\" /><attribute name=\\\"createdon\\\" /><order attribute=\\\"cmc_applicationname\\\" descending=\\\"false\\\" /><filter type=\\\"and\\\"><condition attribute=\\\"statecode\\\" operator=\\\"eq\\\" value=\\\"0\\\" /></filter><attribute name=\\\"cmc_submitteddate\\\" /><attribute name=\\\"cmc_applicationstatus\\\" /><attribute name=\\\"cmc_applicationregistration\\\" /><attribute name=\\\"cmc_programid\\\" /><attribute name=\\\"cmc_contactid\\\" /><attribute name=\\\"cmc_applicationid\\\" /></entity></fetch>\",\r\n\t\r\n\t\"cmc_layoutxml\": \"<grid name=\\\"resultset\\\" jump=\\\"cmc_applicationname\\\" select=\\\"1\\\" icon=\\\"1\\\" preview=\\\"1\\\" object=\\\"10362\\\"><row name=\\\"result\\\" id=\\\"cmc_applicationid\\\"><cell name=\\\"cmc_applicationname\\\" width=\\\"150\\\" imageproviderfunctionname=\\\"\\\" imageproviderwebresource=\\\"$webresource:\\\" /><cell name=\\\"cmc_contactid\\\" width=\\\"100\\\" /><cell name=\\\"cmc_programid\\\" width=\\\"100\\\" /><cell name=\\\"cmc_applicationstatus\\\" width=\\\"100\\\" /><cell name=\\\"cmc_submitteddate\\\" width=\\\"100\\\" /><cell name=\\\"cmc_applicationregistration\\\" width=\\\"100\\\" /><cell name=\\\"createdon\\\" width=\\\"125\\\" /></row></grid>\",\r\n\t\r\n\t\"ownerid@odata.bind\": \"/systemusers({{gownerid}})\"\r\n}"
						},
						"url": {
							"raw": "{{Eresource_URL}}cmc_queries",
							"host": [
								"{{Eresource_URL}}cmc_queries"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Requirement Definition",
			"item": [
				{
					"name": "Create Req Definition",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var appreqdefid,reqDefName;",
									"pm.test(\"Application Requirment Definition Created\", function() ",
									"{",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202,204]);",
									"    var jsonData =JSON.parse(responseBody);",
									"    appreqdefid = jsonData.cmc_applicationrequirementdefinitionid;",
									"    reqDefName=jsonData.cmc_applicationrequirementdefinitionname;",
									"    ",
									"    console.log(\"Requirement Defintion name is: \"+reqDefName);",
									"    ",
									"});",
									"",
									"pm.globals.set('gappreqdefid',appreqdefid);",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Prefer",
								"value": "return=representation"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{gaccess_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\"cmc_applicationrequirementdefinitionname\":\"ReqDef {{$randomInt}}\",\r\n\"cmc_applicationstatuswhenallrequirementsrecei\":\"{{applicationstatusreceived}}\",\r\n\"ownerid@odata.bind\": \"/systemusers({{gownerid}})\"\r\n}"
						},
						"url": {
							"raw": "{{Eresource_URL}}cmc_applicationrequirementdefinitions",
							"host": [
								"{{Eresource_URL}}cmc_applicationrequirementdefinitions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Education Level",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var appreqdefid,reqDefName,educationlevelid;",
									"pm.test(\"Education Level Created\", function() ",
									"{",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202,204]);",
									"    var jsonData =JSON.parse(responseBody);",
									"    educationlevelid = jsonData.mshied_educationlevelid;",
									"    ",
									"    console.log(\"Educationlevel name is: \"+educationlevelid);",
									"    ",
									"});",
									"",
									"pm.globals.set('geducationlevelid',educationlevelid);",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Prefer",
								"value": "return=representation"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{gaccess_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\"mshied_code\": \"{{$randomInt}}{{$randomInt}}123{{$randomInt}}\",\r\n\"mshied_name\": \"-{{$randomInt}}-TT- Education Level-{{$randomInt}}\"\r\n}"
						},
						"url": {
							"raw": "{{Eresource_URL}}mshied_educationlevels",
							"host": [
								"{{Eresource_URL}}mshied_educationlevels"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Test Type",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var testid;",
									"var Testtypename;",
									"pm.test(\"Get Test ID\", function() ",
									"{",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202,204]);",
									"    var jsonData =JSON.parse(responseBody);",
									"    if(jsonData.value.length > 0)",
									"    {",
									"        testid = jsonData.value[0].mshied_testtypeid;",
									"        Testtypename = jsonData.value[0].mshied_name;",
									"        console.log('TesttypeID:'+testid);",
									"        console.log('Testtype:'+Testtypename);",
									"        ",
									"    }",
									"    else",
									"    {",
									"        console.log(\"No record found\");",
									"        throw new Error();",
									"    }",
									"});",
									"pm.globals.set('gtestid',testid);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Prefer",
								"value": "return=representation"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{gaccess_token}}"
							}
						],
						"url": {
							"raw": "{{Eresource_URL}}mshied_testtypes?$select=mshied_testtypeid,mshied_name &$filter=mshied_name eq '{{cmc_testscoretype1}}'",
							"host": [
								"{{Eresource_URL}}mshied_testtypes"
							],
							"query": [
								{
									"key": "$select",
									"value": "mshied_testtypeid,mshied_name "
								},
								{
									"key": "$filter",
									"value": "mshied_name eq '{{cmc_testscoretype1}}'"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Testscore Req def detail 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var appreqdefdetname, condreqdefid;",
									"pm.test(\"Application Requirment Definition Detail Created (TestScore)\", function() ",
									"{",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202,204]);",
									"    var jsonData =JSON.parse(responseBody);",
									"    appreqdefdetname = jsonData.cmc_name;",
									"    condreqdefid = jsonData.cmc_applicationrequirementdefinitiondetailid;",
									"    if(appreqdefdetname === pm.iterationData.get(\"cmc_reqdetailname1\"))",
									"    {",
									"        console.log(\"AutoName not generating names\");",
									"        throw new Error();",
									"    }",
									"    else",
									"    {",
									"        console.log(\"AutoName is generating names\");",
									"    }",
									" ",
									"});",
									"pm.globals.set('gappreqdefdetid1',condreqdefid);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Prefer",
								"value": "return=representation"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{gaccess_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\"cmc_applicationrequirementdefinition@odata.bind\":\"/cmc_applicationrequirementdefinitions({{gappreqdefid}})\",\r\n\"cmc_requirementtype\":\"{{cmc_requirementtype}}\",\r\n\"cmc_name\":\"Req detail 1 {{$randomInt}}\",\r\n\"cmc_requirementrequired\":\"{{cmc_requirementrequired}}\",\r\n\"cmc_testscoretype@odata.bind\":\"/mshied_testtypes({{gtestid}})\",\r\n\"cmc_testsourcetype\":\"{{cmc_testsourcetype}}\",\r\n\"cmc_statusonsubmit\":\"{{cmc_statusonsubmit}}\",\r\n\"cmc_conditional\":\"{{cmc_conditional}}\",\r\n\"cmc_queryId@odata.bind\":\"/cmc_queries({{gqueryId1}})\",\r\n\"ownerid@odata.bind\": \"/systemusers({{gownerid}})\"\r\n}"
						},
						"url": {
							"raw": "{{Eresource_URL}}cmc_applicationrequirementdefinitiondetails",
							"host": [
								"{{Eresource_URL}}cmc_applicationrequirementdefinitiondetails"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Off Transcript Req def detail 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var appreqdefdetid, appreqdefdetname;",
									"pm.test(\"Application Requirment Definition Detail Created (Official Transcript)\", function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
									"    var jsonData = JSON.parse(responseBody);",
									"    appreqdefdetid = jsonData.cmc_applicationrequirementdefinitiondetailid;",
									"    appreqdefdetname = jsonData.cmc_name;",
									"",
									"    console.log(\"Application definition detail name is: \" + appreqdefdetname);",
									"",
									"});",
									"",
									"pm.globals.set('gappreqdefdetid2', appreqdefdetid);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Prefer",
								"value": "return=representation"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{gaccess_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"cmc_applicationrequirementdefinition@odata.bind\": \"/cmc_applicationrequirementdefinitions({{gappreqdefid}})\",\r\n    \"cmc_requirementtype\": \"{{cmc_requirementtype1}}\",\r\n    \"cmc_name\": \"req det 2-{{$randomInt}}\",\r\n    \"cmc_requirementrequired\": \"{{cmc_requirementrequired}}\",\r\n    \"cmc_statusonsubmit\": \"{{cmc_statusonsubmit}}\",\r\n    \"cmc_requirementeducationlevelid@odata.bind\": \"/mshied_educationlevels({{geducationlevelid}})\",\r\n    \"ownerid@odata.bind\": \"/systemusers({{gownerid}})\"\r\n}"
						},
						"url": {
							"raw": "{{Eresource_URL}}cmc_applicationrequirementdefinitiondetails",
							"host": [
								"{{Eresource_URL}}cmc_applicationrequirementdefinitiondetails"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Recommendation Req def detail 3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var appreqdefdetid,appreqdefdetname;",
									"",
									"pm.test(\"Application Requirment Definition Detail Created (Unofficial Transcript)\", function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
									"    var jsonData = JSON.parse(responseBody);",
									"    appreqdefdetid = jsonData.cmc_applicationrequirementdefinitiondetailid;",
									"    appreqdefdetname = jsonData.cmc_name;",
									"",
									"    console.log(\"Application definition detail name is: \" + appreqdefdetname);",
									"",
									"});",
									"",
									"pm.globals.set('gappreqdefdetid3', appreqdefdetid);",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Prefer",
								"value": "return=representation"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{gaccess_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\"cmc_applicationrequirementdefinition@odata.bind\":\"/cmc_applicationrequirementdefinitions({{gappreqdefid}})\",\r\n\"cmc_requirementtype\":\"{{cmc_requirementtype2}}\",\r\n\"cmc_name\":\"Req def detail 3 {{$randomInt}}\",\r\n\"cmc_requirementrequired\":\"{{cmc_requirementrequired}}\",\r\n\"cmc_statusonsubmit\":\"{{cmc_statusonsubmit}}\",\r\n\"ownerid@odata.bind\": \"/systemusers({{gownerid}})\"\r\n}"
						},
						"url": {
							"raw": "{{Eresource_URL}}cmc_applicationrequirementdefinitiondetails",
							"host": [
								"{{Eresource_URL}}cmc_applicationrequirementdefinitiondetails"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create General Req def detail 4",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var appreqdefdetid,appreqdefdetname;",
									"",
									"pm.test(\"Application Requirment Definition Detail Created (General)\", function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
									"    var jsonData = JSON.parse(responseBody);",
									"    appreqdefdetid = jsonData.cmc_applicationrequirementdefinitiondetailid;",
									"    appreqdefdetname = jsonData.cmc_name;",
									"",
									"    console.log(\"Application definition detail name is: \" + appreqdefdetname);",
									"",
									"});",
									"",
									"pm.globals.set('gappreqdefdetid4', appreqdefdetid);",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Prefer",
								"value": "return=representation"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{gaccess_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\"cmc_applicationrequirementdefinition@odata.bind\":\"/cmc_applicationrequirementdefinitions({{gappreqdefid}})\",\r\n\"cmc_requirementtype\":\"{{cmc_requirementtype3}}\",\r\n\"cmc_name\":\"Req def detail-General {{$randomInt}}\",\r\n\"cmc_requirementrequired\":\"{{cmc_requirementrequired1}}\",\r\n\"cmc_statusonsubmit\":\"{{cmc_statusonsubmit}}\",\r\n\"cmc_conditional\":\"{{cmc_conditional}}\",\r\n\"cmc_queryId@odata.bind\":\"/cmc_queries({{gqueryId2}})\",\r\n\"ownerid@odata.bind\": \"/systemusers({{gownerid}})\"\r\n}"
						},
						"url": {
							"raw": "{{Eresource_URL}}cmc_applicationrequirementdefinitiondetails",
							"host": [
								"{{Eresource_URL}}cmc_applicationrequirementdefinitiondetails"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Upload Req def detail 5",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var appreqdefdetid,appreqdefdetname;",
									"",
									"pm.test(\"Application Requirment Definition Detail Created (Upload)\", function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
									"    var jsonData = JSON.parse(responseBody);",
									"    appreqdefdetid = jsonData.cmc_applicationrequirementdefinitiondetailid;",
									"    appreqdefdetname = jsonData.cmc_name;",
									"",
									"    console.log(\"Application definition detail name is: \" + appreqdefdetname);",
									"",
									"});",
									"",
									"pm.globals.set('gappreqdefdetid5', appreqdefdetid);",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Prefer",
								"value": "return=representation"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{gaccess_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\"cmc_applicationrequirementdefinition@odata.bind\":\"/cmc_applicationrequirementdefinitions({{gappreqdefid}})\",\r\n\"cmc_requirementtype\":\"{{cmc_requirementtype4}}\",\r\n\"cmc_name\":\"Req def detail-Upload {{$randomInt}}\",\r\n\"cmc_requirementrequired\":\"{{cmc_requirementrequired1}}\",\r\n\"cmc_statusonsubmit\":\"{{cmc_statusonsubmit1}}\",\r\n\"cmc_conditional\":\"{{cmc_conditional}}\",\r\n\"cmc_queryId@odata.bind\":\"/cmc_queries({{gqueryId3}})\",\r\n\"ownerid@odata.bind\": \"/systemusers({{gownerid}})\"\r\n}"
						},
						"url": {
							"raw": "{{Eresource_URL}}cmc_applicationrequirementdefinitiondetails",
							"host": [
								"{{Eresource_URL}}cmc_applicationrequirementdefinitiondetails"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Application and Application Registration",
			"item": [
				{
					"name": "Create Application Definition",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var AppDefID;",
									"var AppDefinitionName;",
									"var reqdefID;",
									"",
									"pm.test(\"Application Definition is Created\", function() ",
									"{",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202,204]);",
									"    var jsonData =JSON.parse(responseBody);",
									"    AppDefID = jsonData.cmc_applicationdefinitionid;",
									"    console.log('Application Definition ID is: ' +AppDefID);",
									"    AppDefinitionName=jsonData.cmc_applicationdefinitionname;",
									"    console.log('Application Definition name is: '+AppDefinitionName);",
									"    reqdefID=jsonData._cmc_requirementdefinitionid_value;",
									"    console.log('Requirement Definition ID that is associated to App definition is: '+reqdefID);",
									"    ",
									"    pm.globals.set('gAppDefID',AppDefID);",
									"});",
									"",
									"",
									"var Adname= data.AppDefnName;",
									"var cmc_statusoncompletion = data.cmc_statusoncompletion;",
									"var cmc_statusoncreate = data.cmc_statusoncreate;",
									"var cmc_statusonsave = data.cmc_statusonsave;",
									"var cmc_statusonsubmit = data.cmc_statusonsubmit;",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Prefer",
								"value": "return=representation"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{gaccess_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"cmc_applicationdefinitionname\":\"{{$randomInt}}{{AppDefnName}} {{$randomInt}}{{$randomInt}}\",\r\n\t\"cmc_requirementdefinitionid@odata.bind\":\"/cmc_applicationrequirementdefinitions({{gappreqdefid}})\",\r\n\t\"cmc_statusoncompletion\": \"{{cmc_statusoncompletion}}\",\r\n\t\"cmc_statusoncreate\": \"{{cmc_statusoncreate}}\",\r\n\t\"cmc_statusonsave\" : \"{{cmc_statusonsave}}\",\r\n\t\"cmc_statusonsubmit\": \"{{cmc_statusonsubmit}}\",\r\n\t\"ownerid@odata.bind\": \"/systemusers({{gownerid}})\"\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
						},
						"url": {
							"raw": "{{Eresource_URL}}cmc_applicationdefinitions",
							"host": [
								"{{Eresource_URL}}cmc_applicationdefinitions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Application Type",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var AppTypeID;",
									"var AppTypeName;",
									"",
									"pm.test(\"Application Type is Created\", function() ",
									"{",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202,204]);",
									"    var jsonData =JSON.parse(responseBody);",
									"    AppTypeID = jsonData.cmc_applicationtypeid;",
									"    console.log('Application Type ID is: ' +AppTypeID);",
									"    AppTypeName=jsonData.cmc_applicationtypename;",
									"    console.log('Application Type name is: ' +AppTypeName);",
									"    ",
									"    pm.globals.set('gAppTypeID',AppTypeID);",
									"});",
									"",
									"",
									"var ATname= data.ATName;",
									"var cmc_applicationgroup = data.cmc_applicationgroup;",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Prefer",
								"value": "return=representation"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{gaccess_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"cmc_applicationtypename\":\"{{$randomInt}}{{ATName}} {{$randomInt}}{{$randomInt}}\",\r\n\t\"cmc_applicationgroup\": \"{{cmc_applicationgroup}}\",\r\n\t\"ownerid@odata.bind\": \"/systemusers({{gownerid}})\"\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
						},
						"url": {
							"raw": "{{Eresource_URL}}cmc_applicationtypes",
							"host": [
								"{{Eresource_URL}}cmc_applicationtypes"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Program One",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var programid;",
									"pm.test(\"Get Program\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
									"    var jsonData = JSON.parse(responseBody);",
									"",
									"    programid = jsonData.mshied_programid; ",
									"    console.log('Program 1 created: '+programid);",
									"});",
									"pm.globals.set('gProgram1', programid);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Prefer",
								"value": "return=representation"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{gaccess_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"mshied_code\": \"{{$randomInt}}{{$randomInt}}Qco{{$randomInt}}\",\n    \"mshied_name\": \"program-904392{{$randomInt}}\"\n}"
						},
						"url": {
							"raw": "{{Eresource_URL}}mshied_programs",
							"host": [
								"{{Eresource_URL}}mshied_programs"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Programs Two",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var programid;",
									"pm.test(\"Get Program\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
									"    var jsonData = JSON.parse(responseBody);",
									"",
									"    programid = jsonData.mshied_programid; ",
									"     console.log('Program 2 created: '+programid);",
									"});",
									"pm.globals.set('gProgram2', programid);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Prefer",
								"value": "return=representation"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{gaccess_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"mshied_code\": \"{{$randomInt}}{{$randomInt}}ode{{$randomInt}}\",\n    \"mshied_name\": \"Program904392{{$randomInt}}\"\n    \n}"
						},
						"url": {
							"raw": "{{Eresource_URL}}mshied_programs",
							"host": [
								"{{Eresource_URL}}mshied_programs"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Programs Three",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var programid;",
									"pm.test(\"Get Program\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
									"    var jsonData = JSON.parse(responseBody);",
									"",
									"    programid = jsonData.mshied_programid; ",
									"     console.log('Program 3 created: '+programid);",
									"});",
									"pm.globals.set('gProgram3', programid);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Prefer",
								"value": "return=representation"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{gaccess_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"mshied_code\": \"{{$randomInt}}code{{$randomInt}}2{{$randomInt}}\",\n    \"mshied_name\": \"Program904392{{$randomInt}}\"\n    \n}"
						},
						"url": {
							"raw": "{{Eresource_URL}}mshied_programs",
							"host": [
								"{{Eresource_URL}}mshied_programs"
							]
						}
					},
					"response": []
				},
				{
					"name": "Adding Program1 to Application Type",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Adding Program 1 record To Application Type\", function() ",
									"{",
									"    pm.expect(pm.response.code).to.be.oneOf([204,201,202,200]);",
									"    var jsonData =JSON.parse(responseBody);",
									"    var ProgName =jsonData.mshied_name;",
									"    console.log('Program that is added to Applikcation Type is:' +ProgName);",
									"    ",
									"  ",
									"});",
									"",
									"//setTimeout(function(){}, 25000); "
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{gaccess_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Prefer",
								"value": "return=representation"
							},
							{
								"key": "OData-MaxVersion",
								"value": "4.0"
							},
							{
								"description": " ",
								"key": "OData-Version",
								"value": "4.0"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n                \r\n                \"@odata.id\":\"{{Eresource}}api/data/{{Eversion}}/mshied_programs({{gProgram1}})\"\r\n}\r\n           \r\n\r\n "
						},
						"url": {
							"raw": "{{Eresource}}api/data/{{Eversion}}/cmc_applicationtypes({{gAppTypeID}})/cmc_cmc_applicationtype_mshied_program/$ref",
							"host": [
								"{{Eresource}}api"
							],
							"path": [
								"data",
								"{{Eversion}}",
								"cmc_applicationtypes({{gAppTypeID}})",
								"cmc_cmc_applicationtype_mshied_program",
								"$ref"
							]
						}
					},
					"response": []
				},
				{
					"name": "Adding Program2 to Application Type",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Adding Program 2 record To Application Type\", function() ",
									"{",
									"    pm.expect(pm.response.code).to.be.oneOf([204,201,202,200]);",
									"    var jsonData =JSON.parse(responseBody);",
									"    var ProgName =jsonData.mshied_name;",
									"    console.log('Program that is added to Application Type is:' +ProgName);",
									"    ",
									"  ",
									"});",
									"",
									"//setTimeout(function(){}, 25000); "
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{gaccess_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Prefer",
								"value": "return=representation"
							},
							{
								"key": "OData-MaxVersion",
								"value": "4.0"
							},
							{
								"description": " ",
								"key": "OData-Version",
								"value": "4.0"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n                \r\n                \"@odata.id\":\"{{Eresource}}api/data/{{Eversion}}/mshied_programs({{gProgram2}})\"\r\n}\r\n           \r\n\r\n "
						},
						"url": {
							"raw": "{{Eresource}}api/data/{{Eversion}}/cmc_applicationtypes({{gAppTypeID}})/cmc_cmc_applicationtype_mshied_program/$ref",
							"host": [
								"{{Eresource}}api"
							],
							"path": [
								"data",
								"{{Eversion}}",
								"cmc_applicationtypes({{gAppTypeID}})",
								"cmc_cmc_applicationtype_mshied_program",
								"$ref"
							]
						}
					},
					"response": []
				},
				{
					"name": "Adding Program3 to Application Type",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Adding Program 2 record To Application Type\", function() ",
									"{",
									"    pm.expect(pm.response.code).to.be.oneOf([204,201,202,200]);",
									"    var jsonData =JSON.parse(responseBody);",
									"    var ProgName =jsonData.mshied_name;",
									"    console.log('Program that is added to Application Type is:' +ProgName);",
									"    ",
									"  ",
									"});",
									"",
									"//setTimeout(function(){}, 25000); "
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{gaccess_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Prefer",
								"value": "return=representation"
							},
							{
								"key": "OData-MaxVersion",
								"value": "4.0"
							},
							{
								"description": " ",
								"key": "OData-Version",
								"value": "4.0"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n                \r\n                \"@odata.id\":\"{{Eresource}}api/data/{{Eversion}}/mshied_programs({{gProgram3}})\"\r\n}\r\n           \r\n\r\n "
						},
						"url": {
							"raw": "{{Eresource}}api/data/{{Eversion}}/cmc_applicationtypes({{gAppTypeID}})/cmc_cmc_applicationtype_mshied_program/$ref",
							"host": [
								"{{Eresource}}api"
							],
							"path": [
								"data",
								"{{Eversion}}",
								"cmc_applicationtypes({{gAppTypeID}})",
								"cmc_cmc_applicationtype_mshied_program",
								"$ref"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Academic period",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var academicperiodid;",
									"",
									"pm.test(\"Academicperiodid Created\", function() ",
									"{",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202,204]);",
									"    var jsonData =JSON.parse(responseBody);",
									"    academicperiodid = jsonData.mshied_academicperiodid;",
									"    var mshied_name=jsonData.mshied_name;",
									"    console.log('Academic period name is: '+mshied_name);",
									"    var mshied_code=jsonData.mshied_code;",
									"    console.log('Code is: ' +mshied_code);",
									" ",
									"});",
									"pm.globals.set('gacademicperiodid',academicperiodid);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var moment = require('moment');\r",
									"pm.environment.set(\"timestamp\", moment().add(1, 'days').format(\"YYYY-MM-DD\"));\r",
									"pm.environment.set(\"timestampEndDate\", moment().add(100, 'days').format(\"YYYY-MM-DD\"));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Prefer",
								"value": "return=representation"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{gaccess_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"mshied_code\": \"{{$randomInt}}{{$randomInt}}GG{{$randomInt}}AC1\",\n    \"mshied_enddate\": \"{{timestampEndDate}}\",\n    \"mshied_startdate\": \"{{timestamp}}\",\n    \"mshied_name\": \"Academicperiod904392{{$randomInt}}\"\n}"
						},
						"url": {
							"raw": "{{Eresource_URL}}mshied_academicperiods",
							"host": [
								"{{Eresource_URL}}mshied_academicperiods"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Application Period",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var AppPerID;",
									"var AppPerName;",
									"",
									"pm.test(\"Application Period is Created\", function() ",
									"{",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202,204]);",
									"    var jsonData =JSON.parse(responseBody);",
									"    AppPerID = jsonData.cmc_applicationperiodid;",
									"    console.log('Application Period ID is: ' +AppPerID);",
									"    ",
									"    AppPerName = jsonData.cmc_applicationperiodname;",
									"    console.log('Application Period name is: ' +AppPerName);",
									"    ",
									"    pm.globals.set('gAppPerID',AppPerID);",
									"});",
									"",
									"",
									"var APName= data.APName;"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Prefer",
								"value": "return=representation"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{gaccess_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"cmc_applicationperiodname\": \"{{$randomInt}}{{$randomInt}} {{APName}} {{$randomInt}}{{$randomInt}}\",\r\n\t\"cmc_AcademicPeriodId@odata.bind\": \"/mshied_academicperiods({{gacademicperiodid}})\",\r\n\t\"ownerid@odata.bind\": \"/systemusers({{gownerid}})\"\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
						},
						"url": {
							"raw": "{{Eresource_URL}}cmc_applicationperiods",
							"host": [
								"{{Eresource_URL}}cmc_applicationperiods"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Application Definition Version",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var AppDefnVerID;",
									"var AppDefnID;",
									"var AppDefnVerName;",
									"var AppTypeID;",
									"",
									"pm.test(\"Application Definition Version is Created\", function() ",
									"{",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202,204]);",
									"    var jsonData =JSON.parse(responseBody);",
									"    AppDefnVerID = jsonData.cmc_applicationdefinitionversionid;",
									"    console.log('Application Definition version ID is: ' +AppDefnVerID);",
									"    AppDefnID = jsonData._cmc_applicationdefinitionid_value;",
									"    console.log('Application Definition ID that is linked is: ' +AppDefnID);",
									"    AppTypeID = jsonData._cmc_applicationtype_value;",
									"    console.log('Application Type ID that is linked is: ' +AppTypeID);",
									"    AppDefnVerName=jsonData.cmc_applicationdefinitionversionname;",
									"    console.log('Application Definition Version name is: ' +AppDefnVerName);",
									"    ",
									"    pm.globals.set('gAppDefnVerID',AppDefnVerID);",
									"});",
									"",
									"",
									"var ADVname= data.ADVName;",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Prefer",
								"value": "return=representation"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{gaccess_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"cmc_applicationdefinitionversionname\":\"{{$randomInt}}{{$randomInt}}{{ADVName}} {{$randomInt}}\",\r\n\t\"cmc_applicationdefinitionid@odata.bind\": \"/cmc_applicationdefinitions({{gAppDefID}})\",\r\n\t\"cmc_applicationtype@odata.bind\": \"/cmc_applicationtypes({{gAppTypeID}})\",\r\n\t\"cmc_createlifecycle\": true,\r\n\t\"cmc_lifecycletype\": \"{{LifecycleType}}\",\r\n\t\"ownerid@odata.bind\": \"/systemusers({{gownerid}})\"\r\n}"
						},
						"url": {
							"raw": "{{Eresource_URL}}cmc_applicationdefinitionversions",
							"host": [
								"{{Eresource_URL}}cmc_applicationdefinitionversions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Application Definition Version Detail",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Application Definition Version Detail is Created\", function() ",
									"{",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202,204]);",
									"    var jsonData =JSON.parse(responseBody);",
									"    AppDefnVerDetID = jsonData.cmc_applicationdefinitionversiondetailid;",
									"    console.log('Application Definition version Detail ID is: ' +AppDefnVerDetID);",
									"    var AppDefVerName = jsonData.cmc_applicationdefinitionversiondetailname;",
									"    console.log('Application Definition Version Detail name: ' +AppDefVerName);",
									"    ",
									"    pm.globals.set('gAppDefnVerDetID',AppDefnVerDetID); ",
									"    ",
									"        ",
									"});",
									"",
									"var StartDate= data.begindate;",
									"var EndDate= data.enddate;",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var moment = require('moment');\r",
									"pm.environment.set(\"timestamp\", moment().add(1, 'days').format(\"YYYY-MM-DD\"));\r",
									"pm.environment.set(\"timestampEndDate\", moment().add(100, 'days').format(\"YYYY-MM-DD\"));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Prefer",
								"value": "return=representation"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{gaccess_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"cmc_applicationdefinitionversion@odata.bind\": \"/cmc_applicationdefinitionversions({{gAppDefnVerID}})\",\r\n\t\"cmc_applicationperiod@odata.bind\": \"/cmc_applicationperiods({{gAppPerID}})\",\r\n\t\"cmc_enddate\": \"{{timestampEndDate}}\",\r\n\t\"cmc_startdate\": \"{{timestamp}}\",\r\n\t\"ownerid@odata.bind\": \"/systemusers({{gownerid}})\"\r\n}"
						},
						"url": {
							"raw": "{{Eresource_URL}}cmc_applicationdefinitionversiondetails",
							"host": [
								"{{Eresource_URL}}cmc_applicationdefinitionversiondetails"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Contact",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var ContactID;",
									"var ContactFullname;",
									"",
									"pm.test(\"Contact is Created\", function() ",
									"{",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202,204]);",
									"    var jsonData =JSON.parse(responseBody);",
									"    ContactID = jsonData.contactid;",
									"    console.log('Contact ID is: ' +ContactID);",
									"    ContactFullname = jsonData.fullname;",
									"    console.log('Contact fullname is: ' +ContactFullname);",
									"  ",
									"    ",
									"    pm.globals.set('gContactID',ContactID);",
									"});",
									"",
									"var firstname= data.firstname;",
									"var mshied_contacttype = data.mshied_contacttype;",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Prefer",
								"value": "return=representation"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{gaccess_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"firstname\":\"{{firstname}}\",\r\n\t\"lastname\": \"{{$randomInt}}{{$randomInt}}\",\r\n\t\"mshied_contacttype\": \"{{mshied_contacttype}}\",\r\n\t\"ownerid@odata.bind\": \"/systemusers({{gownerid}})\"\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
						},
						"url": {
							"raw": "{{Eresource_URL}}contacts",
							"host": [
								"{{Eresource_URL}}contacts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Application Registration",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var AppRegID;",
									"var AppDefnVerID;",
									"var AppRegName;",
									"var ContactID;",
									"",
									"pm.test(\"Application Registration is Created\", function() ",
									"{",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202,204]);",
									"    var jsonData =JSON.parse(responseBody);",
									"    AppRegID = jsonData.cmc_applicationregistrationid;",
									"    console.log('Application Registration ID is: ' +AppRegID);",
									"    AppDefnVerID = jsonData._cmc_applicationdefinitionversionid_value;",
									"    console.log('Application Definition version ID that is linked is: ' +AppDefnVerID);",
									"    AppRegName = jsonData.cmc_applicationregistration;",
									"    console.log('Application Registration name is: ' +AppRegName);",
									"    ContactID=jsonData._cmc_contactid_value;",
									"    console.log('Contact ID that is linked is: ' +ContactID);",
									"    ",
									"    pm.globals.set('gAppRegID',AppRegID);",
									"});",
									"",
									"var cmc_applicationstatus= data.cmc_applicationstatus;",
									"var cmc_sourceofrecord = data.cmc_sourceofrecord;",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Prefer",
								"value": "return=representation"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{gaccess_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"cmc_applicationdefinitionversionid@odata.bind\": \"/cmc_applicationdefinitionversions({{gAppDefnVerID}})\",\r\n\t\"cmc_contactid@odata.bind\": \"/contacts({{gContactID}})\",\r\n\t\"cmc_applicationstatus\": \"{{cmc_applicationstatus}}\",\r\n\t\"cmc_applicationsubmitted\": false,\r\n\t\"cmc_sourceofrecord\":\"{{cmc_sourceofrecord}}\", \r\n\t\"ownerid@odata.bind\": \"/systemusers({{gownerid}})\"\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
						},
						"url": {
							"raw": "{{Eresource_URL}}cmc_applicationregistrations",
							"host": [
								"{{Eresource_URL}}cmc_applicationregistrations"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Application",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var AppID;",
									"var AppName;",
									"",
									"pm.test(\"Application is Created\", function() ",
									"{",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202,204]);",
									"    var jsonData =JSON.parse(responseBody);",
									"    AppID = jsonData.cmc_applicationid;",
									"    console.log('Application ID is: ' +AppID);",
									"    ",
									"    AppName = jsonData.cmc_applicationname;",
									"    console.log('Application name is: ' +AppName);",
									"    ",
									"    pm.globals.set('gAppID',AppID);",
									"});",
									"",
									"var cmc_sourceofrecord= data.cmc_sourceofrecord;",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Prefer",
								"value": "return=representation"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{gaccess_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"cmc_applicationperiodid@odata.bind\": \"/cmc_applicationperiods({{gAppPerID}})\",\r\n\t\"cmc_applicationregistration@odata.bind\": \"/cmc_applicationregistrations({{gAppRegID}})\",\r\n\t\"cmc_contactid@odata.bind\": \"/contacts({{gContactID}})\",\r\n\t\"cmc_programid@odata.bind\": \"/mshied_programs({{gProgram1}})\",\r\n\t\"cmc_sourceofrecord\": \"{{cmc_sourceofrecord}}\",\r\n\t\"ownerid@odata.bind\": \"/systemusers({{gownerid}})\"\r\n}"
						},
						"url": {
							"raw": "{{Eresource_URL}}cmc_applications",
							"host": [
								"{{Eresource_URL}}cmc_applications"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Verify Requirements under Application 1",
			"item": [
				{
					"name": "Verify TestScore Requirement under App 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var appreqid;",
									"pm.test(\"Get Requirements\", function() ",
									"{",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202,204]);",
									"    var jsonData =JSON.parse(responseBody);",
									"    appreqid = jsonData.cmc_applicationrequirementid;",
									"    if(jsonData.value.length === 0)",
									"    {",
									"       console.log(\"Condtional Requirement-TestScore is not created since application is not submitted yet.\");",
									"    }",
									"    else",
									"    {",
									"        console.log(\"Condtional Requirement-TestScore created before application is submitted.\");",
									"        throw new Error();",
									"    }",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Prefer",
								"value": "return=representation"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{gaccess_token}}"
							}
						],
						"url": {
							"raw": "{{Eresource_URL}}cmc_applicationrequirements?$select=cmc_applicationrequirementid&$filter= _cmc_applicationid_value eq '{{gAppID}}'  and   _cmc_requirementdefinitiondetailid_value eq '{{gappreqdefdetid1}}' ",
							"host": [
								"{{Eresource_URL}}cmc_applicationrequirements"
							],
							"query": [
								{
									"key": "$select",
									"value": "cmc_applicationrequirementid"
								},
								{
									"key": "$filter",
									"value": " _cmc_applicationid_value eq '{{gAppID}}'  and   _cmc_requirementdefinitiondetailid_value eq '{{gappreqdefdetid1}}' "
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify General Requirement under App 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var appreqid;",
									"pm.test(\"Get Requirements\", function() ",
									"{",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202,204]);",
									"    var jsonData =JSON.parse(responseBody);",
									"    appreqid = jsonData.cmc_applicationrequirementid;",
									"    if(jsonData.value.length === 0)",
									"    {",
									"       console.log(\"Condtional Requirement- General is not created since application is not submitted yet.\");",
									"    }",
									"    else",
									"    {",
									"        console.log(\"Condtional Requirement-General created before application is submitted.\");",
									"        throw new Error();",
									"    }",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Prefer",
								"value": "return=representation"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{gaccess_token}}"
							}
						],
						"url": {
							"raw": "{{Eresource_URL}}cmc_applicationrequirements?$select=cmc_applicationrequirementid&$filter= _cmc_applicationid_value eq '{{gAppID}}'  and   _cmc_requirementdefinitiondetailid_value eq '{{gappreqdefdetid4}}' ",
							"host": [
								"{{Eresource_URL}}cmc_applicationrequirements"
							],
							"query": [
								{
									"key": "$select",
									"value": "cmc_applicationrequirementid"
								},
								{
									"key": "$filter",
									"value": " _cmc_applicationid_value eq '{{gAppID}}'  and   _cmc_requirementdefinitiondetailid_value eq '{{gappreqdefdetid4}}' "
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify Upload Requirement under App 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var appreqid;",
									"pm.test(\"Get Requirements\", function() ",
									"{",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202,204]);",
									"    var jsonData =JSON.parse(responseBody);",
									"    appreqid = jsonData.cmc_applicationrequirementid;",
									"    if(jsonData.value.length === 0)",
									"    {",
									"       console.log(\"Condtional Requirement-Upload is not created since application is not submitted yet.\");",
									"    }",
									"    else",
									"    {",
									"        console.log(\"Condtional Requirement-Upload created before application is submitted.\");",
									"        throw new Error();",
									"    }",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Prefer",
								"value": "return=representation"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{gaccess_token}}"
							}
						],
						"url": {
							"raw": "{{Eresource_URL}}cmc_applicationrequirements?$select=cmc_applicationrequirementid&$filter= _cmc_applicationid_value eq '{{gAppID}}'  and   _cmc_requirementdefinitiondetailid_value eq '{{gappreqdefdetid5}}' ",
							"host": [
								"{{Eresource_URL}}cmc_applicationrequirements"
							],
							"query": [
								{
									"key": "$select",
									"value": "cmc_applicationrequirementid"
								},
								{
									"key": "$filter",
									"value": " _cmc_applicationid_value eq '{{gAppID}}'  and   _cmc_requirementdefinitiondetailid_value eq '{{gappreqdefdetid5}}' "
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Submit Application 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var submitteddate;",
									"pm.test(\"Application Submitted\", function() ",
									"{",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202,204]);",
									"    var jsonData =JSON.parse(responseBody);",
									"    submitteddate = jsonData.cmc_submitteddate;",
									"    if(submitteddate === \"\")",
									"    {",
									"        console.log(\"Application is not Submitted.\");",
									"        throw new Error();",
									"    }",
									"    else",
									"    {",
									"        console.log(\"Application is Submitted.\");",
									"       ",
									"    }",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"//var current_timestamp = new Date();",
									"//postman.setEnvironmentVariable(\"current_timestamp\", current_timestamp.toISOString());",
									"",
									"var moment = require('moment');",
									"pm.environment.set(\"current_timestamp\", moment().format(\"YYYY-MM-DD\"));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Prefer",
								"value": "return=representation"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{gaccess_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\"cmc_applicationstatus\":\"{{cmc_applicationstatus1}}\",\r\n\"cmc_submitteddate\": \"{{current_timestamp}}\"\r\n}"
						},
						"url": {
							"raw": "{{Eresource_URL}}cmc_applications({{gAppID}})",
							"host": [
								"{{Eresource_URL}}cmc_applications({{gAppID}})"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify TestScore Requirement under App 1 post submitting",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get Requirements\", function() ",
									"{",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202,204]);",
									"    var jsonData =JSON.parse(responseBody);",
									"    if(jsonData.value.length > 0)",
									"    {",
									"       console.log(\"Condtional Requirement - TestScore created.\");",
									"    }",
									"    else",
									"    {",
									"        console.log(\"Condtional Requirement - Test Score not created.\");",
									"        throw new Error();",
									"    }",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Prefer",
								"value": "return=representation"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{gaccess_token}}"
							}
						],
						"url": {
							"raw": "{{Eresource_URL}}cmc_applicationrequirements?$filter= _cmc_applicationid_value eq '{{gAppID}}'  and   _cmc_requirementdefinitiondetailid_value eq '{{gappreqdefdetid1}}' ",
							"host": [
								"{{Eresource_URL}}cmc_applicationrequirements"
							],
							"query": [
								{
									"key": "$filter",
									"value": " _cmc_applicationid_value eq '{{gAppID}}'  and   _cmc_requirementdefinitiondetailid_value eq '{{gappreqdefdetid1}}' "
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify General Requirement under App 1 post submitting",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get Requirements\", function() ",
									"{",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202,204]);",
									"    var jsonData =JSON.parse(responseBody);",
									"    if(jsonData.value.length > 0)",
									"    {",
									"       console.log(\"Condtional Requirement - General created.\");",
									"    }",
									"    else",
									"    {",
									"        console.log(\"Condtional Requirement - General not created.\");",
									"        throw new Error();",
									"    }",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Prefer",
								"value": "return=representation"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{gaccess_token}}"
							}
						],
						"url": {
							"raw": "{{Eresource_URL}}cmc_applicationrequirements?$filter= _cmc_applicationid_value eq '{{gAppID}}'  and   _cmc_requirementdefinitiondetailid_value eq '{{gappreqdefdetid3}}' ",
							"host": [
								"{{Eresource_URL}}cmc_applicationrequirements"
							],
							"query": [
								{
									"key": "$filter",
									"value": " _cmc_applicationid_value eq '{{gAppID}}'  and   _cmc_requirementdefinitiondetailid_value eq '{{gappreqdefdetid3}}' "
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify Upload Requirement under App 1 post submitting",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get Requirements\", function() ",
									"{",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202,204]);",
									"    var jsonData =JSON.parse(responseBody);",
									"    if(jsonData.value.length > 0)",
									"    {",
									"       console.log(\"Condtional Requirement - Upload created.\");",
									"    }",
									"    else",
									"    {",
									"        console.log(\"Condtional Requirement - Upload not created.\");",
									"        throw new Error();",
									"    }",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Prefer",
								"value": "return=representation"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{gaccess_token}}"
							}
						],
						"url": {
							"raw": "{{Eresource_URL}}cmc_applicationrequirements?$filter= _cmc_applicationid_value eq '{{gAppID}}'  and   _cmc_requirementdefinitiondetailid_value eq '{{gappreqdefdetid4}}' ",
							"host": [
								"{{Eresource_URL}}cmc_applicationrequirements"
							],
							"query": [
								{
									"key": "$filter",
									"value": " _cmc_applicationid_value eq '{{gAppID}}'  and   _cmc_requirementdefinitiondetailid_value eq '{{gappreqdefdetid4}}' "
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Verify requirements under Application 2",
			"item": [
				{
					"name": "Create Application2_with SubmittedDate",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var AppID;",
									"var AppName;",
									"",
									"pm.test(\"Application is Created\", function() ",
									"{",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202,204]);",
									"    var jsonData =JSON.parse(responseBody);",
									"    AppID = jsonData.cmc_applicationid;",
									"    console.log('Application ID is: ' +AppID);",
									"    ",
									"    AppName = jsonData.cmc_applicationname;",
									"    console.log('Application name is: ' +AppName);",
									"    ",
									"    pm.globals.set('gAppID2',AppID);",
									"});",
									"",
									"var cmc_sourceofrecord= data.cmc_sourceofrecord;",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"//var current_timestamp = new Date();",
									"//postman.setEnvironmentVariable(\"current_timestamp\", current_timestamp.toISOString());",
									"",
									"var moment = require('moment');",
									"pm.environment.set(\"current_timestamp\", moment().format(\"YYYY-MM-DD\"));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Prefer",
								"value": "return=representation"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{gaccess_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"cmc_applicationperiodid@odata.bind\": \"/cmc_applicationperiods({{gAppPerID}})\",\r\n\t\"cmc_applicationregistration@odata.bind\": \"/cmc_applicationregistrations({{gAppRegID}})\",\r\n\t\"cmc_contactid@odata.bind\": \"/contacts({{gContactID}})\",\r\n\t\"cmc_programid@odata.bind\": \"/mshied_programs({{gProgram2}})\",\r\n\t\"cmc_sourceofrecord\": \"{{cmc_sourceofrecord}}\",\r\n\t\"cmc_applicationstatus\":\"175490008\",\r\n\t\"cmc_submitteddate\": \"{{current_timestamp}}\",\r\n\t\"ownerid@odata.bind\": \"/systemusers({{gownerid}})\"\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
						},
						"url": {
							"raw": "{{Eresource_URL}}cmc_applications",
							"host": [
								"{{Eresource_URL}}cmc_applications"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify TestScore Requirement under App 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get Requirements\", function() ",
									"{",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202,204]);",
									"    var jsonData =JSON.parse(responseBody);",
									"    if(jsonData.value.length > 0)",
									"    {",
									"       console.log(\"Condtional Requirement created.\");",
									"    }",
									"    else",
									"    {",
									"        console.log(\"Condtional Requirement not created.\");",
									"        throw new Error();",
									"    }",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Prefer",
								"value": "return=representation"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{gaccess_token}}"
							}
						],
						"url": {
							"raw": "{{Eresource_URL}}cmc_applicationrequirements?$filter= _cmc_applicationid_value eq '{{gAppID2}}'  and   _cmc_requirementdefinitiondetailid_value eq '{{gappreqdefdetid1}}' ",
							"host": [
								"{{Eresource_URL}}cmc_applicationrequirements"
							],
							"query": [
								{
									"key": "$filter",
									"value": " _cmc_applicationid_value eq '{{gAppID2}}'  and   _cmc_requirementdefinitiondetailid_value eq '{{gappreqdefdetid1}}' "
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify General Requirement under App 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get Requirements\", function() ",
									"{",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202,204]);",
									"    var jsonData =JSON.parse(responseBody);",
									"    if(jsonData.value.length > 0)",
									"    {",
									"       console.log(\"Condtional Requirement - General created.\");",
									"    }",
									"    else",
									"    {",
									"        console.log(\"Condtional Requirement - General not created.\");",
									"        throw new Error();",
									"    }",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Prefer",
								"value": "return=representation"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{gaccess_token}}"
							}
						],
						"url": {
							"raw": "{{Eresource_URL}}cmc_applicationrequirements?$filter= _cmc_applicationid_value eq '{{gAppID2}}'  and   _cmc_requirementdefinitiondetailid_value eq '{{gappreqdefdetid3}}' ",
							"host": [
								"{{Eresource_URL}}cmc_applicationrequirements"
							],
							"query": [
								{
									"key": "$filter",
									"value": " _cmc_applicationid_value eq '{{gAppID2}}'  and   _cmc_requirementdefinitiondetailid_value eq '{{gappreqdefdetid3}}' "
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify Upload Requirement under App 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get Requirements\", function() ",
									"{",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202,204]);",
									"    var jsonData =JSON.parse(responseBody);",
									"    if(jsonData.value.length > 0)",
									"    {",
									"       console.log(\"Condtional Requirement - Upload created.\");",
									"    }",
									"    else",
									"    {",
									"        console.log(\"Condtional Requirement - Upload not created.\");",
									"        throw new Error();",
									"    }",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Prefer",
								"value": "return=representation"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{gaccess_token}}"
							}
						],
						"url": {
							"raw": "{{Eresource_URL}}cmc_applicationrequirements?$filter= _cmc_applicationid_value eq '{{gAppID2}}'  and   _cmc_requirementdefinitiondetailid_value eq '{{gappreqdefdetid4}}' ",
							"host": [
								"{{Eresource_URL}}cmc_applicationrequirements"
							],
							"query": [
								{
									"key": "$filter",
									"value": " _cmc_applicationid_value eq '{{gAppID2}}'  and   _cmc_requirementdefinitiondetailid_value eq '{{gappreqdefdetid4}}' "
								}
							]
						}
					},
					"response": []
				}
			]
		}
	]
}