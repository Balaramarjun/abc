{
	"info": {
		"_postman_id": "257491f3-7896-48cd-ba4b-f76733aaf408",
		"name": "TC_762862_LastActivityDateRollup",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Pre-req creation",
			"item": [
				{
					"name": "GetToken_DCRM Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody);",
									"postman.setGlobalVariable('gaccess_token', data.access_token);",
									"",
									"//pm.environment.set(\"Eaccess_token\", data.access_token);",
									"console.log(pm.globals.get(\"gaccess_token\"));",
									"",
									"",
									"",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "grant_type",
									"value": "client_credentials",
									"type": "text"
								},
								{
									"key": "client_id",
									"value": "{{Eadmin_id}}",
									"type": "text"
								},
								{
									"key": "client_secret",
									"value": "{{Eadmin_secret}}",
									"type": "text"
								},
								{
									"key": "resource",
									"value": "{{Eresource}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "https://login.microsoftonline.com/{{Eredirectid}}/oauth2/token",
							"protocol": "https",
							"host": [
								"login",
								"microsoftonline",
								"com"
							],
							"path": [
								"{{Eredirectid}}",
								"oauth2",
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Academic period",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var academicperiodid,academicPeriodname;",
									"",
									"pm.test(\"Academicperiodid Created\", function() ",
									"{",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202,204]);",
									"    var jsonData =JSON.parse(responseBody);",
									"    academicperiodid = jsonData.mshied_academicperiodid;",
									"    academicPeriodname=jsonData.mshied_name;",
									"",
									"    console.log(\"Academic Period Name: \"+academicPeriodname);",
									" ",
									"});",
									"",
									"pm.globals.set('gacademicperiodid',academicperiodid);",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"  var moment = require('moment');\r",
									"pm.environment.set(\"timestamp\", moment().add(1, 'days').format(\"YYYY-MM-DD\"));\r",
									"\r",
									"pm.environment.set(\"timestampEndDate\", moment().add(100, 'days').format(\"YYYY-MM-DD\"));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Prefer",
								"value": "return=representation"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{gaccess_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"mshied_code\": \"{{$randomInt}}LADAca{{$randomInt}}{{$randomInt}}\",\r\n    \"mshied_enddate\": \"{{timestampEndDate}}\",\r\n    \"mshied_name\": \"API-LDA-{{$randomInt}}{{$randomInt}}{{$randomInt}}\",\r\n    \"mshied_startdate\": \"{{timestamp}}\"\r\n \r\n}\r\n\r\n"
						},
						"url": {
							"raw": "{{Eresource_URL}}mshied_academicperiods",
							"host": [
								"{{Eresource_URL}}mshied_academicperiods"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Education levels",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var educationlevelid,educationlevelname;",
									"",
									"pm.test(\"Educationlevel Created\", function() ",
									"{",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202,204]);",
									"    var jsonData =JSON.parse(responseBody);",
									"    educationlevelid = jsonData.mshied_educationlevelid;",
									"    educationlevelname=jsonData.mshied_name;",
									"",
									"    console.log(\"Education Level Name: \"+educationlevelname);",
									" ",
									"});",
									"",
									"pm.globals.set('geducationlevelid',educationlevelid);",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Prefer",
								"value": "return=representation"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{gaccess_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"mshied_code\": \"{{$randomInt}}LAD{{$randomInt}}{{$randomInt}}\",\r\n    \"mshied_name\": \"API-LDA-{{$randomInt}}{{$randomInt}}{{$randomInt}}\" \r\n}"
						},
						"url": {
							"raw": "{{Eresource_URL}}mshied_educationlevels",
							"host": [
								"{{Eresource_URL}}mshied_educationlevels"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Program levels",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var programlevelid,programlevelname;",
									"",
									"pm.test(\"Program Level Created\", function() ",
									"{",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202,204]);",
									"    var jsonData =JSON.parse(responseBody);",
									"    programlevelid = jsonData.mshied_programlevelid;",
									"    programlevelname=jsonData.mshied_name;",
									"",
									"    console.log(\"program level Name: \"+programlevelname);",
									" ",
									"});",
									"",
									"pm.globals.set('gprogramlevelid',programlevelid);",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Prefer",
								"value": "return=representation"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{gaccess_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"mshied_code\": \"{{$randomInt}}LAD{{$randomInt}}{{$randomInt}}\",\r\n    \"mshied_name\": \"API-LDA-{{$randomInt}}{{$randomInt}}{{$randomInt}}\" \r\n}"
						},
						"url": {
							"raw": "{{Eresource_URL}}mshied_programlevels",
							"host": [
								"{{Eresource_URL}}mshied_programlevels"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Program",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var programid,programname;",
									"",
									"pm.test(\"Program Created\", function() ",
									"{",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202,204]);",
									"    var jsonData =JSON.parse(responseBody);",
									"    programid = jsonData.mshied_programid;",
									"    programname=jsonData.mshied_name;",
									"",
									"    console.log(\"program Name: \"+programname);",
									" ",
									"});",
									"",
									"pm.globals.set('gprogramid',programid);",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Prefer",
								"value": "return=representation"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{gaccess_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"mshied_code\": \"{{$randomInt}}LA{{$randomInt}}{{$randomInt}}\",\r\n    \"mshied_name\": \"API-LDA-{{$randomInt}}{{$randomInt}}{{$randomInt}}\" \r\n}"
						},
						"url": {
							"raw": "{{Eresource_URL}}mshied_programs",
							"host": [
								"{{Eresource_URL}}mshied_programs"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Student Status",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var studentStatusid,studentStatusname;",
									"",
									"pm.test(\"Student Status Created\", function() ",
									"{",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202,204]);",
									"    var jsonData =JSON.parse(responseBody);",
									"    studentStatusid = jsonData.mshied_studentstatusid;",
									"    studentStatusname=jsonData.mshied_name;",
									"",
									"    console.log(\"Student Status Name: \"+studentStatusname);",
									" ",
									"});",
									"",
									"pm.globals.set('gstudentStatusid',studentStatusid);",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Prefer",
								"value": "return=representation"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{gaccess_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"mshied_code\": \"{{$randomInt}}LAD{{$randomInt}}{{$randomInt}}\",\r\n    \"mshied_name\": \"API-LDA-{{$randomInt}}{{$randomInt}}{{$randomInt}}\" \r\n}"
						},
						"url": {
							"raw": "{{Eresource_URL}}mshied_studentstatuses",
							"host": [
								"{{Eresource_URL}}mshied_studentstatuses"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get SourceCategory",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var sourceCategoryid;",
									"",
									"pm.test(\"Source category record Fetched\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
									"    var jsonData = JSON.parse(responseBody);",
									"    sourceCategoryid = jsonData.value[0].cmc_sourcecategoryid;",
									"    var sourceCategoryName = jsonData.value[0].cmc_sourcecategoryname;",
									"    console.log('SourceCategory Name is: ' + sourceCategoryName);",
									"",
									"});",
									"",
									"pm.globals.set('gsourceCategoryid1', sourceCategoryid);",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Prefer",
								"value": "return=representation"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{gaccess_token}}"
							}
						],
						"url": {
							"raw": "{{Eresource_URL}}cmc_sourcecategories",
							"host": [
								"{{Eresource_URL}}cmc_sourcecategories"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get SourceMethod",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var sourceMethodid;",
									"",
									"pm.test(\"Source Method record Fetched\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
									"    var jsonData = JSON.parse(responseBody);",
									"    sourceMethodid = jsonData.value[0].cmc_sourcemethodid;",
									"    var sourceMethodName = jsonData.value[0].cmc_sourcemethodname;",
									"    console.log('SourceMethod Name is: ' + sourceMethodName);",
									"",
									"});",
									"",
									"pm.globals.set('gsourceMethodid1', sourceMethodid);",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Prefer",
								"value": "return=representation"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{gaccess_token}}"
							}
						],
						"url": {
							"raw": "{{Eresource_URL}}cmc_sourcemethods",
							"host": [
								"{{Eresource_URL}}cmc_sourcemethods"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Persona- Student Advisor",
			"item": [
				{
					"name": "GetToken_DCRM Student Advisor",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody);",
									"postman.setGlobalVariable('gaccess_token', data.access_token);",
									"",
									"//pm.environment.set(\"Eaccess_token\", data.access_token);",
									"console.log(pm.globals.get(\"gaccess_token\"));",
									"",
									"",
									"",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "grant_type",
									"value": "client_credentials",
									"type": "text"
								},
								{
									"key": "client_id",
									"value": "{{Estudentadvisor_id}}",
									"type": "text"
								},
								{
									"key": "client_secret",
									"value": "{{Estudentadvisor_secret}}",
									"type": "text"
								},
								{
									"key": "resource",
									"value": "{{Eresource}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "https://login.microsoftonline.com/{{Eredirectid}}/oauth2/token",
							"protocol": "https",
							"host": [
								"login",
								"microsoftonline",
								"com"
							],
							"path": [
								"{{Eredirectid}}",
								"oauth2",
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetUser - DCRM Student Advisor",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var userid,fullname;",
									"pm.test(\"GetUserID\", function() ",
									"{",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
									"    var jsonData =JSON.parse(responseBody);",
									"    userid = jsonData.value[0].systemuserid;",
									"    fullname=jsonData.value[0].fullname;",
									"",
									"    console.log(\"Application User name: \" +fullname);",
									"    ",
									"});",
									"pm.globals.set('guserid4',userid);",
									"console.log('Systemuser:'+userid);",
									"",
									"",
									"",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Prefer",
								"value": "return=representation"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{gaccess_token}}"
							}
						],
						"url": {
							"raw": "{{Eresource_URL}}systemusers?$filter=internalemailaddress eq 'studentadvisor@api.com'",
							"host": [
								"{{Eresource_URL}}systemusers"
							],
							"query": [
								{
									"key": "$filter",
									"value": "internalemailaddress eq 'studentadvisor@api.com'"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "DateRollUp check",
			"item": [
				{
					"name": "Create Contact",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var contact_id;",
									"var Name;",
									"pm.test(\"Contact Created\", function() ",
									"{",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
									"    var jsonData =JSON.parse(responseBody);",
									"    contact_id = jsonData.contactid;",
									"    Name = jsonData.fullname;",
									"    var lastActivityCompletedDate=jsonData.cmc_lastcompletedactivitydate;",
									"    console.log(\"last Activity Completed Date \"+lastActivityCompletedDate);",
									"    ",
									"    pm.globals.set('glastActivityCompletedDate',lastActivityCompletedDate);",
									"});",
									" ",
									"  ",
									"  var addressnamecontact = data.cmc_addressname2;",
									"  var cmc_sourcemethod =data.cmc_sourcemethodid;",
									"  var cmc_sourcecategory =data.cmc_sourcecategoryid;",
									"  var CurrentProgramLevelId =data.mshied_CurrentProgramLevelId;",
									"  var CurrentProgramId =data.mshied_CurrentProgramId;",
									"  var titleid =data.cmc_titleid;",
									"  var srcpogramlevelid =data.cmc_srcpogramlevelid;",
									"  var srcprogramid =data.cmc_srcprogramid;",
									"  var educationlevelid =data.cmc_educationlevelid;",
									"  var StudentStatusId =data.mshied_StudentStatusId;",
									"  var mshied_contacttype =data.mshied_contacttype;",
									"  var emailaddress1 =data.emailaddress1;",
									"  var cmc_dateofbirth =data.cmc_dateofbirth;",
									"  var cmc_sourcedate =data.cmc_sourcedate;",
									"  var recentsat =data.cmc_recentsat;",
									"  var recentact =data.cmc_recentact;",
									"  var gendercode =data.gendercode;",
									"  var shippingmethodcode =data.shippingmethodcode;",
									"  var firstname = data.firstname;",
									"  var lastname = data.lastname;",
									"  var anniversary = data.anniversary;",
									"  var lastonholdtime = data.lastonholdtime;",
									"  var numberofchildren = data.numberofchildren;",
									"  var familystatuscode = data.familystatuscode;",
									"  var race = data.mshied_race;",
									"  var miltarystatus = data.mshied_miltarystatus;",
									"  var ethnicgroup = data.mshied_ethnicgroup;",
									"  var nationality = data.mshied_nationality;",
									"  ",
									"  //Address variables",
									"  var Zip = data.cmc_zip;",
									"  var City = data.cmc_city;",
									"  var addresstype1 = data.cmc_addresstypeid;",
									"pm.globals.set('gcontactid',contact_id);",
									"console.log(Name);",
									"console.log('Contactid:'+contact_id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Prefer",
								"value": "return=representation"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{gaccess_token}}"
							},
							{
								"key": "OData-Version",
								"value": "4.0"
							},
							{
								"key": "OData-MaxVersion",
								"value": "4.0"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\"firstname\": \"{{$randomFirstName}}{{$randomInt}}\",\r\n\"lastname\": \"{{$randomLastName}}{{$randomInt}}{{$randomInt}}\",\r\n\"middlename\":\"mid{{$randomInt}}\",\r\n\"mshied_maidenname\":\"maid{{$randomInt}}\",\r\n\"emailaddress1\":\"{{$randomInt}}{{$randomInt}}{{$randomEmail}}\",\r\n\"gendercode\":1,\r\n\"birthdate\":\"1985-04-22\",\r\n\"cmc_recentsat\":\"266\",\r\n\"cmc_recentact\":\"100\",\r\n\"mshied_contacttype\":\"494280011\",\r\n\"mshied_race\":\"494280001\",\r\n\"mshied_ethnicgroup\":\"175490001\",\r\n\"spousesname\":\"wife{{$randomInt}}\",\r\n\"mshied_nationality\":\"175490001\",\r\n\"cmc_sourcecategoryid@odata.bind\":\"/contacts({{gsourceCategoryid1}})\",\r\n\"cmc_sourcemethodid@odata.bind\":\"/contacts({{gsourceMethodid1}})\",\r\n\"cmc_educationlevelid@odata.bind\": \"/contacts({{geducationlevelid}})\",\r\n\"mshied_CurrentProgramLevelId@odata.bind\": \"/contacts({{gprogramlevelid}})\",\r\n\"mshied_CurrentProgramId@odata.bind\": \"/contacts({{gprogramid}})\",\r\n\"mshied_StudentStatusId@odata.bind\": \"/contacts({{gstudentStatusid}})\",\r\n\"mshied_CurrentAcademicPeriodId@odata.bind\": \"/mshied_academicperiods({{gacademicperiodid}})\",\r\n\"fax\":\"78865{{$randomInt}}30\",\r\n\"mobilephone\":\"78965{{$randomInt}}30\",\r\n\"telephone1\":\"8569{{$randomInt}}230\"\r\n\r\n}"
						},
						"url": {
							"raw": "{{Eresource}}api/data/{{Eversion}}/contacts",
							"host": [
								"{{Eresource}}api"
							],
							"path": [
								"data",
								"{{Eversion}}",
								"contacts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Task",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"var taskid;",
									"pm.test(\"Task Activity Created\", function() ",
									"{",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
									"    var jsonData =JSON.parse(responseBody);",
									"  taskid  = jsonData.activityid ;",
									"  var subject=jsonData.subject;",
									"  console.log(\"Subject of task: \" +subject);",
									"  ",
									"});",
									"",
									"  pm.globals.set('gtaskid',taskid);",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Prefer",
								"value": "return=representation"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{gaccess_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n \r\n   \"subject\": \"Task Subject{{$randomInt}}4\",\r\n   \"prioritycode\": 1,\r\n\t\"regardingobjectid_contact_task@odata.bind\": \"/contacts({{gcontactid}})\",\r\n\t\"actualdurationminutes\": 30\r\n}\r\n\r\n"
						},
						"url": {
							"raw": "{{Eresource}}api/data/{{Eversion}}/tasks",
							"host": [
								"{{Eresource}}api"
							],
							"path": [
								"data",
								"{{Eversion}}",
								"tasks"
							]
						}
					},
					"response": []
				},
				{
					"name": "Mark Task as Completed",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"var taskid;",
									"pm.test(\"Task Activity is marked as completed\", function() ",
									"{",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
									"    var jsonData =JSON.parse(responseBody);",
									"  taskid  = jsonData.activityid ;",
									"  var subject=jsonData.subject;",
									"  console.log(\"Subject of task: \" +subject);",
									"  ",
									"});",
									"",
									"  pm.globals.set('gtaskid1',taskid);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Prefer",
								"value": "return=representation"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{gaccess_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"statecode\": 1,\r\n    \"statuscode\": -1\r\n}\r\n\r\n"
						},
						"url": {
							"raw": "{{Eresource}}api/data/{{Eversion}}/tasks({{gtaskid}})",
							"host": [
								"{{Eresource}}api"
							],
							"path": [
								"data",
								"{{Eversion}}",
								"tasks({{gtaskid}})"
							]
						}
					},
					"response": []
				},
				{
					"name": "Check LastActivityDate in Contact",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var contact_id;",
									"var Name;",
									"pm.test(\"Getting the last activity date rollup value\", function() ",
									"{",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
									"    var jsonData =JSON.parse(responseBody);",
									"    contact_id = jsonData.contactid;",
									"    Name = jsonData.fullname;",
									"    var lastActivityCompletedDate=jsonData.cmc_lastcompletedactivitydate;",
									"    console.log(\"last Activity Completed Date \"+lastActivityCompletedDate);",
									"    ",
									"    var oldLastActivityDate=pm.globals.get('glastActivityCompletedDate');",
									"    ",
									"    if(lastActivityCompletedDate!=oldLastActivityDate)",
									"    {",
									"        console.log(\"Last Activity completed date is provided with proper date\");",
									"    }",
									"    else",
									"    {",
									"        console.log(\"Date is not updated. Else, check by refreshing the field manually in the Classic/legacy Engage App\");",
									"    }",
									"});",
									" ",
									"console.log(Name);",
									"console.log('Contactid:'+contact_id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Prefer",
								"value": "return=representation"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{gaccess_token}}"
							},
							{
								"key": "OData-Version",
								"value": "4.0"
							},
							{
								"key": "OData-MaxVersion",
								"value": "4.0"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{Eresource}}api/data/{{Eversion}}/contacts({{gcontactid}})",
							"host": [
								"{{Eresource}}api"
							],
							"path": [
								"data",
								"{{Eversion}}",
								"contacts({{gcontactid}})"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}