{
	"info": {
		"_postman_id": "b810986b-86e2-4556-8ed6-f3652fe89013",
		"name": "TC1058306_Google-Calender",
		"description": "TC1058306_Google-Calender",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "GetToken_DCRMAPI-System Admin",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "23b8d8ab-9bbb-4e9d-a477-a54fc18c85e7",
						"exec": [
							"var data = JSON.parse(responseBody);",
							"postman.setGlobalVariable('gaccess_token', data.access_token);",
							"",
							"//pm.environment.set(\"Eaccess_token\", data.access_token);",
							"console.log(pm.globals.get(\"gaccess_token\"));",
							"",
							"",
							"",
							"",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "557f75d0-e415-4fe9-919d-b5c0f03cf164",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "grant_type",
							"value": "client_credentials",
							"type": "text"
						},
						{
							"key": "client_id",
							"value": "{{Esystemadmin_id}}",
							"type": "text"
						},
						{
							"key": "client_secret",
							"value": "{{Esystemadmin_secret}}",
							"type": "text"
						},
						{
							"key": "resource",
							"value": "{{Eresource}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "https://login.microsoftonline.com/{{Eredirectid}}/oauth2/token",
					"protocol": "https",
					"host": [
						"login",
						"microsoftonline",
						"com"
					],
					"path": [
						"{{Eredirectid}}",
						"oauth2",
						"token"
					]
				}
			},
			"response": []
		},
		{
			"name": "GetUser - DCRM Faculty/Instructor",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "4ddbc977-87dc-430a-b8e2-569ebf6e2b0f",
						"exec": [
							"var userid,fullname;",
							"pm.test(\"GetUserID\", function() ",
							"{",
							"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
							"    var jsonData =JSON.parse(responseBody);",
							"    userid = jsonData.value[0].systemuserid;",
							"    fullname=jsonData.value[0].fullname;",
							"",
							"    console.log(\"Application User name: \" +fullname);",
							"    ",
							"});",
							"pm.globals.set('guserid5',userid);",
							"console.log('Systemuser:'+userid);",
							"",
							"",
							"",
							"",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "6a871403-0b5c-478c-97f6-5ae09d61ac88",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Prefer",
						"value": "return=representation"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{gaccess_token}}"
					}
				],
				"url": {
					"raw": "{{Eresource_URL}}systemusers?$filter=internalemailaddress eq 'bill@engageuniversity.org'",
					"host": [
						"{{Eresource_URL}}systemusers"
					],
					"query": [
						{
							"key": "$filter",
							"value": "internalemailaddress eq 'bill@engageuniversity.org'"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "EnableGoogleSyncAppointment",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "2d4e48b0-6ea7-4b50-afd0-346860299ecb",
						"exec": [
							"var userid;",
							"pm.test(\"Enable Googel Sync Appointment to this Appointment Owner \", function() ",
							"{",
							"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
							"    var jsonData =JSON.parse(responseBody);",
							"    ",
							"    var status=jsonData.cmc_googlesyncappointments;",
							"    console.log(\"Googel Sync Appointment Status: \" +status);",
							"    ",
							"});",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "eb043f99-21b4-4ac1-887c-c6ff8db4f420",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Prefer",
						"value": "return=representation"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{gaccess_token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{  \r\n\"cmc_googlesyncappointments\": true\r\n}"
				},
				"url": {
					"raw": "{{Eresource_URL}}systemusers({{guserid5}})",
					"host": [
						"{{Eresource_URL}}systemusers({{guserid5}})"
					]
				}
			},
			"response": []
		},
		{
			"name": "GetToken_DCRM Student Advisor",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "9dc53132-7dd1-4be5-8683-a4d608626503",
						"exec": [
							"var data = JSON.parse(responseBody);",
							"postman.setGlobalVariable('gaccess_token', data.access_token);",
							"",
							"//pm.environment.set(\"Eaccess_token\", data.access_token);",
							"console.log(pm.globals.get(\"gaccess_token\"));",
							"",
							"",
							"",
							"",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "bf48d5ac-c19b-46cf-85d2-52dc973b6d9a",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "grant_type",
							"value": "client_credentials",
							"type": "text"
						},
						{
							"key": "client_id",
							"value": "{{Estudentadvisor_id}}",
							"type": "text"
						},
						{
							"key": "client_secret",
							"value": "{{Estudentadvisor_secret}}",
							"type": "text"
						},
						{
							"key": "resource",
							"value": "{{Eresource}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "https://login.microsoftonline.com/{{Eredirectid}}/oauth2/token",
					"protocol": "https",
					"host": [
						"login",
						"microsoftonline",
						"com"
					],
					"path": [
						"{{Eredirectid}}",
						"oauth2",
						"token"
					]
				}
			},
			"response": []
		},
		{
			"name": "GetUserID for partyid1",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "920da293-1a3f-4b02-85a3-2667e29d428c",
						"exec": [
							"var userid;",
							"pm.test(\"GetUserID\", function() ",
							"{",
							"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
							"    var jsonData =JSON.parse(responseBody);",
							"    userid = jsonData.value[0].systemuserid;",
							"    ",
							"});",
							"pm.globals.set('gpartyid',userid);",
							"console.log('Systemuser:'+userid);"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "11166a3c-9aa5-48e0-9b78-eac3af3269f6",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Prefer",
						"value": "return=representation"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{gaccess_token}}"
					}
				],
				"url": {
					"raw": "{{Eresource_URL}}systemusers?$select=systemuserid&$filter=internalemailaddress eq 'admin@api.com'",
					"host": [
						"{{Eresource_URL}}systemusers"
					],
					"query": [
						{
							"key": "$select",
							"value": "systemuserid"
						},
						{
							"key": "$filter",
							"value": "internalemailaddress eq 'admin@api.com'"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "CreateAppointment in Engage",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "5105c6eb-7d3d-424d-adea-65dc0459e14d",
						"exec": [
							"var appointmentid;",
							"var appointmentsubject;",
							"pm.test(\"Appointment Activity Created\", function() ",
							"{",
							"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
							"    var jsonData =JSON.parse(responseBody);",
							"    appointmentid = jsonData.activityid;",
							"  ",
							"  console.log(\"Appointment:\" ,appointmentid);",
							"  ",
							"   appointmentsubject = jsonData.subject;",
							"   console.log(\"Sub:\" ,appointmentsubject);",
							"",
							"    appointmentlocation = jsonData.location;",
							"    console.log(\"appointmentlocation:\" ,appointmentlocation);",
							"",
							"    appointmentdescription = jsonData.description;",
							"    console.log(\"appointmentdescription:\" ,appointmentdescription);",
							"",
							"   scheduledend = jsonData.scheduledend;",
							"   console.log(\"scheduledend:\" ,scheduledend);",
							"",
							"   scheduledstart = jsonData.scheduledstart;",
							"   console.log(\"scheduledstart:\" ,scheduledstart);",
							"",
							"});",
							"",
							"  pm.globals.set('gappointmentid',appointmentid);",
							"  pm.globals.set('gscheduledstart',scheduledstart);",
							"  pm.globals.set('gscheduledend',scheduledend);",
							"  pm.globals.set('gappointmentdescription',appointmentdescription);",
							"  pm.globals.set('gappointmentlocation',appointmentlocation);",
							"  pm.globals.set('gappointmentsubject',appointmentsubject);",
							"  ",
							"",
							"",
							"console.log(pm.globals.get(\"gappointmentid\"));",
							"",
							"  setTimeout(function(){},30000);",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "1a580cb6-2ea4-4612-8630-81d46eb5412f",
						"exec": [
							"var current_timestamp = new Date();",
							"postman.setEnvironmentVariable(\"current_timestamp\", current_timestamp.toISOString());",
							"",
							"console.log(\"current_timestamp\" +current_timestamp);",
							"var moment = require(\"moment\");",
							"pm.environment.set('pickUpTime', moment().add(30, 'minutes').toISOString());",
							"",
							"//console.log(\"pickUpTime\" +pickUpTime);",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Prefer",
						"value": "return=representation"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{gaccess_token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n \"subject\": \"BalaTestgoogleAPI{{$randomInt}}\",\r\n \"location\": \"AppointmentLoc-{{$randomCity}}\",\r\n \"description\": \"Bala Test Description{{$randomInt}}\",\r\n  \"scheduledstart\": \"{{current_timestamp}}\",\r\n \"scheduledend\": \"{{pickUpTime}}\",\r\n  \"ownerid@odata.bind\": \"/systemusers({{guserid5}})\",\r\n \"prioritycode\": 1,\r\n\r\n \"appointment_activity_parties\"  : [\r\n        {\r\n            \"partyid_systemuser@odata.bind\" : \"/systemusers({{gpartyid}})\",\r\n            \"participationtypemask\" : 5\r\n        },\r\n        {\r\n            \"partyid_systemuser@odata.bind\" : \"/systemusers({{gpartyid}})\",\r\n            \"participationtypemask\" : 6\r\n        }]\r\n\r\n}"
				},
				"url": {
					"raw": "{{Eresource}}api/data/{{Eversion}}/appointments",
					"host": [
						"{{Eresource}}api"
					],
					"path": [
						"data",
						"{{Eversion}}",
						"appointments"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get cmc_googleeventid from Engage",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "0c2e7206-8b69-4cd7-bb57-99202244409a",
						"exec": [
							"var googleeventid;",
							"var appointmentsubject;",
							"pm.test(\"Get Google Event ID \", function() ",
							"{",
							"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
							"    var jsonData =JSON.parse(responseBody);",
							"  googleeventid = jsonData.cmc_googleeventid;",
							"  ",
							"  console.log(\"googleeventid:\" ,googleeventid);",
							"  ",
							"  ",
							"});",
							"",
							"pm.globals.set('ggoogleeventid',googleeventid);",
							"console.log(pm.globals.get(\"gappointmentid\"));",
							"",
							"if(googleeventid==null)",
							"{",
							"postman.setNextRequest(\"Get cmc_googleeventid from Engage\");",
							"} ",
							"else ",
							"{",
							"postman.setNextRequest(\"GetTokenfromGoogle\");",
							"}"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "67cabf89-9885-4242-82cf-190ac63dc9ba",
						"exec": [
							"var current_timestamp = new Date();",
							"postman.setEnvironmentVariable(\"current_timestamp\", current_timestamp.toISOString());",
							"",
							"",
							"",
							"",
							"var moment = require(\"moment\");",
							"",
							"pm.environment.set('pickUpTime', moment().add(30, 'minutes').toISOString());",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Prefer",
						"value": "return=representation"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{gaccess_token}}"
					}
				],
				"url": {
					"raw": "{{Eresource}}api/data/{{Eversion}}/appointments({{gappointmentid}})",
					"host": [
						"{{Eresource}}api"
					],
					"path": [
						"data",
						"{{Eversion}}",
						"appointments({{gappointmentid}})"
					]
				}
			},
			"response": []
		},
		{
			"name": "GetTokenfromGoogle",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "a8ac4f93-4e1f-4dea-b279-726269351767",
						"exec": [
							"eval(pm.environment.get('get_google_token_script'));\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "92427e4a-bbcd-4c44-b3f2-56dd9ecee850",
						"exec": [
							"pm.test(\"GetTokenfromGoogle\", function() \r",
							"{\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
							"    var jsonData =JSON.parse(responseBody);\r",
							"\r",
							"  \r",
							"});\r",
							"\r",
							"setTimeout(function(){},10000);"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true,
					"accept-encoding": true,
					"connection": true,
					"user-agent": true
				}
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{accessToken}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "https://www.googleapis.com/calendar/v3/users/me/calendarList",
					"protocol": "https",
					"host": [
						"www",
						"googleapis",
						"com"
					],
					"path": [
						"calendar",
						"v3",
						"users",
						"me",
						"calendarList"
					]
				},
				"description": "This request creates a signed JWT using the `jwt_secret` variable and encodes the JWT data as base64. It then sets the signed and encoded JWT as `Bearer` token in the `Authorization` header."
			},
			"response": []
		},
		{
			"name": "Get Appointment from Google",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "4809ee36-97f0-4860-b40e-b6cf8934d2f6",
						"exec": [
							"//Calendar.Events.list(calendarId).items[0].id\r",
							"\r",
							"var googleeventid, summary, description, location, creator, startdate, enddate, organizer, optional;\r",
							"\r",
							"pm.test(\"Appointment Created in Gooogle Calender\", function () {\r",
							"  pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);\r",
							"  var jsonData = JSON.parse(responseBody);\r",
							"  googleeventid = jsonData.id;\r",
							"  summary = jsonData.summary;\r",
							"  description = jsonData.description;\r",
							"  location = jsonData.location;\r",
							"  creator = jsonData.creator.email;\r",
							"  startdate = jsonData.start.dateTime;\r",
							"  enddate = jsonData.end.dateTime;\r",
							"  organizer = jsonData.attendees[0].email;\r",
							"  optional = jsonData.attendees[1].email;\r",
							"\r",
							"  console.log(\"googleeventid:\", googleeventid);\r",
							"  console.log(\"summary:\", summary);\r",
							"  console.log(\"location:\", location);\r",
							"  console.log(\"creator:\", creator);\r",
							"  console.log(\"startdate:\", startdate);\r",
							"  console.log(\"enddate:\", enddate);\r",
							"  console.log(\"organizer:\", organizer);\r",
							"  console.log(\"optional:\", optional);\r",
							"\r",
							"  var gappointmentid= pm.globals.get(\"gappointmentid\");\r",
							"  var gscheduledstart= pm.globals.get(\"gscheduledstart\");\r",
							"  var gscheduledend =pm.globals.get(\"gscheduledend\");\r",
							"  var gappointmentdescription=pm.globals.get(\"gappointmentdescription\");\r",
							"  var gappointmentlocation=pm.globals.get(\"gappointmentlocation\");\r",
							"  var gappointmentsubject=pm.globals.get(\"gappointmentsubject\");\r",
							"  var ggoogleeventid=pm.globals.get(\"ggoogleeventid\");\r",
							"  \r",
							"\r",
							"  console.log(\"Engagelocation: \" +gappointmentlocation);\r",
							"  console.log(\"Engagedescription: \" +gappointmentdescription);\r",
							"  console.log(\"Engagelocation :\" +gappointmentlocation);\r",
							"  console.log(\"Engage Startdate :\" +gscheduledstart);\r",
							"  console.log(\"Engage Enddate: \" +gscheduledend);\r",
							"  console.log(\"EngageSubject: \" +gappointmentsubject);\r",
							"\r",
							"  pm.test(\"Validate Location\", function()\r",
							"        {\r",
							"            pm.expect(gappointmentlocation).to.equal(location);\r",
							"        });\r",
							" //pm.test(\"Validate Startdate\", function()\r",
							"//         {\r",
							"//             pm.expect(gscheduledstart).to.equal(startdate);\r",
							"//         });\r",
							"// pm.test(\"Validate Enddate\", function()\r",
							"//         {\r",
							"//             pm.expect(gscheduledend).to.equal(enddate);\r",
							"//         });\r",
							"pm.test(\"Validate Subject\", function()\r",
							"        {\r",
							"            pm.expect(gappointmentsubject).to.equal(summary);\r",
							"        });\r",
							"pm.test(\"Validate Description\", function()\r",
							"        {\r",
							"            pm.expect(gappointmentdescription).to.equal(description);\r",
							"        });\r",
							"pm.test(\"Validate googleeventid\", function()\r",
							"        {\r",
							"            pm.expect(ggoogleeventid).to.equal(googleeventid);\r",
							"        });\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "a50d9647-e75f-4e42-b992-1cfabb9854c8",
						"exec": [
							"// eval(pm.environment.get('get_google_token_script'));\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true,
					"accept-encoding": true,
					"connection": true,
					"user-agent": true
				}
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{accessToken}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "https://www.googleapis.com/calendar/v3/calendars/primary/events/{{ggoogleeventid}}",
					"protocol": "https",
					"host": [
						"www",
						"googleapis",
						"com"
					],
					"path": [
						"calendar",
						"v3",
						"calendars",
						"primary",
						"events",
						"{{ggoogleeventid}}"
					]
				},
				"description": "This request creates a signed JWT using the `jwt_secret` variable and encodes the JWT data as base64. It then sets the signed and encoded JWT as `Bearer` token in the `Authorization` header."
			},
			"response": []
		},
		{
			"name": "Marking Complete Appointment in Engage",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "3b319905-48fa-4795-a298-2b64c9a5316a",
						"exec": [
							"var appointmentid;",
							"var appointmentsubject;",
							"pm.test(\"Appointment is completed\", function() ",
							"{",
							"    pm.expect(pm.response.code).to.be.oneOf([204,200,201,202]);",
							"    var jsonData =JSON.parse(responseBody);",
							"",
							"",
							"",
							"",
							"});",
							"",
							"",
							"  setTimeout(function(){},30000);",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "54d67000-e415-4449-9056-d92d477a9b2f",
						"exec": [
							"var current_timestamp = new Date();",
							"postman.setEnvironmentVariable(\"current_timestamp\", current_timestamp.toISOString());",
							"",
							"var moment = require(\"moment\");",
							"pm.environment.set('pickUpTime', moment().add(30, 'minutes').toISOString());",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Prefer",
						"value": "return=representation"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{gaccess_token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "\r\n{\r\n\"statecode\": 1,\r\n\"statuscode\": 3\r\n}"
				},
				"url": {
					"raw": "{{Eresource}}api/data/{{Eversion}}/appointments({{gappointmentid}})",
					"host": [
						"{{Eresource}}api"
					],
					"path": [
						"data",
						"{{Eversion}}",
						"appointments({{gappointmentid}})"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Appointment from Google -Check Appointment Status",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "3965597c-45e1-4a12-af79-aedc67f27090",
						"exec": [
							"//Calendar.Events.list(calendarId).items[0].id\r",
							"\r",
							"var googleeventid, summary, description, location, creator, startdate, enddate, organizer, optional,status;\r",
							"\r",
							"pm.test(\"Appointment Created in Gooogle Calender\", function () {\r",
							"  pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);\r",
							"  var jsonData = JSON.parse(responseBody);\r",
							"  googleeventid = jsonData.id;\r",
							"  summary = jsonData.summary;\r",
							"  description = jsonData.description;\r",
							"  status= jsonData.status\r",
							"  var Declaredtatus=\"confirmed\";\r",
							"  location = jsonData.location;\r",
							"  creator = jsonData.creator.email;\r",
							"  startdate = jsonData.start.dateTime;\r",
							"  enddate = jsonData.end.dateTime;\r",
							"  organizer = jsonData.attendees[0].email;\r",
							"  optional = jsonData.attendees[1].email;\r",
							"  console.log(\"summary:\", summary);\r",
							"  console.log(\"googleeventid:\", googleeventid);\r",
							"  console.log(\"status:\", status);\r",
							"  console.log(\"location:\", location);\r",
							"  console.log(\"creator:\", creator);\r",
							"\r",
							"  console.log(\"organizer:\", organizer);\r",
							"  console.log(\"optional:\", optional);\r",
							"\r",
							"  var gappointmentid= pm.globals.get(\"gappointmentid\");\r",
							"  var gscheduledstart= pm.globals.get(\"gscheduledstart\");\r",
							"  var gscheduledend =pm.globals.get(\"gscheduledend\");\r",
							"  var gappointmentdescription=pm.globals.get(\"gappointmentdescription\");\r",
							"  var gappointmentlocation=pm.globals.get(\"gappointmentlocation\");\r",
							"  var gappointmentsubject=pm.globals.get(\"gappointmentsubject\");\r",
							"  var ggoogleeventid=pm.globals.get(\"ggoogleeventid\");\r",
							"  \r",
							"\r",
							"  console.log(\"Engagelocation: \" +gappointmentlocation);\r",
							"  console.log(\"Engagedescription: \" +gappointmentdescription);\r",
							"  console.log(\"Engagelocation :\" +gappointmentlocation);\r",
							"  console.log(\"Engage Startdate :\" +gscheduledstart);\r",
							"  console.log(\"Engage Enddate: \" +gscheduledend);\r",
							"  console.log(\"EngageSubject: \" +gappointmentsubject);\r",
							"\r",
							"  pm.test(\"Validate Location\", function()\r",
							"        {\r",
							"            pm.expect(gappointmentlocation).to.equal(location);\r",
							"        });\r",
							"\r",
							"pm.test(\"Validate Subject\", function()\r",
							"        {\r",
							"            pm.expect(gappointmentsubject).to.equal(summary);\r",
							"        });\r",
							"pm.test(\"Validate Description\", function()\r",
							"        {\r",
							"            pm.expect(gappointmentdescription).to.equal(description);\r",
							"        });\r",
							"pm.test(\"Validate googleeventid\", function()\r",
							"        {\r",
							"            pm.expect(ggoogleeventid).to.equal(googleeventid);\r",
							"        });\r",
							"pm.test(\"Validate Status\", function()\r",
							"        {\r",
							"            pm.expect(status).to.equal(Declaredtatus);\r",
							"        });\r",
							"\r",
							"\r",
							"\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "d1869e27-288c-41fe-aefe-f0f7ed34c449",
						"exec": [
							"// eval(pm.environment.get('get_google_token_script'));\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true,
					"accept-encoding": true,
					"connection": true,
					"user-agent": true
				}
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{accessToken}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "https://www.googleapis.com/calendar/v3/calendars/primary/events/{{ggoogleeventid}}",
					"protocol": "https",
					"host": [
						"www",
						"googleapis",
						"com"
					],
					"path": [
						"calendar",
						"v3",
						"calendars",
						"primary",
						"events",
						"{{ggoogleeventid}}"
					]
				},
				"description": "This request creates a signed JWT using the `jwt_secret` variable and encodes the JWT data as base64. It then sets the signed and encoded JWT as `Bearer` token in the `Authorization` header."
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "bee821df-5bab-488f-9349-6c23a54628b6",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "5c0b8d98-05e8-4618-90e4-9678e25e203f",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"protocolProfileBehavior": {}
}