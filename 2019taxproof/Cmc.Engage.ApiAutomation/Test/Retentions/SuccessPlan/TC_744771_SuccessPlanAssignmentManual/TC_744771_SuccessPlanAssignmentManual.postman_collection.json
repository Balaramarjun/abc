{
	"info": {
		"_postman_id": "8f989105-bfee-4832-bb30-542ed329d9e2",
		"name": "TC_744771_SuccessPlanAssignmentManual",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "DCRM Admin",
			"item": [
				{
					"name": "GetToken_DCRM Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody);",
									"postman.setGlobalVariable('gaccess_token', data.access_token);",
									"",
									"console.log(pm.globals.get(\"gaccess_token\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "grant_type",
									"value": "client_credentials",
									"type": "text"
								},
								{
									"key": "client_id",
									"value": "{{Eadmin_id}}",
									"type": "text"
								},
								{
									"key": "client_secret",
									"value": "{{Eadmin_secret}}",
									"type": "text"
								},
								{
									"key": "resource",
									"value": "{{Eresource}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "https://login.microsoftonline.com/{{Eredirectid}}/oauth2/token",
							"protocol": "https",
							"host": [
								"login",
								"microsoftonline",
								"com"
							],
							"path": [
								"{{Eredirectid}}",
								"oauth2",
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetUser - DCRM Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var userid, fullname;",
									"pm.test(\"GetUserID\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
									"    var jsonData = JSON.parse(responseBody);",
									"    userid = jsonData.value[0].systemuserid;",
									"    fullname = jsonData.value[0].fullname;",
									"",
									"    console.log(\"Application User name: \" + fullname);",
									"",
									"});",
									"pm.globals.set('guserid2', userid);",
									"console.log('Systemuser:' + userid);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Prefer",
								"value": "return=representation"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{gaccess_token}}"
							}
						],
						"url": {
							"raw": "{{Eresource_URL}}systemusers?$filter=internalemailaddress eq 'admin@api.com'",
							"host": [
								"{{Eresource_URL}}systemusers"
							],
							"query": [
								{
									"key": "$filter",
									"value": "internalemailaddress eq 'admin@api.com'"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Academic period",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var academicperiodid,academicPeriodname;",
									"",
									"pm.test(\"Academicperiodid Created\", function() ",
									"{",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202,204]);",
									"    var jsonData =JSON.parse(responseBody);",
									"    academicperiodid = jsonData.mshied_academicperiodid;",
									"    academicPeriodname=jsonData.mshied_name;",
									"",
									"    console.log(\"Academic Period Name: \"+academicPeriodname);",
									" ",
									"});",
									"",
									"pm.globals.set('gacademicperiodid',academicperiodid);",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"  var moment = require('moment');\r",
									"pm.environment.set(\"timestamp\", moment().add(1, 'days').format(\"YYYY-MM-DD\"));\r",
									"\r",
									"pm.environment.set(\"timestampEndDate\", moment().add(10, 'days').format(\"YYYY-MM-DD\"));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Prefer",
								"value": "return=representation"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{gaccess_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"mshied_code\": \"{{$randomInt}}SPL-Aca-{{$randomInt}}\",\r\n    \"mshied_enddate\": \"{{timestampEndDate}}\",\r\n    \"mshied_name\": \"API-SuccessPlan-{{$randomInt}}\",\r\n    \"mshied_startdate\": \"{{timestamp}}\"\r\n \r\n}\r\n\r\n"
						},
						"url": {
							"raw": "{{Eresource_URL}}mshied_academicperiods",
							"host": [
								"{{Eresource_URL}}mshied_academicperiods"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "DCRM Student Advisor",
			"item": [
				{
					"name": "GetToken_DCRM Student Advisor",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody);",
									"postman.setGlobalVariable('gaccess_token', data.access_token);",
									"",
									"//pm.environment.set(\"Eaccess_token\", data.access_token);",
									"console.log(pm.globals.get(\"gaccess_token\"));",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "grant_type",
									"value": "client_credentials",
									"type": "text"
								},
								{
									"key": "client_id",
									"value": "{{Estudentadvisor_id}}",
									"type": "text"
								},
								{
									"key": "client_secret",
									"value": "{{Estudentadvisor_secret}}",
									"type": "text"
								},
								{
									"key": "resource",
									"value": "{{Eresource}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "https://login.microsoftonline.com/{{Eredirectid}}/oauth2/token",
							"protocol": "https",
							"host": [
								"login",
								"microsoftonline",
								"com"
							],
							"path": [
								"{{Eredirectid}}",
								"oauth2",
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetUser - DCRM Student Advisor",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var userid, fullname;",
									"pm.test(\"GetUserID\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
									"    var jsonData = JSON.parse(responseBody);",
									"    userid = jsonData.value[0].systemuserid;",
									"    fullname = jsonData.value[0].fullname;",
									"",
									"    console.log(\"Application User name: \" + fullname);",
									"",
									"});",
									"pm.globals.set('guserid4', userid);",
									"console.log('Systemuser:' + userid);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Prefer",
								"value": "return=representation"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{gaccess_token}}"
							}
						],
						"url": {
							"raw": "{{Eresource_URL}}systemusers?$filter=internalemailaddress  eq 'studentadvisor@api.com'",
							"host": [
								"{{Eresource_URL}}systemusers"
							],
							"query": [
								{
									"key": "$filter",
									"value": "internalemailaddress  eq 'studentadvisor@api.com'"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Create Contact with Academic Period",
			"item": [
				{
					"name": "Get SourceMethod",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var sourceMethodid;",
									"",
									"pm.test(\"Source Method record Fetched\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
									"    var jsonData = JSON.parse(responseBody);",
									"    sourceMethodid = jsonData.value[0].cmc_sourcemethodid;",
									"    var sourceMethodName = jsonData.value[0].cmc_sourcemethodname;",
									"    console.log('SourceMethod Name is: ' + sourceMethodName);",
									"",
									"});",
									"",
									"pm.globals.set('gsourceMethodid1', sourceMethodid);",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Prefer",
								"value": "return=representation"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{gaccess_token}}"
							}
						],
						"url": {
							"raw": "{{Eresource_URL}}cmc_sourcemethods",
							"host": [
								"{{Eresource_URL}}cmc_sourcemethods"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get SourceCategory",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var sourceCategoryid;",
									"",
									"pm.test(\"Source category record Fetched\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
									"    var jsonData = JSON.parse(responseBody);",
									"    sourceCategoryid = jsonData.value[0].cmc_sourcecategoryid;",
									"    var sourceCategoryName = jsonData.value[0].cmc_sourcecategoryname;",
									"    console.log('SourceCategory Name is: ' + sourceCategoryName);",
									"",
									"});",
									"",
									"pm.globals.set('gsourceCategoryid1', sourceCategoryid);",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Prefer",
								"value": "return=representation"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{gaccess_token}}"
							}
						],
						"url": {
							"raw": "{{Eresource_URL}}cmc_sourcecategories",
							"host": [
								"{{Eresource_URL}}cmc_sourcecategories"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Contact1 with Academic period",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Contact 1 Created\", function() ",
									"{",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
									"    var jsonData =JSON.parse(responseBody);",
									"    var contact_id = jsonData.contactid;",
									"    console.log('Contact ID: ' +contact_id);",
									"    var contactname = jsonData.fullname;",
									"    console.log('Contact name: ' +contactname);",
									"    var academicperiodvalue = jsonData._mshied_currentacademicperiodid_value;",
									"    console.log('Current academic Period value:' +academicperiodvalue);",
									"    ",
									"    pm.globals.set('gcontactid1',contact_id);",
									"    pm.globals.set('gcontactname1',contactname);",
									"   ",
									"    var academicperiod=pm.globals.get(\"gacademicperiodid\");",
									"    ",
									"    pm.test(\"Academic Period associated to contact\", function()",
									"        {",
									"            pm.expect(academicperiodvalue).to.equal(academicperiod);",
									"        });",
									"});",
									" "
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Prefer",
								"value": "return=representation"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{gaccess_token}}"
							},
							{
								"key": "OData-Version",
								"value": "4.0"
							},
							{
								"key": "OData-MaxVersion",
								"value": "4.0"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"firstname\": \"{{$randomFirstName}} FN {{$randomInt}} \",\r\n    \"lastname\": \"{{$randomLastName}} {{$randomInt}}\",\r\n    \"mshied_contacttype\": \"494280011\",\r\n\t\"cmc_sourcecategoryid@odata.bind\": \"/cmc_sourcecategories({{gsourceCategoryid1}})\",\r\n\t\"cmc_sourcemethodid@odata.bind\": \"/cmc_sourcemethods({{gsourceMethodid1}})\",\r\n    \"mshied_CurrentAcademicPeriodId@odata.bind\": \"/mshied_academicperiods({{gacademicperiodid}})\"\r\n  \r\n}"
						},
						"url": {
							"raw": "{{Eresource_URL}}contacts",
							"host": [
								"{{Eresource_URL}}contacts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Contact2 without Academic period",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Contact 2 Created\", function() ",
									"{",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
									"    var jsonData =JSON.parse(responseBody);",
									"    var contact_id = jsonData.contactid;",
									"    console.log('Contact ID: ' +contact_id);",
									"    var contactname = jsonData.fullname;",
									"    console.log('Contact name: ' +contactname);",
									"    var academicperiodvalue = jsonData._mshied_currentacademicperiodid_value;",
									"    console.log('Current academic Period value:' +academicperiodvalue);",
									"        ",
									"    pm.globals.set('gcontactid2',contact_id);",
									"    pm.globals.set('gcontactname2',contactname);",
									"    ",
									"    pm.test(\"Academic Period is not associated to contact\", function()",
									"        {",
									"            pm.expect(academicperiodvalue).to.equal(null);",
									"        });",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Prefer",
								"value": "return=representation"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{gaccess_token}}"
							},
							{
								"key": "OData-Version",
								"value": "4.0"
							},
							{
								"key": "OData-MaxVersion",
								"value": "4.0"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"firstname\": \"{{$randomFirstName}} FN {{$randomInt}} \",\r\n    \"lastname\": \"{{$randomLastName}} {{$randomInt}}\",\r\n    \"mshied_contacttype\": \"494280011\",\r\n\t\"cmc_sourcecategoryid@odata.bind\": \"/cmc_sourcecategories({{gsourceCategoryid1}})\",\r\n\t\"cmc_sourcemethodid@odata.bind\": \"/cmc_sourcemethods({{gsourceMethodid1}})\"\r\n  \r\n}"
						},
						"url": {
							"raw": "{{Eresource_URL}}contacts",
							"host": [
								"{{Eresource_URL}}contacts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Contact3 with Academic period",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Contact 3 Created\", function() ",
									"{",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
									"    var jsonData =JSON.parse(responseBody);",
									"    var contact_id = jsonData.contactid;",
									"    console.log('Contact ID: ' +contact_id);",
									"    var contactname = jsonData.fullname;",
									"    console.log('Contact name: ' +contactname);",
									"    var academicperiodvalue = jsonData._mshied_currentacademicperiodid_value;",
									"    console.log('Current academic Period value:' +academicperiodvalue);",
									"    ",
									"    pm.globals.set('gcontactid3',contact_id);",
									"    pm.globals.set('gcontactname3',contactname);",
									"   ",
									"    var academicperiod=pm.globals.get(\"gacademicperiodid\");",
									"    ",
									"    pm.test(\"Academic Period associated to contact\", function()",
									"        {",
									"            pm.expect(academicperiodvalue).to.equal(academicperiod);",
									"        });",
									"});",
									" "
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Prefer",
								"value": "return=representation"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{gaccess_token}}"
							},
							{
								"key": "OData-Version",
								"value": "4.0"
							},
							{
								"key": "OData-MaxVersion",
								"value": "4.0"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"firstname\": \"{{$randomFirstName}} FN {{$randomInt}} \",\r\n    \"lastname\": \"{{$randomLastName}} {{$randomInt}}\",\r\n    \"mshied_contacttype\": \"494280011\",\r\n\t\"cmc_sourcecategoryid@odata.bind\": \"/cmc_sourcecategories({{gsourceCategoryid1}})\",\r\n\t\"cmc_sourcemethodid@odata.bind\": \"/cmc_sourcemethods({{gsourceMethodid1}})\",\r\n    \"mshied_CurrentAcademicPeriodId@odata.bind\": \"/mshied_academicperiods({{gacademicperiodid}})\"\r\n  \r\n}"
						},
						"url": {
							"raw": "{{Eresource_URL}}contacts",
							"host": [
								"{{Eresource_URL}}contacts"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "SuccessPlanTemplate & SuccessPlanToDoTemplate",
			"item": [
				{
					"name": "SuccessPlanTemplate 1 and its todos",
					"item": [
						{
							"name": "Create Successplan Template1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Successplan Template1 created that will be linked with SuccessPlan ToDo Templates\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    pm.globals.set('gsuccessplanTemplateid', jsonData.cmc_successplantemplateid);",
											"    var successplantemplatename = jsonData.cmc_successplantemplatename;",
											"    console.log(\"Success Plan Template name:\" +successplantemplatename);",
											"    pm.globals.set(\"gsuccessplantemplatename\", successplantemplatename );",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_successplantemplatename\": \"{{$randomFullName}}SPT-1{{$randomInt}} API{{$randomInt}} \",\r\n    \"cmc_portaldescription\": \"{{$randomJobDescriptor}}{{$randomInt}}\"\r\n \r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_successplantemplates",
									"host": [
										"{{Eresource_URL}}cmc_successplantemplates"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create SP TDT-Static Date",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Successplan Static to do Template created\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    var successplantodotemplateid= jsonData.cmc_successplantodotemplateid;",
											"    var successplantodotemplatename= jsonData.cmc_successplantodotemplatename;",
											"    var parentsuccessplanid=jsonData._cmc_successplantemplateid_value;",
											"    var duedateStatic=jsonData.cmc_duedatestatic;",
											"    ",
											"    console.log('Successplan Todo template name:' +successplantodotemplatename);",
											"    ",
											"    pm.globals.set('gsuccessplantodotemplateid',successplantodotemplateid);",
											"    pm.globals.set('gsuccessplantodotemplatename',successplantodotemplatename);",
											"    pm.globals.set('gduedateStatic',duedateStatic);",
											"    ",
											"    var parentsuccessplanidglobal=pm.globals.get(\"gsuccessplanTemplateid\");",
											"    ",
											"    pm.test(\"Parent Successplan template association check\", function()",
											"        {",
											"            pm.expect(parentsuccessplanid).to.equal(parentsuccessplanidglobal);",
											"        });",
											"});",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var current_timestamp = new Date();",
											"postman.setEnvironmentVariable(\"current_timestamp\", current_timestamp.toISOString());"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"cmc_successplantodotemplatename\": \"SPToDoTemplate-static-{{$randomInt}}API{{$randomInt}}\",\n    \"cmc_successplantemplateid@odata.bind\": \"/cmc_successplantemplates({{gsuccessplanTemplateid}})\",\n    \"cmc_duedatecalculationtype\": \"175490000\",\n    \"cmc_duedatestatic\": \"{{current_timestamp}}\",\n    \"cmc_todocategoryid@odata.bind\": \"/cmc_successplantodotemplates(D185C9BC-F881-E711-8100-5065F38B0191)\",\n    \"cmc_description\": \"Success plan to do template with static due date calculation type\",\n    \"cmc_ownershiptype\": \"175490000\",\n    \"cmc_requiredoptional\": \"175490000\",\n    \"cmc_studentcancomplete\": false\n   \n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_successplantodotemplates",
									"host": [
										"{{Eresource_URL}}cmc_successplantodotemplates"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create SP TDT-Calculated.Before.AssignmentDate",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Successplan to do Template of calculated type Before.Assignment Date created\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    var successplantodotemplateid1=jsonData.cmc_successplantodotemplateid;",
											"    var duedatecalculationtype=jsonData.cmc_duedatecalculationtype;",
											"    var parentsuccessplanid=jsonData._cmc_successplantemplateid_value;",
											"    var cmc_successplantodotemplatename1=jsonData.cmc_successplantodotemplatename;",
											"    ",
											"    console.log(\"success plan todo template name:\"+cmc_successplantodotemplatename1);",
											"    pm.globals.set(\"gduedatecalculationtype1\", duedatecalculationtype);",
											"    pm.globals.set(\"gsuccessplantodotemplateid1\", successplantodotemplateid1 );",
											"    pm.globals.set(\"gsuccessplantodotemplatename1\", cmc_successplantodotemplatename1);",
											"    ",
											"    var parentsuccessplanidglobal=pm.globals.get(\"gsuccessplanTemplateid\");",
											"    ",
											"    pm.test(\"Parent Successplan template association check\", function()",
											"        {",
											"            pm.expect(parentsuccessplanid).to.equal(parentsuccessplanidglobal);",
											"        });",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"type": "text",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_successplantodotemplatename\": \"SPToDoTemplate-Before AssignmentDate{{$randomInt}} API{{$randomInt}}\",\r\n    \"cmc_successplantemplateid@odata.bind\": \"/cmc_successplantemplates({{gsuccessplanTemplateid}})\",\r\n    \"cmc_duedatecalculationtype\": \"175490001\",\r\n    \"cmc_duedatenumberofdays\": 7,\r\n    \"cmc_duedatedaysdirection\": \"175490000\",\r\n    \"cmc_duedatecalculationfield\": \"175490000\"    \r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_successplantodotemplates",
									"host": [
										"{{Eresource_URL}}cmc_successplantodotemplates"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create SP TDT-Calculated.After.AssignmentDate",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Successplan to do Template of calculated type After.Assignment Date created\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    var successplantodotemplateid2=jsonData.cmc_successplantodotemplateid;",
											"    var duedatecalculationtype=jsonData.cmc_duedatecalculationtype;",
											"    var cmc_successplantodotemplatename2=jsonData.cmc_successplantodotemplatename;",
											"    ",
											"    console.log(\"cmc_successplantodotemplatename:\"+cmc_successplantodotemplatename2);",
											"    pm.globals.set(\"gduedatecalculationtype2\", duedatecalculationtype );",
											"    pm.globals.set(\"gsuccessplantodotemplateid2\", successplantodotemplateid2 );",
											"    pm.globals.set(\"gsuccessplantodotemplatename2\", cmc_successplantodotemplatename2);",
											"    ",
											"    var parentsuccessplanid=jsonData._cmc_successplantemplateid_value;",
											"    var parentsuccessplanidglobal=pm.globals.get(\"gsuccessplanTemplateid\");",
											"    ",
											"    pm.test(\"Parent Successplan template association check\", function()",
											"        {",
											"            pm.expect(parentsuccessplanid).to.equal(parentsuccessplanidglobal);",
											"        });",
											"    ",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"type": "text",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"cmc_successplantodotemplatename\": \"SPToDoTemplate-After AssignmentDate{{$randomInt}} API {{$randomInt}}\",\n    \"cmc_successplantemplateid@odata.bind\": \"/cmc_successplantemplates({{gsuccessplanTemplateid}})\",\n    \"cmc_duedatecalculationtype\": \"175490001\",\n    \"cmc_duedatenumberofdays\": 7,\n    \"cmc_duedatedaysdirection\": \"175490001\",\n    \"cmc_duedatecalculationfield\": \"175490000\"\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_successplantodotemplates",
									"host": [
										"{{Eresource_URL}}cmc_successplantodotemplates"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create SP TDT-Calculated.Before.EndDateAcademicPeriod",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Successplan to do Template of calculated type Before.EndDateOfAcademicPeriod created\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    var successplantodotemplateid3=jsonData.cmc_successplantodotemplateid;",
											"    var duedatecalculationtype=jsonData.cmc_duedatecalculationtype;",
											"    var cmc_successplantodotemplatename3=jsonData.cmc_successplantodotemplatename;",
											"    ",
											"    console.log(\"cmc_successplantodotemplatename:\"+cmc_successplantodotemplatename3);",
											"    pm.globals.set(\"gduedatecalculationtype3\", duedatecalculationtype );",
											"    pm.globals.set(\"gsuccessplantodotemplateid3\", successplantodotemplateid3 );",
											"    pm.globals.set(\"gsuccessplantodotemplatename3\", cmc_successplantodotemplatename3);",
											"    ",
											"    var parentsuccessplanid=jsonData._cmc_successplantemplateid_value;",
											"    var parentsuccessplanidglobal=pm.globals.get(\"gsuccessplanTemplateid\");",
											"    ",
											"    pm.test(\"Parent Successplan template association check\", function()",
											"        {",
											"            pm.expect(parentsuccessplanid).to.equal(parentsuccessplanidglobal);",
											"        });",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"type": "text",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"cmc_successplantodotemplatename\": \"SPToDoTemplate-Before EndAcademicPeriod{{$randomInt}}API{{$randomInt}}\",\n    \"cmc_successplantemplateid@odata.bind\": \"/cmc_successplantemplates({{gsuccessplanTemplateid}})\",\n    \"cmc_duedatecalculationtype\": \"175490001\",\n    \"cmc_duedatenumberofdays\": 7,\n    \"cmc_duedatedaysdirection\": \"175490000\",\n    \"cmc_duedatecalculationfield\": \"175490001\"\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_successplantodotemplates",
									"host": [
										"{{Eresource_URL}}cmc_successplantodotemplates"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create SP TDT-Calculated.After.EndDateAcademicPeriod",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Successplan to do Template of calculated type After.EndDateOfAcademicPeriod created\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    var successplantodotemplateid4=jsonData.cmc_successplantodotemplateid;",
											"    var duedatecalculationtype=jsonData.cmc_duedatecalculationtype;",
											"    var cmc_successplantodotemplatename4=jsonData.cmc_successplantodotemplatename;",
											"    ",
											"    console.log(\"cmc_successplantodotemplatename:\"+cmc_successplantodotemplatename4);",
											"    pm.globals.set(\"gduedatecalculationtype4\", duedatecalculationtype);",
											"    pm.globals.set(\"gsuccessplantodotemplateid4\", successplantodotemplateid4);",
											"    pm.globals.set(\"gsuccessplantodotemplatename4\", cmc_successplantodotemplatename4);",
											"    ",
											"    var parentsuccessplanid=jsonData._cmc_successplantemplateid_value;",
											"    var parentsuccessplanidglobal=pm.globals.get(\"gsuccessplanTemplateid\");",
											"    ",
											"    pm.test(\"Parent Successplan template association check\", function()",
											"        {",
											"            pm.expect(parentsuccessplanid).to.equal(parentsuccessplanidglobal);",
											"        });",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"type": "text",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"cmc_successplantodotemplatename\": \"SPToDoTemplate-After EndAcademicPeriod{{$randomInt}}API{{$randomInt}}\",\n    \"cmc_successplantemplateid@odata.bind\": \"/cmc_successplantemplates({{gsuccessplanTemplateid}})\",\n    \"cmc_duedatecalculationtype\": \"175490001\",\n    \"cmc_duedatenumberofdays\": 7,\n    \"cmc_duedatedaysdirection\": \"175490001\",\n    \"cmc_duedatecalculationfield\": \"175490001\"\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_successplantodotemplates",
									"host": [
										"{{Eresource_URL}}cmc_successplantodotemplates"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create SP TDT-Calculated.Before.StartDateAcademicPeriod",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Successplan to do Template of calculated type Before.StartDateOfAcademicPeriod created\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    var successplantodotemplateid5=jsonData.cmc_successplantodotemplateid;",
											"    var duedatecalculationtype=jsonData.cmc_duedatecalculationtype;",
											"    var cmc_successplantodotemplatename5=jsonData.cmc_successplantodotemplatename;",
											"    ",
											"    console.log(\"cmc_successplantodotemplatename:\"+cmc_successplantodotemplatename5);",
											"    pm.globals.set(\"gduedatecalculationtype5\", duedatecalculationtype);",
											"    pm.globals.set(\"gsuccessplantodotemplateid5\", successplantodotemplateid5 );",
											"    pm.globals.set(\"gsuccessplantodotemplatename5\", cmc_successplantodotemplatename5);",
											"    ",
											"    var parentsuccessplanid=jsonData._cmc_successplantemplateid_value;",
											"    var parentsuccessplanidglobal=pm.globals.get(\"gsuccessplanTemplateid\");",
											"    ",
											"    pm.test(\"Parent Successplan template association check\", function()",
											"        {",
											"            pm.expect(parentsuccessplanid).to.equal(parentsuccessplanidglobal);",
											"        });",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"type": "text",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"cmc_successplantodotemplatename\": \"SPToDoTemplate-Before StartOfAcademicPeriod{{$randomInt}}API{{$randomInt}}\",\n    \"cmc_successplantemplateid@odata.bind\": \"/cmc_successplantemplates({{gsuccessplanTemplateid}})\",\n    \"cmc_duedatecalculationtype\": \"175490001\",\n    \"cmc_duedatenumberofdays\": 7,\n    \"cmc_duedatedaysdirection\": \"175490000\",\n    \"cmc_duedatecalculationfield\": \"175490002\"\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_successplantodotemplates",
									"host": [
										"{{Eresource_URL}}cmc_successplantodotemplates"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create SP TDT-Calculated.After.StartDateAcademicPeriod",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Successplan to do Template of calculated type After.StartDateOfAcademicPeriod created\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    var successplantodotemplateid6=jsonData.cmc_successplantodotemplateid;",
											"    var duedatecalculationtype=jsonData.cmc_duedatecalculationtype;",
											"    var cmc_successplantodotemplatename6=jsonData.cmc_successplantodotemplatename;",
											"    ",
											"    console.log(\"cmc_successplantodotemplatename:\"+cmc_successplantodotemplatename6);",
											"    pm.globals.set(\"gduedatecalculationtype6\", duedatecalculationtype);",
											"    pm.globals.set(\"gsuccessplantodotemplateid6\", successplantodotemplateid6 );",
											"    pm.globals.set(\"gsuccessplantodotemplatename6\", cmc_successplantodotemplatename6);",
											"    ",
											"    var parentsuccessplanid=jsonData._cmc_successplantemplateid_value;",
											"    var parentsuccessplanidglobal=pm.globals.get(\"gsuccessplanTemplateid\");",
											"    ",
											"    pm.test(\"Parent Successplan template association check\", function()",
											"        {",
											"            pm.expect(parentsuccessplanid).to.equal(parentsuccessplanidglobal);",
											"        });",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"type": "text",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"cmc_successplantodotemplatename\": \"SPToDoTemplate-After StartOfAcademicPeriod{{$randomInt}}API{{$randomInt}}\",\n    \"cmc_successplantemplateid@odata.bind\": \"/cmc_successplantemplates({{gsuccessplanTemplateid}})\",\n    \"cmc_duedatecalculationtype\": \"175490001\",\n    \"cmc_duedatenumberofdays\": 7,\n    \"cmc_duedatedaysdirection\": \"175490001\",\n    \"cmc_duedatecalculationfield\": \"175490002\"\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_successplantodotemplates",
									"host": [
										"{{Eresource_URL}}cmc_successplantodotemplates"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Duplicate check for successplan todo template",
					"item": [
						{
							"name": "Dup check- Successplan to do template- static Date",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"SuccessPlan to do Template Dup check\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([412]);",
											"    var jsonData =JSON.parse(responseBody);",
											"});",
											"",
											"pm.test(\"Duplicate check\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"A record was not created or updated because a duplicate of the current record already exists.\");",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var current_timestamp = new Date();\r",
											"postman.setEnvironmentVariable(\"current_timestamp\", current_timestamp.toISOString());"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									},
									{
										"key": "MSCRM.SuppressDuplicateDetection",
										"type": "text",
										"value": "false"
									},
									{
										"key": "If-None-Match",
										"type": "text",
										"value": "null"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_successplantodotemplatename\": \"{{gsuccessplantodotemplatename}}\",\r\n    \"cmc_successplantemplateid@odata.bind\": \"/cmc_successplantemplates({{gsuccessplanTemplateid}})\",\r\n    \"cmc_duedatecalculationtype\": \"175490000\",\r\n    \"cmc_duedatestatic\": \"{{current_timestamp}}\"\r\n   \r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_successplantodotemplates",
									"host": [
										"{{Eresource_URL}}cmc_successplantodotemplates"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "SuccessPlanTemplate 2 without any todos",
					"item": [
						{
							"name": "Create Successplan Template2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Successplan Template 2 created that will not be linked with any SuccessPlan ToDo Templates\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    pm.globals.set('gsuccessplanTemplateid1', jsonData.cmc_successplantemplateid);",
											"    var successplantemplatename = jsonData.cmc_successplantemplatename;",
											"    console.log(\"Success Plan Template2 name:\" +successplantemplatename);",
											"    pm.globals.set(\"gsuccessplantemplatename1\", successplantemplatename );",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_successplantemplatename\": \"{{$randomFullName}}SPT-2{{$randomInt}} API {{$randomInt}}\",\r\n    \"cmc_portaldescription\": \"{{$randomJobDescriptor}}{{$randomInt}}\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_successplantemplates",
									"host": [
										"{{Eresource_URL}}cmc_successplantemplates"
									]
								}
							},
							"response": []
						},
						{
							"name": "Copy check of Successplan Template 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Copy of successplan template 2 is created\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    pm.globals.set('gsuccessplanTemplateid2', jsonData.cmc_successplantemplateid);",
											"    var successplantemplatename = jsonData.cmc_successplantemplatename;",
											"    console.log(\"Success Plan Template3 name:\" +successplantemplatename);",
											"    pm.globals.set(\"gsuccessplantemplatename2\", successplantemplatename );",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_copyfromsuccessplantemplateid@odata.bind\": \"/cmc_successplantemplates({{gsuccessplanTemplateid1}})\",\r\n    \"cmc_successplantemplatename\": \"{{$randomFullName}}SPT-copy of 2{{$randomInt}}\",\r\n    \"cmc_portaldescription\": \"{{$randomJobDescriptor}}{{$randomInt}}\"\r\n\r\n    \r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_successplantemplates",
									"host": [
										"{{Eresource_URL}}cmc_successplantemplates"
									]
								}
							},
							"response": []
						},
						{
							"name": "Dup check- Successplan template",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"SuccessPlan Template Dup check\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([412]);",
											"    var jsonData =JSON.parse(responseBody);",
											"});",
											"",
											"pm.test(\"Duplicate check\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"A record was not created or updated because a duplicate of the current record already exists.\");",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									},
									{
										"key": "MSCRM.SuppressDuplicateDetection",
										"type": "text",
										"value": "false"
									},
									{
										"key": "If-None-Match",
										"type": "text",
										"value": "null"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_successplantemplatename\": \"{{gsuccessplantemplatename2}}\",\r\n    \"cmc_copyfromsuccessplantemplateid@odata.bind\": \"/cmc_successplantemplates({{gsuccessplanTemplateid1}})\",\r\n    \"cmc_portaldescription\": \"{{$randomJobDescriptor}}{{$randomInt}}\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_successplantemplates",
									"host": [
										"{{Eresource_URL}}cmc_successplantemplates"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Successplan Template2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Successplan Template 2 is updated\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    pm.globals.set('gsuccessplanTemplateid2', jsonData.cmc_successplantemplateid);",
											"    var successplantemplatename = jsonData.cmc_successplantemplatename;",
											"    console.log(\"Success Plan Template name:\" +successplantemplatename);",
											"    pm.globals.set(\"gsuccessplantemplatename2\", successplantemplatename );",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"cmc_successplantemplatename\":\"{{$randomFullName}}SPT-2 update{{$randomInt}} API\",\r\n\t\"cmc_portaldescription\":\"{{$randomCatchPhraseDescriptor}}\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_successplantemplates({{gsuccessplanTemplateid1}})",
									"host": [
										"{{Eresource_URL}}cmc_successplantemplates({{gsuccessplanTemplateid1}})"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "SuccessPlanTemplate 3 and its todos",
					"item": [
						{
							"name": "Create Successplan Template3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Successplan Template 3 created that will not be linked with any SuccessPlan ToDo Templates\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    pm.globals.set('gsuccessplanTemplateid2', jsonData.cmc_successplantemplateid);",
											"    var successplantemplatename = jsonData.cmc_successplantemplatename;",
											"    console.log(\"Success Plan Template3 name:\" +successplantemplatename);",
											"    pm.globals.set(\"gsuccessplantemplatename2\", successplantemplatename );",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_successplantemplatename\": \"{{$randomFullName}}SPT-3{{$randomInt}} API {{$randomInt}}\",\r\n    \"cmc_portaldescription\": \"{{$randomJobDescriptor}}{{$randomInt}}\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_successplantemplates",
									"host": [
										"{{Eresource_URL}}cmc_successplantemplates"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create SP TDT-Static Date",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Successplan Static to do Template created\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    var successplantodotemplateid= jsonData.cmc_successplantodotemplateid;",
											"    var successplantodotemplatename= jsonData.cmc_successplantodotemplatename;",
											"    var parentsuccessplanid=jsonData._cmc_successplantemplateid_value;",
											"    var duedateStatic=jsonData.cmc_duedatestatic;",
											"    ",
											"    console.log('Successplan Todo template name:' +successplantodotemplatename);",
											"    ",
											"    pm.globals.set('gsuccessplantodotemplateid3a',successplantodotemplateid);",
											"    pm.globals.set('gsuccessplantodotemplatename3a',successplantodotemplatename);",
											"    pm.globals.set('gduedateStatic3a',duedateStatic);",
											"    ",
											"    var parentsuccessplanidglobal=pm.globals.get(\"gsuccessplanTemplateid2\");",
											"    ",
											"    pm.test(\"Parent Successplan template association check\", function()",
											"        {",
											"            pm.expect(parentsuccessplanid).to.equal(parentsuccessplanidglobal);",
											"        });",
											"});",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var current_timestamp = new Date();",
											"postman.setEnvironmentVariable(\"current_timestamp\", current_timestamp.toISOString());"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"cmc_successplantodotemplatename\": \"SPToDoTemplate-static-{{$randomInt}}API{{$randomInt}}\",\n    \"cmc_successplantemplateid@odata.bind\": \"/cmc_successplantemplates({{gsuccessplanTemplateid2}})\",\n    \"cmc_duedatecalculationtype\": \"175490000\",\n    \"cmc_duedatestatic\": \"{{current_timestamp}}\"\n    \n   \n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_successplantodotemplates",
									"host": [
										"{{Eresource_URL}}cmc_successplantodotemplates"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create SP TDT-Calculated.Before.AssignmentDate",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Successplan to do Template of calculated type Before.Assignment Date created\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    var successplantodotemplateid1=jsonData.cmc_successplantodotemplateid;",
											"    var duedatecalculationtype=jsonData.cmc_duedatecalculationtype;",
											"    var parentsuccessplanid=jsonData._cmc_successplantemplateid_value;",
											"    var cmc_successplantodotemplatename1=jsonData.cmc_successplantodotemplatename;",
											"    ",
											"    console.log(\"success plan todo template name:\"+cmc_successplantodotemplatename1);",
											"    pm.globals.set(\"gduedatecalculationtype3b\", duedatecalculationtype);",
											"    pm.globals.set(\"gsuccessplantodotemplateid3b\", successplantodotemplateid1 );",
											"    pm.globals.set(\"gsuccessplantodotemplatename3b\", cmc_successplantodotemplatename1);",
											"    ",
											"    var parentsuccessplanidglobal=pm.globals.get(\"gsuccessplanTemplateid2\");",
											"    ",
											"    pm.test(\"Parent Successplan template association check\", function()",
											"        {",
											"            pm.expect(parentsuccessplanid).to.equal(parentsuccessplanidglobal);",
											"        });",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"type": "text",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_successplantodotemplatename\": \"SPToDoTemplate-Before AssignmentDate{{$randomInt}} API{{$randomInt}}\",\r\n    \"cmc_successplantemplateid@odata.bind\": \"/cmc_successplantemplates({{gsuccessplanTemplateid2}})\",\r\n    \"cmc_duedatecalculationtype\": \"175490001\",\r\n    \"cmc_duedatenumberofdays\": 7,\r\n    \"cmc_duedatedaysdirection\": \"175490000\",\r\n    \"cmc_duedatecalculationfield\": \"175490000\"    \r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_successplantodotemplates",
									"host": [
										"{{Eresource_URL}}cmc_successplantodotemplates"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Check Validation of SuccessPlan Todo Template",
					"item": [
						{
							"name": "Create SuccessPlan Todo template-Calculated - Lower Limit",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var message;",
											"pm.test(\"SuccessPlan todo template lower limit validation\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([400]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    message = jsonData.error.message;",
											"    console.log(message);",
											"  ",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"type": "text",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"cmc_successplantodotemplatename\": \"Successplan todo After EndAcademicPeriod validation{{$randomInt}} {{$randomInt}}\",\n    \"cmc_successplantemplateid@odata.bind\": \"/cmc_successplantemplates({{gsuccessplanTemplateid2}})\",\n    \"cmc_duedatecalculationtype\": 175490001,\n    \"cmc_duedatenumberofdays\": -1,\n    \"cmc_duedatedaysdirection\": 175490001,\n    \"cmc_duedatecalculationfield\": 175490001\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_successplantodotemplates",
									"host": [
										"{{Eresource_URL}}cmc_successplantodotemplates"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create SuccessPlan Todo template-Calculated - Upper Limit",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test(\"SuccessPlan todo template upper limit validation\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([400]);",
											"    var jsonData =JSON.parse(responseBody);",
											"   // message = jsonData.error.message;",
											"    //console.log(message);",
											"  ",
											"});",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"Cannot convert the literal '2147483648' to the expected type\");",
											"    console.log(\"Cannot convert the literal '2147483648' to the expected type\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"type": "text",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"cmc_successplantodotemplatename\": \"Successplan todo After EndAcademicPeriod2 validation{{$randomInt}} {{$randomInt}}\",\n    \"cmc_successplantemplateid@odata.bind\": \"/cmc_successplantemplates({{gsuccessplanTemplateid2}})\",\n    \"cmc_duedatecalculationtype\": \"175490001\",\n    \"cmc_duedatenumberofdays\": 2147483648,\n    \"cmc_duedatedaysdirection\": \"175490001\",\n    \"cmc_duedatecalculationfield\": \"175490001\"\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_successplantodotemplates",
									"host": [
										"{{Eresource_URL}}cmc_successplantodotemplates"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Assign Successplan Template through the button in Contact form",
			"item": [
				{
					"name": "Assign SuccessPlan template 1 to Contact1 and 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Assigning SuccessPlan template to Contact records 1 and 2 \", function() ",
									"{",
									"    pm.expect(pm.response.code).to.be.oneOf([200,204,201,202]);",
									"    var jsonData =JSON.parse(responseBody);",
									"    var successPlanResponse=jsonData.SuccessPlanResponse;",
									"    ",
									"    console.log(\"SuccessPlan Response for reassigning the SuccessPlan template is: \" +successPlanResponse);",
									"   ",
									"});",
									"    ",
									"    ",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Prefer",
								"value": "return=representation"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{gaccess_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"Students\": [\r\n        {\r\n            \"@odata.type\": \"Microsoft.Dynamics.CRM.contact\",\r\n            \"contactid\": \"{{gcontactid1}}\"\r\n        },\r\n        {\r\n            \"@odata.type\": \"Microsoft.Dynamics.CRM.contact\",\r\n            \"contactid\": \"{{gcontactid2}}\"\r\n        }\r\n    ]\r\n}"
						},
						"url": {
							"raw": "{{Eresource_URL}}cmc_successplantemplates({{gsuccessplanTemplateid}})/Microsoft.Dynamics.CRM.cmc_createstudentsuccessplansfromtemplate",
							"host": [
								"{{Eresource_URL}}cmc_successplantemplates({{gsuccessplanTemplateid}})"
							],
							"path": [
								"Microsoft.Dynamics.CRM.cmc_createstudentsuccessplansfromtemplate"
							]
						}
					},
					"response": []
				},
				{
					"name": "Assign same SuccessPlan template 1 to Contact1 and 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Assigning SuccessPlan template to Contact records 1 and 2 \", function() ",
									"{",
									"    pm.expect(pm.response.code).to.be.oneOf([200,204,201,202]);",
									"    var jsonData =JSON.parse(responseBody);",
									"    var successPlanResponse=jsonData.SuccessPlanResponse;",
									"    ",
									"    console.log(\"SuccessPlan Response for reassigning the SuccessPlan template is: \" +successPlanResponse);",
									"   ",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Prefer",
								"value": "return=representation"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{gaccess_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"Students\": [\r\n        {\r\n            \"@odata.type\": \"Microsoft.Dynamics.CRM.contact\",\r\n            \"contactid\": \"{{gcontactid1}}\"\r\n        },\r\n        {\r\n            \"@odata.type\": \"Microsoft.Dynamics.CRM.contact\",\r\n            \"contactid\": \"{{gcontactid2}}\"\r\n        }\r\n    ]\r\n}"
						},
						"url": {
							"raw": "{{Eresource_URL}}cmc_successplantemplates({{gsuccessplanTemplateid}})/Microsoft.Dynamics.CRM.cmc_createstudentsuccessplansfromtemplate",
							"host": [
								"{{Eresource_URL}}cmc_successplantemplates({{gsuccessplanTemplateid}})"
							],
							"path": [
								"Microsoft.Dynamics.CRM.cmc_createstudentsuccessplansfromtemplate"
							]
						}
					},
					"response": []
				},
				{
					"name": "Assign SuccessPlan template 3 to Contact3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Assigning SuccessPlan template 3 to Contact3 \", function() ",
									"{",
									"    pm.expect(pm.response.code).to.be.oneOf([200,204,201,202]);",
									"    var jsonData =JSON.parse(responseBody);",
									"    var successPlanResponse=jsonData.SuccessPlanResponse;",
									"    ",
									"    console.log(\"SuccessPlan Response for reassigning the SuccessPlan template is: \" +successPlanResponse);",
									"   ",
									"});",
									"    ",
									"    ",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Prefer",
								"value": "return=representation"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{gaccess_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"Students\": [\r\n        {\r\n            \"@odata.type\": \"Microsoft.Dynamics.CRM.contact\",\r\n            \"contactid\": \"{{gcontactid3}}\"\r\n        }\r\n    ]\r\n}"
						},
						"url": {
							"raw": "{{Eresource_URL}}cmc_successplantemplates({{gsuccessplanTemplateid2}})/Microsoft.Dynamics.CRM.cmc_createstudentsuccessplansfromtemplate",
							"host": [
								"{{Eresource_URL}}cmc_successplantemplates({{gsuccessplanTemplateid2}})"
							],
							"path": [
								"Microsoft.Dynamics.CRM.cmc_createstudentsuccessplansfromtemplate"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Verify SuccessPlanTemplate assignment under Contact records",
			"item": [
				{
					"name": "Validate Successplan under Contact1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Verify success plan under contact1\", function() ",
									"{",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
									"    var jsonData =JSON.parse(responseBody);",
									"    var result =jsonData.cmc_contact_successplan_assignedtoid;",
									"    ",
									"    if (result.length===0)",
									"    {",
									"           throw new Error(\"Success Plan Template is not assigned to contact1, Please check!!\");",
									"    }",
									"    else",
									"    {  ",
									"            //Success plan 1 validation",
									"            var successplanid= result[0].cmc_successplanid;",
									"            pm.globals.set('gsuccessplanid', successplanid); ",
									"            var successplanname= result[0].cmc_successplanname;",
									"            var successplanautoname= pm.globals.get('gsuccessplantemplatename')+\" \"+\"-\"+\" \"+pm.globals.get('gcontactname1');",
									"            console.log('successplanid is:' +successplanid +',' +'successplanname is:'+successplanname+',' +'successplanautoname is: ' +successplanautoname);",
									"",
									"            pm.test(\"Workflow 'Success Plan - Auto name' record 1 check\", function()",
									"                {",
									"                    pm.expect(successplanname).to.equal(successplanautoname);",
									"                });",
									"    ",
									"    ",
									"    ",
									"    }",
									" ",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{gaccess_token}}"
							},
							{
								"key": "Prefer",
								"value": "return=representation"
							}
						],
						"url": {
							"raw": "{{Eresource_URL}}contacts({{gcontactid1}})?$expand=cmc_contact_successplan_assignedtoid",
							"host": [
								"{{Eresource_URL}}contacts({{gcontactid1}})"
							],
							"query": [
								{
									"key": "$expand",
									"value": "cmc_contact_successplan_assignedtoid"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Validate Todo's linked to Successplan under Contact1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var successplanid1;",
									"pm.test(\"Validate Todo's linked under contact1\", function() ",
									"{",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
									"    var jsonData =JSON.parse(responseBody);",
									"    var successplanid1=pm.globals.get('gsuccessplanid');",
									"    var result =jsonData.cmc_contact_todo_assignedtostudentid;",
									"    ",
									"    ",
									"    if (result.length===0)",
									"    {",
									"        throw new Error(\"Success Plan Template is not assigned to contact1 and hence no todos are present, Please check!!\");",
									"    }",
									"    ",
									"    else",
									"     {",
									"            var todoid= result[0].cmc_todoid;",
									"            var todoname= result[0].cmc_todoname;",
									"            pm.globals.set('gtodoid' +todoid);",
									"            //console.log('gtodoid is:'+gtodoidvariable);",
									"            console.log('todoname is:'+todoname);",
									"            var parentsuccessplanid=result[0]._cmc_successplanid_value;",
									"            console.log('parentsuccessplanid: '+parentsuccessplanid);",
									"            console.log('successplanid is: '+successplanid1);",
									"            ",
									"    ",
									"    if(parentsuccessplanid === successplanid1)",
									"    {",
									"        console.log(\"This todo record is linked correctly to successplan record that is created through API\");",
									"    }",
									"    else",
									"    {",
									"        console.log(\"Todo record is not linked to successplan that is created through API\");",
									"    }",
									"    ",
									"    ",
									" } ",
									" ",
									" if (result.length===1)",
									"     {",
									"            console.log('Successplan template  is not assigned to contact1 since azure funtion is not run, hence Todos details cannot be retrieved');",
									"            ",
									"     }",
									"     else",
									"     {",
									"            var todoid1= result[1].cmc_todoid;",
									"            var todoname1= result[1].cmc_todoname;",
									"            pm.globals.set('gtodoid1' +todoid1);",
									"            console.log('todoname1 is:'+todoname1);",
									"            var parentsuccessplanid1=result[1]._cmc_successplanid_value;",
									"    ",
									"    ",
									"    if(parentsuccessplanid1 === successplanid1)",
									"    {",
									"        console.log(\"This todo record is linked correctly to successplan record that is created through API\");",
									"    }",
									"    else",
									"    {",
									"        console.log(\"Todo record is not linked to successplan that is created through API\");",
									"    }",
									"    ",
									"    ",
									" }",
									" ",
									"  if (result.length===2)",
									"     {",
									"            console.log('Successplan template  is not assigned to contact1 since azure funtion is not run, hence Todos details cannot be retrieved');",
									"            ",
									"     }",
									"     else",
									"     {",
									"            var todoid2= result[2].cmc_todoid;",
									"            var todoname2= result[2].cmc_todoname;",
									"            pm.globals.set('gtodoid2' +todoid2);",
									"            console.log('todoname2 is:'+todoname2);",
									"            var parentsuccessplanid2=result[2]._cmc_successplanid_value;",
									"    ",
									"    ",
									"    if(parentsuccessplanid2 === successplanid1)",
									"    {",
									"        console.log(\"This todo record is linked correctly to successplan record that is created through API\");",
									"    }",
									"    else",
									"    {",
									"        console.log(\"Todo record is not linked to successplan that is created through API\");",
									"    }",
									"    ",
									"    ",
									" }",
									" ",
									"  if (result.length===3)",
									"     {",
									"            console.log('Successplan template  is not assigned to contact1 since azure funtion is not run, hence Todos details cannot be retrieved');",
									"            ",
									"     }",
									"     else",
									"     {",
									"            var todoid3= result[3].cmc_todoid;",
									"            var todoname3= result[3].cmc_todoname;",
									"            pm.globals.set('gtodoid3' +todoid3);",
									"            console.log('todoname3 is:'+todoname3);",
									"            var parentsuccessplanid3=result[3]._cmc_successplanid_value;",
									"    ",
									"    ",
									"    if(parentsuccessplanid3 === successplanid1)",
									"    {",
									"        console.log(\"This todo record is linked correctly to successplan record that is created through API\");",
									"    }",
									"    else",
									"    {",
									"        console.log(\"Todo record is not linked to successplan that is created through API\");",
									"    }",
									"    ",
									"    ",
									" }",
									" ",
									"  if (result.length===4)",
									"     {",
									"            console.log('Successplan template  is not assigned to contact1 since azure funtion is not run, hence Todos details cannot be retrieved');",
									"            ",
									"     }",
									"     else",
									"     {",
									"            var todoid4= result[4].cmc_todoid;",
									"            var todoname4= result[4].cmc_todoname;",
									"            pm.globals.set('gtodoid4' +todoid4);",
									"            console.log('todoname4 is:'+todoname4);",
									"            var parentsuccessplanid4=result[4]._cmc_successplanid_value;",
									"    ",
									"    ",
									"    if(parentsuccessplanid4 === successplanid1)",
									"    {",
									"        console.log(\"This todo record is linked correctly to successplan record that is created through API\");",
									"    }",
									"    else",
									"    {",
									"        console.log(\"Todo record is not linked to successplan that is created through API\");",
									"    }",
									"    ",
									"    ",
									" }",
									" ",
									"  if (result.length===5)",
									"     {",
									"            console.log('Successplan template  is not assigned to contact1 since azure funtion is not run, hence Todos details cannot be retrieved');",
									"            ",
									"     }",
									"     else",
									"     {",
									"            var todoid5= result[5].cmc_todoid;",
									"            var todoname5= result[5].cmc_todoname;",
									"            pm.globals.set('gtodoid5' +todoid5);",
									"            console.log('todoname5 is:'+todoname5);",
									"            var parentsuccessplanid5=result[5]._cmc_successplanid_value;",
									"    ",
									"    ",
									"    if(parentsuccessplanid5 === successplanid1)",
									"    {",
									"        console.log(\"This todo record is linked correctly to successplan record that is created through API\");",
									"    }",
									"    else",
									"    {",
									"        console.log(\"Todo record is not linked to successplan that is created through API\");",
									"    }",
									"    ",
									"    ",
									" }",
									" ",
									"  if (result.length===6)",
									"     {",
									"            console.log('Successplan template  is not assigned to contact1 since azure funtion is not run, hence Todos details cannot be retrieved');",
									"            ",
									"     }",
									"     else",
									"     {",
									"            var todoid6= result[6].cmc_todoid;",
									"            var todoname6= result[6].cmc_todoname;",
									"            pm.globals.set('gtodoid6' +todoid6);",
									"            console.log('todoname6 is:'+todoname6);",
									"            var parentsuccessplanid6=result[6]._cmc_successplanid_value;",
									"    ",
									"    ",
									"    if(parentsuccessplanid6 === successplanid1)",
									"    {",
									"        console.log(\"This todo record is linked correctly to successplan record that is created through API\");",
									"    }",
									"    else",
									"    {",
									"        console.log(\"Todo record is not linked to successplan that is created through API\");",
									"    }",
									"    ",
									"    ",
									" }",
									"",
									" });",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{gaccess_token}}"
							},
							{
								"key": "Prefer",
								"value": "return=representation"
							}
						],
						"url": {
							"raw": "{{Eresource_URL}}contacts({{gcontactid1}})?$expand=cmc_contact_todo_assignedtostudentid",
							"host": [
								"{{Eresource_URL}}contacts({{gcontactid1}})"
							],
							"query": [
								{
									"key": "$expand",
									"value": "cmc_contact_todo_assignedtostudentid"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Validate Successplan under Contact2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Verify success plan under contact2\", function() ",
									"{",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
									"    var jsonData =JSON.parse(responseBody);",
									"    var result =jsonData.cmc_contact_successplan_assignedtoid;",
									"    ",
									"    if (result.length===0)",
									"    {",
									"        console.log('Success Plan is not assigned to contact2 since current academic period is not linked. Also associated Todo templates under this Successplan template will also not appear');",
									"            ",
									"    }",
									"    else",
									"    {",
									"        throw new Error(\"Success Plan Template is assigned to contact 2, which is incorrect\");",
									"    ",
									"    }",
									" ",
									" });",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{gaccess_token}}"
							},
							{
								"key": "Prefer",
								"value": "return=representation"
							}
						],
						"url": {
							"raw": "{{Eresource_URL}}contacts({{gcontactid2}})?$expand=cmc_contact_successplan_assignedtoid",
							"host": [
								"{{Eresource_URL}}contacts({{gcontactid2}})"
							],
							"query": [
								{
									"key": "$expand",
									"value": "cmc_contact_successplan_assignedtoid"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Assign 2nd SuccessPlan template to Contact1 and 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Assigning SuccessPlan template to Contact records 1 and 2 \", function() ",
									"{",
									"    pm.expect(pm.response.code).to.be.oneOf([200,204,201,202]);",
									"    var jsonData =JSON.parse(responseBody);",
									"    ",
									"    var successPlanResponse=jsonData.SuccessPlanResponse;",
									"    ",
									"    console.log(\"SuccessPlan Response for reassigning the SuccessPlan template is: \" +successPlanResponse);",
									"   ",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Prefer",
								"value": "return=representation"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{gaccess_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"Students\": [\r\n        {\r\n            \"@odata.type\": \"Microsoft.Dynamics.CRM.contact\",\r\n            \"contactid\": \"{{gcontactid1}}\"\r\n        },\r\n        {\r\n            \"@odata.type\": \"Microsoft.Dynamics.CRM.contact\",\r\n            \"contactid\": \"{{gcontactid2}}\"\r\n        }\r\n    ]\r\n}"
						},
						"url": {
							"raw": "{{Eresource_URL}}cmc_successplantemplates({{gsuccessplanTemplateid2}})/Microsoft.Dynamics.CRM.cmc_createstudentsuccessplansfromtemplate",
							"host": [
								"{{Eresource_URL}}cmc_successplantemplates({{gsuccessplanTemplateid2}})"
							],
							"path": [
								"Microsoft.Dynamics.CRM.cmc_createstudentsuccessplansfromtemplate"
							]
						}
					},
					"response": []
				},
				{
					"name": "Validate Successplan under Contact2 after assignment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Verify success plan under contact2\", function() ",
									"{",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
									"    var jsonData =JSON.parse(responseBody);",
									"    var result =jsonData.cmc_contact_successplan_assignedtoid;",
									"    ",
									"    if (result.length===0)",
									"    {",
									"        throw new Error(\"Success Plan Template is not assigned to contact1, Please check!!\");",
									"    }",
									"    else",
									"    {  ",
									"        //Success plan 1 validation",
									"        var successplanid= result[0].cmc_successplanid;",
									"        pm.globals.set('gsuccessplanid11', successplanid); ",
									"        var successplanname= result[0].cmc_successplanname;",
									"        var successplanautoname= pm.globals.get('gsuccessplantemplatename2')+\" \"+\"-\"+\" \"+pm.globals.get('gcontactname2');",
									"        console.log('successplanid is:' +successplanid +',' +'successplanname is:'+successplanname+',' +'successplanautoname is: ' +successplanautoname);",
									"",
									"        pm.test(\"Workflow 'Success Plan - Auto name' record 1 check\", function()",
									"        {",
									"            pm.expect(successplanname).to.equal(successplanautoname);",
									"        });",
									"    }",
									" ",
									" });",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{gaccess_token}}"
							},
							{
								"key": "Prefer",
								"value": "return=representation"
							}
						],
						"url": {
							"raw": "{{Eresource_URL}}contacts({{gcontactid2}})?$expand=cmc_contact_successplan_assignedtoid",
							"host": [
								"{{Eresource_URL}}contacts({{gcontactid2}})"
							],
							"query": [
								{
									"key": "$expand",
									"value": "cmc_contact_successplan_assignedtoid"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Validate Successplan under Contact3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Verify success plan under contact3\", function() ",
									"{",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
									"    var jsonData =JSON.parse(responseBody);",
									"    var result =jsonData.cmc_contact_successplan_assignedtoid;",
									"    ",
									"    if (result.length===0)",
									"    {",
									"           throw new Error(\"Success Plan Template is not assigned to contact3, Please check!!\");",
									"    }",
									"    else",
									"    {  ",
									"            //Success plan 1 validation",
									"            var successplanid= result[0].cmc_successplanid;",
									"            pm.globals.set('gsuccessplanid3', successplanid); ",
									"            var successplanname= result[0].cmc_successplanname;",
									"            var successplanautoname= pm.globals.get('gsuccessplantemplatename2')+\" \"+\"-\"+\" \"+pm.globals.get('gcontactname3');",
									"            console.log('successplanid is:' +successplanid +',' +'successplanname is:'+successplanname+',' +'successplanautoname is: ' +successplanautoname);",
									"",
									"            pm.test(\"Workflow 'Success Plan - Auto name' record 1 check\", function()",
									"                {",
									"                    pm.expect(successplanname).to.equal(successplanautoname);",
									"                });",
									"    ",
									"            ",
									"    }",
									" ",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{gaccess_token}}"
							},
							{
								"key": "Prefer",
								"value": "return=representation"
							}
						],
						"url": {
							"raw": "{{Eresource_URL}}contacts({{gcontactid3}})?$expand=cmc_contact_successplan_assignedtoid",
							"host": [
								"{{Eresource_URL}}contacts({{gcontactid3}})"
							],
							"query": [
								{
									"key": "$expand",
									"value": "cmc_contact_successplan_assignedtoid"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Validate Todo's linked to Successplan under Contact3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var successplanid1;",
									"pm.test(\"Validate Todo's linked under contact3\", function() ",
									"{",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
									"    var jsonData =JSON.parse(responseBody);",
									"    var successplanid1=pm.globals.get('gsuccessplanid');",
									"    var result =jsonData.cmc_contact_todo_assignedtostudentid;",
									"    ",
									"    ",
									"    if (result.length===0)",
									"    {",
									"        throw new Error(\"Success Plan Template is not assigned to contact1 and hence no todos are present, Please check!!\");",
									"    }",
									"    else",
									"    {",
									"            //1st todo record",
									"            var todoid1= result[0].cmc_todoid;",
									"            var todoname1= result[0].cmc_todoname;",
									"            pm.globals.set('gtodoid3a' ,todoid1);",
									"            console.log('todoname is:'+todoname1);",
									"            ",
									"            //2nd todo record",
									"            var todoid2= result[1].cmc_todoid;",
									"            var todoname2= result[1].cmc_todoname;",
									"            pm.globals.set('gtodoid3b' ,todoid2);",
									"            console.log('todoname is:'+todoname2);",
									"            ",
									"    }       ",
									"    ",
									"    ",
									" });",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{gaccess_token}}"
							},
							{
								"key": "Prefer",
								"value": "return=representation"
							}
						],
						"url": {
							"raw": "{{Eresource_URL}}contacts({{gcontactid3}})?$expand=cmc_contact_todo_assignedtostudentid",
							"host": [
								"{{Eresource_URL}}contacts({{gcontactid3}})"
							],
							"query": [
								{
									"key": "$expand",
									"value": "cmc_contact_todo_assignedtostudentid"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Deactivate SuccessPlan with 'Canceled' status and Check child Todos",
			"item": [
				{
					"name": "Deactivate SuccessPlan with 'Canceled' status",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successplan is deactivated with status as Canceled\", function() ",
									"{",
									"    if((pm.response.code===200) || (pm.response.code===201) || (pm.response.code===202))",
									"    {",
									"        var jsonData=JSON.parse(responseBody);",
									"        var statuscodeNew=jsonData.statuscode;",
									"        var statecodeNew= jsonData.statecode;",
									"        console.log(\"New statuscode and statecode:\" +statuscodeNew +\"and\" +statecodeNew);",
									"",
									"        pm.test(\"Statecode check as Inactive\", function()",
									"        {",
									"            pm.expect(statecodeNew).to.equal(1);",
									"        });                          ",
									"",
									"        pm.test(\"StatusCode check as Canceled\", function()",
									"        {",
									"            pm.expect(statuscodeNew).to.equal(175490000);",
									"        });",
									"    }",
									"    else ",
									"    {",
									"        var jsonData1 =JSON.parse(responseBody);",
									"        var message = jsonData1.error.message;",
									"        console.log(message);",
									"        ",
									"    }",
									" ",
									" });",
									" setTimeout(function(){}, 13000); ",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Prefer",
								"type": "text",
								"value": "return=representation"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{gaccess_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"statecode\": 1,\n    \"statuscode\": \"175490000\"\n\n}\n"
						},
						"url": {
							"raw": "{{Eresource_URL}}cmc_successplans({{gsuccessplanid3}})",
							"host": [
								"{{Eresource_URL}}cmc_successplans({{gsuccessplanid3}})"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify status of 1st todo",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Fetching 1st To do\", function() ",
									"{",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
									"    var jsonData =JSON.parse(responseBody);",
									"   ",
									"            var cmc_todoid1= jsonData.cmc_todoid;",
									"            pm.globals.set('gtodoid1',cmc_todoid1);",
									"            var statuscode1=jsonData.statuscode;",
									"            pm.globals.set('gstatuscode1',statuscode1);",
									"            var statecode1=jsonData.statecode;",
									"            pm.globals.set('gstatecode1',statecode1);",
									"            var todoname1=jsonData.cmc_todoname;",
									"            console.log(\"To Do name which is fetched:\" +todoname1);",
									"",
									"        pm.test(\"Statecode check as Inactive\", function()",
									"        {",
									"            pm.expect(statecode1).to.equal(1);",
									"        });                          ",
									"",
									"        pm.test(\"StatusCode check as Canceled\", function()",
									"        {",
									"            pm.expect(statuscode1).to.equal(175490001);",
									"        });",
									"       ",
									"     ",
									"});",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Prefer",
								"type": "text",
								"value": "return=representation"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{gaccess_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{Eresource_URL}}cmc_todos({{gtodoid3a}})",
							"host": [
								"{{Eresource_URL}}cmc_todos({{gtodoid3a}})"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify status of 2nd todo",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Fetching 2nd To do \", function() ",
									"{",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
									"    var jsonData =JSON.parse(responseBody);",
									"   ",
									"            var cmc_todoid1= jsonData.cmc_todoid;",
									"            pm.globals.set('gtodoid1',cmc_todoid1);",
									"            var statuscode1=jsonData.statuscode;",
									"            pm.globals.set('gstatuscode1',statuscode1);",
									"            var statecode1=jsonData.statecode;",
									"            pm.globals.set('gstatecode1',statecode1);",
									"            var todoname1=jsonData.cmc_todoname;",
									"            console.log(\"To Do name which is fetched:\" +todoname1);",
									"",
									"        pm.test(\"Statecode check as Inactive\", function()",
									"        {",
									"            pm.expect(statecode1).to.equal(1);",
									"        });                          ",
									"",
									"        pm.test(\"StatusCode check as Canceled\", function()",
									"        {",
									"            pm.expect(statuscode1).to.equal(175490001);",
									"        });",
									"       ",
									"     ",
									"});",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Prefer",
								"type": "text",
								"value": "return=representation"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{gaccess_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{Eresource_URL}}cmc_todos({{gtodoid3b}})",
							"host": [
								"{{Eresource_URL}}cmc_todos({{gtodoid3b}})"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Activate back the todos and successplan",
			"item": [
				{
					"name": "Activate back the 1st todo",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Activating back the 1st todo\", function() ",
									"{",
									"    if((pm.response.code===200) || (pm.response.code===201) || (pm.response.code===202))",
									"    {",
									"        var jsonData=JSON.parse(responseBody);",
									"        var statuscodeNew=jsonData.statuscode;",
									"        var statecodeNew= jsonData.statecode;",
									"        console.log(\"New statuscode and statecode:\" +statuscodeNew +\"and\" +statecodeNew);",
									"",
									"        pm.test(\"Statecode check as Active\", function()",
									"        {",
									"            pm.expect(statecodeNew).to.equal(0);",
									"        });                          ",
									"",
									"        pm.test(\"StatusCode check as Active\", function()",
									"        {",
									"            pm.expect(statuscodeNew).to.equal(1);",
									"        });",
									"    }",
									"    else ",
									"    {",
									"        var jsonData1 =JSON.parse(responseBody);",
									"        var message = jsonData1.error.message;",
									"        console.log(message);",
									"        ",
									"    }",
									" ",
									" });",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Prefer",
								"type": "text",
								"value": "return=representation"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{gaccess_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"statecode\": 0,\n    \"statuscode\": 1\n\n}\n"
						},
						"url": {
							"raw": "{{Eresource_URL}}cmc_todos({{gtodoid3a}})",
							"host": [
								"{{Eresource_URL}}cmc_todos({{gtodoid3a}})"
							]
						}
					},
					"response": []
				},
				{
					"name": "Activate back the 2nd todo",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Activating back the 1st todo\", function() ",
									"{",
									"    if((pm.response.code===200) || (pm.response.code===201) || (pm.response.code===202))",
									"    {",
									"        var jsonData=JSON.parse(responseBody);",
									"        var statuscodeNew=jsonData.statuscode;",
									"        var statecodeNew= jsonData.statecode;",
									"        console.log(\"New statuscode and statecode:\" +statuscodeNew +\"and\" +statecodeNew);",
									"",
									"        pm.test(\"Statecode check as Active\", function()",
									"        {",
									"            pm.expect(statecodeNew).to.equal(0);",
									"        });                          ",
									"",
									"        pm.test(\"StatusCode check as Active\", function()",
									"        {",
									"            pm.expect(statuscodeNew).to.equal(1);",
									"        });",
									"    }",
									"    else ",
									"    {",
									"        var jsonData1 =JSON.parse(responseBody);",
									"        var message = jsonData1.error.message;",
									"        console.log(message);",
									"        ",
									"    }",
									" ",
									" });",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Prefer",
								"type": "text",
								"value": "return=representation"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{gaccess_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"statecode\": 0,\n    \"statuscode\": 1\n\n}\n"
						},
						"url": {
							"raw": "{{Eresource_URL}}cmc_todos({{gtodoid3b}})",
							"host": [
								"{{Eresource_URL}}cmc_todos({{gtodoid3b}})"
							]
						}
					},
					"response": []
				},
				{
					"name": "Activate back the SuccessPlan with 'Active' status",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successplan is deactivated with status as Canceled\", function() ",
									"{",
									"    if((pm.response.code===200) || (pm.response.code===201) || (pm.response.code===202))",
									"    {",
									"        var jsonData=JSON.parse(responseBody);",
									"        var statuscodeNew=jsonData.statuscode;",
									"        var statecodeNew= jsonData.statecode;",
									"        console.log(\"New statuscode and statecode:\" +statuscodeNew +\"and\" +statecodeNew);",
									"",
									"        pm.test(\"Statecode check as Inactive\", function()",
									"        {",
									"            pm.expect(statecodeNew).to.equal(0);",
									"        });                          ",
									"",
									"        pm.test(\"StatusCode check as Canceled\", function()",
									"        {",
									"            pm.expect(statuscodeNew).to.equal(1);",
									"        });",
									"    }",
									"    else ",
									"    {",
									"        var jsonData1 =JSON.parse(responseBody);",
									"        var message = jsonData1.error.message;",
									"        console.log(message);",
									"        ",
									"    }",
									" ",
									" });",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Prefer",
								"type": "text",
								"value": "return=representation"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{gaccess_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"statecode\": 0,\n    \"statuscode\": 1\n\n}\n"
						},
						"url": {
							"raw": "{{Eresource_URL}}cmc_successplans({{gsuccessplanid3}})",
							"host": [
								"{{Eresource_URL}}cmc_successplans({{gsuccessplanid3}})"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Deactivate SuccessPlan with 'Inactive' status and Check child Todos",
			"item": [
				{
					"name": "Deactivate SuccessPlan with 'Inactive' status",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successplan is deactivated with status as Inactive\", function() ",
									"{",
									"    if((pm.response.code===200) || (pm.response.code===201) || (pm.response.code===202))",
									"    {",
									"        var jsonData=JSON.parse(responseBody);",
									"        var statuscodeNew=jsonData.statuscode;",
									"        var statecodeNew= jsonData.statecode;",
									"        console.log(\"New statuscode and statecode:\" +statuscodeNew +\"and\" +statecodeNew);",
									"",
									"        pm.test(\"Statecode check as Inactive\", function()",
									"        {",
									"            pm.expect(statecodeNew).to.equal(1);",
									"        });                          ",
									"",
									"        pm.test(\"StatusCode check as Canceled\", function()",
									"        {",
									"            pm.expect(statuscodeNew).to.equal(175490000);",
									"        });",
									"    }",
									"    else ",
									"    {",
									"        var jsonData1 =JSON.parse(responseBody);",
									"        var message = jsonData1.error.message;",
									"        console.log(message);",
									"        ",
									"    }",
									" ",
									" });",
									"setTimeout(function(){}, 13000);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Prefer",
								"type": "text",
								"value": "return=representation"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{gaccess_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"statecode\": 1,\n    \"statuscode\": \"175490000\"\n\n}\n"
						},
						"url": {
							"raw": "{{Eresource_URL}}cmc_successplans({{gsuccessplanid3}})",
							"host": [
								"{{Eresource_URL}}cmc_successplans({{gsuccessplanid3}})"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify status of 1st todo",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Fetching 1st To do\", function() ",
									"{",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
									"    var jsonData =JSON.parse(responseBody);",
									"   ",
									"            var cmc_todoid1= jsonData.cmc_todoid;",
									"            pm.globals.set('gtodoid1',cmc_todoid1);",
									"            var statuscode1=jsonData.statuscode;",
									"            pm.globals.set('gstatuscode1',statuscode1);",
									"            var statecode1=jsonData.statecode;",
									"            pm.globals.set('gstatecode1',statecode1);",
									"            var todoname1=jsonData.cmc_todoname;",
									"            console.log(\"To Do name which is fetched:\" +todoname1);",
									"",
									"        pm.test(\"Statecode check as Inactive\", function()",
									"        {",
									"            pm.expect(statecode1).to.equal(1);",
									"        });                          ",
									"",
									"        pm.test(\"StatusCode check as Canceled\", function()",
									"        {",
									"            pm.expect(statuscode1).to.equal(175490001);",
									"        });",
									"       ",
									"     ",
									"});",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Prefer",
								"type": "text",
								"value": "return=representation"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{gaccess_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{Eresource_URL}}cmc_todos({{gtodoid3a}})",
							"host": [
								"{{Eresource_URL}}cmc_todos({{gtodoid3a}})"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify status of 2nd todo",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Fetching 2nd To do \", function() ",
									"{",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
									"    var jsonData =JSON.parse(responseBody);",
									"   ",
									"            var cmc_todoid1= jsonData.cmc_todoid;",
									"            pm.globals.set('gtodoid1',cmc_todoid1);",
									"            var statuscode1=jsonData.statuscode;",
									"            pm.globals.set('gstatuscode1',statuscode1);",
									"            var statecode1=jsonData.statecode;",
									"            pm.globals.set('gstatecode1',statecode1);",
									"            var todoname1=jsonData.cmc_todoname;",
									"            console.log(\"To Do name which is fetched:\" +todoname1);",
									"",
									"        pm.test(\"Statecode check as Inactive\", function()",
									"        {",
									"            pm.expect(statecode1).to.equal(1);",
									"        });                          ",
									"",
									"        pm.test(\"StatusCode check as Canceled\", function()",
									"        {",
									"            pm.expect(statuscode1).to.equal(175490001);",
									"        });",
									"       ",
									"     ",
									"});",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Prefer",
								"type": "text",
								"value": "return=representation"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{gaccess_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{Eresource_URL}}cmc_todos({{gtodoid3b}})",
							"host": [
								"{{Eresource_URL}}cmc_todos({{gtodoid3b}})"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Activate back the todos and successplan",
			"item": [
				{
					"name": "Activate back the 1st todo",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Activating back the 1st todo\", function() ",
									"{",
									"    if((pm.response.code===200) || (pm.response.code===201) || (pm.response.code===202))",
									"    {",
									"        var jsonData=JSON.parse(responseBody);",
									"        var statuscodeNew=jsonData.statuscode;",
									"        var statecodeNew= jsonData.statecode;",
									"        console.log(\"New statuscode and statecode:\" +statuscodeNew +\"and\" +statecodeNew);",
									"",
									"        pm.test(\"Statecode check as Active\", function()",
									"        {",
									"            pm.expect(statecodeNew).to.equal(0);",
									"        });                          ",
									"",
									"        pm.test(\"StatusCode check as Active\", function()",
									"        {",
									"            pm.expect(statuscodeNew).to.equal(1);",
									"        });",
									"    }",
									"    else ",
									"    {",
									"        var jsonData1 =JSON.parse(responseBody);",
									"        var message = jsonData1.error.message;",
									"        console.log(message);",
									"        ",
									"    }",
									" ",
									" });",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Prefer",
								"type": "text",
								"value": "return=representation"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{gaccess_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"statecode\": 0,\n    \"statuscode\": 1\n\n}\n"
						},
						"url": {
							"raw": "{{Eresource_URL}}cmc_todos({{gtodoid3a}})",
							"host": [
								"{{Eresource_URL}}cmc_todos({{gtodoid3a}})"
							]
						}
					},
					"response": []
				},
				{
					"name": "Activate back the 2nd todo",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Activating back the 1st todo\", function() ",
									"{",
									"    if((pm.response.code===200) || (pm.response.code===201) || (pm.response.code===202))",
									"    {",
									"        var jsonData=JSON.parse(responseBody);",
									"        var statuscodeNew=jsonData.statuscode;",
									"        var statecodeNew= jsonData.statecode;",
									"        console.log(\"New statuscode and statecode:\" +statuscodeNew +\"and\" +statecodeNew);",
									"",
									"        pm.test(\"Statecode check as Active\", function()",
									"        {",
									"            pm.expect(statecodeNew).to.equal(0);",
									"        });                          ",
									"",
									"        pm.test(\"StatusCode check as Active\", function()",
									"        {",
									"            pm.expect(statuscodeNew).to.equal(1);",
									"        });",
									"    }",
									"    else ",
									"    {",
									"        var jsonData1 =JSON.parse(responseBody);",
									"        var message = jsonData1.error.message;",
									"        console.log(message);",
									"        ",
									"    }",
									" ",
									" });",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Prefer",
								"type": "text",
								"value": "return=representation"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{gaccess_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"statecode\": 0,\n    \"statuscode\": 1\n\n}\n"
						},
						"url": {
							"raw": "{{Eresource_URL}}cmc_todos({{gtodoid3b}})",
							"host": [
								"{{Eresource_URL}}cmc_todos({{gtodoid3b}})"
							]
						}
					},
					"response": []
				},
				{
					"name": "Activate back the SuccessPlan with 'Active' status",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successplan is deactivated with status as Canceled\", function() ",
									"{",
									"    if((pm.response.code===200) || (pm.response.code===201) || (pm.response.code===202))",
									"    {",
									"        var jsonData=JSON.parse(responseBody);",
									"        var statuscodeNew=jsonData.statuscode;",
									"        var statecodeNew= jsonData.statecode;",
									"        console.log(\"New statuscode and statecode:\" +statuscodeNew +\"and\" +statecodeNew);",
									"",
									"        pm.test(\"Statecode check as Inactive\", function()",
									"        {",
									"            pm.expect(statecodeNew).to.equal(0);",
									"        });                          ",
									"",
									"        pm.test(\"StatusCode check as Canceled\", function()",
									"        {",
									"            pm.expect(statuscodeNew).to.equal(1);",
									"        });",
									"    }",
									"    else ",
									"    {",
									"        var jsonData1 =JSON.parse(responseBody);",
									"        var message = jsonData1.error.message;",
									"        console.log(message);",
									"        ",
									"    }",
									" ",
									" });",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Prefer",
								"type": "text",
								"value": "return=representation"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{gaccess_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"statecode\": 0,\n    \"statuscode\": 1\n\n}\n"
						},
						"url": {
							"raw": "{{Eresource_URL}}cmc_successplans({{gsuccessplanid3}})",
							"host": [
								"{{Eresource_URL}}cmc_successplans({{gsuccessplanid3}})"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Deactivate SuccessPlan with 'Complete' status and Check child Todos",
			"item": [
				{
					"name": "Deactivate SuccessPlan with 'Complete' status",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successplan is deactivated with status as Complete\", function() ",
									"{",
									"    if((pm.response.code===200) || (pm.response.code===201) || (pm.response.code===202))",
									"    {",
									"        var jsonData=JSON.parse(responseBody);",
									"        var statuscodeNew=jsonData.statuscode;",
									"        var statecodeNew= jsonData.statecode;",
									"        console.log(\"New statuscode and statecode:\" +statuscodeNew +\"and\" +statecodeNew);",
									"",
									"        pm.test(\"Statecode check as Inactive\", function()",
									"        {",
									"            pm.expect(statecodeNew).to.equal(1);",
									"        });                          ",
									"",
									"        pm.test(\"StatusCode check as Canceled\", function()",
									"        {",
									"            pm.expect(statuscodeNew).to.equal(175490001);",
									"        });",
									"    }",
									"    else ",
									"    {",
									"        var jsonData1 =JSON.parse(responseBody);",
									"        var message = jsonData1.error.message;",
									"        console.log(message);",
									"        ",
									"    }",
									" ",
									" });",
									"setTimeout(function(){}, 13000);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Prefer",
								"type": "text",
								"value": "return=representation"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{gaccess_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"statecode\": 1,\n    \"statuscode\": \"175490001\"\n\n}\n"
						},
						"url": {
							"raw": "{{Eresource_URL}}cmc_successplans({{gsuccessplanid3}})",
							"host": [
								"{{Eresource_URL}}cmc_successplans({{gsuccessplanid3}})"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify status of 1st todo",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Fetching 1st To do\", function() ",
									"{",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
									"    var jsonData =JSON.parse(responseBody);",
									"   ",
									"            var cmc_todoid1= jsonData.cmc_todoid;",
									"            pm.globals.set('gtodoid1',cmc_todoid1);",
									"            var statuscode1=jsonData.statuscode;",
									"            pm.globals.set('gstatuscode1',statuscode1);",
									"            var statecode1=jsonData.statecode;",
									"            pm.globals.set('gstatecode1',statecode1);",
									"            var todoname1=jsonData.cmc_todoname;",
									"            console.log(\"To Do name which is fetched:\" +todoname1);",
									"",
									"        pm.test(\"Statecode check as Active\", function()",
									"        {",
									"            pm.expect(statecode1).to.equal(0);",
									"        });                          ",
									"",
									"        pm.test(\"StatusCode check as Incomplete\", function()",
									"        {",
									"            pm.expect(statuscode1).to.equal(1);",
									"        });",
									"       ",
									"     ",
									"});",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Prefer",
								"type": "text",
								"value": "return=representation"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{gaccess_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{Eresource_URL}}cmc_todos({{gtodoid3a}})",
							"host": [
								"{{Eresource_URL}}cmc_todos({{gtodoid3a}})"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify status of 2nd todo",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Fetching 2nd To do \", function() ",
									"{",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
									"    var jsonData =JSON.parse(responseBody);",
									"   ",
									"            var cmc_todoid1= jsonData.cmc_todoid;",
									"            pm.globals.set('gtodoid1',cmc_todoid1);",
									"            var statuscode1=jsonData.statuscode;",
									"            pm.globals.set('gstatuscode1',statuscode1);",
									"            var statecode1=jsonData.statecode;",
									"            pm.globals.set('gstatecode1',statecode1);",
									"            var todoname1=jsonData.cmc_todoname;",
									"            console.log(\"To Do name which is fetched:\" +todoname1);",
									"",
									"        pm.test(\"Statecode check as Active\", function()",
									"        {",
									"            pm.expect(statecode1).to.equal(0);",
									"        });                          ",
									"",
									"        pm.test(\"StatusCode check as Incomplete\", function()",
									"        {",
									"            pm.expect(statuscode1).to.equal(1);",
									"        });",
									"       ",
									"     ",
									"});",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Prefer",
								"type": "text",
								"value": "return=representation"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{gaccess_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{Eresource_URL}}cmc_todos({{gtodoid3b}})",
							"host": [
								"{{Eresource_URL}}cmc_todos({{gtodoid3b}})"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Changing the statuses of Todo's and also Deactivating them",
			"item": [
				{
					"name": "Get To do ID -Static Date",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Fetching Static date To do ID\", function() ",
									"{",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
									"    var jsonData =JSON.parse(responseBody);",
									"    ",
									"    var result =jsonData.value;",
									"    if(result.length===0)",
									"    {",
									"        console.log('Successplan template  is not assigned to contact1, hence Todos details cannot be retrieved');",
									"        throw new Error(\"Success Plan Template is not assigned to contact1 and hence no todos are present, Please check!!\");",
									"    }",
									"    else",
									"    {",
									"            var cmc_todoid1= jsonData.value[0].cmc_todoid;",
									"            pm.globals.set('gtodoid1',cmc_todoid1);",
									"            var statuscode1=jsonData.value[0].statuscode;",
									"            pm.globals.set('gstatuscode1',statuscode1);",
									"            var statecode1=jsonData.value[0].statecode;",
									"            pm.globals.set('gstatecode1',statecode1);",
									"            var todoname1=jsonData.value[0].cmc_todoname;",
									"            console.log(\"To Do name which is fetched:\" +todoname1);",
									"            var duedate=jsonData.value[0].cmc_duedate;",
									"            console.log(\"Due date is: \" +duedate);",
									"            var currenttimestamp=pm.globals.get('gduedateStatic');",
									"            console.log(\"current time stamp is: \" +currenttimestamp);      ",
									"",
									"    }  ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Prefer",
								"type": "text",
								"value": "return=representation"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{gaccess_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{Eresource_URL}}cmc_todos?$filter=_cmc_successplantodotemplateid_value eq ({{gsuccessplantodotemplateid}})",
							"host": [
								"{{Eresource_URL}}cmc_todos"
							],
							"query": [
								{
									"key": "$filter",
									"value": "_cmc_successplantodotemplateid_value eq ({{gsuccessplantodotemplateid}})"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update To do Status -Canceled- Static Date",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Static date To do is deactivated and the status is Canceled\", function() ",
									"{",
									"    if((pm.response.code===200) || (pm.response.code===201) || (pm.response.code===202))",
									"    {",
									"        var jsonData=JSON.parse(responseBody);",
									"        var statuscodeNew=jsonData.statuscode;",
									"        var statuscodeOld=pm.globals.get('gstatuscode1');",
									"        var statecodeOld=pm.globals.get('gstatecode1');",
									"        var statecodeNew= jsonData.statecode;",
									"        console.log(\"Old statuscode and Stecode:\" +statuscodeOld +\"and\" +statecodeOld);",
									"        console.log(\"New statuscode and statecode:\" +statuscodeNew +\"and\" +statecodeNew);",
									"",
									"        pm.test(\"Statecode check\", function()",
									"        {",
									"            pm.expect(statecodeNew).to.equal(1);",
									"        });                          ",
									"",
									"        pm.test(\"StatusCode check\", function()",
									"        {",
									"            pm.expect(statuscodeNew).to.equal(175490001);",
									"        });",
									"        ",
									"        var todoname=jsonData.cmc_todoname;",
									"        console.log(\"To Do name which is Updated is:\" +todoname);",
									"     ",
									"    }",
									"    else ",
									"    {",
									"        var jsonData1 =JSON.parse(responseBody);",
									"        var message = jsonData1.error.message;",
									"        console.log(message);",
									"        ",
									"    }",
									" ",
									" });",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Prefer",
								"type": "text",
								"value": "return=representation"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{gaccess_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\"statecode\":1,  \n\"statuscode\": \"175490001\"\n\n}\n"
						},
						"url": {
							"raw": "{{Eresource_URL}}cmc_todos({{gtodoid1}})",
							"host": [
								"{{Eresource_URL}}cmc_todos({{gtodoid1}})"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get To do ID- Before AssignmentDate",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Fetching Before Assignment date To do ID \", function() ",
									"{",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
									"    var jsonData =JSON.parse(responseBody);",
									"    ",
									"    var result =jsonData.value;",
									"    if(result.length===0)",
									"    {",
									"        console.log('Successplan template is not assigned to contact1, hence Todos details cannot be retrieved');",
									"        throw new Error(\"Success Plan Template is not assigned to contact1 and hence no todos are present, Please check!!\");",
									"    }",
									"    else",
									"    {",
									"       ",
									"            var cmc_todoid2= jsonData.value[0].cmc_todoid;",
									"            pm.globals.set('gtodoid2',cmc_todoid2);",
									"            var todoname=jsonData.value[0].cmc_todoname;",
									"            console.log(\"To Do name which is fetched:\" +todoname);",
									"            var statuscode2= jsonData.value[0].statuscode;",
									"            pm.globals.set('gstatuscode2',statuscode2);",
									"            var statecode2=jsonData.value[0].statecode;",
									"            pm.globals.set('gstatecode2',statecode2);",
									"            var duedate=jsonData.value[0].cmc_duedate;",
									"            console.log(\"Due date is: \" +duedate);",
									"            ",
									"     }",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Prefer",
								"type": "text",
								"value": "return=representation"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{gaccess_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{Eresource_URL}}cmc_todos?$filter=_cmc_successplantodotemplateid_value eq ({{gsuccessplantodotemplateid1}})  ",
							"host": [
								"{{Eresource_URL}}cmc_todos"
							],
							"query": [
								{
									"key": "$filter",
									"value": "_cmc_successplantodotemplateid_value eq ({{gsuccessplantodotemplateid1}})  "
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update To do Status -Complete-Before AssignmentDate",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Before Assignment date To do is deactivated and the status is Complete\", function() ",
									"{",
									"    if((pm.response.code===200) || (pm.response.code===201) || (pm.response.code===202))",
									"    {",
									"        var jsonData=JSON.parse(responseBody);",
									"        var statuscodeNew=jsonData.statuscode;",
									"        var statuscodeOld=pm.globals.get('gstatuscode2');",
									"        var statecodeOld=pm.globals.get('gstatecode2');",
									"        var statecodeNew= jsonData.statecode;",
									"        console.log(\"Old statuscode and Stecode:\" +statuscodeOld +\"and\" +statecodeOld);",
									"        console.log(\"New statuscode and statecode:\" +statuscodeNew +\"and\" +statecodeNew);",
									"",
									"        pm.test(\"Statecode check\", function()",
									"        {",
									"            pm.expect(statecodeNew).to.equal(1);",
									"        });                          ",
									"",
									"        pm.test(\"StatusCode check\", function()",
									"        {",
									"            pm.expect(statuscodeNew).to.equal(2);",
									"        });",
									"        ",
									"        var todoname=jsonData.cmc_todoname;",
									"        console.log(\"To Do name which is Updated is:\" +todoname);",
									"    }",
									"     else ",
									"    {",
									"        var jsonData1 =JSON.parse(responseBody);",
									"        var message = jsonData1.error.message;",
									"        console.log(message);",
									"        ",
									"    }",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Prefer",
								"type": "text",
								"value": "return=representation"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{gaccess_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\"statecode\":1,\n\"statuscode\": 2\n\n}\n"
						},
						"url": {
							"raw": "{{Eresource_URL}}cmc_todos({{gtodoid2}})",
							"host": [
								"{{Eresource_URL}}cmc_todos({{gtodoid2}})"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get To do ID- Before EndDateAcademicPeriod",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Fetching Before End date of Academic Period To do ID\", function() ",
									"{",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
									"    var jsonData =JSON.parse(responseBody);",
									"    ",
									"    var result =jsonData.value;",
									"    if(result.length===0)",
									"    {",
									"        console.log('Successplan template is not assigned to contact1, hence Todos details cannot be retrieved');",
									"        throw new Error(\"Success Plan Template is not assigned to contact1 and hence no todos are present, Please check!!\");",
									"    }",
									"    else",
									"    {",
									"            var cmc_todoid3= jsonData.value[0].cmc_todoid;",
									"            pm.globals.set('gtodoid3',cmc_todoid3);",
									"            var todoname=jsonData.value[0].cmc_todoname;",
									"            console.log(\"To Do name which is fetched:\" +todoname);",
									"            var statuscode3= jsonData.value[0].statuscode;",
									"            pm.globals.set('gstatuscode3',statuscode3);",
									"            var statecode3=jsonData.value[0].statecode;",
									"            pm.globals.set('gstatecode3',statecode3);",
									"            var duedate=jsonData.value[0].cmc_duedate;",
									"            console.log(\"Due date is: \" +duedate);",
									"        ",
									"    }",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Prefer",
								"type": "text",
								"value": "return=representation"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{gaccess_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{Eresource_URL}}cmc_todos?$filter=_cmc_successplantodotemplateid_value eq ({{gsuccessplantodotemplateid3}})  ",
							"host": [
								"{{Eresource_URL}}cmc_todos"
							],
							"query": [
								{
									"key": "$filter",
									"value": "_cmc_successplantodotemplateid_value eq ({{gsuccessplantodotemplateid3}})  "
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update To do Status -Waived-Before EndDateAcademicPeriod",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Before End date of Academic Period To do is deactivated and the status is Waived\", function() ",
									"{",
									"    if((pm.response.code===200) || (pm.response.code===201) || (pm.response.code===202))",
									"    {",
									"        var jsonData=JSON.parse(responseBody);",
									"        var statuscodeNew=jsonData.statuscode;",
									"        var statuscodeOld=pm.globals.get('gstatuscode3');",
									"        var statecodeOld=pm.globals.get('gstatecode3');",
									"        var statecodeNew= jsonData.statecode;",
									"        console.log(\"Old statuscode and Stecode:\" +statuscodeOld +\"and\" +statecodeOld);",
									"        console.log(\"New statuscode and statecode:\" +statuscodeNew +\"and\" +statecodeNew);",
									"",
									"        pm.test(\"Statecode check\", function()",
									"        {",
									"            pm.expect(statecodeNew).to.equal(1);",
									"        });                          ",
									"",
									"        pm.test(\"StatusCode check\", function()",
									"        {",
									"            pm.expect(statuscodeNew).to.equal(175490002);",
									"        });",
									"        ",
									"        var todoname=jsonData.cmc_todoname;",
									"        console.log(\"To Do name which is Updated is:\" +todoname);",
									"    }",
									"    else ",
									"    {",
									"        var jsonData1 =JSON.parse(responseBody);",
									"        var message = jsonData1.error.message;",
									"        console.log(message);",
									"        ",
									"    }",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Prefer",
								"type": "text",
								"value": "return=representation"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{gaccess_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\"statecode\":1, \n\"statuscode\":\"175490002\"\n\n}\n"
						},
						"url": {
							"raw": "{{Eresource_URL}}cmc_todos({{gtodoid3}})",
							"host": [
								"{{Eresource_URL}}cmc_todos({{gtodoid3}})"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get To do ID- After.StartDateAcademicPeriod",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Fetching After Start date of Academic Period To do ID\", function() ",
									"{",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
									"    var jsonData =JSON.parse(responseBody);",
									"    ",
									"    var result =jsonData.value;",
									"    if(result.length===0)",
									"    {",
									"        console.log('Successplan template  is not assigned to contact1, hence Todos details cannot be retrieved');",
									"        throw new Error(\"Success Plan Template is not assigned to contact1 and hence no todos are present, Please check!!\");",
									"    }",
									"    else",
									"    {",
									"            var cmc_todoid4= jsonData.value[0].cmc_todoid;",
									"            pm.globals.set('gtodoid4',cmc_todoid4);",
									"            var todoname=jsonData.value[0].cmc_todoname;",
									"            console.log(\"To Do name which is Updated is:\" +todoname);",
									"            var statuscode4= jsonData.value[0].statuscode;",
									"            pm.globals.set('gstatuscode4',statuscode4);",
									"            var statecode4=jsonData.value[0].statecode;",
									"            pm.globals.set('gstatecode4',statecode4);",
									"            var duedate=jsonData.value[0].cmc_duedate;",
									"            console.log(\"Due date is: \" +duedate);",
									"        ",
									"    }",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Prefer",
								"type": "text",
								"value": "return=representation"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{gaccess_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{Eresource_URL}}cmc_todos?$filter=_cmc_successplantodotemplateid_value eq ({{gsuccessplantodotemplateid6}})  ",
							"host": [
								"{{Eresource_URL}}cmc_todos"
							],
							"query": [
								{
									"key": "$filter",
									"value": "_cmc_successplantodotemplateid_value eq ({{gsuccessplantodotemplateid6}})  "
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update To do Status -Mark as Complete-After.StartDateAcademicPeriod",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"After Start date of Academic Period To do status is changed as Marked as Complete\", function() ",
									"{",
									"    if((pm.response.code===200) || (pm.response.code===201) || (pm.response.code===202))",
									"    {",
									"        var jsonData =JSON.parse(responseBody);",
									"        var statuscodeNew=jsonData.statuscode;",
									"        var statuscodeOld=pm.globals.get('gstatuscode4');",
									"        console.log(\"Old statuscode:\" +statuscodeOld);",
									"        console.log(\"New statuscode:\" +statuscodeNew);                  ",
									"",
									"        pm.test(\"StatusCode check\", function()",
									"        {",
									"            pm.expect(statuscodeNew).to.equal(175490000);",
									"        });",
									"        ",
									"        pm.globals.set('gstatuscodeNew',statuscodeNew);",
									"        var todoname=jsonData.cmc_todoname;",
									"        console.log(\"To Do name which is Updated is:\" +todoname);",
									"    }",
									"    else ",
									"    {",
									"        var jsonData1 =JSON.parse(responseBody);",
									"        var message = jsonData1.error.message;",
									"        console.log(message);",
									"        ",
									"    }",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Prefer",
								"type": "text",
								"value": "return=representation"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{gaccess_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n \n\"statuscode\": \"175490000\"\n\n}\n"
						},
						"url": {
							"raw": "{{Eresource_URL}}cmc_todos({{gtodoid4}})",
							"host": [
								"{{Eresource_URL}}cmc_todos({{gtodoid4}})"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update To do Status -Incomplete-After.StartDateAcademicPeriod",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"After Start date of Academic Period To do status is changed as Incomplete\", function() ",
									"{",
									"    if((pm.response.code===200) || (pm.response.code===201) || (pm.response.code===202))",
									"    {",
									"        var jsonData =JSON.parse(responseBody);",
									"        var statuscodeNew=jsonData.statuscode;",
									"        var statuscodeOld=pm.globals.get('gstatuscodeNew');",
									"        console.log(\"Old statuscode:\" +statuscodeOld);",
									"        console.log(\"New statuscode:\" +statuscodeNew);",
									"",
									"        pm.test(\"StatusCode check\", function()",
									"        {",
									"            pm.expect(statuscodeNew).to.equal(1);",
									"        });",
									"",
									"        var todoname=jsonData.cmc_todoname;",
									"        console.log(\"To Do name which is Updated is:\" +todoname);",
									"    }",
									"    else ",
									"    {",
									"        var jsonData1 =JSON.parse(responseBody);",
									"        var message = jsonData1.error.message;",
									"        console.log(message);",
									"        ",
									"    }",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Prefer",
								"type": "text",
								"value": "return=representation"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{gaccess_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \n\"statuscode\": 1\n\n}\n"
						},
						"url": {
							"raw": "{{Eresource_URL}}cmc_todos({{gtodoid4}})",
							"host": [
								"{{Eresource_URL}}cmc_todos({{gtodoid4}})"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Successplan Status before deactivating all it's todos",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Getting the Status and Status reason of the Successplan record before deactivating all it's Todos\", function() ",
									"{",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
									"    var jsonData =JSON.parse(responseBody);",
									"    ",
									"            var successplanid= jsonData.cmc_successplanid;",
									"            var successplanname= jsonData.cmc_successplanname;",
									"            console.log('successplanname is:'+successplanname);",
									"            var statecode= jsonData.statecode;",
									"            var statuscode= jsonData.statuscode;",
									"            ",
									"        pm.test(\"Statecode check\", function()",
									"        {",
									"            pm.expect(statecode).to.equal(0);",
									"        });                          ",
									"",
									"        pm.test(\"StatusCode check\", function()",
									"        {",
									"            pm.expect(statuscode).to.equal(1);",
									"        });",
									" ",
									" });",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{gaccess_token}}"
							},
							{
								"key": "Prefer",
								"value": "return=representation"
							}
						],
						"url": {
							"raw": "{{Eresource_URL}}cmc_successplans({{gsuccessplanid}})",
							"host": [
								"{{Eresource_URL}}cmc_successplans({{gsuccessplanid}})"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Create SuccessPlan and Todos directly in the Contact record",
			"item": [
				{
					"name": "Create Successplan under Contact1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Create Successplan record directly under Contact1\", function() ",
									"{",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
									"    var jsonData =JSON.parse(responseBody);",
									"    var successplanid=jsonData.cmc_successplanid;",
									"    pm.globals.set('gsuccessplanid5', successplanid);",
									"    var successplanname3 = jsonData.cmc_successplanname;",
									"    console.log(\"Success Plan record name:\" +successplanname3);",
									"    pm.globals.set('gsuccessplanname5',successplanname3);",
									"       ",
									"    ",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Prefer",
								"value": "return=representation"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{gaccess_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"cmc_successplanname\": \"SuccessPlan direct{{$randomInt}}API {{$randomInt}}\",\r\n    \"cmc_assignedtoid@odata.bind\": \"/contacts({{gcontactid1}})\",\r\n    \"cmc_portaldescription\": \"Successplan creation directly under a contact\"\r\n}"
						},
						"url": {
							"raw": "{{Eresource_URL}}cmc_successplans",
							"host": [
								"{{Eresource_URL}}cmc_successplans"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Successplan under Contact1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Update Successplan record that was created under Contact1\", function() ",
									"{",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
									"    var jsonData =JSON.parse(responseBody);",
									"    var successplanid=jsonData.cmc_successplanid;",
									"    var successplannameNew = jsonData.cmc_successplanname;",
									"    console.log(\"Success Plan record name that is updated:\" +successplannameNew);",
									"    ",
									"    if(successplannameNew===pm.globals.get('gsuccessplanname5'))",
									"    {",
									"        console.log('Successplan record is not updated');",
									"    }",
									"    else",
									"    {",
									"        console.log('Successplan record is updated successfully');",
									"    }",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Prefer",
								"value": "return=representation"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{gaccess_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"cmc_successplanname\": \"successplanDirect update{{$randomInt}}API {{$randomInt}}\",\r\n\t\"cmc_portaldescription\": \"Description updated\"\r\n\r\n}\r\n\r\n\r\n"
						},
						"url": {
							"raw": "{{Eresource_URL}}cmc_successplans({{gsuccessplanid3}})",
							"host": [
								"{{Eresource_URL}}cmc_successplans({{gsuccessplanid3}})"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Todo record1 under Contact1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Create Todo record directly under Contact1\", function() ",
									"{",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
									"    var jsonData =JSON.parse(responseBody);",
									"    var todoid11=jsonData.cmc_todoid;",
									"    pm.globals.set('gtodoid11', todoid11);",
									"    var todoname = jsonData.cmc_todoname;",
									"    console.log(\"Todo record name:\" +todoname);",
									"    pm.globals.set('gtodoname11',todoname);",
									"    ",
									"    var parentsuccessplanid=jsonData._cmc_successplanid_value;",
									"    if(parentsuccessplanid===pm.globals.get('gsuccessplanid5'))",
									"    {",
									"        console.log('Todo record is correctly linked to the Success plan record that is created under Contact1');",
									"    }",
									"    else",
									"    {",
									"        console.log('Todo record is not linked to the correct Successplan record');",
									"    }",
									"    ",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"  var moment = require('moment');\r",
									"pm.environment.set(\"timestamp\", moment().add(1, 'days').format(\"YYYY-MM-DD\"));\r",
									"\r",
									"pm.environment.set(\"timestampEndDate\", moment().add(10, 'days').format(\"YYYY-MM-DD\"));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Prefer",
								"value": "return=representation"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{gaccess_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"cmc_todoname\": \"Todo directly{{$randomInt}} API {{$randomInt}}\",\r\n    \"cmc_assignedtostudentid@odata.bind\": \"/contacts({{gcontactid1}})\",\r\n    \"cmc_description\": \"Todo created directly under a contact\",\r\n    \"cmc_duedate\": \"{{timestamp}}\",\r\n    \"cmc_ownershiptype\": \"175490000\",\r\n    \"cmc_requiredoptional\": \"175490000\",\r\n    \"cmc_studentcancomplete\": true,\r\n    \"cmc_successplanid@odata.bind\": \"/cmc_successplans({{gsuccessplanid5}})\",\r\n    \"cmc_todocategoryid@odata.bind\": \"/cmc_todocategories(D185C9BC-F881-E711-8100-5065F38B0191)\""
						},
						"url": {
							"raw": "{{Eresource_URL}}cmc_todos",
							"host": [
								"{{Eresource_URL}}cmc_todos"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Todo record1 under Contact1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Update Todo record that was created under Contact1\", function() ",
									"{",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
									"    var jsonData =JSON.parse(responseBody);",
									"    var todoid11=jsonData.cmc_todoid;",
									"    pm.globals.set('gtodoid13', todoid11);",
									"    var todonameNew = jsonData.cmc_todoname;",
									"    console.log(\"Todo record name that is updated is:\" +todonameNew);",
									"    ",
									"    if(todonameNew===pm.globals.get('gtodoname11'))",
									"    {",
									"        console.log('Todo record is not updated');",
									"    }",
									"    else",
									"    {",
									"        console.log('Todo record is updated successfully');",
									"    }",
									"    ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Prefer",
								"value": "return=representation"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{gaccess_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"cmc_todoname\": \"Todo directly updated{{$randomInt}}API {{$randomInt}}\",\r\n\t\"cmc_description\": \"updated description{{$randomInt}}\",\r\n\t\"cmc_ownershiptype\": \"175490001\",\r\n\t\"cmc_requiredoptional\": \"175490001\",\r\n\t\"cmc_studentcancomplete\": false,\r\n\t\"cmc_todocategoryid@odata.bind\": \"/cmc_todocategories(D185C9BC-F881-E711-8100-5065F38B0191)\"\r\n\t\r\n}\r\n\r\n\r\n"
						},
						"url": {
							"raw": "{{Eresource_URL}}cmc_todos({{gtodoid11}})",
							"host": [
								"{{Eresource_URL}}cmc_todos({{gtodoid11}})"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Successplan Status before deactivating it's Todo",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Getting the Status and Status reason of the Successplan record before deactivating all it's Todos\", function() ",
									"{",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
									"    var jsonData =JSON.parse(responseBody);",
									"    ",
									"            var successplanid= jsonData.cmc_successplanid;",
									"            var successplanname= jsonData.cmc_successplanname;",
									"            console.log('successplanname is:'+successplanname);",
									"            var statecode= jsonData.statecode;",
									"            var statuscode= jsonData.statuscode;",
									"            ",
									"            ",
									"    if((statecode===0) && (statuscode===1))",
									"        {",
									"            console.log(\"Successplan has Status as Active and Status reason as Active respectively\");",
									"        }",
									"        else",
									"        {",
									"            console.log(\"Check the successPlan record statuses again\");    ",
									"     ",
									"        }",
									" ",
									" });",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{gaccess_token}}"
							},
							{
								"key": "Prefer",
								"value": "return=representation"
							}
						],
						"url": {
							"raw": "{{Eresource_URL}}cmc_successplans({{gsuccessplanid3}})",
							"host": [
								"{{Eresource_URL}}cmc_successplans({{gsuccessplanid3}})"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Successplan under Contact2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Create Successplan record directly under Contact2\", function() ",
									"{",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
									"    var jsonData =JSON.parse(responseBody);",
									"    var successplanid=jsonData.cmc_successplanid;",
									"    pm.globals.set('gsuccessplanid6', successplanid);",
									"    var successplanname = jsonData.cmc_successplanname;",
									"    console.log(\"Success Plan record name:\" +successplanname);",
									"    ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Prefer",
								"value": "return=representation"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{gaccess_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"cmc_successplanname\": \"Successplan directly in contact2 {{$randomInt}} API {{$randomInt}}\",\r\n    \"cmc_assignedtoid@odata.bind\": \"/contacts({{gcontactid2}})\",\r\n    \"cmc_portaldescription\": \"Description\"\r\n}"
						},
						"url": {
							"raw": "{{Eresource_URL}}cmc_successplans",
							"host": [
								"{{Eresource_URL}}cmc_successplans"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Todo record1 under Contact2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Create Todo record directly under Contact2\", function() ",
									"{",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
									"    var jsonData =JSON.parse(responseBody);",
									"    var todoid11=jsonData.cmc_todoid;",
									"    pm.globals.set('gtodoid11', todoid11);",
									"    var todoname = jsonData.cmc_todoname;",
									"    console.log(\"Todo record name:\" +todoname);",
									"    ",
									"    var parentsuccessplanid=jsonData._cmc_successplanid_value;",
									"    if(parentsuccessplanid===pm.globals.get('gsuccessplanid4'))",
									"    {",
									"        console.log('Todo record is correctly linked to the Success plan record that is created under Contact1');",
									"    }",
									"    else",
									"    {",
									"        console.log('Todo record is not linked to the correct Successplan record');",
									"    }",
									"    ",
									"});",
									"",
									"var todoname = data.cmc_todoname;",
									"var description =data.cmc_description;",
									"var duedate = data.cmc_enddate;",
									"var ownership =data.cmc_ownershiptype;",
									"var required =data.cmc_requiredoptional;",
									"var todocategory =data.cmc_todocategoryid;",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"  var moment = require('moment');\r",
									"pm.environment.set(\"timestamp\", moment().add(1, 'days').format(\"YYYY-MM-DD\"));\r",
									"\r",
									"pm.environment.set(\"timestampEndDate\", moment().add(10, 'days').format(\"YYYY-MM-DD\"));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Prefer",
								"value": "return=representation"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{gaccess_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"cmc_todoname\": \"Direct todo contact2{{$randomInt}} API {{$randomInt}}\",\r\n    \"cmc_assignedtostudentid@odata.bind\": \"/contacts({{gcontactid2}})\",\r\n    \"cmc_description\": \"Todo description\",\r\n    \"cmc_duedate\": \"{{timestamp}}\",\r\n    \"cmc_ownershiptype\": \"175490000\",\r\n    \"cmc_requiredoptional\": \"175490000\",\r\n    \"cmc_studentcancomplete\": true,\r\n    \"cmc_successplanid@odata.bind\": \"/cmc_successplans({{gsuccessplanid6}})\",\r\n    \"cmc_todocategoryid@odata.bind\": \"/cmc_todocategories(D185C9BC-F881-E711-8100-5065F38B0191)\"\r\n}"
						},
						"url": {
							"raw": "{{Eresource_URL}}cmc_todos",
							"host": [
								"{{Eresource_URL}}cmc_todos"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Deactivate all the active Todo's and check the status of SuccessPlan record",
			"item": [
				{
					"name": "Get To do ID- After AssignmentDate",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Fetching After Assignment date To do ID\", function() ",
									"{",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
									"    var jsonData =JSON.parse(responseBody);",
									"    ",
									"    var result =jsonData.value;",
									"    if(result.length===0)",
									"    {",
									"        console.log('Successplan template  is not assigned to contact1 , hence Todos details cannot be retrieved');",
									"        throw new Error(\"Success Plan Template is not assigned to contact1 and hence no todos are present, Please check!!\");",
									"    }",
									"    else",
									"    {",
									"            var cmc_todoid5= jsonData.value[0].cmc_todoid;",
									"            pm.globals.set('gtodoid5',cmc_todoid5);",
									"            var todoname=jsonData.value[0].cmc_todoname;",
									"            console.log(\"To Do name which is Updated is:\" +todoname);",
									"            var statuscode5= jsonData.value[0].statuscode;",
									"            pm.globals.set('gstatuscode5',statuscode5);",
									"            var statecode5=jsonData.value[0].statecode;",
									"            pm.globals.set('gstatecode5',statecode5);",
									"            var duedate=jsonData.value[0].cmc_duedate;",
									"            console.log(\"Due date is: \" +duedate);",
									"        ",
									"    }",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Prefer",
								"type": "text",
								"value": "return=representation"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{gaccess_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{Eresource_URL}}cmc_todos?$filter=_cmc_successplantodotemplateid_value eq ({{gsuccessplantodotemplateid2}})  ",
							"host": [
								"{{Eresource_URL}}cmc_todos"
							],
							"query": [
								{
									"key": "$filter",
									"value": "_cmc_successplantodotemplateid_value eq ({{gsuccessplantodotemplateid2}})  "
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update To do Status -Canceled-After AssignmentDate",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"After AssignmentDate To do is deactivated and the status is Canceled\", function() ",
									"{",
									"    if((pm.response.code===200) || (pm.response.code===201) || (pm.response.code===202))",
									"    {",
									"        var jsonData=JSON.parse(responseBody);",
									"        var statuscodeNew=jsonData.statuscode;",
									"        var statuscodeOld=pm.globals.get('gstatuscode1');",
									"        var statecodeOld=pm.globals.get('gstatecode1');",
									"        var statecodeNew= jsonData.statecode;",
									"        console.log(\"Old statuscode and Stecode:\" +statuscodeOld +\"and\" +statecodeOld);",
									"        console.log(\"New statuscode and statecode:\" +statuscodeNew +\"and\" +statecodeNew);",
									"",
									"        pm.test(\"Statecode check\", function()",
									"        {",
									"            pm.expect(statecodeNew).to.equal(1);",
									"        });                          ",
									"",
									"        pm.test(\"StatusCode check\", function()",
									"        {",
									"            pm.expect(statuscodeNew).to.equal(175490001);",
									"        });",
									"        ",
									"        var todoname=jsonData.cmc_todoname;",
									"        console.log(\"To Do name which is Updated is:\" +todoname);",
									"     ",
									"    }",
									"    else ",
									"    {",
									"        var jsonData1 =JSON.parse(responseBody);",
									"        var message = jsonData1.error.message;",
									"        console.log(message);",
									"        ",
									"    }",
									" ",
									" });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Prefer",
								"type": "text",
								"value": "return=representation"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{gaccess_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\"statecode\":1,  \n\"statuscode\": \"175490001\"\n\n}\n"
						},
						"url": {
							"raw": "{{Eresource_URL}}cmc_todos({{gtodoid5}})",
							"host": [
								"{{Eresource_URL}}cmc_todos({{gtodoid5}})"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get To do ID- After.StartDateAcademicPeriod",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Fetching After Start date of Academic Period To do ID\", function() ",
									"{",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
									"    var jsonData =JSON.parse(responseBody);",
									"    ",
									"    var result =jsonData.value;",
									"    if(result.length===0)",
									"    {",
									"        console.log('Successplan template  is not assigned to contact1, hence Todos details cannot be retrieved');",
									"        throw new Error(\"Success Plan Template is not assigned to contact1 and hence no todos are present, Please check!!\");",
									"    }",
									"    else",
									"    {",
									"            var cmc_todoid6= jsonData.value[0].cmc_todoid;",
									"            pm.globals.set('gtodoid6',cmc_todoid6);",
									"            var todoname=jsonData.value[0].cmc_todoname;",
									"            console.log(\"To Do name which is Updated is:\" +todoname);",
									"            var statuscode6= jsonData.value[0].statuscode;",
									"            pm.globals.set('gstatuscode6',statuscode6);",
									"            var statecode6=jsonData.value[0].statecode;",
									"            pm.globals.set('gstatecode6',statecode6);",
									"            var duedate=jsonData.value[0].cmc_duedate;",
									"            console.log(\"Due date is: \" +duedate);",
									"        ",
									"        ",
									"    }",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Prefer",
								"type": "text",
								"value": "return=representation"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{gaccess_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{Eresource_URL}}cmc_todos?$filter=_cmc_successplantodotemplateid_value eq ({{gsuccessplantodotemplateid6}})  ",
							"host": [
								"{{Eresource_URL}}cmc_todos"
							],
							"query": [
								{
									"key": "$filter",
									"value": "_cmc_successplantodotemplateid_value eq ({{gsuccessplantodotemplateid6}})  "
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update To do Status -Waived-After StartDateAcademicPeriod",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"After Start date of Academic Period To do is deactivated and the status is Waived\", function() ",
									"{",
									"    if((pm.response.code===200) || (pm.response.code===201) || (pm.response.code===202))",
									"    {",
									"        var jsonData=JSON.parse(responseBody);",
									"        var statuscodeNew=jsonData.statuscode;",
									"        var statuscodeOld=pm.globals.get('gstatuscode3');",
									"        var statecodeOld=pm.globals.get('gstatecode3');",
									"        var statecodeNew= jsonData.statecode;",
									"        console.log(\"Old statuscode and Stecode:\" +statuscodeOld +\"and\" +statecodeOld);",
									"        console.log(\"New statuscode and statecode:\" +statuscodeNew +\"and\" +statecodeNew);",
									"",
									"        pm.test(\"Statecode check\", function()",
									"        {",
									"            pm.expect(statecodeNew).to.equal(1);",
									"        });                          ",
									"",
									"        pm.test(\"StatusCode check\", function()",
									"        {",
									"            pm.expect(statuscodeNew).to.equal(175490002);",
									"        });",
									"        ",
									"        var todoname=jsonData.cmc_todoname;",
									"        console.log(\"To Do name which is Updated is:\" +todoname);",
									"    }",
									"    else ",
									"    {",
									"        var jsonData1 =JSON.parse(responseBody);",
									"        var message = jsonData1.error.message;",
									"        console.log(message);",
									"        ",
									"    }",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Prefer",
								"type": "text",
								"value": "return=representation"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{gaccess_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\"statecode\":1, \n\"statuscode\":\"175490002\"\n\n}"
						},
						"url": {
							"raw": "{{Eresource_URL}}cmc_todos({{gtodoid6}})",
							"host": [
								"{{Eresource_URL}}cmc_todos({{gtodoid6}})"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get To do ID- Before StartDateAcademicPeriod",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Fetching Before End date of Academic Period To do ID\", function() ",
									"{",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
									"    var jsonData =JSON.parse(responseBody);",
									"    ",
									"    var result =jsonData.value;",
									"    if(result.length===0)",
									"    {",
									"        console.log('Successplan template  is not assigned to contact1 , hence Todos details cannot be retrieved');",
									"        throw new Error(\"Success Plan Template is not assigned to contact1 and hence no todos are present, Please check!!\");",
									"    }",
									"    else",
									"    {",
									"            var cmc_todoid7= jsonData.value[0].cmc_todoid;",
									"            pm.globals.set('gtodoid7',cmc_todoid7);",
									"            var todoname=jsonData.value[0].cmc_todoname;",
									"            console.log(\"To Do name which is fetched:\" +todoname);",
									"            var statuscode7= jsonData.value[0].statuscode;",
									"            pm.globals.set('gstatuscode7',statuscode7);",
									"            var statecode7=jsonData.value[0].statecode;",
									"            pm.globals.set('gstatecode7',statecode7);",
									"            var duedate=jsonData.value[0].cmc_duedate;",
									"            console.log(\"Due date is: \" +duedate);",
									"        ",
									"    }",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Prefer",
								"type": "text",
								"value": "return=representation"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{gaccess_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{Eresource_URL}}cmc_todos?$filter=_cmc_successplantodotemplateid_value eq ({{gsuccessplantodotemplateid5}})  ",
							"host": [
								"{{Eresource_URL}}cmc_todos"
							],
							"query": [
								{
									"key": "$filter",
									"value": "_cmc_successplantodotemplateid_value eq ({{gsuccessplantodotemplateid5}})  "
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update To do Status -Complete-Before StartDateAcademicPeriod",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Before Start date of Academic period To do is deactivated and the status is Complete\", function() ",
									"{",
									"    if((pm.response.code===200) || (pm.response.code===201) || (pm.response.code===202))",
									"    {",
									"        var jsonData=JSON.parse(responseBody);",
									"        var statuscodeNew=jsonData.statuscode;",
									"        var statuscodeOld=pm.globals.get('gstatuscode2');",
									"        var statecodeOld=pm.globals.get('gstatecode2');",
									"        var statecodeNew= jsonData.statecode;",
									"        console.log(\"Old statuscode and Stecode:\" +statuscodeOld +\"and\" +statecodeOld);",
									"        console.log(\"New statuscode and statecode:\" +statuscodeNew +\"and\" +statecodeNew);",
									"        pm.test(\"Statecode check\", function()",
									"        {",
									"            pm.expect(statecodeNew).to.equal(1);",
									"        });                          ",
									"",
									"        pm.test(\"StatusCode check\", function()",
									"        {",
									"            pm.expect(statuscodeNew).to.equal(2);",
									"        });",
									"        ",
									"        var todoname=jsonData.cmc_todoname;",
									"        console.log(\"To Do name which is Updated is:\" +todoname);",
									"    }",
									"     else ",
									"    {",
									"        var jsonData1 =JSON.parse(responseBody);",
									"        var message = jsonData1.error.message;",
									"        console.log(message);",
									"        ",
									"    }",
									"});",
									"",
									"var statecode = data.statecode;",
									"",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Prefer",
								"type": "text",
								"value": "return=representation"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{gaccess_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\"statecode\":1,\n\"statuscode\": 2\n\n}"
						},
						"url": {
							"raw": "{{Eresource_URL}}cmc_todos({{gtodoid7}})",
							"host": [
								"{{Eresource_URL}}cmc_todos({{gtodoid7}})"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get To do ID- After EndDateAcademicPeriod",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Fetching Before End date of Academic Period To do ID\", function() ",
									"{",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
									"    var jsonData =JSON.parse(responseBody);",
									"    ",
									"    var result =jsonData.value;",
									"    if(result.length===0)",
									"    {",
									"        console.log('Successplan template  is not assigned to contact1 , hence Todos details cannot be retrieved');",
									"        throw new Error(\"Success Plan Template is not assigned to contact1 and hence no todos are present, Please check!!\");",
									"    }",
									"    else",
									"    {",
									"            var cmc_todoid8= jsonData.value[0].cmc_todoid;",
									"            pm.globals.set('gtodoid8',cmc_todoid8);",
									"            var todoname=jsonData.value[0].cmc_todoname;",
									"            console.log(\"To Do name which is fetched:\" +todoname);",
									"            var statuscode8= jsonData.value[0].statuscode;",
									"            pm.globals.set('gstatuscode8',statuscode8);",
									"            var statecode8=jsonData.value[0].statecode;",
									"            pm.globals.set('gstatecode8',statecode8);",
									"            var duedate=jsonData.value[0].cmc_duedate;",
									"            console.log(\"Due date is: \" +duedate);",
									"        ",
									"    }",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Prefer",
								"type": "text",
								"value": "return=representation"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{gaccess_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{Eresource_URL}}cmc_todos?$filter=_cmc_successplantodotemplateid_value eq ({{gsuccessplantodotemplateid4}})  ",
							"host": [
								"{{Eresource_URL}}cmc_todos"
							],
							"query": [
								{
									"key": "$filter",
									"value": "_cmc_successplantodotemplateid_value eq ({{gsuccessplantodotemplateid4}})  "
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update To do Status -Cancelled-After EndDateAcademicPeriod",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"After End Date of Academic period To do is deactivated and the status is Canceled\", function() ",
									"{",
									"    if((pm.response.code===200) || (pm.response.code===201) || (pm.response.code===202))",
									"    {",
									"        var jsonData=JSON.parse(responseBody);",
									"        var statuscodeNew=jsonData.statuscode;",
									"        var statuscodeOld=pm.globals.get('gstatuscode1');",
									"        var statecodeOld=pm.globals.get('gstatecode1');",
									"        var statecodeNew= jsonData.statecode;",
									"        console.log(\"Old statuscode and Stecode:\" +statuscodeOld +\"and\" +statecodeOld);",
									"        console.log(\"New statuscode and statecode:\" +statuscodeNew +\"and\" +statecodeNew);",
									"",
									"        pm.test(\"Statecode check\", function()",
									"        {",
									"            pm.expect(statecodeNew).to.equal(1);",
									"        });                          ",
									"",
									"        pm.test(\"StatusCode check\", function()",
									"        {",
									"            pm.expect(statuscodeNew).to.equal(175490001);",
									"        });",
									"        ",
									"        var todoname=jsonData.cmc_todoname;",
									"        console.log(\"To Do name which is Updated is:\" +todoname);",
									"     ",
									"    }",
									"    else ",
									"    {",
									"        var jsonData1 =JSON.parse(responseBody);",
									"        var message = jsonData1.error.message;",
									"        console.log(message);",
									"        ",
									"    }",
									" ",
									" });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Prefer",
								"type": "text",
								"value": "return=representation"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{gaccess_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\"statecode\":1,  \n\"statuscode\": \"175490001\"\n\n}\n"
						},
						"url": {
							"raw": "{{Eresource_URL}}cmc_todos({{gtodoid8}})",
							"host": [
								"{{Eresource_URL}}cmc_todos({{gtodoid8}})"
							]
						}
					},
					"response": []
				},
				{
					"name": "Todo record1 that is created directly under Contact1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Create Todo record directly under Contact1\", function() ",
									"{",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
									"    var jsonData =JSON.parse(responseBody);",
									"    var todoid14=jsonData.cmc_todoid;",
									"    pm.globals.set('gtodoid14', todoid14);",
									"    var todoname = jsonData.cmc_todoname;",
									"    console.log(\"Todo record name:\" +todoname);",
									"    pm.globals.set('gtodoname14',todoname);",
									"    ",
									"    var parentsuccessplanid=jsonData._cmc_successplanid_value;",
									"    if(parentsuccessplanid===pm.globals.get('gsuccessplanid3'))",
									"    {",
									"        console.log('Todo record is correctly linked to the Success plan record that is created under Contact1');",
									"    }",
									"    else",
									"    {",
									"        console.log('Todo record is not linked to the correct Successplan record');",
									"    }",
									"    ",
									"});",
									"",
									"var todoname = data.cmc_todoname;",
									"var description =data.cmc_description;",
									"var duedate = data.cmc_enddate;",
									"var ownership =data.cmc_ownershiptype;",
									"var required =data.cmc_requiredoptional;",
									"var todocategory =data.cmc_todocategoryid;",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Prefer",
								"value": "return=representation"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{gaccess_token}}"
							}
						],
						"url": {
							"raw": "{{Eresource_URL}}cmc_todos({{gtodoid13}})",
							"host": [
								"{{Eresource_URL}}cmc_todos({{gtodoid13}})"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Todo record1 under Contact1 with Cancelled",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"To do that is directly created under Contact1 is deactivated and the status is Canceled\", function() ",
									"{",
									"    if((pm.response.code===200) || (pm.response.code===201) || (pm.response.code===202))",
									"    {",
									"        var jsonData=JSON.parse(responseBody);",
									"        var statuscodeNew=jsonData.statuscode;",
									"        var statuscodeOld=pm.globals.get('gstatuscode1');",
									"        var statecodeOld=pm.globals.get('gstatecode1');",
									"        var statecodeNew= jsonData.statecode;",
									"        console.log(\"Old statuscode and Stecode:\" +statuscodeOld +\"and\" +statecodeOld);",
									"        console.log(\"New statuscode and statecode:\" +statuscodeNew +\"and\" +statecodeNew);",
									"",
									"        pm.test(\"Statecode check\", function()",
									"        {",
									"            pm.expect(statecodeNew).to.equal(1);",
									"        });                          ",
									"",
									"        pm.test(\"StatusCode check\", function()",
									"        {",
									"            pm.expect(statuscodeNew).to.equal(175490001);",
									"        });",
									"        ",
									"        var todoname=jsonData.cmc_todoname;",
									"        console.log(\"To Do name which is Updated is:\" +todoname);",
									"     ",
									"    }",
									"    else ",
									"    {",
									"        var jsonData1 =JSON.parse(responseBody);",
									"        var message = jsonData1.error.message;",
									"        console.log(message);",
									"        ",
									"    }",
									" ",
									" });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Prefer",
								"value": "return=representation"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{gaccess_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\"statecode\":1,  \r\n\"statuscode\": \"175490001\"\r\n\r\n}\r\n\r\n\r\n"
						},
						"url": {
							"raw": "{{Eresource_URL}}cmc_todos({{gtodoid14}})",
							"host": [
								"{{Eresource_URL}}cmc_todos({{gtodoid14}})"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Check the Status of SuccessPlan records after all it's Todo's are deactivated",
			"item": [
				{
					"name": "Check Status of Successplan record that is assigned to Contact1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Getting the Status and Status reason of the Successplan record before deactivating all it's Todos\", function() ",
									"{",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
									"    var jsonData =JSON.parse(responseBody);",
									"    ",
									"            var successplanid= jsonData.cmc_successplanid;",
									"            var successplanname= jsonData.cmc_successplanname;",
									"            console.log('successplanname is:'+successplanname);",
									"            var statecode= jsonData.statecode;",
									"            var statuscode= jsonData.statuscode;",
									"",
									"        pm.test(\"Statecode check\", function()",
									"        {",
									"            pm.expect(statecode).to.equal(1);",
									"        });                          ",
									"",
									"        pm.test(\"StatusCode check\", function()",
									"        {",
									"            pm.expect(statuscode).to.equal(175490001);",
									"        });",
									"  ",
									" });",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{gaccess_token}}"
							},
							{
								"key": "Prefer",
								"value": "return=representation"
							}
						],
						"url": {
							"raw": "{{Eresource_URL}}cmc_successplans({{gsuccessplanid}})",
							"host": [
								"{{Eresource_URL}}cmc_successplans({{gsuccessplanid}})"
							]
						}
					},
					"response": []
				},
				{
					"name": "Check Status of Successplan record that is created directly under Contact1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Getting the Status and Status reason of the Successplan record before deactivating all it's Todos\", function() ",
									"{",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
									"    var jsonData =JSON.parse(responseBody);",
									"    ",
									"            var successplanid= jsonData.cmc_successplanid;",
									"            var successplanname= jsonData.cmc_successplanname;",
									"            console.log('successplanname is:'+successplanname);",
									"            var statecode= jsonData.statecode;",
									"            var statuscode= jsonData.statuscode;",
									"            ",
									"        pm.test(\"Statecode check\", function()",
									"        {",
									"            pm.expect(statecode).to.equal(1);",
									"        });                          ",
									"",
									"        pm.test(\"StatusCode check\", function()",
									"        {",
									"            pm.expect(statuscode).to.equal(175490000);",
									"        });",
									"   ",
									" ",
									" });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{gaccess_token}}"
							},
							{
								"key": "Prefer",
								"value": "return=representation"
							}
						],
						"url": {
							"raw": "{{Eresource_URL}}cmc_successplans({{gsuccessplanid5}})",
							"host": [
								"{{Eresource_URL}}cmc_successplans({{gsuccessplanid5}})"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Activate back the deactivated ToDos and check the SuccessPlan status",
			"item": [
				{
					"name": "Get Deactivated To do ID -Static Date",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Fetching Deactivated Static date To do ID\", function() ",
									"{",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
									"    var jsonData =JSON.parse(responseBody);",
									"    ",
									"    var statecode= jsonData.statecode;",
									"    pm.globals.set('gstatecode8',statecode);",
									"    var statuscode=jsonData.statuscode;",
									"    pm.globals.set('gstatuscode8',statuscode);",
									"    var todoname=jsonData.cmc_todoname;",
									"    console.log(\"To Do name which is deactivated is:\" +todoname);",
									"    console.log(\"To Do statecode is:\" +statecode);",
									"    console.log(\"To Do statuscode is:\" +statuscode);",
									"   ",
									" });"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Prefer",
								"type": "text",
								"value": "return=representation"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{gaccess_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{Eresource_URL}}cmc_todos({{gtodoid1}})",
							"host": [
								"{{Eresource_URL}}cmc_todos({{gtodoid1}})"
							]
						}
					},
					"response": []
				},
				{
					"name": "Activate back the deactivated Todo Static Date to 'Incomplete'",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Activate back the deactivated Todo Static Date record with 'Incomplete' status\", function() ",
									"{",
									"    if((pm.response.code===200) || (pm.response.code===201) || (pm.response.code===202))",
									"    {",
									"        var jsonData=JSON.parse(responseBody);",
									"        var statuscodeNew=jsonData.statuscode;",
									"        var statecodeNew=jsonData.statecode;",
									"        var statuscodeOld=pm.globals.get('gstatuscode8');",
									"        var statecodeOld=pm.globals.get('gstatecode8');",
									"        console.log(\"Old statuscode and Stecode:\" +statuscodeOld +\"and\" +statecodeOld);",
									"        console.log(\"New statuscode and statecode:\" +statuscodeNew +\"and\" +statecodeNew);",
									"",
									"        pm.test(\"Statecode check\", function()",
									"        {",
									"            pm.expect(statecodeNew).to.equal(0);",
									"        });                          ",
									"",
									"        pm.test(\"StatusCode check\", function()",
									"        {",
									"            pm.expect(statuscodeNew).to.equal(1);",
									"        });",
									"       ",
									"        var todoname=jsonData.cmc_todoname;",
									"        console.log(\"To Do name which is Updated is:\" +todoname);",
									"     ",
									"    }",
									"    else ",
									"    {",
									"        var jsonData1 =JSON.parse(responseBody);",
									"        var message = jsonData1.error.message;",
									"        console.log(message);",
									"        ",
									"    }",
									" ",
									" });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Prefer",
								"type": "text",
								"value": "return=representation"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{gaccess_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\"statecode\":0,  \n\"statuscode\": 1\n\n}\n"
						},
						"url": {
							"raw": "{{Eresource_URL}}cmc_todos({{gtodoid1}})",
							"host": [
								"{{Eresource_URL}}cmc_todos({{gtodoid1}})"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Deactivated To do ID- Before EndDateAcademicPeriod",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Fetching deactivated Before End date of Academic Period To do ID\", function() ",
									"{",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
									"    var jsonData =JSON.parse(responseBody);",
									"    ",
									"    var statecode= jsonData.statecode;",
									"    pm.globals.set('gstatecode9',statecode);",
									"    var statuscode=jsonData.statuscode;",
									"    pm.globals.set('gstatuscode9',statuscode);",
									"    var todoname=jsonData.cmc_todoname;",
									"    console.log(\"To Do name which is deactivated is:\" +todoname);",
									"    console.log(\"To Do statecode is:\" +statecode);",
									"    console.log(\"To Do statuscode is:\" +statuscode);",
									"        ",
									"    ",
									"   ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Prefer",
								"type": "text",
								"value": "return=representation"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{gaccess_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{Eresource_URL}}cmc_todos({{gtodoid3}})",
							"host": [
								"{{Eresource_URL}}cmc_todos({{gtodoid3}})"
							]
						}
					},
					"response": []
				},
				{
					"name": "Activate back the deactivated To do Before EndDateAcademicPeriod to 'Marked as complete'",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Activate back the deactivated To do Before EndDateAcademicPeriod to 'Marked as complete'\", function() ",
									"{",
									"    if((pm.response.code===200) || (pm.response.code===201) || (pm.response.code===202))",
									"    {",
									"        var jsonData =JSON.parse(responseBody);",
									"        var statuscodeNew=jsonData.statuscode;",
									"        var statecodeNew=jsonData.statecode;",
									"        var statuscodeOld=pm.globals.get('gstatuscode9');",
									"        var statecodeOld=pm.globals.get('gstatecode9');",
									"        console.log(\"Old statuscode and Stecode:\" +statuscodeOld +\"and\" +statecodeOld);",
									"        console.log(\"New statuscode and statecode:\" +statuscodeNew +\"and\" +statecodeNew);",
									"",
									"        pm.test(\"Statecode check\", function()",
									"        {",
									"            pm.expect(statecodeNew).to.equal(0);",
									"        });                          ",
									"",
									"        pm.test(\"StatusCode check\", function()",
									"        {",
									"            pm.expect(statuscodeNew).to.equal(175490000);",
									"        });",
									"",
									"    }",
									"    else ",
									"    {",
									"        var jsonData1 =JSON.parse(responseBody);",
									"        var message = jsonData1.error.message;",
									"        console.log(message);",
									"        ",
									"    }",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Prefer",
								"type": "text",
								"value": "return=representation"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{gaccess_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"statecode\": 0,\n    \"statuscode\": \"175490000\"\n}"
						},
						"url": {
							"raw": "{{Eresource_URL}}cmc_todos({{gtodoid3}})",
							"host": [
								"{{Eresource_URL}}cmc_todos({{gtodoid3}})"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Todo record1 that is created directly under Contact1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Create Todo record directly under Contact1\", function() ",
									"{",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
									"    var jsonData =JSON.parse(responseBody);",
									"    var todoid14=jsonData.cmc_todoid;",
									"    pm.globals.set('gtodoid14', todoid14);",
									"    var todoname = jsonData.cmc_todoname;",
									"    console.log(\"Todo record name:\" +todoname);",
									"    pm.globals.set('gtodoname14',todoname);",
									"    ",
									"    var parentsuccessplanid=jsonData._cmc_successplanid_value;",
									"       ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Prefer",
								"value": "return=representation"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{gaccess_token}}"
							}
						],
						"url": {
							"raw": "{{Eresource_URL}}cmc_todos({{gtodoid13}})",
							"host": [
								"{{Eresource_URL}}cmc_todos({{gtodoid13}})"
							]
						}
					},
					"response": []
				},
				{
					"name": "Activate back the deactivated Todo record1 that was created directly under Contact1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Activate back the deactivated Todo record that was directly created under Contact1 with 'Incomplete' status\", function() ",
									"{",
									"    if((pm.response.code===200) || (pm.response.code===201) || (pm.response.code===202))",
									"    {",
									"        var jsonData=JSON.parse(responseBody);",
									"        var statuscodeNew=jsonData.statuscode;",
									"        var statecodeNew=jsonData.statecode;",
									"        var statuscodeOld=pm.globals.get('gstatuscode8');",
									"        var statecodeOld=pm.globals.get('gstatecode8');",
									"        console.log(\"Old statuscode and Stecode:\" +statuscodeOld +\"and\" +statecodeOld);",
									"        console.log(\"New statuscode and statecode:\" +statuscodeNew +\"and\" +statecodeNew);",
									"",
									"         pm.test(\"Statecode check\", function()",
									"        {",
									"            pm.expect(statecodeNew).to.equal(0);",
									"        });                          ",
									"",
									"        pm.test(\"StatusCode check\", function()",
									"        {",
									"            pm.expect(statuscodeNew).to.equal(1);",
									"        });",
									"",
									"        var todoname=jsonData.cmc_todoname;",
									"        console.log(\"To Do name which is Updated is:\" +todoname);",
									"     ",
									"    }",
									"    else ",
									"    {",
									"        var jsonData1 =JSON.parse(responseBody);",
									"        var message = jsonData1.error.message;",
									"        console.log(message);",
									"        ",
									"    }",
									" ",
									" });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Prefer",
								"value": "return=representation"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{gaccess_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"statecode\": 0,\r\n    \"statuscode\": 1\r\n}"
						},
						"url": {
							"raw": "{{Eresource_URL}}cmc_todos({{gtodoid14}})",
							"host": [
								"{{Eresource_URL}}cmc_todos({{gtodoid14}})"
							]
						}
					},
					"response": []
				},
				{
					"name": "Check Status of Successplan record that is assigned to Contact1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Getting the Status and Status reason of the Successplan record before deactivating all it's Todos\", function() ",
									"{",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
									"    var jsonData =JSON.parse(responseBody);",
									"    ",
									"            var successplanid= jsonData.cmc_successplanid;",
									"            var successplanname= jsonData.cmc_successplanname;",
									"            console.log('successplanname is:'+successplanname);",
									"            var statecode= jsonData.statecode;",
									"            var statuscode= jsonData.statuscode;",
									"",
									"        pm.test(\"Statecode check\", function()",
									"        {",
									"            pm.expect(statecode).to.equal(0);",
									"        });                          ",
									"",
									"        pm.test(\"StatusCode check\", function()",
									"        {",
									"            pm.expect(statuscode).to.equal(1);",
									"        });",
									" });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{gaccess_token}}"
							},
							{
								"key": "Prefer",
								"value": "return=representation"
							}
						],
						"url": {
							"raw": "{{Eresource_URL}}cmc_successplans({{gsuccessplanid}})",
							"host": [
								"{{Eresource_URL}}cmc_successplans({{gsuccessplanid}})"
							]
						}
					},
					"response": []
				},
				{
					"name": "Check Status of Successplan record that is created directly under Contact1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Getting the Status and Status reason of the Successplan record before deactivating all it's Todos\", function() ",
									"{",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
									"    var jsonData =JSON.parse(responseBody);",
									"    ",
									"            var successplanid= jsonData.cmc_successplanid;",
									"            var successplanname= jsonData.cmc_successplanname;",
									"            console.log('successplanname is:'+successplanname);",
									"            var statecode= jsonData.statecode;",
									"            var statuscode= jsonData.statuscode;",
									"    ",
									"        pm.test(\"Statecode check\", function()",
									"        {",
									"            pm.expect(statecode).to.equal(0);",
									"        });                          ",
									"",
									"        pm.test(\"StatusCode check\", function()",
									"        {",
									"            pm.expect(statuscode).to.equal(1);",
									"        });",
									"    ",
									" });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{gaccess_token}}"
							},
							{
								"key": "Prefer",
								"value": "return=representation"
							}
						],
						"url": {
							"raw": "{{Eresource_URL}}cmc_successplans({{gsuccessplanid5}})",
							"host": [
								"{{Eresource_URL}}cmc_successplans({{gsuccessplanid5}})"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Deactivate SuccessPlan with 'Canceled' status and Check child Todos",
			"item": [
				{
					"name": "Get active Todo's linked to Successplan under Contact1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var successplanid1,todoid,todoid1;",
									"pm.test(\"Validate Todo's linked under contact1\", function() ",
									"{",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
									"    var jsonData =JSON.parse(responseBody);",
									"    var successplanid1=pm.globals.get('gsuccessplanid');",
									"    var result =jsonData.cmc_contact_todo_assignedtostudentid;",
									"    ",
									"    ",
									"    if (result.length===0)",
									"    {",
									"        throw new Error(\"Success Plan Template is not assigned to contact1 and hence no todos are present, Please check!!\");",
									"    }",
									"    ",
									"    else",
									"     {",
									"            todoid= result[0].cmc_todoid;",
									"            var todoname= result[0].cmc_todoname;",
									"            console.log('todoname is:'+todoname);",
									"            ",
									"",
									"           todoid1= result[1].cmc_todoid;",
									"           var todoname1= result[1].cmc_todoname;",
									"           console.log('todoname1 is:'+todoname1);",
									"  ",
									"    } ",
									"});",
									"pm.globals.set('gtodoidaa',todoid);",
									"pm.globals.set('gtodoidab',todoid1);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{gaccess_token}}"
							},
							{
								"key": "Prefer",
								"value": "return=representation"
							}
						],
						"url": {
							"raw": "{{Eresource_URL}}contacts({{gcontactid1}})?$expand=cmc_contact_todo_assignedtostudentid",
							"host": [
								"{{Eresource_URL}}contacts({{gcontactid1}})"
							],
							"query": [
								{
									"key": "$expand",
									"value": "cmc_contact_todo_assignedtostudentid"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Deactivate SuccessPlan with 'Canceled' status",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successplan is deactivated with status as Canceled\", function() ",
									"{",
									"    if((pm.response.code===200) || (pm.response.code===201) || (pm.response.code===202))",
									"    {",
									"        var jsonData=JSON.parse(responseBody);",
									"        var statuscodeNew=jsonData.statuscode;",
									"        var statecodeNew= jsonData.statecode;",
									"        console.log(\"New statuscode and statecode:\" +statuscodeNew +\"and\" +statecodeNew);",
									"",
									"        /*",
									"        pm.test(\"Statecode check as Inactive\", function()",
									"        {",
									"            pm.expect(statecodeNew).to.equal(1);",
									"        });                          ",
									"",
									"        pm.test(\"StatusCode check as Canceled\", function()",
									"        {",
									"            pm.expect(statuscodeNew).to.equal(175490001);",
									"        });",
									"        */",
									"    }",
									"    else ",
									"    {",
									"        var jsonData1 =JSON.parse(responseBody);",
									"        var message = jsonData1.error.message;",
									"        console.log(message);",
									"        ",
									"    }",
									" ",
									" });",
									" setTimeout(function(){}, 13000);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Prefer",
								"type": "text",
								"value": "return=representation"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{gaccess_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"statecode\": 1,\n    \"statuscode\": \"175490000\"\n\n}\n"
						},
						"url": {
							"raw": "{{Eresource_URL}}cmc_successplans({{gsuccessplanid}})",
							"host": [
								"{{Eresource_URL}}cmc_successplans({{gsuccessplanid}})"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify status of 1st todo",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Fetching 1st To do\", function() ",
									"{",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
									"    var jsonData =JSON.parse(responseBody);",
									"   ",
									"            var cmc_todoid1= jsonData.cmc_todoid;",
									"            pm.globals.set('gtodoid1',cmc_todoid1);",
									"            var statuscode1=jsonData.statuscode;",
									"            pm.globals.set('gstatuscode1',statuscode1);",
									"            var statecode1=jsonData.statecode;",
									"            pm.globals.set('gstatecode1',statecode1);",
									"            var todoname1=jsonData.cmc_todoname;",
									"            console.log(\"To Do name which is fetched:\" +todoname1);",
									"",
									"        pm.test(\"Statecode check as Inactive\", function()",
									"        {",
									"            pm.expect(statecode1).to.equal(1);",
									"        });                          ",
									"",
									"        pm.test(\"StatusCode check as Canceled\", function()",
									"        {",
									"            pm.expect(statuscode1).to.equal(175490001);",
									"        });",
									"       ",
									"     ",
									"});",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Prefer",
								"type": "text",
								"value": "return=representation"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{gaccess_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{Eresource_URL}}cmc_todos({{gtodoidaa}})",
							"host": [
								"{{Eresource_URL}}cmc_todos({{gtodoidaa}})"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify status of 2nd todo",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Fetching 2nd To do \", function() ",
									"{",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
									"    var jsonData =JSON.parse(responseBody);",
									"   ",
									"            var cmc_todoid1= jsonData.cmc_todoid;",
									"            pm.globals.set('gtodoid1',cmc_todoid1);",
									"            var statuscode1=jsonData.statuscode;",
									"            pm.globals.set('gstatuscode1',statuscode1);",
									"            var statecode1=jsonData.statecode;",
									"            pm.globals.set('gstatecode1',statecode1);",
									"            var todoname1=jsonData.cmc_todoname;",
									"            console.log(\"To Do name which is fetched:\" +todoname1);",
									"",
									"        pm.test(\"Statecode check as Inactive\", function()",
									"        {",
									"            pm.expect(statecode1).to.equal(1);",
									"        });                          ",
									"",
									"        pm.test(\"StatusCode check as Canceled\", function()",
									"        {",
									"            pm.expect(statuscode1).to.equal(2);",
									"        });",
									"       ",
									"     ",
									"});",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Prefer",
								"type": "text",
								"value": "return=representation"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{gaccess_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{Eresource_URL}}cmc_todos({{gtodoidab}})",
							"host": [
								"{{Eresource_URL}}cmc_todos({{gtodoidab}})"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}