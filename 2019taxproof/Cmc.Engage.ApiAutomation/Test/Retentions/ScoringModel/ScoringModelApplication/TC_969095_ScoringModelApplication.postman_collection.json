{
	"info": {
		"_postman_id": "b68a1f35-bb5a-4e3c-8254-933f8bafb4f7",
		"name": "TC_969095_ScoringModelApplication",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "DCRM Admin",
			"item": [
				{
					"name": "GetToken_DCRM Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody);",
									"postman.setGlobalVariable('gaccess_token', data.access_token);",
									"",
									"console.log(pm.globals.get(\"gaccess_token\"));",
									"",
									"",
									"",
									"//Genarate global session value",
									"",
									"var number = Math.floor(Math.random() * 1000);",
									"pm.globals.set('globalsessionvalue',number)",
									"",
									"console.log(pm.globals.get(\"globalsessionvalue\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "grant_type",
									"value": "client_credentials",
									"type": "text"
								},
								{
									"key": "client_id",
									"value": "{{Eadmin_id}}",
									"type": "text"
								},
								{
									"key": "client_secret",
									"value": "{{Eadmin_secret}}",
									"type": "text"
								},
								{
									"key": "resource",
									"value": "{{Eresource}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "https://login.microsoftonline.com/{{Eredirectid}}/oauth2/token",
							"protocol": "https",
							"host": [
								"login",
								"microsoftonline",
								"com"
							],
							"path": [
								"{{Eredirectid}}",
								"oauth2",
								"token"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Pre-requisite creation",
			"item": [
				{
					"name": "Academic Period and Contact",
					"item": [
						{
							"name": "Create AcademicPeriod",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var academicperiodid,academicPeriodname;",
											"",
											"pm.test(\"Academicperiodid Created\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202,204]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    academicperiodid = jsonData.mshied_academicperiodid;",
											"    academicPeriodname=jsonData.mshied_name;",
											"",
											"    console.log(\"Academic Period Name: \"+academicPeriodname);",
											" ",
											"});",
											"",
											"pm.globals.set('gacademicperiodid',academicperiodid);",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"  var moment = require('moment');\r",
											"pm.environment.set(\"timestamp\", moment().add(1, 'days').format(\"YYYY-MM-DD\"));\r",
											"\r",
											"pm.environment.set(\"timestampEndDate\", moment().add(100, 'days').format(\"YYYY-MM-DD\"));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"type": "text",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"mshied_code\": \"{{$randomInt}}1A0-11JJ2k-{{$randomInt}}\",\n    \"mshied_enddate\": \"{{timestampEndDate}}\",\n    \"mshied_name\": \"API-ScoringModel-{{$randomInt}}{{$randomInt}}\",\n    \"mshied_startdate\": \"{{timestamp}}\"\n \n}\n"
								},
								"url": {
									"raw": "{{Eresource}}api/data/{{Eversion}}/mshied_academicperiods",
									"host": [
										"{{Eresource}}api"
									],
									"path": [
										"data",
										"{{Eversion}}",
										"mshied_academicperiods"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Area Of Interest",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var mshied_areaofinterestid;",
											"var Name;",
											"pm.test(\"Contact Created\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    mshied_areaofinterestid = jsonData.mshied_areaofinterestid;",
											"    ",
											"});",
											" ",
											"  ",
											"pm.globals.set('gareaofinterestid',mshied_areaofinterestid);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									},
									{
										"key": "OData-Version",
										"value": "4.0"
									},
									{
										"key": "OData-MaxVersion",
										"value": "4.0"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"mshied_code\": \"{{$randomInt}}API1{{$randomInt}}{{$randomInt}}\",\r\n\"mshied_name\": \"Mathematics-{{globalsessionvalue}} {{$randomInt}}\"\r\n\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}mshied_areaofinterests",
									"host": [
										"{{Eresource_URL}}mshied_areaofinterests"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get SAT Test Type",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var satid;",
											"var Testtypename;",
											"pm.test(\"get SAT id\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202,204]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    satid = jsonData.value[0].mshied_testtypeid;",
											"    Testtypename = jsonData.value[0].mshied_name;",
											"  ",
											"    console.log('TesttypeID:'+satid);",
											"    console.log('Testtype:'+Testtypename);",
											"});",
											"pm.globals.set('gsatid',satid);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"url": {
									"raw": "{{Eresource_URL}}mshied_testtypes?$select=mshied_testtypeid,mshied_name &$filter=mshied_name eq 'SAT'",
									"host": [
										"{{Eresource_URL}}mshied_testtypes"
									],
									"query": [
										{
											"key": "$select",
											"value": "mshied_testtypeid,mshied_name "
										},
										{
											"key": "$filter",
											"value": "mshied_name eq 'SAT'"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Contact 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var contactid;",
											"pm.test(\"Contact Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    contactid = jsonData.contactid;",
											"    var contactName = jsonData.fullname;",
											"    console.log(\"Contact name is: \" + contactName);",
											"",
											"",
											"",
											"    ",
											"});",
											"pm.globals.set('gcontactidStudent1', contactid);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									},
									{
										"key": "OData-Version",
										"value": "4.0"
									},
									{
										"key": "OData-MaxVersion",
										"value": "4.0"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"firstname\": \"Scoring {{$randomInt}}\",\r\n    \"lastname\": \"Application {{$randomInt}}{{$randomInt}}\",\r\n    \"middlename\": \"API\",\r\n    \"mshied_contacttype\": \"494280002\",\r\n    \"mshied_CurrentAcademicPeriodId@odata.bind\": \"/mshied_academicperiods({{gacademicperiodid}})\",\r\n    \"cmc_recentsat\": 25\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}contacts",
									"host": [
										"{{Eresource_URL}}contacts"
									]
								}
							},
							"response": []
						},
						{
							"name": "Associate Area of Intrest with Contact 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test(\"Contact associated with Area of Intrest\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
											"    var jsonData =JSON.parse(responseBody);",
											"   ",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									},
									{
										"key": "OData-Version",
										"value": "4.0"
									},
									{
										"key": "OData-MaxVersion",
										"value": "4.0"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \r\n   \"@odata.id\":\"{{Eresource_URL}}mshied_areaofinterests({{gareaofinterestid}})\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}contacts({{gcontactidStudent1}})/mshied_contact_areaofinterest/$ref",
									"host": [
										"{{Eresource_URL}}contacts({{gcontactidStudent1}})"
									],
									"path": [
										"mshied_contact_areaofinterest",
										"$ref"
									]
								},
								"description": "This Contacttype should be Student and Area of Interest should assosiated with contact1"
							},
							"response": []
						},
						{
							"name": "Create SAT TestScore in Contact 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var SATtestscoreid;",
											"var Autoname;",
											"",
											"pm.test(\"SAT TestScore Created\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202,204]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    SATtestscoreid = jsonData.mshied_testscoreid;",
											"    console.log('SAT test score id: '+SATtestscoreid);",
											"    Autoname= jsonData.mshied_name;",
											"    console.log('Workflow autoname: '+Autoname);",
											"    ",
											" ",
											"});",
											"",
											"pm.globals.set('gSATtestscore',SATtestscoreid);",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var current_timestamp = new Date();",
											"postman.setEnvironmentVariable(\"current_timestamp\", current_timestamp.toISOString());"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"mshied_StudentID@odata.bind\":\"/contacts({{gcontactidStudent1}})\",\n    \"mshied_TestTypeId@odata.bind\": \"/mshied_testtypes({{gsatid}})\",\n    \"mshied_testsource\": \"494280004\",\n    \"mshied_testlocation\": \"Bangalore {{$randomInt}}\",\n    \"mshied_testdate\": \"{{current_timestamp}}\",\n    \"mshied_satevidencebasedreadingandwritingsection\": 500,\n    \"mshied_satmathsection\": 600\n    \n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}mshied_testscores",
									"host": [
										"{{Eresource_URL}}mshied_testscores"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Contact 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var contactid,contactName;",
											"pm.test(\"Contact Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    contactid = jsonData.contactid;",
											"    contactName = jsonData.fullname;",
											"    console.log(\"Contact name is: \" + contactName);",
											"",
											"",
											"",
											"    ",
											"});",
											"pm.globals.set('gcontactidStudent2', contactid);",
											"pm.globals.set('gcontactName2', contactName);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									},
									{
										"key": "OData-Version",
										"value": "4.0"
									},
									{
										"key": "OData-MaxVersion",
										"value": "4.0"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"firstname\": \"Scoring {{globalsessionvalue}}\",\r\n    \"lastname\": \"Application {{$randomInt}}{{$randomInt}}\",\r\n    \"middlename\": \"API\",\r\n    \"mshied_contacttype\": \"494280002\",\r\n    \"cmc_recentact\": 50\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}contacts",
									"host": [
										"{{Eresource_URL}}contacts"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Contact 3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var contactid;",
											"pm.test(\"Contact Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    contactid = jsonData.contactid;",
											"    var contactName = jsonData.fullname;",
											"    console.log(\"Contact name is: \" + contactName);",
											"",
											"",
											"",
											"    ",
											"});",
											"pm.globals.set('gcontactidStudent3', contactid);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									},
									{
										"key": "OData-Version",
										"value": "4.0"
									},
									{
										"key": "OData-MaxVersion",
										"value": "4.0"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"firstname\": \"Scoring {{globalsessionvalue}}\",\r\n    \"lastname\": \"Application {{$randomInt}}{{$randomInt}}\",\r\n    \"middlename\": \"API\",\r\n    \"mshied_contacttype\": \"494280002\",\r\n    \"cmc_recentsat\": 20\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}contacts",
									"host": [
										"{{Eresource_URL}}contacts"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Contact 4",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var contactid;",
											"pm.test(\"Contact Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    contactid = jsonData.contactid;",
											"    var contactName = jsonData.fullname;",
											"    console.log(\"Contact name is: \" + contactName);",
											"",
											"",
											"",
											"    ",
											"});",
											"pm.globals.set('gcontactidStudent4', contactid);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									},
									{
										"key": "OData-Version",
										"value": "4.0"
									},
									{
										"key": "OData-MaxVersion",
										"value": "4.0"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"firstname\": \"Scoring {{globalsessionvalue}}\",\r\n    \"lastname\": \"Application {{$randomInt}}{{$randomInt}}\",\r\n    \"middlename\": \"API\",\r\n    \"mshied_contacttype\": \"494280002\",\r\n    \"cmc_recentsat\": 20\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}contacts",
									"host": [
										"{{Eresource_URL}}contacts"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Contact 5",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var contactid;",
											"pm.test(\"Contact Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    contactid = jsonData.contactid;",
											"    var contactName = jsonData.fullname;",
											"    console.log(\"Contact name is: \" + contactName);",
											"",
											"",
											"",
											"    ",
											"});",
											"pm.globals.set('gcontactidStudent5', contactid);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									},
									{
										"key": "OData-Version",
										"value": "4.0"
									},
									{
										"key": "OData-MaxVersion",
										"value": "4.0"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"firstname\": \"Scoring {{globalsessionvalue}}\",\r\n    \"lastname\": \"Application {{$randomInt}}{{$randomInt}}\",\r\n    \"middlename\": \"API\",\r\n    \"mshied_contacttype\": \"494280002\",\r\n    \"cmc_recentsat\": 25\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}contacts",
									"host": [
										"{{Eresource_URL}}contacts"
									]
								}
							},
							"response": []
						},
						{
							"name": "Associate Area of Intrest with Contact 5",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test(\"Contact associated with Area of Intrest\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
											"    var jsonData =JSON.parse(responseBody);",
											"   ",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									},
									{
										"key": "OData-Version",
										"value": "4.0"
									},
									{
										"key": "OData-MaxVersion",
										"value": "4.0"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \r\n   \"@odata.id\":\"{{Eresource_URL}}mshied_areaofinterests({{gareaofinterestid}})\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}contacts({{gcontactidStudent5}})/mshied_contact_areaofinterest/$ref",
									"host": [
										"{{Eresource_URL}}contacts({{gcontactidStudent5}})"
									],
									"path": [
										"mshied_contact_areaofinterest",
										"$ref"
									]
								},
								"description": "This Contacttype should be Student and Area of Interest should assosiated with contact1"
							},
							"response": []
						},
						{
							"name": "Create SAT TestScore in Contact 5",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var SATtestscoreid;",
											"var Autoname;",
											"",
											"pm.test(\"SAT TestScore Created\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202,204]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    SATtestscoreid = jsonData.mshied_testscoreid;",
											"    console.log('SAT test score id: '+SATtestscoreid);",
											"    Autoname= jsonData.mshied_name;",
											"    console.log('Workflow autoname: '+Autoname);",
											"    ",
											" ",
											"});",
											"",
											"pm.globals.set('gSATtestscore5',SATtestscoreid);",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var current_timestamp = new Date();",
											"postman.setEnvironmentVariable(\"current_timestamp\", current_timestamp.toISOString());"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"mshied_StudentID@odata.bind\":\"/contacts({{gcontactidStudent5}})\",\n    \"mshied_TestTypeId@odata.bind\": \"/mshied_testtypes({{gsatid}})\",\n    \"mshied_testsource\": \"494280004\",\n    \"mshied_testlocation\": \"Bangalore {{$randomInt}}\",\n    \"mshied_testdate\": \"{{current_timestamp}}\",\n    \"mshied_satevidencebasedreadingandwritingsection\": 500,\n    \"mshied_satmathsection\": 600\n    \n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}mshied_testscores",
									"host": [
										"{{Eresource_URL}}mshied_testscores"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Create Application",
					"item": [
						{
							"name": "Create Requirement Definition",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var reqDefID;",
											"var reqDefName;",
											"",
											"pm.test(\"Requirement Definition is Created\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202,204]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    reqDefID = jsonData.cmc_applicationrequirementdefinitionid;",
											"    console.log('Requirement Definition ID is: ' +reqDefID);",
											"    ",
											"    reqDefName = jsonData.cmc_applicationrequirementdefinitionname;",
											"    console.log('Requirement definition name is: ' +reqDefName);",
											"    ",
											"    ",
											"});",
											"pm.globals.set('greqDefID',reqDefID);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_applicationrequirementdefinitionname\": \"Req Def {{$randomInt}} API {{$randomInt}}{{$randomInt}}\",\r\n    \"cmc_applicationstatuswhenallrequirementsrecei\": 175490001\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applicationrequirementdefinitions",
									"host": [
										"{{Eresource_URL}}cmc_applicationrequirementdefinitions"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Requirement Definition Detail 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var appreqdefdetid;",
											"",
											"pm.test(\"Application Requirment Definition Detail Created (General)\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202,204]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    appreqdefdetid = jsonData.cmc_applicationrequirementdefinitiondetailid;",
											" ",
											"});",
											"pm.globals.set('gappreqdefdetidgen',appreqdefdetid);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"  var moment = require('moment');\r",
											"pm.environment.set(\"timestamp\", moment().add(1, 'days').format(\"YYYY-MM-DD\"));\r",
											"\r",
											"pm.environment.set(\"timestampEndDate\", moment().add(100, 'days').format(\"YYYY-MM-DD\"));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"cmc_applicationrequirementdefinition@odata.bind\":\"/cmc_applicationrequirementdefinitions({{greqDefID}})\",\r\n\"cmc_requirementtype\":\"175490000\",\r\n\"cmc_name\":\"ARDD-General Def-{{$randomInt}}\",\r\n\"cmc_requirementdeadline\":\"{{timestamp}}\",\r\n\"cmc_requirementrequired\":true,\r\n\"cmc_statusonsubmit\":\"175490001\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applicationrequirementdefinitiondetails",
									"host": [
										"{{Eresource_URL}}cmc_applicationrequirementdefinitiondetails"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Application Definition 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var AppDefID;",
											"var AppDefinitionName;",
											"",
											"pm.test(\"Application Definition is Created\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202,204]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    AppDefID = jsonData.cmc_applicationdefinitionid;",
											"    console.log('Application Definition ID is: ' +AppDefID);",
											"    AppDefinitionName=jsonData.cmc_applicationdefinitionname;",
											"    console.log('Application Definition name is: '+AppDefinitionName);",
											"      ",
											"    ",
											"});",
											"pm.globals.set('gAppDefID',AppDefID);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_applicationdefinitionname\": \"AppDefnName API {{globalsessionvalue}}{{$randomInt}}\",\r\n    \"cmc_requirementdefinitionid@odata.bind\":\"/cmc_applicationrequirementdefinitions({{greqDefID}})\",\r\n    \"cmc_statusoncompletion\": \"175490000\",\r\n    \"cmc_statusoncreate\": \"175490000\",\r\n    \"cmc_statusonsave\": \"175490000\",\r\n    \"cmc_statusonsubmit\": \"175490000\"\r\n}\r\n"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applicationdefinitions",
									"host": [
										"{{Eresource_URL}}cmc_applicationdefinitions"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Application Definition 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var AppDefID;",
											"var AppDefinitionName;",
											"",
											"pm.test(\"Application Definition is Created\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202,204]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    AppDefID = jsonData.cmc_applicationdefinitionid;",
											"    console.log('Application Definition ID is: ' +AppDefID);",
											"    AppDefinitionName=jsonData.cmc_applicationdefinitionname;",
											"    console.log('Application Definition name is: '+AppDefinitionName);",
											"    ",
											"    ",
											"    ",
											"});",
											"pm.globals.set('gAppDefID2',AppDefID);",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_applicationdefinitionname\": \"AppDefnName w/o prog {{globalsessionvalue}}{{$randomInt}}\",\r\n    \"cmc_requirementdefinitionid@odata.bind\":\"/cmc_applicationrequirementdefinitions({{greqDefID}})\",\r\n    \"cmc_statusoncompletion\": \"175490000\",\r\n    \"cmc_statusoncreate\": \"175490000\",\r\n    \"cmc_statusonsave\": \"175490000\",\r\n    \"cmc_statusonsubmit\": \"175490000\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applicationdefinitions",
									"host": [
										"{{Eresource_URL}}cmc_applicationdefinitions"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Application Type",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var AppTypeID;",
											"var AppTypeName;",
											"",
											"pm.test(\"Application Type is Created\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202,204]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    AppTypeID = jsonData.cmc_applicationtypeid;",
											"    console.log('Application Type ID is: ' +AppTypeID);",
											"    AppTypeName=jsonData.cmc_applicationtypename;",
											"    console.log('Application Type name is: ' +AppTypeName);",
											"    ",
											"    ",
											"});",
											"pm.globals.set('gAppTypeID',AppTypeID);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"cmc_applicationtypename\":\"ATName {{$randomInt}} API {{$randomInt}}{{$randomInt}}\",\r\n\t\"cmc_applicationgroup\": 175490001\r\n}\r\n"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applicationtypes",
									"host": [
										"{{Eresource_URL}}cmc_applicationtypes"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Application Type 2 W/o program",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var AppTypeID;",
											"var AppTypeName;",
											"",
											"pm.test(\"Application Type is Created\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202,204]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    AppTypeID = jsonData.cmc_applicationtypeid;",
											"    console.log('Application Type ID is: ' +AppTypeID);",
											"    AppTypeName=jsonData.cmc_applicationtypename;",
											"    console.log('Application Type name is: ' +AppTypeName);",
											"    ",
											"  ",
											"});",
											"pm.globals.set('gAppTypeID2',AppTypeID);",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_applicationtypename\": \"ATName {{$randomInt}} w/o program {{$randomInt}}{{$randomInt}}\",\r\n    \"cmc_applicationgroup\": 175490001\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applicationtypes",
									"host": [
										"{{Eresource_URL}}cmc_applicationtypes"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Program 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var programid;",
											"pm.test(\"Create Program\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"",
											"    programid = jsonData.mshied_programid; ",
											"});",
											"pm.globals.set('gProgram1',programid);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"mshied_code\": \"{{$randomInt}}code{{$randomInt}}{{$randomInt}}\",\n    \"mshied_name\": \"{{$randomInt}}Prg1{{$randomInt}}{{$randomInt}}\"\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}mshied_programs",
									"host": [
										"{{Eresource_URL}}mshied_programs"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Program 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var programid;",
											"pm.test(\"create Program\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"",
											"    programid = jsonData.mshied_programid; ",
											"});",
											"pm.globals.set('gProgram2',programid);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"mshied_code\": \"{{$randomInt}}code{{$randomInt}}{{$randomInt}}\",\n    \"mshied_name\": \"{{$randomInt}}Prg2{{$randomInt}}{{$randomInt}}\"\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}mshied_programs",
									"host": [
										"{{Eresource_URL}}mshied_programs"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Program 3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var programid;",
											"pm.test(\"Create Program\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"",
											"    programid = jsonData.mshied_programid; ",
											"});",
											"pm.globals.set('gProgram3',programid);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"mshied_code\": \"{{$randomInt}}code{{$randomInt}}{{$randomInt}}\",\n    \"mshied_name\": \"{{$randomInt}}Prg3{{$randomInt}}{{$randomInt}}\"\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}mshied_programs",
									"host": [
										"{{Eresource_URL}}mshied_programs"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Program 4",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var programid;",
											"pm.test(\"Create Program\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"",
											"    programid = jsonData.mshied_programid; ",
											"});",
											"pm.globals.set('gProgram4',programid);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"mshied_code\": \"{{$randomInt}}code{{$randomInt}}{{$randomInt}}\",\n    \"mshied_name\": \"{{$randomInt}}Prg4{{$randomInt}}{{$randomInt}}\"\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}mshied_programs",
									"host": [
										"{{Eresource_URL}}mshied_programs"
									]
								}
							},
							"response": []
						},
						{
							"name": "Adding Program1 to Application Type",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Adding Program 1 record To Application Type\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([204,201,202,200]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    var ProgName =jsonData.mshied_name;",
											"    console.log('Program that is added to Application Type is:' +ProgName);",
											"    ",
											"  ",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "OData-MaxVersion",
										"value": "4.0"
									},
									{
										"description": " ",
										"key": "OData-Version",
										"value": "4.0"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"@odata.id\": \"{{Eresource_URL}}mshied_programs({{gProgram1}})\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applicationtypes({{gAppTypeID}})/cmc_cmc_applicationtype_mshied_program/$ref",
									"host": [
										"{{Eresource_URL}}cmc_applicationtypes({{gAppTypeID}})"
									],
									"path": [
										"cmc_cmc_applicationtype_mshied_program",
										"$ref"
									]
								}
							},
							"response": []
						},
						{
							"name": "Adding Program2 to Application Type",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Adding Program 2 record To Application Type\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([204,201,202,200]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    var ProgName =jsonData.mshied_name;",
											"    console.log('Program that is added to Application Type is:' +ProgName);",
											"    ",
											"  ",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "OData-MaxVersion",
										"value": "4.0"
									},
									{
										"description": " ",
										"key": "OData-Version",
										"value": "4.0"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"@odata.id\": \"{{Eresource_URL}}mshied_programs({{gProgram2}})\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applicationtypes({{gAppTypeID}})/cmc_cmc_applicationtype_mshied_program/$ref",
									"host": [
										"{{Eresource_URL}}cmc_applicationtypes({{gAppTypeID}})"
									],
									"path": [
										"cmc_cmc_applicationtype_mshied_program",
										"$ref"
									]
								}
							},
							"response": []
						},
						{
							"name": "Adding Program3 to Application Type",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Adding Program 3 record To Application Type\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([204,201,202,200]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    var ProgName =jsonData.mshied_name;",
											"    console.log('Program that is added to Application Type is:' +ProgName);",
											"    ",
											"  ",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "OData-MaxVersion",
										"value": "4.0"
									},
									{
										"description": " ",
										"key": "OData-Version",
										"value": "4.0"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"@odata.id\": \"{{Eresource_URL}}mshied_programs({{gProgram3}})\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applicationtypes({{gAppTypeID}})/cmc_cmc_applicationtype_mshied_program/$ref",
									"host": [
										"{{Eresource_URL}}cmc_applicationtypes({{gAppTypeID}})"
									],
									"path": [
										"cmc_cmc_applicationtype_mshied_program",
										"$ref"
									]
								}
							},
							"response": []
						},
						{
							"name": "Adding Program4 to Application Type",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Adding Program 4 record To Application Type\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([204,201,202,200]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    var ProgName =jsonData.mshied_name;",
											"    console.log('Program that is added to Application Type is:' +ProgName);",
											"    ",
											"  ",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "OData-MaxVersion",
										"value": "4.0"
									},
									{
										"description": " ",
										"key": "OData-Version",
										"value": "4.0"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"@odata.id\": \"{{Eresource_URL}}mshied_programs({{gProgram4}})\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applicationtypes({{gAppTypeID}})/cmc_cmc_applicationtype_mshied_program/$ref",
									"host": [
										"{{Eresource_URL}}cmc_applicationtypes({{gAppTypeID}})"
									],
									"path": [
										"cmc_cmc_applicationtype_mshied_program",
										"$ref"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Application Period",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var AppPerID;",
											"var AppPerName;",
											"",
											"pm.test(\"Application Period is Created\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202,204]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    AppPerID = jsonData.cmc_applicationperiodid;",
											"    console.log('Application Period ID is: ' +AppPerID);",
											"    ",
											"    AppPerName = jsonData.cmc_applicationperiodname;",
											"    console.log('Application Period name is: ' +AppPerName);",
											"    ",
											"    ",
											"});",
											"",
											"pm.globals.set('gAppPerID',AppPerID);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_applicationperiodname\": \"{{$randomInt}} APName {{$randomInt}} API {{$randomInt}}{{$randomInt}}\",\r\n    \"cmc_AcademicPeriodId@odata.bind\": \"/mshied_academicperiods({{gacademicperiodid}})\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applicationperiods",
									"host": [
										"{{Eresource_URL}}cmc_applicationperiods"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Application Definition Version",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var AppDefnVerID;",
											"var AppDefnID;",
											"var AppDefnVerName;",
											"var AppTypeID;",
											"",
											"pm.test(\"Application Definition Version is Created\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202,204]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    AppDefnVerID = jsonData.cmc_applicationdefinitionversionid;",
											"    console.log('Application Definition version ID is: ' +AppDefnVerID);",
											"    AppDefnID = jsonData._cmc_applicationdefinitionid_value;",
											"    console.log('Application Definition ID that is linked is: ' +AppDefnID);",
											"    AppTypeID = jsonData._cmc_applicationtype_value;",
											"    console.log('Application Type ID that is linked is: ' +AppTypeID);",
											"    AppDefnVerName=jsonData.cmc_applicationdefinitionversionname;",
											"    console.log('Application Definition Version name is: ' +AppDefnVerName);",
											"    ",
											"    ",
											"});",
											"",
											"pm.globals.set('gAppDefnVerID',AppDefnVerID);",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_applicationdefinitionversionname\": \"ADVName 1 {{globalsessionvalue}} {{$randomInt}}{{$randomInt}}\",\r\n    \"cmc_applicationdefinitionid@odata.bind\": \"/cmc_applicationdefinitions({{gAppDefID}})\",\r\n    \"cmc_applicationtype@odata.bind\": \"/cmc_applicationtypes({{gAppTypeID}})\",\r\n    \"cmc_createlifecycle\": true,\r\n    \"cmc_lifecycletype\": 175490001\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applicationdefinitionversions",
									"host": [
										"{{Eresource_URL}}cmc_applicationdefinitionversions"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Application Definition Version 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var AppDefnVerID;",
											"var AppDefnID;",
											"var AppDefnVerName;",
											"var AppTypeID;",
											"",
											"pm.test(\"Application Definition Version is Created\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202,204]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    AppDefnVerID = jsonData.cmc_applicationdefinitionversionid;",
											"    console.log('Application Definition version ID is: ' +AppDefnVerID);",
											"    AppDefnID = jsonData._cmc_applicationdefinitionid_value;",
											"    console.log('Application Definition ID that is linked is: ' +AppDefnID);",
											"    AppTypeID = jsonData._cmc_applicationtype_value;",
											"    console.log('Application Type ID that is linked is: ' +AppTypeID);",
											"    AppDefnVerName=jsonData.cmc_applicationdefinitionversionname;",
											"    console.log('Application Definition Version name is: ' +AppDefnVerName);",
											"    ",
											"    ",
											"});",
											"",
											"pm.globals.set('gAppDefnVerID2',AppDefnVerID);",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_applicationdefinitionversionname\": \"ADVName 2 {{globalsessionvalue}}{{$randomInt}}{{$randomInt}} \",\r\n    \"cmc_applicationdefinitionid@odata.bind\": \"/cmc_applicationdefinitions({{gAppDefID2}})\",\r\n    \"cmc_applicationtype@odata.bind\": \"/cmc_applicationtypes({{gAppTypeID2}})\",\r\n    \"cmc_createlifecycle\": true,\r\n    \"cmc_lifecycletype\": 175490001\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applicationdefinitionversions",
									"host": [
										"{{Eresource_URL}}cmc_applicationdefinitionversions"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Application Definition Version Detail",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var AppDefnVerDetID;",
											"",
											"pm.test(\"Application Definition Version Detail is Created\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202,204]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    AppDefnVerDetID = jsonData.cmc_applicationdefinitionversiondetailid;",
											"    console.log('Application Definition version Detail ID is: ' +AppDefnVerDetID);",
											"    var AppDefVerName = jsonData.cmc_applicationdefinitionversiondetailname;",
											"    console.log('Application Definition Version Detail name: ' +AppDefVerName);",
											"  ",
											"        ",
											"});",
											"",
											" pm.globals.set('gAppDefnVerDetID',AppDefnVerDetID); "
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"  var moment = require('moment');\r",
											"pm.environment.set(\"timestamp\", moment().add(1, 'days').format(\"YYYY-MM-DD\"));\r",
											"\r",
											"pm.environment.set(\"timestampEndDate\", moment().add(100, 'days').format(\"YYYY-MM-DD\"));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_applicationdefinitionversion@odata.bind\": \"/cmc_applicationdefinitionversions({{gAppDefnVerID}})\",\r\n    \"cmc_applicationperiod@odata.bind\": \"/cmc_applicationperiods({{gAppPerID}})\",\r\n    \"cmc_enddate\": \"{{timestampEndDate}}\",\r\n    \"cmc_startdate\": \"{{timestamp}}\"\r\n   \r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applicationdefinitionversiondetails",
									"host": [
										"{{Eresource_URL}}cmc_applicationdefinitionversiondetails"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Application Registration 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var AppRegID;",
											"var AppDefnVerID;",
											"var AppRegName;",
											"var ContactID;",
											"",
											"pm.test(\"Application Registration is Created\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202,204]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    AppRegID = jsonData.cmc_applicationregistrationid;",
											"    console.log('Application Registration ID is: ' +AppRegID);",
											"    AppDefnVerID = jsonData._cmc_applicationdefinitionversionid_value;",
											"    console.log('Application Definition version ID that is linked is: ' +AppDefnVerID);",
											"    AppRegName = jsonData.cmc_applicationregistration;",
											"    console.log('Application Registration name is: ' +AppRegName);",
											"    ContactID=jsonData._cmc_contactid_value;",
											"    console.log('Contact ID that is linked is: ' +ContactID);",
											"    ",
											"    ",
											"});",
											"",
											"pm.globals.set('gAppRegID',AppRegID);",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_applicationdefinitionversionid@odata.bind\": \"/cmc_applicationdefinitionversions({{gAppDefnVerID}})\",\r\n    \"cmc_contactid@odata.bind\": \"/contacts({{gcontactidStudent1}})\",\r\n    \"cmc_applicationstatus\": 175490000,\r\n    \"cmc_applicationsubmitted\": false\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applicationregistrations",
									"host": [
										"{{Eresource_URL}}cmc_applicationregistrations"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Application 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var AppID;",
											"var AppName;",
											"",
											"pm.test(\"Application is Created\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202,204]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    AppID = jsonData.cmc_applicationid;",
											"    console.log('Application ID is: ' +AppID);",
											"    ",
											"    AppName = jsonData.cmc_applicationname;",
											"    console.log('Application name is: ' +AppName);",
											"    ",
											"    ",
											"});",
											"",
											"pm.globals.set('gAppID1',AppID);",
											"pm.globals.set('gAppName1',AppName);",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_applicationperiodid@odata.bind\": \"/cmc_applicationperiods({{gAppPerID}})\",\r\n    \"cmc_applicationregistration@odata.bind\": \"/cmc_applicationregistrations({{gAppRegID}})\",\r\n    \"cmc_contactid@odata.bind\": \"/contacts({{gcontactidStudent1}})\",\r\n    \"cmc_programid@odata.bind\": \"/mshied_programs({{gProgram1}})\",\r\n    \"cmc_applicationstatus\": 175490000\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applications",
									"host": [
										"{{Eresource_URL}}cmc_applications"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Application Registration 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var AppRegID;",
											"var AppDefnVerID;",
											"var AppRegName;",
											"var ContactID;",
											"",
											"pm.test(\"Application Registration is Created\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202,204]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    AppRegID = jsonData.cmc_applicationregistrationid;",
											"    console.log('Application Registration ID is: ' +AppRegID);",
											"    AppDefnVerID = jsonData._cmc_applicationdefinitionversionid_value;",
											"    console.log('Application Definition version ID that is linked is: ' +AppDefnVerID);",
											"    AppRegName = jsonData.cmc_applicationregistration;",
											"    console.log('Application Registration name is: ' +AppRegName);",
											"    ContactID=jsonData._cmc_contactid_value;",
											"    console.log('Contact ID that is linked is: ' +ContactID);",
											"    ",
											"   ",
											"});",
											"",
											"pm.globals.set('gAppRegID1',AppRegID);",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_applicationdefinitionversionid@odata.bind\": \"/cmc_applicationdefinitionversions({{gAppDefnVerID}})\",\r\n    \"cmc_contactid@odata.bind\": \"/contacts({{gcontactidStudent2}})\",\r\n    \"cmc_applicationstatus\": 175490000,\r\n    \"cmc_applicationsubmitted\": false,\r\n    \"cmc_sourceofrecord\": 175490000\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applicationregistrations",
									"host": [
										"{{Eresource_URL}}cmc_applicationregistrations"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Application 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var AppID;",
											"var AppName;",
											"",
											"pm.test(\"Application is Created\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202,204]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    AppID = jsonData.cmc_applicationid;",
											"    console.log('Application ID is: ' +AppID);",
											"    ",
											"    AppName = jsonData.cmc_applicationname;",
											"    console.log('Application name is: ' +AppName);",
											"    ",
											"    ",
											"});",
											"",
											"pm.globals.set('gAppID2',AppID);",
											"pm.globals.set('gAppName2',AppName);",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_applicationperiodid@odata.bind\": \"/cmc_applicationperiods({{gAppPerID}})\",\r\n    \"cmc_applicationregistration@odata.bind\": \"/cmc_applicationregistrations({{gAppRegID1}})\",\r\n    \"cmc_contactid@odata.bind\": \"/contacts({{gcontactidStudent2}})\",\r\n    \"cmc_sourceofrecord\": 175490000,\r\n    \"cmc_applicationstatus\": 175490001\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applications",
									"host": [
										"{{Eresource_URL}}cmc_applications"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Requirement under App2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var reqId, parentappID;",
											"var reqName, appID;",
											"",
											"pm.test(\"Requirement under Application 2 is Created\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202,204]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    reqId = jsonData.cmc_applicationrequirementid;",
											"    console.log('Requirement ID is: ' +reqId);",
											"    ",
											"    reqName = jsonData.cmc_applicationrequirementname;",
											"    console.log('Application Requirement name is: ' +reqName);",
											"    ",
											"    appID=jsonData._cmc_applicationid_value;",
											"    parentappID= pm.globals.get('gAppID2');",
											"     ",
											"    pm.test(\"Requirement is created under Application\", function()",
											"        {",
											"            pm.expect(parentappID).to.equal(appID);",
											"        });",
											"    ",
											"    ",
											"});",
											"",
											"pm.globals.set('greqId2',reqId);",
											"pm.globals.set('greqName2',reqName);",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_applicationrequirementname\": \"Req{{$randomInt}} API {{$randomInt}}{{$randomInt}}\",\r\n    \"cmc_applicationid@odata.bind\": \"/cmc_applications({{gAppID2}})\",\r\n    \"cmc_requirementstatus\": 175490000,\r\n    \"cmc_requirementtype\": 175490001\r\n     \r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applicationrequirements",
									"host": [
										"{{Eresource_URL}}cmc_applicationrequirements"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Application Registration 3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var AppRegID;",
											"var AppDefnVerID;",
											"var AppRegName;",
											"var ContactID;",
											"",
											"pm.test(\"Application Registration is Created\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202,204]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    AppRegID = jsonData.cmc_applicationregistrationid;",
											"    console.log('Application Registration ID is: ' +AppRegID);",
											"    AppDefnVerID = jsonData._cmc_applicationdefinitionversionid_value;",
											"    console.log('Application Definition version ID that is linked is: ' +AppDefnVerID);",
											"    AppRegName = jsonData.cmc_applicationregistration;",
											"    console.log('Application Registration name is: ' +AppRegName);",
											"    ContactID=jsonData._cmc_contactid_value;",
											"    console.log('Contact ID that is linked is: ' +ContactID);",
											"    ",
											"    ",
											"});",
											"pm.globals.set('gAppRegID3',AppRegID);",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_applicationdefinitionversionid@odata.bind\": \"/cmc_applicationdefinitionversions({{gAppDefnVerID2}})\",\r\n    \"cmc_contactid@odata.bind\": \"/contacts({{gcontactidStudent3}})\",\r\n    \"cmc_applicationstatus\": 175490000,\r\n    \"cmc_applicationsubmitted\": false\r\n   \r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applicationregistrations",
									"host": [
										"{{Eresource_URL}}cmc_applicationregistrations"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Application 3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var AppID;",
											"var AppName;",
											"",
											"pm.test(\"Application is Created\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202,204]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    AppID = jsonData.cmc_applicationid;",
											"    console.log('Application ID is: ' +AppID);",
											"    ",
											"    AppName = jsonData.cmc_applicationname;",
											"    console.log('Application name is: ' +AppName);",
											"    ",
											"    ",
											"});",
											"",
											"pm.globals.set('gAppID3',AppID);",
											"pm.globals.set('gAppName3',AppName);",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_applicationperiodid@odata.bind\": \"/cmc_applicationperiods({{gAppPerID}})\",\r\n    \"cmc_applicationregistration@odata.bind\": \"/cmc_applicationregistrations({{gAppRegID3}})\",\r\n    \"cmc_contactid@odata.bind\": \"/contacts({{gcontactidStudent3}})\",\r\n    \"cmc_programid@odata.bind\": \"/mshied_programs({{gProgram3}})\",\r\n    \"cmc_applicationstatus\": 175490001\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applications",
									"host": [
										"{{Eresource_URL}}cmc_applications"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Recommendation under App3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var recId, parentappID;",
											"var recName, appID;",
											"",
											"pm.test(\"Requirement under Application 1 is Created\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202,204]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    recId = jsonData.cmc_applicationrecommendationid;",
											"    console.log('Recommendation ID is: ' +recId);",
											"    ",
											"    recName = jsonData.cmc_applicationrecommendationname;",
											"    console.log('Application Recommendation name is: ' +recName);",
											"    ",
											"    appID=jsonData._cmc_applicationid_value;",
											"    parentappID= pm.globals.get('gAppID3');",
											"    ",
											"    pm.test(\"Recommemdation is created under Application 3\", function()",
											"        {",
											"            pm.expect(parentappID).to.equal(appID);",
											"        });",
											"    ",
											"    ",
											"});",
											"",
											"pm.globals.set('grecId1',recId);",
											"pm.globals.set('grecName',recName);",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_contactid@odata.bind\": \"/contacts({{gcontactidStudent3}})\",\r\n    \"cmc_applicationid@odata.bind\": \"/cmc_applications({{gAppID3}})\",\r\n    \"cmc_isrecommendationsubmitted\": false,\r\n    \"cmc_issubmittedbyrecommender\": false,\r\n    \"cmc_recommendationstatus\": 175490000,\r\n    \"cmc_recommendationtype\": 175490001,\r\n    \"cmc_recommendedbyid@odata.bind\": \"/contacts({{gcontactidStudent2}})\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applicationrecommendations",
									"host": [
										"{{Eresource_URL}}cmc_applicationrecommendations"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Application Registration 4",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var AppRegID;",
											"var AppDefnVerID;",
											"var AppRegName;",
											"var ContactID;",
											"",
											"pm.test(\"Application Registration is Created\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202,204]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    AppRegID = jsonData.cmc_applicationregistrationid;",
											"    console.log('Application Registration ID is: ' +AppRegID);",
											"    AppDefnVerID = jsonData._cmc_applicationdefinitionversionid_value;",
											"    console.log('Application Definition version ID that is linked is: ' +AppDefnVerID);",
											"    AppRegName = jsonData.cmc_applicationregistration;",
											"    console.log('Application Registration name is: ' +AppRegName);",
											"    ContactID=jsonData._cmc_contactid_value;",
											"    console.log('Contact ID that is linked is: ' +ContactID);",
											"    ",
											"    ",
											"});",
											"pm.globals.set('gAppRegID4',AppRegID);",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_applicationdefinitionversionid@odata.bind\": \"/cmc_applicationdefinitionversions({{gAppDefnVerID2}})\",\r\n    \"cmc_contactid@odata.bind\": \"/contacts({{gcontactidStudent4}})\",\r\n    \"cmc_applicationstatus\": 175490000,\r\n    \"cmc_applicationsubmitted\": false\r\n   \r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applicationregistrations",
									"host": [
										"{{Eresource_URL}}cmc_applicationregistrations"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Application 4",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var AppID;",
											"var AppName;",
											"",
											"pm.test(\"Application is Created\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202,204]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    AppID = jsonData.cmc_applicationid;",
											"    console.log('Application ID is: ' +AppID);",
											"    ",
											"    AppName = jsonData.cmc_applicationname;",
											"    console.log('Application name is: ' +AppName);",
											"    ",
											"    ",
											"});",
											"",
											"pm.globals.set('gAppID4',AppID);",
											"pm.globals.set('gAppName4',AppName);",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"//var current_timestamp = new Date();\r",
											"//postman.setEnvironmentVariable(\"current_timestamp\", current_timestamp.toISOString());\r",
											"\r",
											"var moment = require('moment');\r",
											"pm.environment.set(\"current_timestamp\", moment().format(\"YYYY-MM-DD\"));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_applicationperiodid@odata.bind\": \"/cmc_applicationperiods({{gAppPerID}})\",\r\n    \"cmc_applicationregistration@odata.bind\": \"/cmc_applicationregistrations({{gAppRegID4}})\",\r\n    \"cmc_contactid@odata.bind\": \"/contacts({{gcontactidStudent4}})\",\r\n    \"cmc_applicationstatus\": 175490000,\r\n    \"cmc_submitteddate\": \"{{current_timestamp}}\",\r\n    \"cmc_programid@odata.bind\": \"/mshied_programs({{gProgram3}})\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applications",
									"host": [
										"{{Eresource_URL}}cmc_applications"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Application Registration 5",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var AppRegID;",
											"var AppDefnVerID;",
											"var AppRegName;",
											"var ContactID;",
											"",
											"pm.test(\"Application Registration is Created\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202,204]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    AppRegID = jsonData.cmc_applicationregistrationid;",
											"    console.log('Application Registration ID is: ' +AppRegID);",
											"    AppDefnVerID = jsonData._cmc_applicationdefinitionversionid_value;",
											"    console.log('Application Definition version ID that is linked is: ' +AppDefnVerID);",
											"    AppRegName = jsonData.cmc_applicationregistration;",
											"    console.log('Application Registration name is: ' +AppRegName);",
											"    ContactID=jsonData._cmc_contactid_value;",
											"    console.log('Contact ID that is linked is: ' +ContactID);",
											"    ",
											"    ",
											"});",
											"pm.globals.set('gAppRegID5',AppRegID);",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_applicationdefinitionversionid@odata.bind\": \"/cmc_applicationdefinitionversions({{gAppDefnVerID}})\",\r\n    \"cmc_contactid@odata.bind\": \"/contacts({{gcontactidStudent5}})\",\r\n    \"cmc_applicationstatus\": 175490000,\r\n    \"cmc_applicationsubmitted\": false\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applicationregistrations",
									"host": [
										"{{Eresource_URL}}cmc_applicationregistrations"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Application 5",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var AppID;",
											"var AppName;",
											"",
											"pm.test(\"Application is Created\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202,204]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    AppID = jsonData.cmc_applicationid;",
											"    console.log('Application ID is: ' +AppID);",
											"    ",
											"    AppName = jsonData.cmc_applicationname;",
											"    console.log('Application name is: ' +AppName);",
											"    ",
											"    ",
											"});",
											"",
											"pm.globals.set('gAppID5',AppID);",
											"pm.globals.set('gAppName5',AppName);",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"//var current_timestamp = new Date();\r",
											"//postman.setEnvironmentVariable(\"current_timestamp\", current_timestamp.toISOString());\r",
											"\r",
											"var moment = require('moment');\r",
											"pm.environment.set(\"current_timestamp\", moment().format(\"YYYY-MM-DD\"));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_applicationperiodid@odata.bind\": \"/cmc_applicationperiods({{gAppPerID}})\",\r\n    \"cmc_applicationregistration@odata.bind\": \"/cmc_applicationregistrations({{gAppRegID5}})\",\r\n    \"cmc_contactid@odata.bind\": \"/contacts({{gcontactidStudent5}})\",\r\n    \"cmc_applicationstatus\": 175490000,\r\n    \"cmc_submitteddate\": \"{{current_timestamp}}\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applications",
									"host": [
										"{{Eresource_URL}}cmc_applications"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Requirement under App5",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var reqId, parentappID;",
											"var reqName, appID;",
											"",
											"pm.test(\"Requirement under Application 5 is Created\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202,204]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    reqId = jsonData.cmc_applicationrequirementid;",
											"    console.log('Requirement ID is: ' +reqId);",
											"    ",
											"    reqName = jsonData.cmc_applicationrequirementname;",
											"    console.log('Application Requirement name is: ' +reqName);",
											"    ",
											"    appID=jsonData._cmc_applicationid_value;",
											"    parentappID= pm.globals.get('gAppID5');",
											"     ",
											"    pm.test(\"Requirement is created under Application\", function()",
											"        {",
											"            pm.expect(parentappID).to.equal(appID);",
											"        });",
											"    ",
											"    ",
											"});",
											"",
											"pm.globals.set('greqId5',reqId);",
											"pm.globals.set('greqName5',reqName);",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_applicationrequirementname\": \"Req{{$randomInt}} API {{$randomInt}}{{$randomInt}}\",\r\n    \"cmc_applicationid@odata.bind\": \"/cmc_applications({{gAppID5}})\",\r\n    \"cmc_requirementstatus\": 175490000,\r\n    \"cmc_requirementtype\": 175490001\r\n     \r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applicationrequirements",
									"host": [
										"{{Eresource_URL}}cmc_applicationrequirements"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "DCRM Student Advisor",
			"item": [
				{
					"name": "GetToken_DCRM Student Advisor",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody);",
									"postman.setGlobalVariable('gaccess_token', data.access_token);",
									"",
									"//pm.environment.set(\"Eaccess_token\", data.access_token);",
									"console.log(pm.globals.get(\"gaccess_token\"));",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "grant_type",
									"value": "client_credentials",
									"type": "text"
								},
								{
									"key": "client_id",
									"value": "{{Estudentadvisor_id}}",
									"type": "text"
								},
								{
									"key": "client_secret",
									"value": "{{Estudentadvisor_secret}}",
									"type": "text"
								},
								{
									"key": "resource",
									"value": "{{Eresource}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "https://login.microsoftonline.com/{{Eredirectid}}/oauth2/token",
							"protocol": "https",
							"host": [
								"login",
								"microsoftonline",
								"com"
							],
							"path": [
								"{{Eredirectid}}",
								"oauth2",
								"token"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Marketing List",
			"item": [
				{
					"name": "Create Static Marketing List and associate Contact records",
					"item": [
						{
							"name": "Create Static Marketing List",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var listid;",
											"pm.test(\"Marketing List Created\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202,204]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    listid = jsonData.listid;",
											"    ",
											"    var SGName =jsonData.listname;   ",
											"    var stateid = jsonData.statecode;",
											"    console.log('ML name:'+SGName);",
											" ",
											"",
											"});",
											"",
											"pm.globals.set('glistid', listid);",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"listname\": \"Static ScoringModel{{$randomFullName}}{{$randomInt}}{{$randomInt}}\",\r\n    \"type\": false,\r\n    \"createdfromcode\": 2,\r\n    \"cmc_marketinglisttype\": 175490000\r\n   \r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}lists",
									"host": [
										"{{Eresource_URL}}lists"
									]
								}
							},
							"response": []
						},
						{
							"name": "Adding Contacts 1 & 2 to Marketing List1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Contacts Addedd to Marketing list\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 204, 201, 202]);",
											"",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"List\": {\r\n        \"listid\": \"{{glistid}}\",\r\n        \"@odata.type\": \"Microsoft.Dynamics.CRM.list\"\r\n    },\r\n    \"Members\": [\r\n        {\r\n            \"@odata.type\": \"Microsoft.Dynamics.CRM.contact\",\r\n            \"contactid\": \"{{gcontactidStudent1}}\"\r\n        },\r\n        {\r\n            \"@odata.type\": \"Microsoft.Dynamics.CRM.contact\",\r\n            \"contactid\": \"{{gcontactidStudent2}}\"\r\n        }\r\n    ]\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}AddListMembersList",
									"host": [
										"{{Eresource_URL}}AddListMembersList"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Create Dynamic Marketing List and associate Contact records",
					"item": [
						{
							"name": "Create Dynamic Marketing List for adding contacts 2,3,4 &5",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var listid,SGName,expirationdate,membercount;",
											"pm.test(\"Student Group Created\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202,204]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    listid = jsonData.listid;",
											"    membercount =jsonData.membercount;     ",
											"    SGName =jsonData.listname;   ",
											" ",
											"});",
											"",
											"pm.globals.set('glistid1', listid);",
											"console.log(\"SGName: \" +SGName);",
											"console.log(\"listid: \" +listid);",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"listname\":\"Dynamic ScoringModel{{$randomFullName}}{{$randomInt}}{{$randomInt}}\",\r\n\"description\": \"{{$randomAbbreviation}}\",\r\n\"createdfromcode\":2,\r\n\"type\": true,\r\n\"query\": \"<fetch version=\\\"1.0\\\" output-format=\\\"xml-platform\\\" mapping=\\\"logical\\\" distinct=\\\"true\\\">\\n    <entity name=\\\"contact\\\">\\n        <attribute name=\\\"fullname\\\"/>\\n        <attribute name=\\\"telephone1\\\"/>\\n        <attribute name=\\\"contactid\\\"/>\\n        <order attribute=\\\"fullname\\\" descending=\\\"false\\\"/>\\n        <filter type=\\\"and\\\">\\n            <condition attribute=\\\"firstname\\\" operator=\\\"like\\\" value=\\\"%{{globalsessionvalue}}\\\"/>\\n        </filter>\\n    </entity>\\n</fetch>\"\r\n}\r\n"
								},
								"url": {
									"raw": "{{Eresource_URL}}lists",
									"host": [
										"{{Eresource_URL}}lists"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Scoring Factor",
			"item": [
				{
					"name": "Create Scoring Factor 1 with Query1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									" var scoringfactor1,points;",
									"pm.test(\"Scoring factor is Created\", function()",
									"{",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
									"    var jsonData = JSON.parse(responseBody);",
									"    scoringfactor1 = jsonData.cmc_scoringfactorid;",
									"    console.log('Scoring factor ID:' +scoringfactor1);",
									"    var scoringfactorname= jsonData.cmc_scoringfactorname;",
									"    console.log('Scoring factor that is created is:' +scoringfactorname);",
									"    points=jsonData.cmc_points;",
									"",
									"});",
									"",
									"pm.globals.set('gscoringfactorid1',scoringfactor1);",
									"pm.globals.set('gpoints1',points);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{gaccess_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Prefer",
								"value": "return=representation"
							},
							{
								"key": "OData-MaxVersion",
								"value": "4.0"
							},
							{
								"description": " ",
								"key": "OData-Version",
								"value": "4.0"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"cmc_scoringfactorname\": \"SF-Application Query1 {{globalsessionvalue}}{{$randomInt}}{{$randomInt}}\",\r\n    \"cmc_baseentity\": \"cmc_application\",\r\n    \"cmc_conditionxml\": \"<fetch version=\\\"1.0\\\" output-format=\\\"xml-platform\\\" mapping=\\\"logical\\\" distinct=\\\"true\\\"><entity name=\\\"cmc_application\\\"><attribute name=\\\"cmc_applicationid\\\"/><attribute name=\\\"createdon\\\"/><attribute name=\\\"cmc_contactid\\\"/><attribute name=\\\"cmc_applicationname\\\"/><order attribute=\\\"createdon\\\" descending=\\\"false\\\"/><link-entity name=\\\"contact\\\" from=\\\"contactid\\\" to=\\\"cmc_contactid\\\" link-type=\\\"inner\\\" alias=\\\"aj\\\"><filter type=\\\"and\\\"><condition attribute=\\\"cmc_recentsat\\\" operator=\\\"eq\\\" value=\\\"25\\\"/></filter><link-entity name=\\\"mshied_testscore\\\" from=\\\"mshied_studentid\\\" to=\\\"contactid\\\" link-type=\\\"inner\\\" alias=\\\"ak\\\"><filter type=\\\"and\\\"><condition attribute=\\\"mshied_satevidencebasedreadingandwritingsection\\\" operator=\\\"eq\\\" value=\\\"500\\\"/></filter></link-entity></link-entity></entity></fetch>\",\r\n\r\n    \"cmc_points\": 45,\r\n    \"cmc_description\": \"Scoring factor for Application{{$randomInt}}\",\r\n    \"cmc_baseentityname\": \"Application\"\r\n}\r\n\r\n"
						},
						"url": {
							"raw": "{{Eresource_URL}}cmc_scoringfactors",
							"host": [
								"{{Eresource_URL}}cmc_scoringfactors"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Scoring Factor 2 with Query2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									" var scoringfactor1,points;",
									"pm.test(\"Scoring factor is Created\", function()",
									"{",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
									"    var jsonData = JSON.parse(responseBody);",
									"    scoringfactor1 = jsonData.cmc_scoringfactorid;",
									"    console.log('Scoring factor ID:' +scoringfactor1);",
									"    var scoringfactorname= jsonData.cmc_scoringfactorname;",
									"    console.log('Scoring factor that is created is:' +scoringfactorname);",
									"    points=jsonData.cmc_points;",
									"",
									"});",
									"",
									"pm.globals.set('gscoringfactorid2',scoringfactor1);",
									"pm.globals.set('gpoints2',points);",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{gaccess_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Prefer",
								"value": "return=representation"
							},
							{
								"key": "OData-MaxVersion",
								"value": "4.0"
							},
							{
								"description": " ",
								"key": "OData-Version",
								"value": "4.0"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"cmc_scoringfactorname\": \"SF-Application Query2 {{globalsessionvalue}}{{$randomInt}}{{$randomInt}}\",\r\n    \"cmc_baseentity\": \"cmc_application\",\r\n    \"cmc_conditionxml\": \"<fetch version=\\\"1.0\\\" output-format=\\\"xml-platform\\\" mapping=\\\"logical\\\" distinct=\\\"true\\\"><entity name=\\\"cmc_application\\\"><attribute name=\\\"cmc_applicationid\\\"/><attribute name=\\\"createdon\\\"/><attribute name=\\\"cmc_contactid\\\"/><attribute name=\\\"cmc_applicationname\\\"/><order attribute=\\\"createdon\\\" descending=\\\"false\\\"/><link-entity name=\\\"cmc_applicationrequirement\\\" from=\\\"cmc_applicationid\\\" to=\\\"cmc_applicationid\\\" link-type=\\\"inner\\\" alias=\\\"ad\\\"><filter type=\\\"and\\\"><condition attribute=\\\"cmc_requirementtype\\\" operator=\\\"eq\\\" value=\\\"175490001\\\"/><condition attribute=\\\"cmc_requirementstatus\\\" operator=\\\"eq\\\" value=\\\"175490000\\\"/></filter></link-entity></entity></fetch>\",\r\n    \r\n    \"cmc_points\": 30,\r\n    \"cmc_description\": \"Scoring factor for Application{{$randomInt}}\",\r\n    \"cmc_baseentityname\": \"Application\"\r\n}\r\n\r\n"
						},
						"url": {
							"raw": "{{Eresource_URL}}cmc_scoringfactors",
							"host": [
								"{{Eresource_URL}}cmc_scoringfactors"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Scoring Factor 3 with Query3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									" var scoringfactor1,points;",
									"pm.test(\"Scoring factor is Created\", function()",
									"{",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
									"    var jsonData = JSON.parse(responseBody);",
									"    scoringfactor1 = jsonData.cmc_scoringfactorid;",
									"    console.log('Scoring factor ID:' +scoringfactor1);",
									"    var scoringfactorname= jsonData.cmc_scoringfactorname;",
									"    console.log('Scoring factor that is created is:' +scoringfactorname);",
									"    points=jsonData.cmc_points;",
									"",
									"});",
									"",
									"pm.globals.set('gscoringfactorid3',scoringfactor1);",
									"pm.globals.set('gpoints3',points);",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{gaccess_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Prefer",
								"value": "return=representation"
							},
							{
								"key": "OData-MaxVersion",
								"value": "4.0"
							},
							{
								"description": " ",
								"key": "OData-Version",
								"value": "4.0"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"cmc_scoringfactorname\": \"SF-Application Query3 {{globalsessionvalue}}{{$randomInt}}{{$randomInt}}\",\r\n    \"cmc_baseentity\": \"cmc_application\",\r\n    \"cmc_conditionxml\": \"<fetch version=\\\"1.0\\\" output-format=\\\"xml-platform\\\" mapping=\\\"logical\\\" distinct=\\\"true\\\"><entity name=\\\"cmc_application\\\"><attribute name=\\\"cmc_applicationid\\\"/><attribute name=\\\"createdon\\\"/><attribute name=\\\"cmc_contactid\\\"/><attribute name=\\\"cmc_applicationname\\\"/><order attribute=\\\"createdon\\\" descending=\\\"false\\\"/><link-entity name=\\\"cmc_applicationrecommendation\\\" from=\\\"cmc_applicationid\\\" to=\\\"cmc_applicationid\\\" link-type=\\\"inner\\\" alias=\\\"ab\\\"><filter type=\\\"and\\\"><condition attribute=\\\"cmc_recommendationtype\\\" operator=\\\"eq\\\" value=\\\"175490001\\\"/><condition attribute=\\\"cmc_recommendedbyid\\\" operator=\\\"eq\\\" uiname=\\\"{{gcontactName2}}\\\" uitype=\\\"contact\\\" value=\\\"{{{gcontactidStudent2}}}\\\"/></filter></link-entity></entity></fetch>\",\r\n    \r\n    \"cmc_points\": 20,\r\n    \"cmc_description\": \"Scoring factor for Application{{$randomInt}}\",\r\n    \"cmc_baseentityname\": \"Application\"\r\n}\r\n\r\n"
						},
						"url": {
							"raw": "{{Eresource_URL}}cmc_scoringfactors",
							"host": [
								"{{Eresource_URL}}cmc_scoringfactors"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Score Definition",
			"item": [
				{
					"name": "Create ScoreDefinition",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var scoredefinitionid,targetAttribute,dateLastRun;",
									"pm.test(\"Score Definition for Application is Created\", function() ",
									"{",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202,204]);",
									"    var jsonData =JSON.parse(responseBody);",
									"    scoredefinitionid =jsonData.cmc_scoredefinitionid;",
									"    console.log('Score definition ID:' +scoredefinitionid);",
									"    var scoredefinitionname= jsonData.cmc_scoredefinitionname;",
									"    console.log('Score Definition that is created is:' +scoredefinitionname);",
									"    var scheduleinterval=jsonData.cmc_scheduleinterval;",
									"    pm.globals.set('gscheduleinterval',scheduleinterval);",
									"",
									"    targetAttribute=jsonData.cmc_targetattributename;",
									"    dateLastRun=jsonData.cmc_datelastrun;",
									"});",
									"",
									"pm.globals.set('gscoredefinitionid',scoredefinitionid);",
									"pm.globals.set('gtargetAttribute',targetAttribute);",
									"pm.globals.set('gdateLastRun',dateLastRun);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{gaccess_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Prefer",
								"value": "return=representation"
							},
							{
								"key": "OData-MaxVersion",
								"value": "4.0"
							},
							{
								"key": "OData-Version",
								"value": "4.0",
								"description": " "
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"cmc_scoredefinitionname\": \"ScoreDefinition-API-{{globalsessionvalue}}{{$randomInt}}{{$randomInt}}\",\r\n    \"cmc_scheduleinterval\": 0,\r\n    \"cmc_redscorethreshold\": 20,\r\n    \"cmc_yellowscorethreshold\": 30,\r\n    \"cmc_greenscorethreshold\": 40,\r\n    \"cmc_baseentity\": \"cmc_application\",\r\n    \"cmc_targetattributename\": \"cmc_application.utcconversiontimezonecode\",\r\n    \"cmc_baseentityname\": \"Application\",\r\n    \"cmc_recalculaterecords\": false,\r\n    \"cmc_scoredefinitionbatchsize\": 100\r\n}"
						},
						"url": {
							"raw": "{{Eresource_URL}}cmc_scoredefinitions",
							"host": [
								"{{Eresource_URL}}cmc_scoredefinitions"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Association of ML and SF to ScoreDefinition",
			"item": [
				{
					"name": "Adding Marketing List1 ToScoreDefinition",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Adding Marketing List To Score Definition\", function() ",
									"{",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
									"    var jsonData = JSON.parse(responseBody);",
									"    ",
									"    var listname = jsonData.listname;",
									"    console.log(\"Marketing list which is added to Score definition is:\"  +listname);",
									"",
									"  ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{gaccess_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Prefer",
								"value": "return=representation"
							},
							{
								"key": "OData-MaxVersion",
								"value": "4.0"
							},
							{
								"key": "OData-Version",
								"value": "4.0",
								"description": " "
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"@odata.id\": \"{{Eresource_URL}}lists({{glistid}})\"\r\n}"
						},
						"url": {
							"raw": "{{Eresource_URL}}cmc_scoredefinitions({{gscoredefinitionid}})/cmc_scoredefinition_list/$ref",
							"host": [
								"{{Eresource_URL}}cmc_scoredefinitions({{gscoredefinitionid}})"
							],
							"path": [
								"cmc_scoredefinition_list",
								"$ref"
							]
						}
					},
					"response": []
				},
				{
					"name": "Adding Marketing List2 ToScoreDefinition",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Adding Marketing List 2 To Score Definition\", function() ",
									"{",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
									"    var jsonData = JSON.parse(responseBody);",
									"    ",
									"    var listname = jsonData.listname;",
									"    console.log(\"Marketing list which is added to Score definition is:\"  +listname);",
									"",
									"  ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{gaccess_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Prefer",
								"value": "return=representation"
							},
							{
								"key": "OData-MaxVersion",
								"value": "4.0"
							},
							{
								"description": " ",
								"key": "OData-Version",
								"value": "4.0"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"@odata.id\": \"{{Eresource_URL}}lists({{glistid1}})\"\r\n}"
						},
						"url": {
							"raw": "{{Eresource_URL}}cmc_scoredefinitions({{gscoredefinitionid}})/cmc_scoredefinition_list/$ref",
							"host": [
								"{{Eresource_URL}}cmc_scoredefinitions({{gscoredefinitionid}})"
							],
							"path": [
								"cmc_scoredefinition_list",
								"$ref"
							]
						}
					},
					"response": []
				},
				{
					"name": "Adding ScoringFactor 1 ToScoreDefinition",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Adding Scoring Factor To Score Definition\", function() ",
									"{",
									"    pm.expect(pm.response.code).to.be.oneOf([204,201,202,200]);",
									"    var jsonData =JSON.parse(responseBody);",
									"    Scoringfactorname =jsonData.cmc_scoringfactorname;",
									"    console.log('Scoring factor that is added to Score definition is:' +Scoringfactorname);",
									"    ",
									"  ",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{gaccess_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Prefer",
								"value": "return=representation"
							},
							{
								"key": "OData-MaxVersion",
								"value": "4.0"
							},
							{
								"description": " ",
								"key": "OData-Version",
								"value": "4.0"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"@odata.id\": \"{{Eresource_URL}}cmc_scoringfactors({{gscoringfactorid1}})\"\r\n}"
						},
						"url": {
							"raw": "{{Eresource_URL}}cmc_scoredefinitions({{gscoredefinitionid}})/cmc_scoredefinition_scoringfactor/$ref",
							"host": [
								"{{Eresource_URL}}cmc_scoredefinitions({{gscoredefinitionid}})"
							],
							"path": [
								"cmc_scoredefinition_scoringfactor",
								"$ref"
							]
						}
					},
					"response": []
				},
				{
					"name": "Adding ScoringFactor 2 ToScoreDefinition",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Adding Scoring Factor To Score Definition\", function() ",
									"{",
									"    pm.expect(pm.response.code).to.be.oneOf([204,201,202,200]);",
									"    var jsonData =JSON.parse(responseBody);",
									"    Scoringfactorname =jsonData.cmc_scoringfactorname;",
									"    console.log('Scoring factor that is added to Score definition is:' +Scoringfactorname);",
									"    ",
									"  ",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{gaccess_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Prefer",
								"value": "return=representation"
							},
							{
								"key": "OData-MaxVersion",
								"value": "4.0"
							},
							{
								"description": " ",
								"key": "OData-Version",
								"value": "4.0"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"@odata.id\": \"{{Eresource_URL}}cmc_scoringfactors({{gscoringfactorid2}})\"\r\n}"
						},
						"url": {
							"raw": "{{Eresource_URL}}cmc_scoredefinitions({{gscoredefinitionid}})/cmc_scoredefinition_scoringfactor/$ref",
							"host": [
								"{{Eresource_URL}}cmc_scoredefinitions({{gscoredefinitionid}})"
							],
							"path": [
								"cmc_scoredefinition_scoringfactor",
								"$ref"
							]
						}
					},
					"response": []
				},
				{
					"name": "Adding ScoringFactor 3 ToScoreDefinition",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Adding Scoring Factor To Score Definition\", function() ",
									"{",
									"    pm.expect(pm.response.code).to.be.oneOf([204,201,202,200]);",
									"    var jsonData =JSON.parse(responseBody);",
									"    Scoringfactorname =jsonData.cmc_scoringfactorname;",
									"    console.log('Scoring factor that is added to Score definition is:' +Scoringfactorname);",
									"    ",
									"  ",
									"});",
									"",
									"setTimeout(function(){}, 130000); "
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{gaccess_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Prefer",
								"value": "return=representation"
							},
							{
								"key": "OData-MaxVersion",
								"value": "4.0"
							},
							{
								"description": " ",
								"key": "OData-Version",
								"value": "4.0"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"@odata.id\": \"{{Eresource_URL}}cmc_scoringfactors({{gscoringfactorid3}})\"\r\n}"
						},
						"url": {
							"raw": "{{Eresource_URL}}cmc_scoredefinitions({{gscoredefinitionid}})/cmc_scoredefinition_scoringfactor/$ref",
							"host": [
								"{{Eresource_URL}}cmc_scoredefinitions({{gscoredefinitionid}})"
							],
							"path": [
								"cmc_scoredefinition_scoringfactor",
								"$ref"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Scenario 1- Verify Score calculation",
			"item": [
				{
					"name": "Verify Target Attribute and Score history in Application",
					"item": [
						{
							"name": "Verify target Attribute value in Application 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var targetValue, applicationName;",
											"var currentretentionscoredate;",
											"pm.test(\"Fetch Target Attribute value\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    ",
											"    targetValue=jsonData.utcconversiontimezonecode;",
											"    currentretentionscoredate =jsonData.cmc_currentretentionscoredate;",
											"    applicationName= jsonData.cmc_applicationname;",
											"     ",
											"    console.log(\"Application name is: \"+applicationName);",
											"    console.log(\"Target Attribute value is: \"+targetValue);",
											"    console.log(\"currentretentionscoredate: \"+currentretentionscoredate);",
											"",
											"    pm.test(\"Scores awarded to Application 1\", function()",
											"        {",
											"            pm.expect(targetValue).to.equal(45);",
											"        });",
											" ",
											"});",
											"",
											"pm.globals.set('gtargetValue1',targetValue);",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									}
								],
								"url": {
									"raw": "{{Eresource_URL}}cmc_applications({{gAppID1}})",
									"host": [
										"{{Eresource_URL}}cmc_applications({{gAppID1}})"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Active ScoreHistories for Application 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var score,scoreHistoryName, retentionScoreHistoryId, targetAttribute,lastCalculatedDate, createdOn,autoname,scoreDefinition ;",
											"",
											"pm.test(\"Check the score history record for Application\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    var result=jsonData.cmc_application_retentionscorehistory_applica;",
											"",
											"    if(result.length===1)",
											"    {",
											"        retentionScoreHistoryId= result[0].cmc_retentionscorehistoryid;",
											"        score= result[0].cmc_score;",
											"        scoreHistoryName= result[0].cmc_retentionscorehistoryname;",
											"        targetAttribute= result[0].cmc_targetattribute;",
											"        lastCalculatedDate= result[0].cmc_lastcalculateddate;",
											"        createdOn= result[0].createdon;",
											"        scoreDefinition=result[0]._cmc_scoredefinitionid_value;",
											"",
											"        var dateFromResponse = new Date(lastCalculatedDate);",
											"        var convertedLastCalculatedDate =dateFromResponse.getFullYear()+\"-\"+(\"0\" + (dateFromResponse.getMonth() + 1)).slice(-2)+\"-\"+(\"0\" + (dateFromResponse.getDate())).slice(-2);",
											"        ",
											"        console.log(\"Target score in Score history record is:\" +score);",
											"        console.log(\"Score history name is:\" +scoreHistoryName);",
											"        console.log(\"Target Attribute is:\" +targetAttribute);",
											"        console.log(\"Last Calculated date is:\" +lastCalculatedDate);",
											"        console.log(\"created on is:\" +createdOn);",
											"",
											"        var actualScoreDefintion=pm.globals.get('gscoredefinitionid');",
											"        var actualTargetAttribute=\"utcconversiontimezonecode\";",
											"        var actualcalculatedDate=pm.environment.get('timestamp');",
											"",
											"        console.log(\"actual calculated date is: \"+actualcalculatedDate);",
											"",
											"        pm.test(\"Last Calculated Date check\", function()",
											"        {",
											"            pm.expect(actualcalculatedDate).to.equal(convertedLastCalculatedDate);",
											"        });  ",
											"",
											"        //Autonme Workflow check for Score History Name",
											"        nameString =scoreHistoryName.split(\"-\");",
											"        ",
											"        autoname= pm.globals.get('gAppName1')+\" \"+\"-\"+\" \"+score+\" \"+\"-\"+nameString[nameString.length-1];      ",
											"        console.log(\"Score History Autoname is: \"+autoname);",
											"               ",
											"        pm.test(\"Autonme Workflow check for Score History Name\", function()",
											"        {",
											"            pm.expect(scoreHistoryName).to.equal(autoname);",
											"        });",
											"         ",
											"        pm.test(\"Score value in Score History record\", function()",
											"        {",
											"            pm.expect(score).to.equal(45);",
											"        });",
											"",
											"        pm.test(\"Score Definition check\", function()",
											"        {",
											"            pm.expect(actualScoreDefintion).to.equal(scoreDefinition);",
											"        });",
											"",
											"        pm.test(\"Target Attribute check\", function()",
											"        {",
											"            pm.expect(actualTargetAttribute).to.equal(targetAttribute);",
											"        });   ",
											"        ",
											"    }",
											"    else",
											"    {",
											"        console.log(\"Active Score history record does't exist\");",
											"        throw new Error();",
											"    }",
											"",
											"    ",
											"});",
											"",
											"pm.globals.set('gretentionScoreHistoryId1',retentionScoreHistoryId);",
											"pm.globals.set('gscore1',score);",
											"pm.globals.set('lastCalculatedDate1',lastCalculatedDate);",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"  var moment = require('moment');\r",
											"pm.environment.set(\"timestamp\", moment().format(\"YYYY-MM-DD\"));\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applications({{gAppID1}})?$expand=cmc_application_retentionscorehistory_applica\n($filter=statecode eq 0)\n",
									"host": [
										"{{Eresource_URL}}cmc_applications({{gAppID1}})"
									],
									"query": [
										{
											"key": "$expand",
											"value": "cmc_application_retentionscorehistory_applica\n($filter=statecode eq 0)\n"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Verify target Attribute value in Application 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var targetValue, applicationName;",
											"var currentretentionscoredate;",
											"pm.test(\"Fetch Target Attribute value\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    ",
											"    targetValue=jsonData.utcconversiontimezonecode;",
											"    currentretentionscoredate =jsonData.cmc_currentretentionscoredate;",
											"    applicationName= jsonData.cmc_applicationname;",
											"     ",
											"    console.log(\"Application name is: \"+applicationName);",
											"    console.log(\"Target Attribute value is: \"+targetValue);",
											"    console.log(\"currentretentionscoredate: \"+currentretentionscoredate);",
											"",
											"    pm.test(\"Scores awarded to Application 2\", function()",
											"        {",
											"            pm.expect(targetValue).to.equal(30);",
											"        });",
											" ",
											"});",
											"",
											"pm.globals.set('gtargetValue2',targetValue);",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									}
								],
								"url": {
									"raw": "{{Eresource_URL}}cmc_applications({{gAppID2}})",
									"host": [
										"{{Eresource_URL}}cmc_applications({{gAppID2}})"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Active ScoreHistories for Application 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var score,scoreHistoryName, retentionScoreHistoryId, targetAttribute,lastCalculatedDate, createdOn,autoname,scoreDefinition ;",
											"",
											"pm.test(\"Check the score history record for Application\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    var result=jsonData.cmc_application_retentionscorehistory_applica;",
											"",
											"    if(result.length===1)",
											"    {",
											"       retentionScoreHistoryId= result[0].cmc_retentionscorehistoryid;",
											"        score= result[0].cmc_score;",
											"        scoreHistoryName= result[0].cmc_retentionscorehistoryname;",
											"        targetAttribute= result[0].cmc_targetattribute;",
											"        lastCalculatedDate= result[0].cmc_lastcalculateddate;",
											"        createdOn= result[0].createdon;",
											"        scoreDefinition=result[0]._cmc_scoredefinitionid_value;",
											"",
											"        var dateFromResponse = new Date(lastCalculatedDate);",
											"        var convertedLastCalculatedDate =dateFromResponse.getFullYear()+\"-\"+(\"0\" + (dateFromResponse.getMonth() + 1)).slice(-2)+\"-\"+(\"0\" + (dateFromResponse.getDate())).slice(-2);",
											"        ",
											"        console.log(\"Target score in Score history record is:\" +score);",
											"        console.log(\"Score history name is:\" +scoreHistoryName);",
											"        console.log(\"Target Attribute is:\" +targetAttribute);",
											"        console.log(\"Last Calculated date is:\" +lastCalculatedDate);",
											"        console.log(\"created on is:\" +createdOn);",
											"",
											"        var actualScoreDefintion=pm.globals.get('gscoredefinitionid');",
											"        var actualTargetAttribute=\"utcconversiontimezonecode\";",
											"        var actualcalculatedDate=pm.environment.get('timestamp');",
											"",
											"        console.log(\"actual calculated date is: \"+actualcalculatedDate);",
											"",
											"        pm.test(\"Last Calculated Date check\", function()",
											"        {",
											"            pm.expect(actualcalculatedDate).to.equal(convertedLastCalculatedDate);",
											"        }); ",
											"",
											"        //Autonme Workflow check for Score History Name",
											"        nameString =scoreHistoryName.split(\"-\");",
											"        ",
											"        autoname= pm.globals.get('gAppName2')+\" \"+\"-\"+\" \"+score+\" \"+\"-\"+nameString[nameString.length-1];      ",
											"        console.log(\"Score History Autoname is: \"+autoname);",
											"               ",
											"        pm.test(\"Autonme Workflow check for Score History Name\", function()",
											"        {",
											"            pm.expect(scoreHistoryName).to.equal(autoname);",
											"        });",
											"         ",
											"        pm.test(\"Score value in Score History record\", function()",
											"        {",
											"            pm.expect(score).to.equal(30);",
											"        });",
											"",
											"        pm.test(\"Score Definition check\", function()",
											"        {",
											"            pm.expect(actualScoreDefintion).to.equal(scoreDefinition);",
											"        });",
											"",
											"        pm.test(\"Target Attribute check\", function()",
											"        {",
											"            pm.expect(actualTargetAttribute).to.equal(targetAttribute);",
											"        });   ",
											"        ",
											"    }",
											"    else",
											"    {",
											"        console.log(\"Active Score history record does't exist\");",
											"        throw new Error();",
											"    }",
											"",
											"    ",
											"});",
											"",
											"pm.globals.set('gretentionScoreHistoryId2',retentionScoreHistoryId);",
											"pm.globals.set('gscore2',score);",
											"pm.globals.set('lastCalculatedDate2',lastCalculatedDate);",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"  var moment = require('moment');\r",
											"pm.environment.set(\"timestamp\", moment().format(\"YYYY-MM-DD\"));"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applications({{gAppID2}})?$expand=cmc_application_retentionscorehistory_applica\n($filter=statecode eq 0)\n",
									"host": [
										"{{Eresource_URL}}cmc_applications({{gAppID2}})"
									],
									"query": [
										{
											"key": "$expand",
											"value": "cmc_application_retentionscorehistory_applica\n($filter=statecode eq 0)\n"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Verify target Attribute value in Application 3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var targetValue, applicationName;",
											"var currentretentionscoredate;",
											"pm.test(\"Fetch Target Attribute value\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    ",
											"    targetValue=jsonData.utcconversiontimezonecode;",
											"    currentretentionscoredate =jsonData.cmc_currentretentionscoredate;",
											"    applicationName= jsonData.cmc_applicationname;",
											"     ",
											"    console.log(\"Application name is: \"+applicationName);",
											"    console.log(\"Target Attribute value is: \"+targetValue);",
											"    console.log(\"currentretentionscoredate: \"+currentretentionscoredate);",
											"",
											"    pm.test(\"Scores awarded to Application 3\", function()",
											"        {",
											"            pm.expect(targetValue).to.equal(20);",
											"        });",
											" ",
											"});",
											"",
											"pm.globals.set('gtargetValue3',targetValue);",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									}
								],
								"url": {
									"raw": "{{Eresource_URL}}cmc_applications({{gAppID3}})",
									"host": [
										"{{Eresource_URL}}cmc_applications({{gAppID3}})"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Active ScoreHistories for Application 3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var score,scoreHistoryName, retentionScoreHistoryId, targetAttribute,lastCalculatedDate, createdOn,autoname,scoreDefinition ;",
											"",
											"pm.test(\"Check the score history record for Application\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    var result=jsonData.cmc_application_retentionscorehistory_applica;",
											"",
											"    if(result.length===1)",
											"    {",
											"        retentionScoreHistoryId= result[0].cmc_retentionscorehistoryid;",
											"        score= result[0].cmc_score;",
											"        scoreHistoryName= result[0].cmc_retentionscorehistoryname;",
											"        targetAttribute= result[0].cmc_targetattribute;",
											"        lastCalculatedDate= result[0].cmc_lastcalculateddate;",
											"        createdOn= result[0].createdon;",
											"        scoreDefinition=result[0]._cmc_scoredefinitionid_value;",
											"",
											"        var dateFromResponse = new Date(lastCalculatedDate);",
											"        var convertedLastCalculatedDate =dateFromResponse.getFullYear()+\"-\"+(\"0\" + (dateFromResponse.getMonth() + 1)).slice(-2)+\"-\"+(\"0\" + (dateFromResponse.getDate())).slice(-2);",
											"        ",
											"        console.log(\"Target score in Score history record is:\" +score);",
											"        console.log(\"Score history name is:\" +scoreHistoryName);",
											"        console.log(\"Target Attribute is:\" +targetAttribute);",
											"        console.log(\"Last Calculated date is:\" +lastCalculatedDate);",
											"        console.log(\"created on is:\" +createdOn);",
											"",
											"        var actualScoreDefintion=pm.globals.get('gscoredefinitionid');",
											"        var actualTargetAttribute=\"utcconversiontimezonecode\";",
											"        var actualcalculatedDate=pm.environment.get('timestamp');",
											"",
											"        console.log(\"actual calculated date is: \"+actualcalculatedDate);",
											"",
											"        pm.test(\"Last Calculated Date check\", function()",
											"        {",
											"            pm.expect(actualcalculatedDate).to.equal(convertedLastCalculatedDate);",
											"        }); ",
											"",
											"        //Autonme Workflow check for Score History Name",
											"        nameString =scoreHistoryName.split(\"-\");",
											"        ",
											"        autoname= pm.globals.get('gAppName3')+\" \"+\"-\"+\" \"+score+\" \"+\"-\"+nameString[nameString.length-1];      ",
											"        console.log(\"Score History Autoname is: \"+autoname);",
											"               ",
											"        pm.test(\"Autonme Workflow check for Score History Name\", function()",
											"        {",
											"            pm.expect(scoreHistoryName).to.equal(autoname);",
											"        });",
											"         ",
											"        pm.test(\"Score value in Score History record\", function()",
											"        {",
											"            pm.expect(score).to.equal(20);",
											"        });",
											"",
											"        pm.test(\"Score Definition check\", function()",
											"        {",
											"            pm.expect(actualScoreDefintion).to.equal(scoreDefinition);",
											"        });",
											"",
											"        pm.test(\"Target Attribute check\", function()",
											"        {",
											"            pm.expect(actualTargetAttribute).to.equal(targetAttribute);",
											"        });   ",
											"        ",
											"    }",
											"    else",
											"    {",
											"        console.log(\"Active Score history record does't exist\");",
											"        throw new Error();",
											"    }",
											"",
											"    ",
											"});",
											"",
											"pm.globals.set('gretentionScoreHistoryId3',retentionScoreHistoryId);",
											"pm.globals.set('gscore3',score);",
											"pm.globals.set('lastCalculatedDate3',lastCalculatedDate);",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"  var moment = require('moment');\r",
											"pm.environment.set(\"timestamp\", moment().format(\"YYYY-MM-DD\"));"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applications({{gAppID3}})?$expand=cmc_application_retentionscorehistory_applica\n($filter=statecode eq 0)\n",
									"host": [
										"{{Eresource_URL}}cmc_applications({{gAppID3}})"
									],
									"query": [
										{
											"key": "$expand",
											"value": "cmc_application_retentionscorehistory_applica\n($filter=statecode eq 0)\n"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Verify target Attribute value in Application 4",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var targetValue, applicationName;",
											"var currentretentionscoredate;",
											"pm.test(\"Fetch Target Attribute value\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    ",
											"    targetValue=jsonData.utcconversiontimezonecode;",
											"    currentretentionscoredate =jsonData.cmc_currentretentionscoredate;",
											"    applicationName= jsonData.cmc_applicationname;",
											"     ",
											"    console.log(\"Application name is: \"+applicationName);",
											"    console.log(\"Target Attribute value is: \"+targetValue);",
											"    console.log(\"currentretentionscoredate: \"+currentretentionscoredate);",
											"",
											"    pm.test(\"Scores awarded to Application 4\", function()",
											"        {",
											"            pm.expect(targetValue).to.equal(null);",
											"        });",
											" ",
											"});",
											"",
											"pm.globals.set('gtargetValue4',targetValue);",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									}
								],
								"url": {
									"raw": "{{Eresource_URL}}cmc_applications({{gAppID4}})",
									"host": [
										"{{Eresource_URL}}cmc_applications({{gAppID4}})"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Active ScoreHistories for Application 4",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"",
											"pm.test(\"Check the score history record for Application\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    var result=jsonData.cmc_application_retentionscorehistory_applica;",
											"",
											"    if(result.length===1)",
											"    {",
											"        retentionScoreHistoryId= result[0].cmc_retentionscorehistoryid;",
											"        score= result[0].cmc_score;",
											"        scoreHistoryName= result[0].cmc_retentionscorehistoryname;",
											"        targetAttribute= result[0].cmc_targetattribute;",
											"        lastCalculatedDate= result[0].cmc_lastcalculateddate;",
											"        createdOn= result[0].createdon;",
											"        scoreDefinition=result[0]._cmc_scoredefinitionid_value;",
											"",
											"        var dateFromResponse = new Date(lastCalculatedDate);",
											"        var convertedLastCalculatedDate =dateFromResponse.getFullYear()+\"-\"+(\"0\" + (dateFromResponse.getMonth() + 1)).slice(-2)+\"-\"+(\"0\" + (dateFromResponse.getDate())).slice(-2);",
											"        ",
											"        console.log(\"Target score in Score history record is:\" +score);",
											"        console.log(\"Score history name is:\" +scoreHistoryName);",
											"        console.log(\"Target Attribute is:\" +targetAttribute);",
											"        console.log(\"Last Calculated date is:\" +lastCalculatedDate);",
											"        console.log(\"created on is:\" +createdOn);",
											"",
											"        var actualScoreDefintion=pm.globals.get('gscoredefinitionid');",
											"        var actualTargetAttribute=\"utcconversiontimezonecode\";",
											"        var actualcalculatedDate=pm.environment.get('timestamp');",
											"",
											"        console.log(\"actual calculated date is: \"+actualcalculatedDate);",
											"",
											"        pm.test(\"Last Calculated Date check\", function()",
											"        {",
											"            pm.expect(actualcalculatedDate).to.equal(convertedLastCalculatedDate);",
											"        }); ",
											"",
											"        //Autonme Workflow check for Score History Name",
											"        nameString =scoreHistoryName.split(\"-\");",
											"        ",
											"        autoname= pm.globals.get('gAppName4')+\" \"+\"-\"+\" \"+\" \"+\"-\"+nameString[nameString.length-1];      ",
											"        console.log(\"Score History Autoname is: \"+autoname);",
											"               ",
											"        pm.test(\"Autonme Workflow check for Score History Name\", function()",
											"        {",
											"            pm.expect(scoreHistoryName).to.equal(autoname);",
											"        });",
											"         ",
											"        pm.test(\"Score value in Score History record\", function()",
											"        {",
											"            pm.expect(score).to.equal(null);",
											"        });",
											"",
											"        pm.test(\"Score Definition check\", function()",
											"        {",
											"            pm.expect(actualScoreDefintion).to.equal(scoreDefinition);",
											"        });",
											"",
											"        pm.test(\"Target Attribute check\", function()",
											"        {",
											"            pm.expect(actualTargetAttribute).to.equal(targetAttribute);",
											"        });   ",
											"        ",
											"    }",
											"    else",
											"    {",
											"        console.log(\"Active Score history record does't exist\");",
											"        throw new Error();",
											"    }",
											"    ",
											"",
											"    ",
											"});",
											"",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applications({{gAppID4}})?$expand=cmc_application_retentionscorehistory_applica\n($filter=statecode eq 0)\n",
									"host": [
										"{{Eresource_URL}}cmc_applications({{gAppID4}})"
									],
									"query": [
										{
											"key": "$expand",
											"value": "cmc_application_retentionscorehistory_applica\n($filter=statecode eq 0)\n"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Verify target Attribute value in Application 5",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var targetValue, applicationName;",
											"var currentretentionscoredate;",
											"pm.test(\"Fetch Target Attribute value\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    ",
											"    targetValue=jsonData.utcconversiontimezonecode;",
											"    currentretentionscoredate =jsonData.cmc_currentretentionscoredate;",
											"    applicationName= jsonData.cmc_applicationname;",
											"     ",
											"    console.log(\"Application name is: \"+applicationName);",
											"    console.log(\"Target Attribute value is: \"+targetValue);",
											"    console.log(\"currentretentionscoredate: \"+currentretentionscoredate);",
											"",
											"    pm.test(\"Scores awarded to Application 5\", function()",
											"        {",
											"            pm.expect(targetValue).to.equal(75);",
											"        });",
											" ",
											"});",
											"",
											"pm.globals.set('gtargetValue5',targetValue);",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									}
								],
								"url": {
									"raw": "{{Eresource_URL}}cmc_applications({{gAppID5}})",
									"host": [
										"{{Eresource_URL}}cmc_applications({{gAppID5}})"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Active ScoreHistories for Application 5",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var score,scoreHistoryName, retentionScoreHistoryId, targetAttribute,lastCalculatedDate, createdOn,autoname,scoreDefinition ;",
											"",
											"pm.test(\"Check the score history record for Application\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    var result=jsonData.cmc_application_retentionscorehistory_applica;",
											"",
											"    if(result.length===1)",
											"    {",
											"        retentionScoreHistoryId= result[0].cmc_retentionscorehistoryid;",
											"        score= result[0].cmc_score;",
											"        scoreHistoryName= result[0].cmc_retentionscorehistoryname;",
											"        targetAttribute= result[0].cmc_targetattribute;",
											"        lastCalculatedDate= result[0].cmc_lastcalculateddate;",
											"        createdOn= result[0].createdon;",
											"        scoreDefinition=result[0]._cmc_scoredefinitionid_value;",
											"",
											"        var dateFromResponse = new Date(lastCalculatedDate);",
											"        var convertedLastCalculatedDate =dateFromResponse.getFullYear()+\"-\"+(\"0\" + (dateFromResponse.getMonth() + 1)).slice(-2)+\"-\"+(\"0\" + (dateFromResponse.getDate())).slice(-2);",
											"        ",
											"        console.log(\"Target score in Score history record is:\" +score);",
											"        console.log(\"Score history name is:\" +scoreHistoryName);",
											"        console.log(\"Target Attribute is:\" +targetAttribute);",
											"        console.log(\"Last Calculated date is:\" +lastCalculatedDate);",
											"        console.log(\"created on is:\" +createdOn);",
											"",
											"        var actualScoreDefintion=pm.globals.get('gscoredefinitionid');",
											"        var actualTargetAttribute=\"utcconversiontimezonecode\";",
											"        var actualcalculatedDate=pm.environment.get('timestamp');",
											"",
											"        console.log(\"actual calculated date is: \"+actualcalculatedDate);",
											"",
											"        pm.test(\"Last Calculated Date check\", function()",
											"        {",
											"            pm.expect(actualcalculatedDate).to.equal(convertedLastCalculatedDate);",
											"        }); ",
											"",
											"        //Autonme Workflow check for Score History Name",
											"        nameString =scoreHistoryName.split(\"-\");",
											"        ",
											"        autoname= pm.globals.get('gAppName5')+\" \"+\"-\"+\" \"+score+\" \"+\"-\"+nameString[nameString.length-1];      ",
											"        console.log(\"Score History Autoname is: \"+autoname);",
											"               ",
											"        pm.test(\"Autonme Workflow check for Score History Name\", function()",
											"        {",
											"            pm.expect(scoreHistoryName).to.equal(autoname);",
											"        });",
											"         ",
											"        pm.test(\"Score value in Score History record\", function()",
											"        {",
											"            pm.expect(score).to.equal(75);",
											"        });",
											"",
											"        pm.test(\"Score Definition check\", function()",
											"        {",
											"            pm.expect(actualScoreDefintion).to.equal(scoreDefinition);",
											"        });",
											"",
											"        pm.test(\"Target Attribute check\", function()",
											"        {",
											"            pm.expect(actualTargetAttribute).to.equal(targetAttribute);",
											"        });   ",
											"        ",
											"    }",
											"    else",
											"    {",
											"        console.log(\"Active Score history record does't exist\");",
											"        throw new Error();",
											"    }",
											"",
											"    ",
											"});",
											"",
											"pm.globals.set('gretentionScoreHistoryId5',retentionScoreHistoryId);",
											"pm.globals.set('gscore5',score);",
											"pm.globals.set('lastCalculatedDate5',lastCalculatedDate);",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"  var moment = require('moment');\r",
											"pm.environment.set(\"timestamp\", moment().format(\"YYYY-MM-DD\"));"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applications({{gAppID5}})?$expand=cmc_application_retentionscorehistory_applica\n($filter=statecode eq 0)\n",
									"host": [
										"{{Eresource_URL}}cmc_applications({{gAppID5}})"
									],
									"query": [
										{
											"key": "$expand",
											"value": "cmc_application_retentionscorehistory_applica\n($filter=statecode eq 0)\n"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Verify 'Date Last Run' & 'last recalculation date'",
					"item": [
						{
							"name": "Verify 'Date Last Run' & 'last recalculation date' in Score Definition",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var dateLastRun,lastRecalculationDate;",
											" ",
											"pm.test(\"Fetch Score definition Record\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    ",
											"    dateLastRun=jsonData.cmc_datelastrun;",
											"    lastRecalculationDate=jsonData.cmc_lastrecalculationdate;",
											"",
											"    var dateFromResponse = new Date(dateLastRun);",
											"    var convertedLastCalculatedDate =dateFromResponse.getFullYear()+\"-\"+(\"0\" + (dateFromResponse.getMonth() + 1)).slice(-2)+\"-\"+(\"0\" + (dateFromResponse.getDate())).slice(-2);",
											"",
											"    var actualcalculatedDate=pm.environment.get('timestamp');",
											"",
											"        console.log(\"actual calculated date is: \"+actualcalculatedDate);",
											"",
											"        pm.test(\"Last Calculated Date check\", function()",
											"        {",
											"            pm.expect(actualcalculatedDate).to.equal(convertedLastCalculatedDate);",
											"        }); ",
											"",
											"    var dateFromResponse1 = new Date(lastRecalculationDate);",
											"    var convertedLastRecalculationDate =dateFromResponse1.getFullYear()+\"-\"+(\"0\" + (dateFromResponse1.getMonth() + 1)).slice(-2)+\"-\"+(\"0\" + (dateFromResponse1.getDate())).slice(-2);",
											"   ",
											"        pm.test(\"Last reCalculated Date check\", function()",
											"        {",
											"            pm.expect(actualcalculatedDate).to.equal(convertedLastRecalculationDate);",
											"        }); ",
											"});",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"  var moment = require('moment');\r",
											"pm.environment.set(\"timestamp\", moment().format(\"YYYY-MM-DD\"));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									}
								],
								"url": {
									"raw": "{{Eresource_URL}}cmc_scoredefinitions({{gscoredefinitionid}})",
									"host": [
										"{{Eresource_URL}}cmc_scoredefinitions({{gscoredefinitionid}})"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Scenario 2: Recalculation along with adding a new scoring factor",
			"item": [
				{
					"name": "Create New Scoring factor record",
					"item": [
						{
							"name": "Create Scoring Factor 4 with Use existing view",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											" var scoringfactor1;",
											"pm.test(\"Scoring factor is Created\", function()",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    scoringfactor1 = jsonData.cmc_scoringfactorid;",
											"    console.log('Scoring factor ID:' +scoringfactor1);",
											"    var scoringfactorname= jsonData.cmc_scoringfactorname;",
											"    console.log('Scoring factor that is created is:' +scoringfactorname);",
											"",
											"});",
											"",
											"pm.globals.set('gscoringfactorid4',scoringfactor1);",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "OData-MaxVersion",
										"value": "4.0"
									},
									{
										"description": " ",
										"key": "OData-Version",
										"value": "4.0"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_scoringfactorname\": \"SF-Application Query4 {{globalsessionvalue}}{{$randomInt}}{{$randomInt}}\",\r\n    \"cmc_baseentity\": \"cmc_application\",\r\n    \"cmc_conditionxml\": \"<fetch version=\\\"1.0\\\" mapping=\\\"logical\\\"><entity name=\\\"cmc_application\\\"><attribute name=\\\"cmc_applicationname\\\" /><attribute name=\\\"createdon\\\" /><order attribute=\\\"cmc_applicationname\\\" descending=\\\"false\\\" /><filter type=\\\"and\\\"><condition attribute=\\\"statecode\\\" operator=\\\"eq\\\" value=\\\"0\\\" /></filter><attribute name=\\\"cmc_submitteddate\\\" /><attribute name=\\\"cmc_applicationstatus\\\" /><attribute name=\\\"cmc_applicationregistration\\\" /><attribute name=\\\"cmc_programid\\\" /><attribute name=\\\"cmc_contactid\\\" /><attribute name=\\\"cmc_applicationid\\\" /></entity></fetch>\",\r\n    \r\n    \"cmc_points\": 50,\r\n    \"cmc_description\": \"Scoring factor for Application{{$randomInt}}\",\r\n    \"cmc_baseentityname\": \"Application\"\r\n}\r\n"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_scoringfactors",
									"host": [
										"{{Eresource_URL}}cmc_scoringfactors"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Associate Scoring Factor to Score Definition",
					"item": [
						{
							"name": "Adding ScoringFactor 4 To ScoreDefinition",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Adding Scoring Factor To Score Definition\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([204,201,202,200]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    Scoringfactorname =jsonData.cmc_scoringfactorname;",
											"    console.log('Scoring factor that is added to Score definition is:' +Scoringfactorname);",
											"    ",
											"  ",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "OData-MaxVersion",
										"value": "4.0"
									},
									{
										"description": " ",
										"key": "OData-Version",
										"value": "4.0"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"@odata.id\": \"{{Eresource_URL}}cmc_scoringfactors({{gscoringfactorid4}})\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_scoredefinitions({{gscoredefinitionid}})/cmc_scoredefinition_scoringfactor/$ref",
									"host": [
										"{{Eresource_URL}}cmc_scoredefinitions({{gscoredefinitionid}})"
									],
									"path": [
										"cmc_scoredefinition_scoringfactor",
										"$ref"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Update score definition record",
					"item": [
						{
							"name": "Update ScoreDefinition",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var scoredefinitionid,targetAttribute;",
											"pm.test(\"Score Definition for Application is Created\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202,204]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    scoredefinitionid =jsonData.cmc_scoredefinitionid;",
											"    console.log('Score definition ID:' +scoredefinitionid);",
											"    var scoredefinitionname= jsonData.cmc_scoredefinitionname;",
											"    console.log('Score Definition that is created is:' +scoredefinitionname);",
											"    var scheduleinterval=jsonData.cmc_scheduleinterval;",
											"    pm.globals.set('gscheduleinterval',scheduleinterval);",
											"",
											"    targetAttribute=jsonData.cmc_targetattributename;",
											"});",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var dt = new Date();\r",
											"        dt.setDate( dt.getDate() - 1 );\r",
											"\r",
											"         console.log(\"date: \"+dt);\r",
											"\r",
											"    var convertedLastCalculatedDate =dt.getFullYear()+\"-\"+(\"0\" + (dt.getMonth() + 1)).slice(-2)+\"-\"+(\"0\" + (dt.getDate())).slice(-2);\r",
											"     console.log(\"date: \"+convertedLastCalculatedDate);\r",
											"\r",
											"     var concatenatetime=convertedLastCalculatedDate+\"T18:30:00.000Z\";\r",
											"     console.log(\"datetime: \"+concatenatetime);\r",
											"\r",
											"     pm.environment.set('LastCalculatedDate',concatenatetime);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "OData-MaxVersion",
										"value": "4.0"
									},
									{
										"description": " ",
										"key": "OData-Version",
										"value": "4.0"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_recalculaterecords\": true,\r\n    \"cmc_recalculationinterval\": 1,\r\n    \"cmc_datelastrun\":\"{{LastCalculatedDate}}\",\r\n    \"cmc_lastrecalculationdate\":\"{{LastCalculatedDate}}\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_scoredefinitions({{gscoredefinitionid}})",
									"host": [
										"{{Eresource_URL}}cmc_scoredefinitions({{gscoredefinitionid}})"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Update the last calculated date in Score history records for 1,2 and 3",
					"item": [
						{
							"name": "GetToken_DCRM Admin",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = JSON.parse(responseBody);",
											"postman.setGlobalVariable('gaccess_token', data.access_token);",
											"",
											"console.log(pm.globals.get(\"gaccess_token\"));",
											"",
											"",
											"",
											"//Genarate global session value",
											"",
											"var number = Math.floor(Math.random() * 1000);",
											"pm.globals.set('globalsessionvalue',number)",
											"",
											"console.log(pm.globals.get(\"globalsessionvalue\"));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "grant_type",
											"value": "client_credentials",
											"type": "text"
										},
										{
											"key": "client_id",
											"value": "{{Eadmin_id}}",
											"type": "text"
										},
										{
											"key": "client_secret",
											"value": "{{Eadmin_secret}}",
											"type": "text"
										},
										{
											"key": "resource",
											"value": "{{Eresource}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "https://login.microsoftonline.com/{{Eredirectid}}/oauth2/token",
									"protocol": "https",
									"host": [
										"login",
										"microsoftonline",
										"com"
									],
									"path": [
										"{{Eredirectid}}",
										"oauth2",
										"token"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Active ScoreHistories for Application 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var score,scoreHistoryName, retentionScoreHistoryId, targetAttribute,lastCalculatedDate, createdOn,autoname,scoreDefinition ;",
											"",
											"pm.test(\"Check the score history record for Application\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    var result=jsonData.cmc_application_retentionscorehistory_applica;",
											"",
											"    if(result.length===1)",
											"    {",
											"        retentionScoreHistoryId= result[0].cmc_retentionscorehistoryid;",
											"        score= result[0].cmc_score;",
											"        scoreHistoryName= result[0].cmc_retentionscorehistoryname;",
											"        targetAttribute= result[0].cmc_targetattribute;",
											"        lastCalculatedDate= result[0].cmc_lastcalculateddate;",
											"        createdOn= result[0].createdon;",
											"        scoreDefinition=result[0]._cmc_scoredefinitionid_value;",
											"        ",
											"        console.log(\"Target score in Score history record is:\" +score);",
											"        console.log(\"Score history name is:\" +scoreHistoryName);",
											"        console.log(\"Target Attribute is:\" +targetAttribute);",
											"        console.log(\"Last Calculated date is:\" +lastCalculatedDate);",
											"        console.log(\"created on is:\" +createdOn);",
											"",
											"    }",
											"    else",
											"    {",
											"        console.log(\"Active Score history record does't exist\");",
											"        throw new Error();",
											"    }",
											"",
											"    ",
											"});",
											"",
											"pm.globals.set('gretentionScoreHistoryId1a',retentionScoreHistoryId);",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applications({{gAppID1}})?$expand=cmc_application_retentionscorehistory_applica\n($filter=statecode eq 0)\n",
									"host": [
										"{{Eresource_URL}}cmc_applications({{gAppID1}})"
									],
									"query": [
										{
											"key": "$expand",
											"value": "cmc_application_retentionscorehistory_applica\n($filter=statecode eq 0)\n"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update score history of Application 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Update the last calculated date for score history record in Application\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    ",
											"    var scoreHistoryName=jsonData.cmc_retentionscorehistoryname;",
											"    console.log(\"Score history name is:\" +scoreHistoryName);",
											"",
											"    var lastCaluclatedDate=jsonData.cmc_lastcalculateddate;",
											"    console.log(\"Last calculated date is: \"+lastCaluclatedDate);",
											"    ",
											"",
											"    ",
											"});",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var dt = new Date();\r",
											"        dt.setDate( dt.getDate() - 3 );\r",
											"\r",
											"         console.log(\"date: \"+dt);\r",
											"\r",
											"    var convertedLastCalculatedDate =dt.getFullYear()+\"-\"+(\"0\" + (dt.getMonth() + 1)).slice(-2)+\"-\"+(\"0\" + (dt.getDate())).slice(-2);\r",
											"     console.log(\"date: \"+convertedLastCalculatedDate);\r",
											"\r",
											"     var concatenatetime=convertedLastCalculatedDate;\r",
											"     console.log(\"datetime: \"+concatenatetime);\r",
											"\r",
											"     pm.environment.set('LastCalculatedDate',concatenatetime);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_lastcalculateddate\": \"{{LastCalculatedDate}}\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_retentionscorehistories({{gretentionScoreHistoryId1a}})",
									"host": [
										"{{Eresource_URL}}cmc_retentionscorehistories({{gretentionScoreHistoryId1a}})"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Active ScoreHistories for Application 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var score,scoreHistoryName, retentionScoreHistoryId, targetAttribute,lastCalculatedDate, createdOn,autoname,scoreDefinition ;",
											"",
											"pm.test(\"Check the score history record for Application\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    var result=jsonData.cmc_application_retentionscorehistory_applica;",
											"",
											"    if(result.length===1)",
											"    {",
											"        retentionScoreHistoryId= result[0].cmc_retentionscorehistoryid;",
											"        score= result[0].cmc_score;",
											"        scoreHistoryName= result[0].cmc_retentionscorehistoryname;",
											"        targetAttribute= result[0].cmc_targetattribute;",
											"        lastCalculatedDate= result[0].cmc_lastcalculateddate;",
											"        createdOn= result[0].createdon;",
											"        scoreDefinition=result[0]._cmc_scoredefinitionid_value;",
											"        ",
											"        console.log(\"Target score in Score history record is:\" +score);",
											"        console.log(\"Score history name is:\" +scoreHistoryName);",
											"        console.log(\"Target Attribute is:\" +targetAttribute);",
											"        console.log(\"Last Calculated date is:\" +lastCalculatedDate);",
											"        console.log(\"created on is:\" +createdOn);",
											"        ",
											"    }",
											"    else",
											"    {",
											"        console.log(\"Active Score history record does't exist\");",
											"        throw new Error();",
											"    }",
											"",
											"    ",
											"});",
											"pm.globals.set('gretentionScoreHistoryId1b',retentionScoreHistoryId);",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applications({{gAppID2}})?$expand=cmc_application_retentionscorehistory_applica\n($filter=statecode eq 0)\n",
									"host": [
										"{{Eresource_URL}}cmc_applications({{gAppID2}})"
									],
									"query": [
										{
											"key": "$expand",
											"value": "cmc_application_retentionscorehistory_applica\n($filter=statecode eq 0)\n"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update score history of Application 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Update the last calculated date for score history record in Application\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    ",
											"    var scoreHistoryName=jsonData.cmc_retentionscorehistoryname;",
											"    console.log(\"Score history name is:\" +scoreHistoryName);",
											"",
											"    var lastCaluclatedDate=jsonData.cmc_lastcalculateddate;",
											"    console.log(\"Last calculated date is: \"+lastCaluclatedDate);",
											"    ",
											"",
											"    ",
											"});",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var dt = new Date();\r",
											"        dt.setDate( dt.getDate() - 3 );\r",
											"\r",
											"         console.log(\"date: \"+dt);\r",
											"\r",
											"    var convertedLastCalculatedDate =dt.getFullYear()+\"-\"+(\"0\" + (dt.getMonth() + 1)).slice(-2)+\"-\"+(\"0\" + (dt.getDate())).slice(-2);\r",
											"     console.log(\"date: \"+convertedLastCalculatedDate);\r",
											"\r",
											"     var concatenatetime=convertedLastCalculatedDate;\r",
											"     console.log(\"datetime: \"+concatenatetime);\r",
											"\r",
											"     pm.environment.set('LastCalculatedDate',concatenatetime);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_lastcalculateddate\": \"{{LastCalculatedDate}}\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_retentionscorehistories({{gretentionScoreHistoryId1b}})",
									"host": [
										"{{Eresource_URL}}cmc_retentionscorehistories({{gretentionScoreHistoryId1b}})"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Active ScoreHistories for Application 3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var score,scoreHistoryName, retentionScoreHistoryId, targetAttribute,lastCalculatedDate, createdOn,autoname,scoreDefinition ;",
											"",
											"pm.test(\"Check the score history record for Application\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    var result=jsonData.cmc_application_retentionscorehistory_applica;",
											"",
											"    if(result.length===1)",
											"    {",
											"        retentionScoreHistoryId= result[0].cmc_retentionscorehistoryid;",
											"        score= result[0].cmc_score;",
											"        scoreHistoryName= result[0].cmc_retentionscorehistoryname;",
											"        targetAttribute= result[0].cmc_targetattribute;",
											"        lastCalculatedDate= result[0].cmc_lastcalculateddate;",
											"        createdOn= result[0].createdon;",
											"        scoreDefinition=result[0]._cmc_scoredefinitionid_value;",
											"        ",
											"        console.log(\"Target score in Score history record is:\" +score);",
											"        console.log(\"Score history name is:\" +scoreHistoryName);",
											"        console.log(\"Target Attribute is:\" +targetAttribute);",
											"        console.log(\"Last Calculated date is:\" +lastCalculatedDate);",
											"        console.log(\"created on is:\" +createdOn);",
											"",
											"        ",
											"    }",
											"    else",
											"    {",
											"        console.log(\"Active Score history record does't exist\");",
											"        throw new Error();",
											"    }",
											"",
											"    ",
											"});",
											"pm.globals.set('gretentionScoreHistoryId1c',retentionScoreHistoryId);",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applications({{gAppID3}})?$expand=cmc_application_retentionscorehistory_applica\n($filter=statecode eq 0)\n",
									"host": [
										"{{Eresource_URL}}cmc_applications({{gAppID3}})"
									],
									"query": [
										{
											"key": "$expand",
											"value": "cmc_application_retentionscorehistory_applica\n($filter=statecode eq 0)\n"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update score history of Application 3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Update the last calculated date for score history record in Application\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    ",
											"    var scoreHistoryName=jsonData.cmc_retentionscorehistoryname;",
											"    console.log(\"Score history name is:\" +scoreHistoryName);",
											"",
											"    var lastCaluclatedDate=jsonData.cmc_lastcalculateddate;",
											"    console.log(\"Last calculated date is: \"+lastCaluclatedDate);",
											"    ",
											"",
											"    ",
											"});",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var dt = new Date();\r",
											"        dt.setDate( dt.getDate() - 3 );\r",
											"\r",
											"         console.log(\"date: \"+dt);\r",
											"\r",
											"    var convertedLastCalculatedDate =dt.getFullYear()+\"-\"+(\"0\" + (dt.getMonth() + 1)).slice(-2)+\"-\"+(\"0\" + (dt.getDate())).slice(-2);\r",
											"     console.log(\"date: \"+convertedLastCalculatedDate);\r",
											"\r",
											"     var concatenatetime=convertedLastCalculatedDate;\r",
											"     console.log(\"datetime: \"+concatenatetime);\r",
											"\r",
											"     pm.environment.set('LastCalculatedDate',concatenatetime);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_lastcalculateddate\": \"{{LastCalculatedDate}}\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_retentionscorehistories({{gretentionScoreHistoryId1c}})",
									"host": [
										"{{Eresource_URL}}cmc_retentionscorehistories({{gretentionScoreHistoryId1c}})"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Active ScoreHistories for Application 4",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var score,scoreHistoryName, retentionScoreHistoryId, targetAttribute,lastCalculatedDate, createdOn,autoname,scoreDefinition ;",
											"",
											"pm.test(\"Check the score history record for Application\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    var result=jsonData.cmc_application_retentionscorehistory_applica;",
											"",
											"    if(result.length===1)",
											"    {",
											"        retentionScoreHistoryId= result[0].cmc_retentionscorehistoryid;",
											"        score= result[0].cmc_score;",
											"        scoreHistoryName= result[0].cmc_retentionscorehistoryname;",
											"        targetAttribute= result[0].cmc_targetattribute;",
											"        lastCalculatedDate= result[0].cmc_lastcalculateddate;",
											"        createdOn= result[0].createdon;",
											"        scoreDefinition=result[0]._cmc_scoredefinitionid_value;",
											"        ",
											"        console.log(\"Target score in Score history record is:\" +score);",
											"        console.log(\"Score history name is:\" +scoreHistoryName);",
											"        console.log(\"Target Attribute is:\" +targetAttribute);",
											"        console.log(\"Last Calculated date is:\" +lastCalculatedDate);",
											"        console.log(\"created on is:\" +createdOn);",
											"",
											"        ",
											"    }",
											"    else",
											"    {",
											"        console.log(\"Active Score history record does't exist\");",
											"        throw new Error();",
											"    }",
											"",
											"    ",
											"});",
											"pm.globals.set('gretentionScoreHistoryId1d',retentionScoreHistoryId);",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applications({{gAppID4}})?$expand=cmc_application_retentionscorehistory_applica\n($filter=statecode eq 0)\n",
									"host": [
										"{{Eresource_URL}}cmc_applications({{gAppID4}})"
									],
									"query": [
										{
											"key": "$expand",
											"value": "cmc_application_retentionscorehistory_applica\n($filter=statecode eq 0)\n"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update score history of Application 4",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Update the last calculated date for score history record in Application\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    ",
											"    var scoreHistoryName=jsonData.cmc_retentionscorehistoryname;",
											"    console.log(\"Score history name is:\" +scoreHistoryName);",
											"",
											"    var lastCaluclatedDate=jsonData.cmc_lastcalculateddate;",
											"    console.log(\"Last calculated date is: \"+lastCaluclatedDate);",
											"    ",
											"",
											"    ",
											"});",
											"setTimeout(function(){}, 130000); ",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var dt = new Date();\r",
											"        dt.setDate( dt.getDate() - 3 );\r",
											"\r",
											"         console.log(\"date: \"+dt);\r",
											"\r",
											"    var convertedLastCalculatedDate =dt.getFullYear()+\"-\"+(\"0\" + (dt.getMonth() + 1)).slice(-2)+\"-\"+(\"0\" + (dt.getDate())).slice(-2);\r",
											"     console.log(\"date: \"+convertedLastCalculatedDate);\r",
											"\r",
											"     var concatenatetime=convertedLastCalculatedDate;\r",
											"     console.log(\"datetime: \"+concatenatetime);\r",
											"\r",
											"     pm.environment.set('LastCalculatedDate',concatenatetime);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_lastcalculateddate\": \"{{LastCalculatedDate}}\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_retentionscorehistories({{gretentionScoreHistoryId1d}})",
									"host": [
										"{{Eresource_URL}}cmc_retentionscorehistories({{gretentionScoreHistoryId1d}})"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Verify Target Attribute and Score history in Application",
					"item": [
						{
							"name": "Verify target Attribute value in Application 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var targetValue, applicationName;",
											"var currentretentionscoredate;",
											"pm.test(\"Fetch Target Attribute value\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    ",
											"    targetValue=jsonData.utcconversiontimezonecode;",
											"    currentretentionscoredate =jsonData.cmc_currentretentionscoredate;",
											"    applicationName= jsonData.cmc_applicationname;",
											"     ",
											"    console.log(\"Application name is: \"+applicationName);",
											"    console.log(\"Target Attribute value is: \"+targetValue);",
											"    console.log(\"currentretentionscoredate: \"+currentretentionscoredate);",
											"",
											"    pm.test(\"Scores awarded to Application 1\", function()",
											"        {",
											"            pm.expect(targetValue).to.equal(95);",
											"        });",
											" ",
											"});",
											"",
											"pm.globals.set('gtargetValue11',targetValue);",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									}
								],
								"url": {
									"raw": "{{Eresource_URL}}cmc_applications({{gAppID1}})",
									"host": [
										"{{Eresource_URL}}cmc_applications({{gAppID1}})"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Active ScoreHistories for Application 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var score,scoreHistoryName, retentionScoreHistoryId, targetAttribute,lastCalculatedDate, createdOn,autoname,scoreDefinition ;",
											"",
											"pm.test(\"Check the score history record for Application\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    var result=jsonData.cmc_application_retentionscorehistory_applica;",
											"",
											"    if(result.length===1)",
											"    {",
											"        retentionScoreHistoryId= result[0].cmc_retentionscorehistoryid;",
											"        score= result[0].cmc_score;",
											"        scoreHistoryName= result[0].cmc_retentionscorehistoryname;",
											"        targetAttribute= result[0].cmc_targetattribute;",
											"        lastCalculatedDate= result[0].cmc_lastcalculateddate;",
											"        createdOn= result[0].createdon;",
											"        scoreDefinition=result[0]._cmc_scoredefinitionid_value;",
											"",
											"        var dateFromResponse = new Date(lastCalculatedDate);",
											"        var convertedLastCalculatedDate =dateFromResponse.getFullYear()+\"-\"+(\"0\" + (dateFromResponse.getMonth() + 1)).slice(-2)+\"-\"+(\"0\" + (dateFromResponse.getDate())).slice(-2);",
											"        ",
											"        console.log(\"Target score in Score history record is:\" +score);",
											"        console.log(\"Score history name is:\" +scoreHistoryName);",
											"        console.log(\"Target Attribute is:\" +targetAttribute);",
											"        console.log(\"Last Calculated date is:\" +lastCalculatedDate);",
											"        console.log(\"created on is:\" +createdOn);",
											"",
											"        var actualScoreDefintion=pm.globals.get('gscoredefinitionid');",
											"        var actualTargetAttribute=\"utcconversiontimezonecode\";",
											"        var actualcalculatedDate=pm.environment.get('timestamp');",
											"",
											"        console.log(\"actual calculated date is: \"+actualcalculatedDate);",
											"",
											"       /* pm.test(\"Last Calculated Date check\", function()",
											"        {",
											"            pm.expect(actualcalculatedDate).to.equal(convertedLastCalculatedDate);",
											"        }); */",
											"",
											"        //Autonme Workflow check for Score History Name",
											"        nameString =scoreHistoryName.split(\"-\");",
											"        ",
											"        autoname= pm.globals.get('gAppName1')+\" \"+\"-\"+\" \"+score+\" \"+\"-\"+nameString[nameString.length-1];      ",
											"        console.log(\"Score History Autoname is: \"+autoname);",
											"               ",
											"        pm.test(\"Autonme Workflow check for Score History Name\", function()",
											"        {",
											"            pm.expect(scoreHistoryName).to.equal(autoname);",
											"        });",
											"         ",
											"        pm.test(\"Score value in Score History record\", function()",
											"        {",
											"            pm.expect(score).to.equal(95);",
											"        });",
											"",
											"        pm.test(\"Score Definition check\", function()",
											"        {",
											"            pm.expect(actualScoreDefintion).to.equal(scoreDefinition);",
											"        });",
											"",
											"        pm.test(\"Target Attribute check\", function()",
											"        {",
											"            pm.expect(actualTargetAttribute).to.equal(targetAttribute);",
											"        });   ",
											"        ",
											"    }",
											"    else",
											"    {",
											"        console.log(\"Active Score history record does't exist\");",
											"        throw new Error();",
											"    }",
											"",
											"    ",
											"});",
											"",
											"pm.globals.set('gretentionScoreHistoryId11',retentionScoreHistoryId);",
											"pm.globals.set('gscore11',score);",
											"pm.globals.set('lastCalculatedDate11',lastCalculatedDate);",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											" var moment = require('moment');\r",
											"pm.environment.set(\"timestamp\", moment().format(\"YYYY-MM-DD\"));"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applications({{gAppID1}})?$expand=cmc_application_retentionscorehistory_applica\n($filter=statecode eq 0)\n",
									"host": [
										"{{Eresource_URL}}cmc_applications({{gAppID1}})"
									],
									"query": [
										{
											"key": "$expand",
											"value": "cmc_application_retentionscorehistory_applica\n($filter=statecode eq 0)\n"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Verify target Attribute value in Application 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var targetValue, applicationName;",
											"var currentretentionscoredate;",
											"pm.test(\"Fetch Target Attribute value\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    ",
											"    targetValue=jsonData.utcconversiontimezonecode;",
											"    currentretentionscoredate =jsonData.cmc_currentretentionscoredate;",
											"    applicationName= jsonData.cmc_applicationname;",
											"     ",
											"    console.log(\"Application name is: \"+applicationName);",
											"    console.log(\"Target Attribute value is: \"+targetValue);",
											"    console.log(\"currentretentionscoredate: \"+currentretentionscoredate);",
											"",
											"    pm.test(\"Scores awarded to Application 2\", function()",
											"        {",
											"            pm.expect(targetValue).to.equal(80);",
											"        });",
											" ",
											"});",
											"",
											"pm.globals.set('gtargetValue12',targetValue);",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									}
								],
								"url": {
									"raw": "{{Eresource_URL}}cmc_applications({{gAppID2}})",
									"host": [
										"{{Eresource_URL}}cmc_applications({{gAppID2}})"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Active ScoreHistories for Application 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var score,scoreHistoryName, retentionScoreHistoryId, targetAttribute,lastCalculatedDate, createdOn,autoname,scoreDefinition ;",
											"",
											"pm.test(\"Check the score history record for Application\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    var result=jsonData.cmc_application_retentionscorehistory_applica;",
											"",
											"    if(result.length===1)",
											"    {",
											"        retentionScoreHistoryId= result[0].cmc_retentionscorehistoryid;",
											"        score= result[0].cmc_score;",
											"        scoreHistoryName= result[0].cmc_retentionscorehistoryname;",
											"        targetAttribute= result[0].cmc_targetattribute;",
											"        lastCalculatedDate= result[0].cmc_lastcalculateddate;",
											"        createdOn= result[0].createdon;",
											"        scoreDefinition=result[0]._cmc_scoredefinitionid_value;",
											"",
											"        var dateFromResponse = new Date(lastCalculatedDate);",
											"        var convertedLastCalculatedDate =dateFromResponse.getFullYear()+\"-\"+(\"0\" + (dateFromResponse.getMonth() + 1)).slice(-2)+\"-\"+(\"0\" + (dateFromResponse.getDate())).slice(-2);",
											"        ",
											"        console.log(\"Target score in Score history record is:\" +score);",
											"        console.log(\"Score history name is:\" +scoreHistoryName);",
											"        console.log(\"Target Attribute is:\" +targetAttribute);",
											"        console.log(\"Last Calculated date is:\" +lastCalculatedDate);",
											"        console.log(\"created on is:\" +createdOn);",
											"",
											"        var actualScoreDefintion=pm.globals.get('gscoredefinitionid');",
											"        var actualTargetAttribute=\"utcconversiontimezonecode\";",
											"        var actualcalculatedDate=pm.environment.get('timestamp');",
											"",
											"        console.log(\"actual calculated date is: \"+actualcalculatedDate);",
											"",
											"       /* pm.test(\"Last Calculated Date check\", function()",
											"        {",
											"            pm.expect(actualcalculatedDate).to.equal(convertedLastCalculatedDate);",
											"        });*/ ",
											"",
											"        //Autonme Workflow check for Score History Name",
											"        nameString =scoreHistoryName.split(\"-\");",
											"        ",
											"        autoname= pm.globals.get('gAppName2')+\" \"+\"-\"+\" \"+score+\" \"+\"-\"+nameString[nameString.length-1];      ",
											"        console.log(\"Score History Autoname is: \"+autoname);",
											"               ",
											"        pm.test(\"Autonme Workflow check for Score History Name\", function()",
											"        {",
											"            pm.expect(scoreHistoryName).to.equal(autoname);",
											"        });",
											"         ",
											"        pm.test(\"Score value in Score History record\", function()",
											"        {",
											"            pm.expect(score).to.equal(80);",
											"        });",
											"",
											"        pm.test(\"Score Definition check\", function()",
											"        {",
											"            pm.expect(actualScoreDefintion).to.equal(scoreDefinition);",
											"        });",
											"",
											"        pm.test(\"Target Attribute check\", function()",
											"        {",
											"            pm.expect(actualTargetAttribute).to.equal(targetAttribute);",
											"        });   ",
											"        ",
											"    }",
											"    else",
											"    {",
											"        console.log(\"Active Score history record does't exist\");",
											"        throw new Error();",
											"    }",
											"",
											"    ",
											"});",
											"",
											"pm.globals.set('gretentionScoreHistoryId12',retentionScoreHistoryId);",
											"pm.globals.set('gscore12',score);",
											"pm.globals.set('lastCalculatedDate12',lastCalculatedDate);",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											" var moment = require('moment');\r",
											"pm.environment.set(\"timestamp\", moment().format(\"YYYY-MM-DD\"));"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applications({{gAppID2}})?$expand=cmc_application_retentionscorehistory_applica\n($filter=statecode eq 0)\n",
									"host": [
										"{{Eresource_URL}}cmc_applications({{gAppID2}})"
									],
									"query": [
										{
											"key": "$expand",
											"value": "cmc_application_retentionscorehistory_applica\n($filter=statecode eq 0)\n"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Verify target Attribute value in Application 3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var targetValue, applicationName;",
											"var currentretentionscoredate;",
											"pm.test(\"Fetch Target Attribute value\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    ",
											"    targetValue=jsonData.utcconversiontimezonecode;",
											"    currentretentionscoredate =jsonData.cmc_currentretentionscoredate;",
											"    applicationName= jsonData.cmc_applicationname;",
											"     ",
											"    console.log(\"Application name is: \"+applicationName);",
											"    console.log(\"Target Attribute value is: \"+targetValue);",
											"    console.log(\"currentretentionscoredate: \"+currentretentionscoredate);",
											"",
											"    pm.test(\"Scores awarded to Application 3\", function()",
											"        {",
											"            pm.expect(targetValue).to.equal(70);",
											"        });",
											" ",
											"});",
											"",
											"pm.globals.set('gtargetValue13',targetValue);",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									}
								],
								"url": {
									"raw": "{{Eresource_URL}}cmc_applications({{gAppID3}})",
									"host": [
										"{{Eresource_URL}}cmc_applications({{gAppID3}})"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Active ScoreHistories for Application 3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var score,scoreHistoryName, retentionScoreHistoryId, targetAttribute,lastCalculatedDate, createdOn,autoname,scoreDefinition ;",
											"",
											"pm.test(\"Check the score history record for Application\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    var result=jsonData.cmc_application_retentionscorehistory_applica;",
											"",
											"    if(result.length===1)",
											"    {",
											"        retentionScoreHistoryId= result[0].cmc_retentionscorehistoryid;",
											"        score= result[0].cmc_score;",
											"        scoreHistoryName= result[0].cmc_retentionscorehistoryname;",
											"        targetAttribute= result[0].cmc_targetattribute;",
											"        lastCalculatedDate= result[0].cmc_lastcalculateddate;",
											"        createdOn= result[0].createdon;",
											"        scoreDefinition=result[0]._cmc_scoredefinitionid_value;",
											"",
											"        var dateFromResponse = new Date(lastCalculatedDate);",
											"        var convertedLastCalculatedDate =dateFromResponse.getFullYear()+\"-\"+(\"0\" + (dateFromResponse.getMonth() + 1)).slice(-2)+\"-\"+(\"0\" + (dateFromResponse.getDate())).slice(-2);",
											"        ",
											"        console.log(\"Target score in Score history record is:\" +score);",
											"        console.log(\"Score history name is:\" +scoreHistoryName);",
											"        console.log(\"Target Attribute is:\" +targetAttribute);",
											"        console.log(\"Last Calculated date is:\" +lastCalculatedDate);",
											"        console.log(\"created on is:\" +createdOn);",
											"",
											"        var actualScoreDefintion=pm.globals.get('gscoredefinitionid');",
											"        var actualTargetAttribute=\"utcconversiontimezonecode\";",
											"        var actualcalculatedDate=pm.environment.get('timestamp');",
											"",
											"        console.log(\"actual calculated date is: \"+actualcalculatedDate);",
											"",
											"        /*pm.test(\"Last Calculated Date check\", function()",
											"        {",
											"            pm.expect(actualcalculatedDate).to.equal(convertedLastCalculatedDate);",
											"        }); */",
											"",
											"        //Autonme Workflow check for Score History Name",
											"        nameString =scoreHistoryName.split(\"-\");",
											"        ",
											"        autoname= pm.globals.get('gAppName3')+\" \"+\"-\"+\" \"+score+\" \"+\"-\"+nameString[nameString.length-1];      ",
											"        console.log(\"Score History Autoname is: \"+autoname);",
											"               ",
											"        pm.test(\"Autonme Workflow check for Score History Name\", function()",
											"        {",
											"            pm.expect(scoreHistoryName).to.equal(autoname);",
											"        });",
											"         ",
											"        pm.test(\"Score value in Score History record\", function()",
											"        {",
											"            pm.expect(score).to.equal(70);",
											"        });",
											"",
											"        pm.test(\"Score Definition check\", function()",
											"        {",
											"            pm.expect(actualScoreDefintion).to.equal(scoreDefinition);",
											"        });",
											"",
											"        pm.test(\"Target Attribute check\", function()",
											"        {",
											"            pm.expect(actualTargetAttribute).to.equal(targetAttribute);",
											"        });   ",
											"        ",
											"    }",
											"    else",
											"    {",
											"        console.log(\"Active Score history record does't exist\");",
											"        throw new Error();",
											"    }",
											"",
											"    ",
											"});",
											"",
											"pm.globals.set('gretentionScoreHistoryId13',retentionScoreHistoryId);",
											"pm.globals.set('gscore13',score);",
											"pm.globals.set('lastCalculatedDate13',lastCalculatedDate);",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											" var moment = require('moment');\r",
											"pm.environment.set(\"timestamp\", moment().format(\"YYYY-MM-DD\"));"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applications({{gAppID3}})?$expand=cmc_application_retentionscorehistory_applica\n($filter=statecode eq 0)\n",
									"host": [
										"{{Eresource_URL}}cmc_applications({{gAppID3}})"
									],
									"query": [
										{
											"key": "$expand",
											"value": "cmc_application_retentionscorehistory_applica\n($filter=statecode eq 0)\n"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Verify target Attribute value in Application 4",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var targetValue, applicationName;",
											"var currentretentionscoredate;",
											"pm.test(\"Fetch Target Attribute value\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    ",
											"    targetValue=jsonData.utcconversiontimezonecode;",
											"    currentretentionscoredate =jsonData.cmc_currentretentionscoredate;",
											"    applicationName= jsonData.cmc_applicationname;",
											"     ",
											"    console.log(\"Application name is: \"+applicationName);",
											"    console.log(\"Target Attribute value is: \"+targetValue);",
											"    console.log(\"currentretentionscoredate: \"+currentretentionscoredate);",
											"",
											"    pm.test(\"Scores awarded to Application 4\", function()",
											"        {",
											"            pm.expect(targetValue).to.equal(50);",
											"        });",
											" ",
											"});",
											"",
											"pm.globals.set('gtargetValue14',targetValue);",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									}
								],
								"url": {
									"raw": "{{Eresource_URL}}cmc_applications({{gAppID4}})",
									"host": [
										"{{Eresource_URL}}cmc_applications({{gAppID4}})"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Active ScoreHistories for Application 4",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var score,scoreHistoryName, retentionScoreHistoryId, targetAttribute,lastCalculatedDate, createdOn,autoname,scoreDefinition ;",
											"",
											"pm.test(\"Check the score history record for Application\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    var result=jsonData.cmc_application_retentionscorehistory_applica;",
											"",
											"    if(result.length===1)",
											"    {",
											"        retentionScoreHistoryId= result[0].cmc_retentionscorehistoryid;",
											"        score= result[0].cmc_score;",
											"        scoreHistoryName= result[0].cmc_retentionscorehistoryname;",
											"        targetAttribute= result[0].cmc_targetattribute;",
											"        lastCalculatedDate= result[0].cmc_lastcalculateddate;",
											"        createdOn= result[0].createdon;",
											"        scoreDefinition=result[0]._cmc_scoredefinitionid_value;",
											"",
											"        var dateFromResponse = new Date(lastCalculatedDate);",
											"        var convertedLastCalculatedDate =dateFromResponse.getFullYear()+\"-\"+(\"0\" + (dateFromResponse.getMonth() + 1)).slice(-2)+\"-\"+(\"0\" + (dateFromResponse.getDate())).slice(-2);",
											"        ",
											"        console.log(\"Target score in Score history record is:\" +score);",
											"        console.log(\"Score history name is:\" +scoreHistoryName);",
											"        console.log(\"Target Attribute is:\" +targetAttribute);",
											"        console.log(\"Last Calculated date is:\" +lastCalculatedDate);",
											"        console.log(\"created on is:\" +createdOn);",
											"",
											"        var actualScoreDefintion=pm.globals.get('gscoredefinitionid');",
											"        var actualTargetAttribute=\"utcconversiontimezonecode\";",
											"        var actualcalculatedDate=pm.environment.get('timestamp');",
											"",
											"        console.log(\"actual calculated date is: \"+actualcalculatedDate);",
											"",
											"        /*pm.test(\"Last Calculated Date check\", function()",
											"        {",
											"            pm.expect(actualcalculatedDate).to.equal(convertedLastCalculatedDate);",
											"        }); */",
											"",
											"        //Autonme Workflow check for Score History Name",
											"        nameString =scoreHistoryName.split(\"-\");",
											"        ",
											"        autoname= pm.globals.get('gAppName4')+\" \"+\"-\"+\" \"+score+\" \"+\"-\"+nameString[nameString.length-1];      ",
											"        console.log(\"Score History Autoname is: \"+autoname);",
											"               ",
											"        pm.test(\"Autonme Workflow check for Score History Name\", function()",
											"        {",
											"            pm.expect(scoreHistoryName).to.equal(autoname);",
											"        });",
											"         ",
											"        pm.test(\"Score value in Score History record\", function()",
											"        {",
											"            pm.expect(score).to.equal(50);",
											"        });",
											"",
											"        pm.test(\"Score Definition check\", function()",
											"        {",
											"            pm.expect(actualScoreDefintion).to.equal(scoreDefinition);",
											"        });",
											"",
											"        pm.test(\"Target Attribute check\", function()",
											"        {",
											"            pm.expect(actualTargetAttribute).to.equal(targetAttribute);",
											"        });   ",
											"        ",
											"    }",
											"    else",
											"    {",
											"        console.log(\"Active Score history record does't exist\");",
											"        throw new Error();",
											"    }",
											"",
											"    ",
											"});",
											"",
											"pm.globals.set('gretentionScoreHistoryId14',retentionScoreHistoryId);",
											"pm.globals.set('gscore14',score);",
											"pm.globals.set('lastCalculatedDate14',lastCalculatedDate);",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											" var moment = require('moment');\r",
											"pm.environment.set(\"timestamp\", moment().format(\"YYYY-MM-DD\"));"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applications({{gAppID4}})?$expand=cmc_application_retentionscorehistory_applica\n($filter=statecode eq 0)\n",
									"host": [
										"{{Eresource_URL}}cmc_applications({{gAppID4}})"
									],
									"query": [
										{
											"key": "$expand",
											"value": "cmc_application_retentionscorehistory_applica\n($filter=statecode eq 0)\n"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Verify target Attribute value in Application 5",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var targetValue, applicationName;",
											"var currentretentionscoredate;",
											"pm.test(\"Fetch Target Attribute value\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    ",
											"    targetValue=jsonData.utcconversiontimezonecode;",
											"    currentretentionscoredate =jsonData.cmc_currentretentionscoredate;",
											"    applicationName= jsonData.cmc_applicationname;",
											"     ",
											"    console.log(\"Application name is: \"+applicationName);",
											"    console.log(\"Target Attribute value is: \"+targetValue);",
											"    console.log(\"currentretentionscoredate: \"+currentretentionscoredate);",
											"",
											"    pm.test(\"Scores awarded to Application 5\", function()",
											"        {",
											"            pm.expect(targetValue).to.equal(75);",
											"        });",
											" ",
											"});",
											"",
											"pm.globals.set('gtargetValue15',targetValue);",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									}
								],
								"url": {
									"raw": "{{Eresource_URL}}cmc_applications({{gAppID5}})",
									"host": [
										"{{Eresource_URL}}cmc_applications({{gAppID5}})"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Active ScoreHistories for Application 5",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var score,scoreHistoryName, retentionScoreHistoryId, targetAttribute,lastCalculatedDate, createdOn,autoname,scoreDefinition ;",
											"",
											"pm.test(\"Check the score history record for Application\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    var result=jsonData.cmc_application_retentionscorehistory_applica;",
											"",
											"    if(result.length===1)",
											"    {",
											"        retentionScoreHistoryId= result[0].cmc_retentionscorehistoryid;",
											"        score= result[0].cmc_score;",
											"        scoreHistoryName= result[0].cmc_retentionscorehistoryname;",
											"        targetAttribute= result[0].cmc_targetattribute;",
											"        lastCalculatedDate= result[0].cmc_lastcalculateddate;",
											"        createdOn= result[0].createdon;",
											"        scoreDefinition=result[0]._cmc_scoredefinitionid_value;",
											"",
											"        var dateFromResponse = new Date(lastCalculatedDate);",
											"        var convertedLastCalculatedDate =dateFromResponse.getFullYear()+\"-\"+(\"0\" + (dateFromResponse.getMonth() + 1)).slice(-2)+\"-\"+(\"0\" + (dateFromResponse.getDate())).slice(-2);",
											"        ",
											"        console.log(\"Target score in Score history record is:\" +score);",
											"        console.log(\"Score history name is:\" +scoreHistoryName);",
											"        console.log(\"Target Attribute is:\" +targetAttribute);",
											"        console.log(\"Last Calculated date is:\" +lastCalculatedDate);",
											"        console.log(\"created on is:\" +createdOn);",
											"",
											"        var actualScoreDefintion=pm.globals.get('gscoredefinitionid');",
											"        var actualTargetAttribute=\"utcconversiontimezonecode\";",
											"        var actualcalculatedDate=pm.environment.get('timestamp');",
											"",
											"        console.log(\"actual calculated date is: \"+actualcalculatedDate);",
											"",
											"        /*pm.test(\"Last Calculated Date check\", function()",
											"        {",
											"            pm.expect(actualcalculatedDate).to.equal(convertedLastCalculatedDate);",
											"        }); */",
											"",
											"        //Autonme Workflow check for Score History Name",
											"        nameString =scoreHistoryName.split(\"-\");",
											"        ",
											"        autoname= pm.globals.get('gAppName5')+\" \"+\"-\"+\" \"+score+\" \"+\"-\"+nameString[nameString.length-1];      ",
											"        console.log(\"Score History Autoname is: \"+autoname);",
											"               ",
											"        pm.test(\"Autonme Workflow check for Score History Name\", function()",
											"        {",
											"            pm.expect(scoreHistoryName).to.equal(autoname);",
											"        });",
											"         ",
											"        pm.test(\"Score value in Score History record\", function()",
											"        {",
											"            pm.expect(score).to.equal(75);",
											"        });",
											"",
											"        pm.test(\"Score Definition check\", function()",
											"        {",
											"            pm.expect(actualScoreDefintion).to.equal(scoreDefinition);",
											"        });",
											"",
											"        pm.test(\"Target Attribute check\", function()",
											"        {",
											"            pm.expect(actualTargetAttribute).to.equal(targetAttribute);",
											"        });   ",
											"        ",
											"    }",
											"    else",
											"    {",
											"        console.log(\"Active Score history record does't exist\");",
											"        throw new Error();",
											"    }",
											"",
											"    ",
											"});",
											"",
											"pm.globals.set('gretentionScoreHistoryId15',retentionScoreHistoryId);",
											"pm.globals.set('gscore15',score);",
											"pm.globals.set('lastCalculatedDate15',lastCalculatedDate);",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											" var moment = require('moment');\r",
											"pm.environment.set(\"timestamp\", moment().format(\"YYYY-MM-DD\"));"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applications({{gAppID5}})?$expand=cmc_application_retentionscorehistory_applica\n($filter=statecode eq 0)\n",
									"host": [
										"{{Eresource_URL}}cmc_applications({{gAppID5}})"
									],
									"query": [
										{
											"key": "$expand",
											"value": "cmc_application_retentionscorehistory_applica\n($filter=statecode eq 0)\n"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Verify 'Date Last Run' & 'last recalculation date'",
					"item": [
						{
							"name": "Verify 'Date Last Run' & 'last recalculation date' in Score Definition",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var dateLastRun,lastRecalculationDate;",
											" ",
											"pm.test(\"Fetch Score definition Record\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    ",
											"    dateLastRun=jsonData.cmc_datelastrun;",
											"    lastRecalculationDate=jsonData.cmc_lastrecalculationdate;",
											"",
											"    var dateFromResponse = new Date(dateLastRun);",
											"    var convertedLastCalculatedDate =dateFromResponse.getFullYear()+\"-\"+(\"0\" + (dateFromResponse.getMonth() + 1)).slice(-2)+\"-\"+(\"0\" + (dateFromResponse.getDate())).slice(-2);",
											"",
											"    var actualcalculatedDate=pm.environment.get('timestamp');",
											"",
											"        console.log(\"actual calculated date is: \"+actualcalculatedDate);",
											"",
											"        /*pm.test(\"Last Calculated Date check\", function()",
											"        {",
											"            pm.expect(actualcalculatedDate).to.equal(convertedLastCalculatedDate);",
											"        }); */",
											"",
											"    var dateFromResponse1 = new Date(lastRecalculationDate);",
											"    var convertedLastRecalculationDate =dateFromResponse1.getFullYear()+\"-\"+(\"0\" + (dateFromResponse1.getMonth() + 1)).slice(-2)+\"-\"+(\"0\" + (dateFromResponse1.getDate())).slice(-2);",
											"   ",
											"        /*pm.test(\"Last reCalculated Date check\", function()",
											"        {",
											"            pm.expect(actualcalculatedDate).to.equal(convertedLastRecalculationDate);",
											"        });*/ ",
											"});",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											" var moment = require('moment');\r",
											"pm.environment.set(\"timestamp\", moment().format(\"YYYY-MM-DD\"));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									}
								],
								"url": {
									"raw": "{{Eresource_URL}}cmc_scoredefinitions({{gscoredefinitionid}})",
									"host": [
										"{{Eresource_URL}}cmc_scoredefinitions({{gscoredefinitionid}})"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Scenario 3: New Record Calculation",
			"item": [
				{
					"name": "Create 2 new contact records",
					"item": [
						{
							"name": "Create Contact 6",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var contactid;",
											"pm.test(\"Contact Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    contactid = jsonData.contactid;",
											"    var contactName = jsonData.fullname;",
											"    console.log(\"Contact name is: \" + contactName);",
											"",
											"",
											"",
											"    ",
											"});",
											"pm.globals.set('gcontactidStudent6', contactid);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									},
									{
										"key": "OData-Version",
										"value": "4.0"
									},
									{
										"key": "OData-MaxVersion",
										"value": "4.0"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"firstname\": \"Scoring {{$randomInt}}\",\r\n    \"lastname\": \"API{{$randomInt}}{{$randomInt}}\",\r\n    \"middlename\": \"Application {{$randomInt}}\",\r\n    \"mshied_contacttype\": \"494280002\",\r\n    \"mshied_CurrentAcademicPeriodId@odata.bind\": \"/mshied_academicperiods({{gacademicperiodid}})\",\r\n    \"cmc_recentsat\": 25\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}contacts",
									"host": [
										"{{Eresource_URL}}contacts"
									]
								}
							},
							"response": []
						},
						{
							"name": "Associate Area of Intrest with Contact 6",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test(\"Contact associated with Area of Intrest\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
											"    var jsonData =JSON.parse(responseBody);",
											"   ",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									},
									{
										"key": "OData-Version",
										"value": "4.0"
									},
									{
										"key": "OData-MaxVersion",
										"value": "4.0"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \r\n   \"@odata.id\":\"{{Eresource_URL}}mshied_areaofinterests({{gareaofinterestid}})\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}contacts({{gcontactidStudent6}})/mshied_contact_areaofinterest/$ref",
									"host": [
										"{{Eresource_URL}}contacts({{gcontactidStudent6}})"
									],
									"path": [
										"mshied_contact_areaofinterest",
										"$ref"
									]
								},
								"description": "This Contacttype should be Student and Area of Interest should assosiated with contact1"
							},
							"response": []
						},
						{
							"name": "Create SAT TestScore in Contact 6",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var SATtestscoreid;",
											"var Autoname;",
											"",
											"pm.test(\"SAT TestScore Created\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202,204]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    SATtestscoreid = jsonData.mshied_testscoreid;",
											"    console.log('SAT test score id: '+SATtestscoreid);",
											"    Autoname= jsonData.mshied_name;",
											"    console.log('Workflow autoname: '+Autoname);",
											"    ",
											" ",
											"});",
											"",
											"pm.globals.set('gSATtestscore',SATtestscoreid);",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var current_timestamp = new Date();",
											"postman.setEnvironmentVariable(\"current_timestamp\", current_timestamp.toISOString());"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"mshied_StudentID@odata.bind\":\"/contacts({{gcontactidStudent6}})\",\n    \"mshied_TestTypeId@odata.bind\": \"/mshied_testtypes({{gsatid}})\",\n    \"mshied_testsource\": \"494280004\",\n    \"mshied_testlocation\": \"Bangalore {{$randomInt}}\",\n    \"mshied_testdate\": \"{{current_timestamp}}\",\n    \"mshied_satevidencebasedreadingandwritingsection\": 500,\n    \"mshied_satmathsection\": 600\n    \n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}mshied_testscores",
									"host": [
										"{{Eresource_URL}}mshied_testscores"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Contact 7",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var contactid,contactName;",
											"pm.test(\"Contact Created\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    contactid = jsonData.contactid;",
											"    contactName = jsonData.fullname;",
											"    console.log(\"Contact name is: \" + contactName);",
											"",
											"",
											"",
											"    ",
											"});",
											"pm.globals.set('gcontactidStudent7', contactid);",
											"pm.globals.set('gcontactName7', contactName);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									},
									{
										"key": "OData-Version",
										"value": "4.0"
									},
									{
										"key": "OData-MaxVersion",
										"value": "4.0"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"firstname\": \"Scoring {{$randomInt}}\",\r\n    \"lastname\": \"API{{$randomInt}}{{$randomInt}}\",\r\n    \"middlename\": \"Application {{$randomInt}}\",\r\n    \"mshied_contacttype\": \"494280002\",\r\n    \"cmc_recentact\": 50\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}contacts",
									"host": [
										"{{Eresource_URL}}contacts"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Associate new contacts to Static Marketing List",
					"item": [
						{
							"name": "Adding Contacts 6 & 7 to Marketing List 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Contacts Addedd to Marketing list\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 204, 201, 202]);",
											"",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"List\": {\r\n        \"listid\": \"{{glistid}}\",\r\n        \"@odata.type\": \"Microsoft.Dynamics.CRM.list\"\r\n    },\r\n    \"Members\": [\r\n        {\r\n            \"@odata.type\": \"Microsoft.Dynamics.CRM.contact\",\r\n            \"contactid\": \"{{gcontactidStudent6}}\"\r\n        },\r\n        {\r\n            \"@odata.type\": \"Microsoft.Dynamics.CRM.contact\",\r\n            \"contactid\": \"{{gcontactidStudent7}}\"\r\n        }\r\n    ]\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}AddListMembersList",
									"host": [
										"{{Eresource_URL}}AddListMembersList"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Create Application records",
					"item": [
						{
							"name": "Create Application Registration 6",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var AppRegID;",
											"var AppDefnVerID;",
											"var AppRegName;",
											"var ContactID;",
											"",
											"pm.test(\"Application Registration is Created\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202,204]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    AppRegID = jsonData.cmc_applicationregistrationid;",
											"    console.log('Application Registration ID is: ' +AppRegID);",
											"    AppDefnVerID = jsonData._cmc_applicationdefinitionversionid_value;",
											"    console.log('Application Definition version ID that is linked is: ' +AppDefnVerID);",
											"    AppRegName = jsonData.cmc_applicationregistration;",
											"    console.log('Application Registration name is: ' +AppRegName);",
											"    ContactID=jsonData._cmc_contactid_value;",
											"    console.log('Contact ID that is linked is: ' +ContactID);",
											"    ",
											"    ",
											"});",
											"pm.globals.set('gAppRegID6',AppRegID);",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_applicationdefinitionversionid@odata.bind\": \"/cmc_applicationdefinitionversions({{gAppDefnVerID2}})\",\r\n    \"cmc_contactid@odata.bind\": \"/contacts({{gcontactidStudent6}})\",\r\n    \"cmc_applicationstatus\": 175490000,\r\n    \"cmc_applicationsubmitted\": false\r\n   \r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applicationregistrations",
									"host": [
										"{{Eresource_URL}}cmc_applicationregistrations"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Application 6a",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var AppID;",
											"var AppName;",
											"",
											"pm.test(\"Application is Created\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202,204]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    AppID = jsonData.cmc_applicationid;",
											"    console.log('Application ID is: ' +AppID);",
											"    ",
											"    AppName = jsonData.cmc_applicationname;",
											"    console.log('Application name is: ' +AppName);",
											"    ",
											"    ",
											"});",
											"",
											"pm.globals.set('gAppID6a',AppID);",
											"pm.globals.set('gAppName6a',AppName);",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_applicationperiodid@odata.bind\": \"/cmc_applicationperiods({{gAppPerID}})\",\r\n    \"cmc_applicationregistration@odata.bind\": \"/cmc_applicationregistrations({{gAppRegID6}})\",\r\n    \"cmc_contactid@odata.bind\": \"/contacts({{gcontactidStudent6}})\",\r\n    \"cmc_programid@odata.bind\": \"/mshied_programs({{gProgram3}})\",\r\n    \"cmc_applicationstatus\": 175490001\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applications",
									"host": [
										"{{Eresource_URL}}cmc_applications"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Recommendation under App6a",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var recId, parentappID;",
											"var recName, appID;",
											"",
											"pm.test(\"Recommendation under Application is Created\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202,204]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    recId = jsonData.cmc_applicationrecommendationid;",
											"    console.log('Recommendation ID is: ' +recId);",
											"    ",
											"    recName = jsonData.cmc_applicationrecommendationname;",
											"    console.log('Application Recommendation name is: ' +recName);",
											"    ",
											"    appID=jsonData._cmc_applicationid_value;",
											"    parentappID= pm.globals.get('gAppID6a');",
											"    ",
											"    pm.test(\"Recommemdation is created under Application 6a\", function()",
											"        {",
											"            pm.expect(parentappID).to.equal(appID);",
											"        });",
											"    ",
											"    ",
											"});",
											"",
											"pm.globals.set('grecId11',recId);",
											"pm.globals.set('grecName11',recName);",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_contactid@odata.bind\": \"/contacts({{gcontactidStudent6}})\",\r\n    \"cmc_applicationid@odata.bind\": \"/cmc_applications({{gAppID6a}})\",\r\n    \"cmc_isrecommendationsubmitted\": false,\r\n    \"cmc_issubmittedbyrecommender\": false,\r\n    \"cmc_recommendationstatus\": 175490000,\r\n    \"cmc_recommendationtype\": 175490001,\r\n    \"cmc_recommendedbyid@odata.bind\": \"/contacts({{gcontactidStudent2}})\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applicationrecommendations",
									"host": [
										"{{Eresource_URL}}cmc_applicationrecommendations"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Application 6b",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var AppID;",
											"var AppName;",
											"",
											"pm.test(\"Application is Created\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202,204]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    AppID = jsonData.cmc_applicationid;",
											"    console.log('Application ID is: ' +AppID);",
											"    ",
											"    AppName = jsonData.cmc_applicationname;",
											"    console.log('Application name is: ' +AppName);",
											"    ",
											"    ",
											"});",
											"",
											"pm.globals.set('gAppID6b',AppID);",
											"pm.globals.set('gAppName6b',AppName);",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_applicationperiodid@odata.bind\": \"/cmc_applicationperiods({{gAppPerID}})\",\r\n    \"cmc_applicationregistration@odata.bind\": \"/cmc_applicationregistrations({{gAppRegID6}})\",\r\n    \"cmc_contactid@odata.bind\": \"/contacts({{gcontactidStudent6}})\",\r\n    \"cmc_programid@odata.bind\": \"/mshied_programs({{gProgram2}})\",\r\n    \"cmc_applicationstatus\": 175490001\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applications",
									"host": [
										"{{Eresource_URL}}cmc_applications"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Application Registration 7",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var AppRegID;",
											"var AppDefnVerID;",
											"var AppRegName;",
											"var ContactID;",
											"",
											"pm.test(\"Application Registration is Created\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202,204]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    AppRegID = jsonData.cmc_applicationregistrationid;",
											"    console.log('Application Registration ID is: ' +AppRegID);",
											"    AppDefnVerID = jsonData._cmc_applicationdefinitionversionid_value;",
											"    console.log('Application Definition version ID that is linked is: ' +AppDefnVerID);",
											"    AppRegName = jsonData.cmc_applicationregistration;",
											"    console.log('Application Registration name is: ' +AppRegName);",
											"    ContactID=jsonData._cmc_contactid_value;",
											"    console.log('Contact ID that is linked is: ' +ContactID);",
											"    ",
											"    ",
											"});",
											"pm.globals.set('gAppRegID7',AppRegID);",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_applicationdefinitionversionid@odata.bind\": \"/cmc_applicationdefinitionversions({{gAppDefnVerID2}})\",\r\n    \"cmc_contactid@odata.bind\": \"/contacts({{gcontactidStudent7}})\",\r\n    \"cmc_applicationstatus\": 175490000,\r\n    \"cmc_applicationsubmitted\": false\r\n   \r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applicationregistrations",
									"host": [
										"{{Eresource_URL}}cmc_applicationregistrations"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Application 7",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var AppID;",
											"var AppName;",
											"",
											"pm.test(\"Application is Created\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202,204]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    AppID = jsonData.cmc_applicationid;",
											"    console.log('Application ID is: ' +AppID);",
											"    ",
											"    AppName = jsonData.cmc_applicationname;",
											"    console.log('Application name is: ' +AppName);",
											"    ",
											"    ",
											"});",
											"",
											"pm.globals.set('gAppID7',AppID);",
											"pm.globals.set('gAppName7',AppName);",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_applicationperiodid@odata.bind\": \"/cmc_applicationperiods({{gAppPerID}})\",\r\n    \"cmc_applicationregistration@odata.bind\": \"/cmc_applicationregistrations({{gAppRegID7}})\",\r\n    \"cmc_contactid@odata.bind\": \"/contacts({{gcontactidStudent7}})\",\r\n    \"cmc_programid@odata.bind\": \"/mshied_programs({{gProgram2}})\",\r\n    \"cmc_applicationstatus\": 175490001\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applications",
									"host": [
										"{{Eresource_URL}}cmc_applications"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Requirement under App7",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var reqId, parentappID;",
											"var reqName, appID;",
											"",
											"pm.test(\"Requirement under Application 7 is Created\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202,204]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    reqId = jsonData.cmc_applicationrequirementid;",
											"    console.log('Requirement ID is: ' +reqId);",
											"    ",
											"    reqName = jsonData.cmc_applicationrequirementname;",
											"    console.log('Application Requirement name is: ' +reqName);",
											"    ",
											"    appID=jsonData._cmc_applicationid_value;",
											"    parentappID= pm.globals.get('gAppID7');",
											"     ",
											"    pm.test(\"Requirement is created under Application\", function()",
											"        {",
											"            pm.expect(parentappID).to.equal(appID);",
											"        });",
											"    ",
											"    ",
											"});",
											"",
											"pm.globals.set('greqId12',reqId);",
											"pm.globals.set('greqName12',reqName);",
											"",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_applicationrequirementname\": \"Req{{$randomInt}} API {{$randomInt}}\",\r\n    \"cmc_applicationid@odata.bind\": \"/cmc_applications({{gAppID7}})\",\r\n    \"cmc_requirementstatus\": 175490000,\r\n    \"cmc_requirementtype\": 175490001\r\n     \r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applicationrequirements",
									"host": [
										"{{Eresource_URL}}cmc_applicationrequirements"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Update score definition record",
					"item": [
						{
							"name": "Update ScoreDefinition",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var scoredefinitionid,targetAttribute;",
											"pm.test(\"Score Definition for Application is Created\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202,204]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    scoredefinitionid =jsonData.cmc_scoredefinitionid;",
											"    console.log('Score definition ID:' +scoredefinitionid);",
											"    var scoredefinitionname= jsonData.cmc_scoredefinitionname;",
											"    console.log('Score Definition that is created is:' +scoredefinitionname);",
											"    var scheduleinterval=jsonData.cmc_scheduleinterval;",
											"    pm.globals.set('gscheduleinterval',scheduleinterval);",
											"",
											"    targetAttribute=jsonData.cmc_targetattributename;",
											"});",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var dt = new Date();\r",
											"        dt.setDate( dt.getDate() - 1 );\r",
											"\r",
											"         console.log(\"date: \"+dt);\r",
											"\r",
											"    var convertedLastCalculatedDate =dt.getFullYear()+\"-\"+(\"0\" + (dt.getMonth() + 1)).slice(-2)+\"-\"+(\"0\" + (dt.getDate())).slice(-2);\r",
											"     console.log(\"date: \"+convertedLastCalculatedDate);\r",
											"\r",
											"     var concatenatetime=convertedLastCalculatedDate;\r",
											"     console.log(\"datetime: \"+concatenatetime);\r",
											"\r",
											"     pm.environment.set('LastCalculatedDate',concatenatetime);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "OData-MaxVersion",
										"value": "4.0"
									},
									{
										"description": " ",
										"key": "OData-Version",
										"value": "4.0"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_recalculaterecords\": true,\r\n    \"cmc_recalculationinterval\": 2,\r\n    \"cmc_datelastrun\":\"{{LastCalculatedDate}}\",\r\n    \"cmc_lastrecalculationdate\":\"{{LastCalculatedDate}}\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_scoredefinitions({{gscoredefinitionid}})",
									"host": [
										"{{Eresource_URL}}cmc_scoredefinitions({{gscoredefinitionid}})"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Update the last calculated date in Score history records for all",
					"item": [
						{
							"name": "Get Active ScoreHistories for Application 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var score,scoreHistoryName, retentionScoreHistoryId, targetAttribute,lastCalculatedDate, createdOn,autoname,scoreDefinition ;",
											"",
											"pm.test(\"Check the score history record for Application\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    var result=jsonData.cmc_application_retentionscorehistory_applica;",
											"",
											"    if(result.length===1)",
											"    {",
											"        retentionScoreHistoryId= result[0].cmc_retentionscorehistoryid;",
											"        score= result[0].cmc_score;",
											"        scoreHistoryName= result[0].cmc_retentionscorehistoryname;",
											"        targetAttribute= result[0].cmc_targetattribute;",
											"        lastCalculatedDate= result[0].cmc_lastcalculateddate;",
											"        createdOn= result[0].createdon;",
											"        scoreDefinition=result[0]._cmc_scoredefinitionid_value;",
											"        ",
											"        console.log(\"Target score in Score history record is:\" +score);",
											"        console.log(\"Score history name is:\" +scoreHistoryName);",
											"        console.log(\"Target Attribute is:\" +targetAttribute);",
											"        console.log(\"Last Calculated date is:\" +lastCalculatedDate);",
											"        console.log(\"created on is:\" +createdOn);",
											"",
											"    }",
											"    else",
											"    {",
											"        console.log(\"Active Score history record does't exist\");",
											"        throw new Error();",
											"    }",
											"",
											"    ",
											"});",
											"",
											"pm.globals.set('gretentionScoreHistoryId2a',retentionScoreHistoryId);",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applications({{gAppID1}})?$expand=cmc_application_retentionscorehistory_applica\n($filter=statecode eq 0)\n",
									"host": [
										"{{Eresource_URL}}cmc_applications({{gAppID1}})"
									],
									"query": [
										{
											"key": "$expand",
											"value": "cmc_application_retentionscorehistory_applica\n($filter=statecode eq 0)\n"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update score history of Application 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Update the last calculated date for score history record in Application\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    ",
											"    var scoreHistoryName=jsonData.cmc_retentionscorehistoryname;",
											"    console.log(\"Score history name is:\" +scoreHistoryName);",
											"",
											"    var lastCaluclatedDate=jsonData.cmc_lastcalculateddate;",
											"    console.log(\"Last calculated date is: \"+lastCaluclatedDate);",
											"    ",
											"",
											"    ",
											"});",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var dt = new Date();\r",
											"        dt.setDate( dt.getDate() - 3 );\r",
											"\r",
											"         console.log(\"date: \"+dt);\r",
											"\r",
											"    var convertedLastCalculatedDate =dt.getFullYear()+\"-\"+(\"0\" + (dt.getMonth() + 1)).slice(-2)+\"-\"+(\"0\" + (dt.getDate())).slice(-2);\r",
											"     console.log(\"date: \"+convertedLastCalculatedDate);\r",
											"\r",
											"     var concatenatetime=convertedLastCalculatedDate;\r",
											"     console.log(\"datetime: \"+concatenatetime);\r",
											"\r",
											"     pm.environment.set('LastCalculatedDate',concatenatetime);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_lastcalculateddate\": \"{{LastCalculatedDate}}\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_retentionscorehistories({{gretentionScoreHistoryId2a}})",
									"host": [
										"{{Eresource_URL}}cmc_retentionscorehistories({{gretentionScoreHistoryId2a}})"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Active ScoreHistories for Application 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var score,scoreHistoryName, retentionScoreHistoryId, targetAttribute,lastCalculatedDate, createdOn,autoname,scoreDefinition ;",
											"",
											"pm.test(\"Check the score history record for Application\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    var result=jsonData.cmc_application_retentionscorehistory_applica;",
											"",
											"    if(result.length===1)",
											"    {",
											"        retentionScoreHistoryId= result[0].cmc_retentionscorehistoryid;",
											"        score= result[0].cmc_score;",
											"        scoreHistoryName= result[0].cmc_retentionscorehistoryname;",
											"        targetAttribute= result[0].cmc_targetattribute;",
											"        lastCalculatedDate= result[0].cmc_lastcalculateddate;",
											"        createdOn= result[0].createdon;",
											"        scoreDefinition=result[0]._cmc_scoredefinitionid_value;",
											"        ",
											"        console.log(\"Target score in Score history record is:\" +score);",
											"        console.log(\"Score history name is:\" +scoreHistoryName);",
											"        console.log(\"Target Attribute is:\" +targetAttribute);",
											"        console.log(\"Last Calculated date is:\" +lastCalculatedDate);",
											"        console.log(\"created on is:\" +createdOn);",
											"        ",
											"    }",
											"    else",
											"    {",
											"        console.log(\"Active Score history record does't exist\");",
											"        throw new Error();",
											"    }",
											"",
											"    ",
											"});",
											"pm.globals.set('gretentionScoreHistoryId2b',retentionScoreHistoryId);",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applications({{gAppID2}})?$expand=cmc_application_retentionscorehistory_applica\n($filter=statecode eq 0)\n",
									"host": [
										"{{Eresource_URL}}cmc_applications({{gAppID2}})"
									],
									"query": [
										{
											"key": "$expand",
											"value": "cmc_application_retentionscorehistory_applica\n($filter=statecode eq 0)\n"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update score history of Application 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Update the last calculated date for score history record in Application\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    ",
											"    var scoreHistoryName=jsonData.cmc_retentionscorehistoryname;",
											"    console.log(\"Score history name is:\" +scoreHistoryName);",
											"",
											"    var lastCaluclatedDate=jsonData.cmc_lastcalculateddate;",
											"    console.log(\"Last calculated date is: \"+lastCaluclatedDate);",
											"    ",
											"",
											"    ",
											"});",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var dt = new Date();\r",
											"        dt.setDate( dt.getDate() - 3 );\r",
											"\r",
											"         console.log(\"date: \"+dt);\r",
											"\r",
											"    var convertedLastCalculatedDate =dt.getFullYear()+\"-\"+(\"0\" + (dt.getMonth() + 1)).slice(-2)+\"-\"+(\"0\" + (dt.getDate())).slice(-2);\r",
											"     console.log(\"date: \"+convertedLastCalculatedDate);\r",
											"\r",
											"     var concatenatetime=convertedLastCalculatedDate;\r",
											"     console.log(\"datetime: \"+concatenatetime);\r",
											"\r",
											"     pm.environment.set('LastCalculatedDate',concatenatetime);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_lastcalculateddate\": \"{{LastCalculatedDate}}\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_retentionscorehistories({{gretentionScoreHistoryId2b}})",
									"host": [
										"{{Eresource_URL}}cmc_retentionscorehistories({{gretentionScoreHistoryId2b}})"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Active ScoreHistories for Application 3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var score,scoreHistoryName, retentionScoreHistoryId, targetAttribute,lastCalculatedDate, createdOn,autoname,scoreDefinition ;",
											"",
											"pm.test(\"Check the score history record for Application\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    var result=jsonData.cmc_application_retentionscorehistory_applica;",
											"",
											"    if(result.length===1)",
											"    {",
											"        retentionScoreHistoryId= result[0].cmc_retentionscorehistoryid;",
											"        score= result[0].cmc_score;",
											"        scoreHistoryName= result[0].cmc_retentionscorehistoryname;",
											"        targetAttribute= result[0].cmc_targetattribute;",
											"        lastCalculatedDate= result[0].cmc_lastcalculateddate;",
											"        createdOn= result[0].createdon;",
											"        scoreDefinition=result[0]._cmc_scoredefinitionid_value;",
											"        ",
											"        console.log(\"Target score in Score history record is:\" +score);",
											"        console.log(\"Score history name is:\" +scoreHistoryName);",
											"        console.log(\"Target Attribute is:\" +targetAttribute);",
											"        console.log(\"Last Calculated date is:\" +lastCalculatedDate);",
											"        console.log(\"created on is:\" +createdOn);",
											"",
											"        ",
											"    }",
											"    else",
											"    {",
											"        console.log(\"Active Score history record does't exist\");",
											"        throw new Error();",
											"    }",
											"",
											"    ",
											"});",
											"pm.globals.set('gretentionScoreHistoryId2c',retentionScoreHistoryId);",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applications({{gAppID3}})?$expand=cmc_application_retentionscorehistory_applica\n($filter=statecode eq 0)\n",
									"host": [
										"{{Eresource_URL}}cmc_applications({{gAppID3}})"
									],
									"query": [
										{
											"key": "$expand",
											"value": "cmc_application_retentionscorehistory_applica\n($filter=statecode eq 0)\n"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update score history of Application 3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Update the last calculated date for score history record in Application\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    ",
											"    var scoreHistoryName=jsonData.cmc_retentionscorehistoryname;",
											"    console.log(\"Score history name is:\" +scoreHistoryName);",
											"",
											"    var lastCaluclatedDate=jsonData.cmc_lastcalculateddate;",
											"    console.log(\"Last calculated date is: \"+lastCaluclatedDate);",
											"    ",
											"",
											"    ",
											"});",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var dt = new Date();\r",
											"        dt.setDate( dt.getDate() - 3 );\r",
											"\r",
											"         console.log(\"date: \"+dt);\r",
											"\r",
											"    var convertedLastCalculatedDate =dt.getFullYear()+\"-\"+(\"0\" + (dt.getMonth() + 1)).slice(-2)+\"-\"+(\"0\" + (dt.getDate())).slice(-2);\r",
											"     console.log(\"date: \"+convertedLastCalculatedDate);\r",
											"\r",
											"     var concatenatetime=convertedLastCalculatedDate;\r",
											"     console.log(\"datetime: \"+concatenatetime);\r",
											"\r",
											"     pm.environment.set('LastCalculatedDate',concatenatetime);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_lastcalculateddate\": \"{{LastCalculatedDate}}\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_retentionscorehistories({{gretentionScoreHistoryId2c}})",
									"host": [
										"{{Eresource_URL}}cmc_retentionscorehistories({{gretentionScoreHistoryId2c}})"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Active ScoreHistories for Application 4",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var score,scoreHistoryName, retentionScoreHistoryId, targetAttribute,lastCalculatedDate, createdOn,autoname,scoreDefinition ;",
											"",
											"pm.test(\"Check the score history record for Application\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    var result=jsonData.cmc_application_retentionscorehistory_applica;",
											"",
											"    if(result.length===1)",
											"    {",
											"        retentionScoreHistoryId= result[0].cmc_retentionscorehistoryid;",
											"        score= result[0].cmc_score;",
											"        scoreHistoryName= result[0].cmc_retentionscorehistoryname;",
											"        targetAttribute= result[0].cmc_targetattribute;",
											"        lastCalculatedDate= result[0].cmc_lastcalculateddate;",
											"        createdOn= result[0].createdon;",
											"        scoreDefinition=result[0]._cmc_scoredefinitionid_value;",
											"        ",
											"        console.log(\"Target score in Score history record is:\" +score);",
											"        console.log(\"Score history name is:\" +scoreHistoryName);",
											"        console.log(\"Target Attribute is:\" +targetAttribute);",
											"        console.log(\"Last Calculated date is:\" +lastCalculatedDate);",
											"        console.log(\"created on is:\" +createdOn);",
											"",
											"        ",
											"    }",
											"    else",
											"    {",
											"        console.log(\"Active Score history record does't exist\");",
											"        throw new Error();",
											"    }",
											"",
											"    ",
											"});",
											"pm.globals.set('gretentionScoreHistoryId2d',retentionScoreHistoryId);",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applications({{gAppID4}})?$expand=cmc_application_retentionscorehistory_applica\n($filter=statecode eq 0)\n",
									"host": [
										"{{Eresource_URL}}cmc_applications({{gAppID4}})"
									],
									"query": [
										{
											"key": "$expand",
											"value": "cmc_application_retentionscorehistory_applica\n($filter=statecode eq 0)\n"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update score history of Application 4",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Update the last calculated date for score history record in Application\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    ",
											"    var scoreHistoryName=jsonData.cmc_retentionscorehistoryname;",
											"    console.log(\"Score history name is:\" +scoreHistoryName);",
											"",
											"    var lastCaluclatedDate=jsonData.cmc_lastcalculateddate;",
											"    console.log(\"Last calculated date is: \"+lastCaluclatedDate);",
											"    ",
											"",
											"    ",
											"});",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var dt = new Date();\r",
											"        dt.setDate( dt.getDate() - 3 );\r",
											"\r",
											"         console.log(\"date: \"+dt);\r",
											"\r",
											"    var convertedLastCalculatedDate =dt.getFullYear()+\"-\"+(\"0\" + (dt.getMonth() + 1)).slice(-2)+\"-\"+(\"0\" + (dt.getDate())).slice(-2);\r",
											"     console.log(\"date: \"+convertedLastCalculatedDate);\r",
											"\r",
											"     var concatenatetime=convertedLastCalculatedDate;\r",
											"     console.log(\"datetime: \"+concatenatetime);\r",
											"\r",
											"     pm.environment.set('LastCalculatedDate',concatenatetime);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_lastcalculateddate\": \"{{LastCalculatedDate}}\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_retentionscorehistories({{gretentionScoreHistoryId2d}})",
									"host": [
										"{{Eresource_URL}}cmc_retentionscorehistories({{gretentionScoreHistoryId2d}})"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Active ScoreHistories for Application 5",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var score,scoreHistoryName, retentionScoreHistoryId, targetAttribute,lastCalculatedDate, createdOn,autoname,scoreDefinition ;",
											"",
											"pm.test(\"Check the score history record for Application\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    var result=jsonData.cmc_application_retentionscorehistory_applica;",
											"",
											"    if(result.length===1)",
											"    {",
											"        retentionScoreHistoryId= result[0].cmc_retentionscorehistoryid;",
											"        score= result[0].cmc_score;",
											"        scoreHistoryName= result[0].cmc_retentionscorehistoryname;",
											"        targetAttribute= result[0].cmc_targetattribute;",
											"        lastCalculatedDate= result[0].cmc_lastcalculateddate;",
											"        createdOn= result[0].createdon;",
											"        scoreDefinition=result[0]._cmc_scoredefinitionid_value;",
											"        ",
											"        console.log(\"Target score in Score history record is:\" +score);",
											"        console.log(\"Score history name is:\" +scoreHistoryName);",
											"        console.log(\"Target Attribute is:\" +targetAttribute);",
											"        console.log(\"Last Calculated date is:\" +lastCalculatedDate);",
											"        console.log(\"created on is:\" +createdOn);",
											"",
											"        ",
											"    }",
											"    else",
											"    {",
											"        console.log(\"Active Score history record does't exist\");",
											"        throw new Error();",
											"    }",
											"",
											"    ",
											"});",
											"pm.globals.set('gretentionScoreHistoryId2e',retentionScoreHistoryId);",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applications({{gAppID5}})?$expand=cmc_application_retentionscorehistory_applica\n($filter=statecode eq 0)\n",
									"host": [
										"{{Eresource_URL}}cmc_applications({{gAppID5}})"
									],
									"query": [
										{
											"key": "$expand",
											"value": "cmc_application_retentionscorehistory_applica\n($filter=statecode eq 0)\n"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update score history of Application 5",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Update the last calculated date for score history record in Application\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    ",
											"    var scoreHistoryName=jsonData.cmc_retentionscorehistoryname;",
											"    console.log(\"Score history name is:\" +scoreHistoryName);",
											"",
											"    var lastCaluclatedDate=jsonData.cmc_lastcalculateddate;",
											"    console.log(\"Last calculated date is: \"+lastCaluclatedDate);",
											"    ",
											"",
											"    ",
											"});",
											"",
											"setTimeout(function(){}, 130000); ",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var dt = new Date();\r",
											"        dt.setDate( dt.getDate() - 3 );\r",
											"\r",
											"         console.log(\"date: \"+dt);\r",
											"\r",
											"    var convertedLastCalculatedDate =dt.getFullYear()+\"-\"+(\"0\" + (dt.getMonth() + 1)).slice(-2)+\"-\"+(\"0\" + (dt.getDate())).slice(-2);\r",
											"     console.log(\"date: \"+convertedLastCalculatedDate);\r",
											"\r",
											"     var concatenatetime=convertedLastCalculatedDate;\r",
											"     console.log(\"datetime: \"+concatenatetime);\r",
											"\r",
											"     pm.environment.set('LastCalculatedDate',concatenatetime);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_lastcalculateddate\": \"{{LastCalculatedDate}}\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_retentionscorehistories({{gretentionScoreHistoryId2e}})",
									"host": [
										"{{Eresource_URL}}cmc_retentionscorehistories({{gretentionScoreHistoryId2e}})"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Verify Target Attribute and Score history in Application",
					"item": [
						{
							"name": "Verify target Attribute value in Application 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var targetValue, applicationName;",
											"var currentretentionscoredate;",
											"pm.test(\"Fetch Target Attribute value\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    ",
											"    targetValue=jsonData.utcconversiontimezonecode;",
											"    currentretentionscoredate =jsonData.cmc_currentretentionscoredate;",
											"    applicationName= jsonData.cmc_applicationname;",
											"     ",
											"    console.log(\"Application name is: \"+applicationName);",
											"    console.log(\"Target Attribute value is: \"+targetValue);",
											"    console.log(\"currentretentionscoredate: \"+currentretentionscoredate);",
											"",
											"    pm.test(\"Scores awarded to Application 1\", function()",
											"        {",
											"            pm.expect(targetValue).to.equal(95);",
											"        });",
											" ",
											"});",
											"",
											"pm.globals.set('gtargetValue21',targetValue);",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									}
								],
								"url": {
									"raw": "{{Eresource_URL}}cmc_applications({{gAppID1}})",
									"host": [
										"{{Eresource_URL}}cmc_applications({{gAppID1}})"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Active ScoreHistories for Application 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var score,scoreHistoryName, retentionScoreHistoryId, targetAttribute,lastCalculatedDate, createdOn,autoname,scoreDefinition ;",
											"",
											"pm.test(\"Check the score history record for Application\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    var result=jsonData.cmc_application_retentionscorehistory_applica;",
											"",
											"    if(result.length===1)",
											"    {",
											"        retentionScoreHistoryId= result[0].cmc_retentionscorehistoryid;",
											"        score= result[0].cmc_score;",
											"        scoreHistoryName= result[0].cmc_retentionscorehistoryname;",
											"        targetAttribute= result[0].cmc_targetattribute;",
											"        lastCalculatedDate= result[0].cmc_lastcalculateddate;",
											"        createdOn= result[0].createdon;",
											"        scoreDefinition=result[0]._cmc_scoredefinitionid_value;",
											"",
											"        var dateFromResponse = new Date(lastCalculatedDate);",
											"        console.log(\"new date : \"+dateFromResponse);",
											"        var utc=dateFromResponse.toISOString();",
											"        console.log(\"utc: \"+utc);",
											"        var convertedLastCalculatedDate=utc.slice(0, -14);",
											"",
											"        console.log(\"converted Last Calculated date is:\" +convertedLastCalculatedDate);",
											"        ",
											"        console.log(\"Target score in Score history record is:\" +score);",
											"        console.log(\"Score history name is:\" +scoreHistoryName);",
											"        console.log(\"Target Attribute is:\" +targetAttribute);",
											"        console.log(\"Last Calculated date is:\" +lastCalculatedDate);",
											"        console.log(\"created on is:\" +createdOn);",
											"",
											"        var actualScoreDefintion=pm.globals.get('gscoredefinitionid');",
											"        var actualTargetAttribute=\"utcconversiontimezonecode\";",
											"        //var actualcalculatedDate=pm.environment.get('timestamp');",
											"        var actualcalculatedDate=pm.environment.get('LastCalculatedDate');",
											"",
											"        console.log(\"actual calculated date is: \"+actualcalculatedDate);",
											"",
											"        /* pm.test(\"Last Calculated Date check\", function()",
											"        {",
											"            pm.expect(actualcalculatedDate).to.equal(convertedLastCalculatedDate);",
											"        });*/ ",
											"",
											"        //Autonme Workflow check for Score History Name",
											"        nameString =scoreHistoryName.split(\"-\");",
											"        ",
											"        autoname= pm.globals.get('gAppName1')+\" \"+\"-\"+\" \"+score+\" \"+\"-\"+nameString[nameString.length-1];      ",
											"        console.log(\"Score History Autoname is: \"+autoname);",
											"               ",
											"        pm.test(\"Autonme Workflow check for Score History Name\", function()",
											"        {",
											"            pm.expect(scoreHistoryName).to.equal(autoname);",
											"        });",
											"         ",
											"        pm.test(\"Score value in Score History record\", function()",
											"        {",
											"            pm.expect(score).to.equal(95);",
											"        });",
											"",
											"        pm.test(\"Score Definition check\", function()",
											"        {",
											"            pm.expect(actualScoreDefintion).to.equal(scoreDefinition);",
											"        });",
											"",
											"        pm.test(\"Target Attribute check\", function()",
											"        {",
											"            pm.expect(actualTargetAttribute).to.equal(targetAttribute);",
											"        });   ",
											"        ",
											"    }",
											"    else",
											"    {",
											"        console.log(\"Active Score history record does't exist\");",
											"        throw new Error();",
											"    }",
											"",
											"    ",
											"});",
											"",
											"pm.globals.set('gretentionScoreHistoryId21',retentionScoreHistoryId);",
											"pm.globals.set('gscore21',score);",
											"pm.globals.set('lastCalculatedDate21',lastCalculatedDate);",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											" var moment = require('moment');\r",
											"pm.environment.set(\"timestamp\", moment().format(\"YYYY-MM-DD\"));\r",
											"\r",
											"    var dt = new Date();\r",
											"    dt.setDate( dt.getDate() - 3 );\r",
											"    console.log(\"date: \"+dt);\r",
											"\tvar utc=dt.toISOString();\r",
											" \tconsole.log(\"utc: \"+utc);\r",
											"    var concatenatetime=utc.slice(0, -14);\r",
											"    console.log(\"datetime: \"+concatenatetime);\r",
											"    pm.environment.set('LastCalculatedDate',concatenatetime);"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applications({{gAppID1}})?$expand=cmc_application_retentionscorehistory_applica\n($filter=statecode eq 0)",
									"host": [
										"{{Eresource_URL}}cmc_applications({{gAppID1}})"
									],
									"query": [
										{
											"key": "$expand",
											"value": "cmc_application_retentionscorehistory_applica\n($filter=statecode eq 0)"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Verify target Attribute value in Application 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var targetValue, applicationName;",
											"var currentretentionscoredate;",
											"pm.test(\"Fetch Target Attribute value\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    ",
											"    targetValue=jsonData.utcconversiontimezonecode;",
											"    currentretentionscoredate =jsonData.cmc_currentretentionscoredate;",
											"    applicationName= jsonData.cmc_applicationname;",
											"     ",
											"    console.log(\"Application name is: \"+applicationName);",
											"    console.log(\"Target Attribute value is: \"+targetValue);",
											"    console.log(\"currentretentionscoredate: \"+currentretentionscoredate);",
											"",
											"    pm.test(\"Scores awarded to Application 2\", function()",
											"        {",
											"            pm.expect(targetValue).to.equal(80);",
											"        });",
											" ",
											"});",
											"",
											"pm.globals.set('gtargetValue22',targetValue);",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									}
								],
								"url": {
									"raw": "{{Eresource_URL}}cmc_applications({{gAppID2}})",
									"host": [
										"{{Eresource_URL}}cmc_applications({{gAppID2}})"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Active ScoreHistories for Application 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var score,scoreHistoryName, retentionScoreHistoryId, targetAttribute,lastCalculatedDate, createdOn,autoname,scoreDefinition ;",
											"",
											"pm.test(\"Check the score history record for Application\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    var result=jsonData.cmc_application_retentionscorehistory_applica;",
											"",
											"    if(result.length===1)",
											"    {",
											"        retentionScoreHistoryId= result[0].cmc_retentionscorehistoryid;",
											"        score= result[0].cmc_score;",
											"        scoreHistoryName= result[0].cmc_retentionscorehistoryname;",
											"        targetAttribute= result[0].cmc_targetattribute;",
											"        lastCalculatedDate= result[0].cmc_lastcalculateddate;",
											"        createdOn= result[0].createdon;",
											"        scoreDefinition=result[0]._cmc_scoredefinitionid_value;",
											"",
											"        var dateFromResponse = new Date(lastCalculatedDate);",
											"        console.log(\"new date : \"+dateFromResponse);",
											"        var utc=dateFromResponse.toISOString();",
											"        console.log(\"utc: \"+utc);",
											"        var convertedLastCalculatedDate=utc.slice(0, -14);",
											"",
											"        console.log(\"converted Last Calculated date is:\" +convertedLastCalculatedDate);",
											"        ",
											"        console.log(\"Target score in Score history record is:\" +score);",
											"        console.log(\"Score history name is:\" +scoreHistoryName);",
											"        console.log(\"Target Attribute is:\" +targetAttribute);",
											"        console.log(\"Last Calculated date is:\" +lastCalculatedDate);",
											"        console.log(\"created on is:\" +createdOn);",
											"",
											"        var actualScoreDefintion=pm.globals.get('gscoredefinitionid');",
											"        var actualTargetAttribute=\"utcconversiontimezonecode\";",
											"        var actualcalculatedDate=pm.environment.get('LastCalculatedDate');",
											"",
											"        console.log(\"actual calculated date is: \"+actualcalculatedDate);",
											"",
											"       /* pm.test(\"Last Calculated Date check\", function()",
											"        {",
											"            pm.expect(actualcalculatedDate).to.equal(convertedLastCalculatedDate);",
											"        }); */",
											"",
											"        //Autonme Workflow check for Score History Name",
											"        nameString =scoreHistoryName.split(\"-\");",
											"        ",
											"        autoname= pm.globals.get('gAppName2')+\" \"+\"-\"+\" \"+score+\" \"+\"-\"+nameString[nameString.length-1];      ",
											"        console.log(\"Score History Autoname is: \"+autoname);",
											"               ",
											"        pm.test(\"Autonme Workflow check for Score History Name\", function()",
											"        {",
											"            pm.expect(scoreHistoryName).to.equal(autoname);",
											"        });",
											"         ",
											"        pm.test(\"Score value in Score History record\", function()",
											"        {",
											"            pm.expect(score).to.equal(80);",
											"        });",
											"",
											"        pm.test(\"Score Definition check\", function()",
											"        {",
											"            pm.expect(actualScoreDefintion).to.equal(scoreDefinition);",
											"        });",
											"",
											"        pm.test(\"Target Attribute check\", function()",
											"        {",
											"            pm.expect(actualTargetAttribute).to.equal(targetAttribute);",
											"        });   ",
											"        ",
											"    }",
											"    else",
											"    {",
											"        console.log(\"Active Score history record does't exist\");",
											"        throw new Error();",
											"    }",
											"",
											"    ",
											"});",
											"",
											"pm.globals.set('gretentionScoreHistoryId22',retentionScoreHistoryId);",
											"pm.globals.set('gscore22',score);",
											"pm.globals.set('lastCalculatedDate22',lastCalculatedDate);",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											" var moment = require('moment');\r",
											"pm.environment.set(\"timestamp\", moment().format(\"YYYY-MM-DD\"));\r",
											"\r",
											"    var dt = new Date();\r",
											"    dt.setDate( dt.getDate() - 3 );\r",
											"    console.log(\"date: \"+dt);\r",
											"\tvar utc=dt.toISOString();\r",
											" \tconsole.log(\"utc: \"+utc);\r",
											"    var concatenatetime=utc.slice(0, -14);\r",
											"    console.log(\"datetime: \"+concatenatetime);\r",
											"\r",
											"     pm.environment.set('LastCalculatedDate',concatenatetime);"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applications({{gAppID2}})?$expand=cmc_application_retentionscorehistory_applica\n($filter=statecode eq 0)\n",
									"host": [
										"{{Eresource_URL}}cmc_applications({{gAppID2}})"
									],
									"query": [
										{
											"key": "$expand",
											"value": "cmc_application_retentionscorehistory_applica\n($filter=statecode eq 0)\n"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Verify target Attribute value in Application 3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var targetValue, applicationName;",
											"var currentretentionscoredate;",
											"pm.test(\"Fetch Target Attribute value\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    ",
											"    targetValue=jsonData.utcconversiontimezonecode;",
											"    currentretentionscoredate =jsonData.cmc_currentretentionscoredate;",
											"    applicationName= jsonData.cmc_applicationname;",
											"     ",
											"    console.log(\"Application name is: \"+applicationName);",
											"    console.log(\"Target Attribute value is: \"+targetValue);",
											"    console.log(\"currentretentionscoredate: \"+currentretentionscoredate);",
											"",
											"    pm.test(\"Scores awarded to Application 3\", function()",
											"        {",
											"            pm.expect(targetValue).to.equal(70);",
											"        });",
											" ",
											"});",
											"",
											"pm.globals.set('gtargetValue23',targetValue);",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									}
								],
								"url": {
									"raw": "{{Eresource_URL}}cmc_applications({{gAppID3}})",
									"host": [
										"{{Eresource_URL}}cmc_applications({{gAppID3}})"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Active ScoreHistories for Application 3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var score,scoreHistoryName, retentionScoreHistoryId, targetAttribute,lastCalculatedDate, createdOn,autoname,scoreDefinition ;",
											"",
											"pm.test(\"Check the score history record for Application\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    var result=jsonData.cmc_application_retentionscorehistory_applica;",
											"",
											"    if(result.length===1)",
											"    {",
											"        retentionScoreHistoryId= result[0].cmc_retentionscorehistoryid;",
											"        score= result[0].cmc_score;",
											"        scoreHistoryName= result[0].cmc_retentionscorehistoryname;",
											"        targetAttribute= result[0].cmc_targetattribute;",
											"        lastCalculatedDate= result[0].cmc_lastcalculateddate;",
											"        createdOn= result[0].createdon;",
											"        scoreDefinition=result[0]._cmc_scoredefinitionid_value;",
											"",
											"        var dateFromResponse = new Date(lastCalculatedDate);",
											"        console.log(\"new date : \"+dateFromResponse);",
											"        var utc=dateFromResponse.toISOString();",
											"        console.log(\"utc: \"+utc);",
											"        var convertedLastCalculatedDate=utc.slice(0, -14);",
											"",
											"        console.log(\"converted Last Calculated date is:\" +convertedLastCalculatedDate);",
											"        ",
											"        console.log(\"Target score in Score history record is:\" +score);",
											"        console.log(\"Score history name is:\" +scoreHistoryName);",
											"        console.log(\"Target Attribute is:\" +targetAttribute);",
											"        console.log(\"Last Calculated date is:\" +lastCalculatedDate);",
											"        console.log(\"created on is:\" +createdOn);",
											"",
											"        var actualScoreDefintion=pm.globals.get('gscoredefinitionid');",
											"        var actualTargetAttribute=\"utcconversiontimezonecode\";",
											"        var actualcalculatedDate=pm.environment.get('LastCalculatedDate');",
											"",
											"        console.log(\"actual calculated date is: \"+actualcalculatedDate);",
											"",
											"       /* pm.test(\"Last Calculated Date check\", function()",
											"        {",
											"            pm.expect(actualcalculatedDate).to.equal(convertedLastCalculatedDate);",
											"        });*/ ",
											"",
											"        //Autonme Workflow check for Score History Name",
											"        nameString =scoreHistoryName.split(\"-\");",
											"        ",
											"        autoname= pm.globals.get('gAppName3')+\" \"+\"-\"+\" \"+score+\" \"+\"-\"+nameString[nameString.length-1];      ",
											"        console.log(\"Score History Autoname is: \"+autoname);",
											"               ",
											"        pm.test(\"Autonme Workflow check for Score History Name\", function()",
											"        {",
											"            pm.expect(scoreHistoryName).to.equal(autoname);",
											"        });",
											"         ",
											"        pm.test(\"Score value in Score History record\", function()",
											"        {",
											"            pm.expect(score).to.equal(70);",
											"        });",
											"",
											"        pm.test(\"Score Definition check\", function()",
											"        {",
											"            pm.expect(actualScoreDefintion).to.equal(scoreDefinition);",
											"        });",
											"",
											"        pm.test(\"Target Attribute check\", function()",
											"        {",
											"            pm.expect(actualTargetAttribute).to.equal(targetAttribute);",
											"        });   ",
											"        ",
											"    }",
											"    else",
											"    {",
											"        console.log(\"Active Score history record does't exist\");",
											"        throw new Error();",
											"    }",
											"",
											"    ",
											"});",
											"",
											"pm.globals.set('gretentionScoreHistoryId23',retentionScoreHistoryId);",
											"pm.globals.set('gscore23',score);",
											"pm.globals.set('lastCalculatedDate23',lastCalculatedDate);",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											" var moment = require('moment');\r",
											"pm.environment.set(\"timestamp\", moment().format(\"YYYY-MM-DD\"));\r",
											"\r",
											"    var dt = new Date();\r",
											"    dt.setDate( dt.getDate() - 3 );\r",
											"    console.log(\"date: \"+dt);\r",
											"\tvar utc=dt.toISOString();\r",
											" \tconsole.log(\"utc: \"+utc);\r",
											"    var concatenatetime=utc.slice(0, -14);\r",
											"    console.log(\"datetime: \"+concatenatetime);\r",
											"\r",
											"    pm.environment.set('LastCalculatedDate',concatenatetime);"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applications({{gAppID3}})?$expand=cmc_application_retentionscorehistory_applica\n($filter=statecode eq 0)\n",
									"host": [
										"{{Eresource_URL}}cmc_applications({{gAppID3}})"
									],
									"query": [
										{
											"key": "$expand",
											"value": "cmc_application_retentionscorehistory_applica\n($filter=statecode eq 0)\n"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Verify target Attribute value in Application 4",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var targetValue, applicationName;",
											"var currentretentionscoredate;",
											"pm.test(\"Fetch Target Attribute value\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    ",
											"    targetValue=jsonData.utcconversiontimezonecode;",
											"    currentretentionscoredate =jsonData.cmc_currentretentionscoredate;",
											"    applicationName= jsonData.cmc_applicationname;",
											"     ",
											"    console.log(\"Application name is: \"+applicationName);",
											"    console.log(\"Target Attribute value is: \"+targetValue);",
											"    console.log(\"currentretentionscoredate: \"+currentretentionscoredate);",
											"",
											"    pm.test(\"Scores awarded to Application 4\", function()",
											"        {",
											"            pm.expect(targetValue).to.equal(50);",
											"        });",
											" ",
											"});",
											"",
											"pm.globals.set('gtargetValue24',targetValue);",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									}
								],
								"url": {
									"raw": "{{Eresource_URL}}cmc_applications({{gAppID4}})",
									"host": [
										"{{Eresource_URL}}cmc_applications({{gAppID4}})"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Active ScoreHistories for Application 4",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var score,scoreHistoryName, retentionScoreHistoryId, targetAttribute,lastCalculatedDate, createdOn,autoname,scoreDefinition ;",
											"",
											"pm.test(\"Check the score history record for Application\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    var result=jsonData.cmc_application_retentionscorehistory_applica;",
											"",
											"    if(result.length===1)",
											"    {",
											"        retentionScoreHistoryId= result[0].cmc_retentionscorehistoryid;",
											"        score= result[0].cmc_score;",
											"        scoreHistoryName= result[0].cmc_retentionscorehistoryname;",
											"        targetAttribute= result[0].cmc_targetattribute;",
											"        lastCalculatedDate= result[0].cmc_lastcalculateddate;",
											"        createdOn= result[0].createdon;",
											"        scoreDefinition=result[0]._cmc_scoredefinitionid_value;",
											"",
											"        var dateFromResponse = new Date(lastCalculatedDate);",
											"        console.log(\"new date : \"+dateFromResponse);",
											"        var utc=dateFromResponse.toISOString();",
											"        console.log(\"utc: \"+utc);",
											"        var convertedLastCalculatedDate=utc.slice(0, -14);",
											"",
											"        console.log(\"converted Last Calculated date is:\" +convertedLastCalculatedDate);",
											"        ",
											"        console.log(\"Target score in Score history record is:\" +score);",
											"        console.log(\"Score history name is:\" +scoreHistoryName);",
											"        console.log(\"Target Attribute is:\" +targetAttribute);",
											"        console.log(\"Last Calculated date is:\" +lastCalculatedDate);",
											"        console.log(\"created on is:\" +createdOn);",
											"",
											"        var actualScoreDefintion=pm.globals.get('gscoredefinitionid');",
											"        var actualTargetAttribute=\"utcconversiontimezonecode\";",
											"        var actualcalculatedDate=pm.environment.get('LastCalculatedDate');",
											"",
											"        console.log(\"actual calculated date is: \"+actualcalculatedDate);",
											"",
											"        /*pm.test(\"Last Calculated Date check\", function()",
											"        {",
											"            pm.expect(actualcalculatedDate).to.equal(convertedLastCalculatedDate);",
											"        }); */",
											"",
											"        //Autonme Workflow check for Score History Name",
											"        nameString =scoreHistoryName.split(\"-\");",
											"        ",
											"        autoname= pm.globals.get('gAppName4')+\" \"+\"-\"+\" \"+score+\" \"+\"-\"+nameString[nameString.length-1];      ",
											"        console.log(\"Score History Autoname is: \"+autoname);",
											"               ",
											"        pm.test(\"Autonme Workflow check for Score History Name\", function()",
											"        {",
											"            pm.expect(scoreHistoryName).to.equal(autoname);",
											"        });",
											"         ",
											"        pm.test(\"Score value in Score History record\", function()",
											"        {",
											"            pm.expect(score).to.equal(50);",
											"        });",
											"",
											"        pm.test(\"Score Definition check\", function()",
											"        {",
											"            pm.expect(actualScoreDefintion).to.equal(scoreDefinition);",
											"        });",
											"",
											"        pm.test(\"Target Attribute check\", function()",
											"        {",
											"            pm.expect(actualTargetAttribute).to.equal(targetAttribute);",
											"        });   ",
											"        ",
											"    }",
											"    else",
											"    {",
											"        console.log(\"Active Score history record does't exist\");",
											"        throw new Error();",
											"    }",
											"",
											"    ",
											"});",
											"",
											"pm.globals.set('gretentionScoreHistoryId24',retentionScoreHistoryId);",
											"pm.globals.set('gscore24',score);",
											"pm.globals.set('lastCalculatedDate24',lastCalculatedDate);",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											" var moment = require('moment');\r",
											"pm.environment.set(\"timestamp\", moment().format(\"YYYY-MM-DD\"));\r",
											"\r",
											"    var dt = new Date();\r",
											"    dt.setDate( dt.getDate() - 3 );\r",
											"    console.log(\"date: \"+dt);\r",
											"\tvar utc=dt.toISOString();\r",
											" \tconsole.log(\"utc: \"+utc);\r",
											"    var concatenatetime=utc.slice(0, -14);\r",
											"    console.log(\"datetime: \"+concatenatetime);\r",
											"\r",
											"    pm.environment.set('LastCalculatedDate',concatenatetime);"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applications({{gAppID4}})?$expand=cmc_application_retentionscorehistory_applica\n($filter=statecode eq 0)\n",
									"host": [
										"{{Eresource_URL}}cmc_applications({{gAppID4}})"
									],
									"query": [
										{
											"key": "$expand",
											"value": "cmc_application_retentionscorehistory_applica\n($filter=statecode eq 0)\n"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Verify target Attribute value in Application 5",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var targetValue, applicationName;",
											"var currentretentionscoredate;",
											"pm.test(\"Fetch Target Attribute value\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    ",
											"    targetValue=jsonData.utcconversiontimezonecode;",
											"    currentretentionscoredate =jsonData.cmc_currentretentionscoredate;",
											"    applicationName= jsonData.cmc_applicationname;",
											"     ",
											"    console.log(\"Application name is: \"+applicationName);",
											"    console.log(\"Target Attribute value is: \"+targetValue);",
											"    console.log(\"currentretentionscoredate: \"+currentretentionscoredate);",
											"",
											"    pm.test(\"Scores awarded to Application 5\", function()",
											"        {",
											"            pm.expect(targetValue).to.equal(75);",
											"        });",
											" ",
											"});",
											"",
											"pm.globals.set('gtargetValue25',targetValue);",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									}
								],
								"url": {
									"raw": "{{Eresource_URL}}cmc_applications({{gAppID5}})",
									"host": [
										"{{Eresource_URL}}cmc_applications({{gAppID5}})"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Active ScoreHistories for Application 5",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var score,scoreHistoryName, retentionScoreHistoryId, targetAttribute,lastCalculatedDate, createdOn,autoname,scoreDefinition ;",
											"",
											"pm.test(\"Check the score history record for Application\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    var result=jsonData.cmc_application_retentionscorehistory_applica;",
											"",
											"    if(result.length===1)",
											"    {",
											"        retentionScoreHistoryId= result[0].cmc_retentionscorehistoryid;",
											"        score= result[0].cmc_score;",
											"        scoreHistoryName= result[0].cmc_retentionscorehistoryname;",
											"        targetAttribute= result[0].cmc_targetattribute;",
											"        lastCalculatedDate= result[0].cmc_lastcalculateddate;",
											"        createdOn= result[0].createdon;",
											"        scoreDefinition=result[0]._cmc_scoredefinitionid_value;",
											"",
											"        var dateFromResponse = new Date(lastCalculatedDate);",
											"        console.log(\"new date : \"+dateFromResponse);",
											"        var utc=dateFromResponse.toISOString();",
											"        console.log(\"utc: \"+utc);",
											"        var convertedLastCalculatedDate=utc.slice(0, -14);",
											"",
											"        console.log(\"converted Last Calculated date is:\" +convertedLastCalculatedDate);",
											"        ",
											"        console.log(\"Target score in Score history record is:\" +score);",
											"        console.log(\"Score history name is:\" +scoreHistoryName);",
											"        console.log(\"Target Attribute is:\" +targetAttribute);",
											"        console.log(\"Last Calculated date is:\" +lastCalculatedDate);",
											"        console.log(\"created on is:\" +createdOn);",
											"",
											"        var actualScoreDefintion=pm.globals.get('gscoredefinitionid');",
											"        var actualTargetAttribute=\"utcconversiontimezonecode\";",
											"        var actualcalculatedDate=pm.environment.get('LastCalculatedDate');",
											"",
											"        console.log(\"actual calculated date is: \"+actualcalculatedDate);",
											"",
											"       /* pm.test(\"Last Calculated Date check\", function()",
											"        {",
											"            pm.expect(actualcalculatedDate).to.equal(convertedLastCalculatedDate);",
											"        }); */",
											"",
											"        //Autonme Workflow check for Score History Name",
											"        nameString =scoreHistoryName.split(\"-\");",
											"        ",
											"        autoname= pm.globals.get('gAppName5')+\" \"+\"-\"+\" \"+score+\" \"+\"-\"+nameString[nameString.length-1];      ",
											"        console.log(\"Score History Autoname is: \"+autoname);",
											"               ",
											"        pm.test(\"Autonme Workflow check for Score History Name\", function()",
											"        {",
											"            pm.expect(scoreHistoryName).to.equal(autoname);",
											"        });",
											"         ",
											"        pm.test(\"Score value in Score History record\", function()",
											"        {",
											"            pm.expect(score).to.equal(75);",
											"        });",
											"",
											"        pm.test(\"Score Definition check\", function()",
											"        {",
											"            pm.expect(actualScoreDefintion).to.equal(scoreDefinition);",
											"        });",
											"",
											"        pm.test(\"Target Attribute check\", function()",
											"        {",
											"            pm.expect(actualTargetAttribute).to.equal(targetAttribute);",
											"        });   ",
											"        ",
											"    }",
											"    else",
											"    {",
											"        console.log(\"Active Score history record does't exist\");",
											"        throw new Error();",
											"    }",
											"",
											"    ",
											"});",
											"",
											"pm.globals.set('gretentionScoreHistoryId25',retentionScoreHistoryId);",
											"pm.globals.set('gscore25',score);",
											"pm.globals.set('lastCalculatedDate25',lastCalculatedDate);",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											" var moment = require('moment');\r",
											"pm.environment.set(\"timestamp\", moment().format(\"YYYY-MM-DD\"));\r",
											"\r",
											"    var dt = new Date();\r",
											"    dt.setDate( dt.getDate() - 3 );\r",
											"    console.log(\"date: \"+dt);\r",
											"\tvar utc=dt.toISOString();\r",
											" \tconsole.log(\"utc: \"+utc);\r",
											"    var concatenatetime=utc.slice(0, -14);\r",
											"    console.log(\"datetime: \"+concatenatetime);\r",
											"    pm.environment.set('LastCalculatedDate',concatenatetime);"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applications({{gAppID5}})?$expand=cmc_application_retentionscorehistory_applica\n($filter=statecode eq 0)\n",
									"host": [
										"{{Eresource_URL}}cmc_applications({{gAppID5}})"
									],
									"query": [
										{
											"key": "$expand",
											"value": "cmc_application_retentionscorehistory_applica\n($filter=statecode eq 0)\n"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Verify target Attribute value in Application 6a",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var targetValue, applicationName;",
											"var currentretentionscoredate;",
											"pm.test(\"Fetch Target Attribute value\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    ",
											"    targetValue=jsonData.utcconversiontimezonecode;",
											"    currentretentionscoredate =jsonData.cmc_currentretentionscoredate;",
											"    applicationName= jsonData.cmc_applicationname;",
											"     ",
											"    console.log(\"Application name is: \"+applicationName);",
											"    console.log(\"Target Attribute value is: \"+targetValue);",
											"    console.log(\"currentretentionscoredate: \"+currentretentionscoredate);",
											"",
											"    pm.test(\"Scores awarded to Application 6a\", function()",
											"        {",
											"            pm.expect(targetValue).to.equal(115);",
											"        });",
											" ",
											"});",
											"",
											"pm.globals.set('gtargetValue26a',targetValue);",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									}
								],
								"url": {
									"raw": "{{Eresource_URL}}cmc_applications({{gAppID6a}})",
									"host": [
										"{{Eresource_URL}}cmc_applications({{gAppID6a}})"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Active ScoreHistories for Application 6a",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var score,scoreHistoryName, retentionScoreHistoryId, targetAttribute,lastCalculatedDate, createdOn,autoname,scoreDefinition ;",
											"",
											"pm.test(\"Check the score history record for Application\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    var result=jsonData.cmc_application_retentionscorehistory_applica;",
											"",
											"    if(result.length===1)",
											"    {",
											"        retentionScoreHistoryId= result[0].cmc_retentionscorehistoryid;",
											"        score= result[0].cmc_score;",
											"        scoreHistoryName= result[0].cmc_retentionscorehistoryname;",
											"        targetAttribute= result[0].cmc_targetattribute;",
											"        lastCalculatedDate= result[0].cmc_lastcalculateddate;",
											"        createdOn= result[0].createdon;",
											"        scoreDefinition=result[0]._cmc_scoredefinitionid_value;",
											"",
											"        var dateFromResponse = new Date(lastCalculatedDate);",
											"        console.log(\"new date : \"+dateFromResponse);",
											"        var utc=dateFromResponse.toISOString();",
											"        console.log(\"utc: \"+utc);",
											"        var convertedLastCalculatedDate=utc.slice(0, -14);",
											"",
											"        console.log(\"converted Last Calculated date is:\" +convertedLastCalculatedDate);",
											"        ",
											"        console.log(\"Target score in Score history record is:\" +score);",
											"        console.log(\"Score history name is:\" +scoreHistoryName);",
											"        console.log(\"Target Attribute is:\" +targetAttribute);",
											"        console.log(\"Last Calculated date is:\" +lastCalculatedDate);",
											"        console.log(\"created on is:\" +createdOn);",
											"",
											"        var actualScoreDefintion=pm.globals.get('gscoredefinitionid');",
											"        var actualTargetAttribute=\"utcconversiontimezonecode\";",
											"        var actualcalculatedDate=pm.environment.get('timestamp');",
											"",
											"        console.log(\"actual calculated date is: \"+actualcalculatedDate);",
											"",
											"       /* pm.test(\"Last Calculated Date check\", function()",
											"        {",
											"            pm.expect(actualcalculatedDate).to.equal(convertedLastCalculatedDate);",
											"        }); */",
											"",
											"        //Autonme Workflow check for Score History Name",
											"        nameString =scoreHistoryName.split(\"-\");",
											"        ",
											"        autoname= pm.globals.get('gAppName6a')+\" \"+\"-\"+\" \"+score+\" \"+\"-\"+nameString[nameString.length-1];      ",
											"        console.log(\"Score History Autoname is: \"+autoname);",
											"               ",
											"        pm.test(\"Autonme Workflow check for Score History Name\", function()",
											"        {",
											"            pm.expect(scoreHistoryName).to.equal(autoname);",
											"        });",
											"         ",
											"        pm.test(\"Score value in Score History record\", function()",
											"        {",
											"            pm.expect(score).to.equal(115);",
											"        });",
											"",
											"        pm.test(\"Score Definition check\", function()",
											"        {",
											"            pm.expect(actualScoreDefintion).to.equal(scoreDefinition);",
											"        });",
											"",
											"        pm.test(\"Target Attribute check\", function()",
											"        {",
											"            pm.expect(actualTargetAttribute).to.equal(targetAttribute);",
											"        });   ",
											"        ",
											"    }",
											"    else",
											"    {",
											"        console.log(\"Active Score history record does't exist\");",
											"        throw new Error();",
											"    }",
											"",
											"    ",
											"});",
											"",
											"pm.globals.set('gretentionScoreHistoryId26a',retentionScoreHistoryId);",
											"pm.globals.set('gscore26a',score);",
											"pm.globals.set('lastCalculatedDate26a',lastCalculatedDate);",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											" var moment = require('moment');\r",
											"pm.environment.set(\"timestamp\", moment().format(\"YYYY-MM-DD\"));"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applications({{gAppID6a}})?$expand=cmc_application_retentionscorehistory_applica\n($filter=statecode eq 0)\n",
									"host": [
										"{{Eresource_URL}}cmc_applications({{gAppID6a}})"
									],
									"query": [
										{
											"key": "$expand",
											"value": "cmc_application_retentionscorehistory_applica\n($filter=statecode eq 0)\n"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Verify target Attribute value in Application 6b",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var targetValue, applicationName;",
											"var currentretentionscoredate;",
											"pm.test(\"Fetch Target Attribute value\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    ",
											"    targetValue=jsonData.utcconversiontimezonecode;",
											"    currentretentionscoredate =jsonData.cmc_currentretentionscoredate;",
											"    applicationName= jsonData.cmc_applicationname;",
											"     ",
											"    console.log(\"Application name is: \"+applicationName);",
											"    console.log(\"Target Attribute value is: \"+targetValue);",
											"    console.log(\"currentretentionscoredate: \"+currentretentionscoredate);",
											"",
											"    pm.test(\"Scores awarded to Application 6b\", function()",
											"        {",
											"            pm.expect(targetValue).to.equal(95);",
											"        });",
											" ",
											"});",
											"",
											"pm.globals.set('gtargetValue26b',targetValue);",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									}
								],
								"url": {
									"raw": "{{Eresource_URL}}cmc_applications({{gAppID6b}})",
									"host": [
										"{{Eresource_URL}}cmc_applications({{gAppID6b}})"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Active ScoreHistories for Application 6b",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var score,scoreHistoryName, retentionScoreHistoryId, targetAttribute,lastCalculatedDate, createdOn,autoname,scoreDefinition ;",
											"",
											"pm.test(\"Check the score history record for Application\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    var result=jsonData.cmc_application_retentionscorehistory_applica;",
											"",
											"    if(result.length===1)",
											"    {",
											"        retentionScoreHistoryId= result[0].cmc_retentionscorehistoryid;",
											"        score= result[0].cmc_score;",
											"        scoreHistoryName= result[0].cmc_retentionscorehistoryname;",
											"        targetAttribute= result[0].cmc_targetattribute;",
											"        lastCalculatedDate= result[0].cmc_lastcalculateddate;",
											"        createdOn= result[0].createdon;",
											"        scoreDefinition=result[0]._cmc_scoredefinitionid_value;",
											"",
											"        var dateFromResponse = new Date(lastCalculatedDate);",
											"        console.log(\"new date : \"+dateFromResponse);",
											"        var utc=dateFromResponse.toISOString();",
											"        console.log(\"utc: \"+utc);",
											"        var convertedLastCalculatedDate=utc.slice(0, -14);",
											"",
											"        console.log(\"converted Last Calculated date is:\" +convertedLastCalculatedDate);",
											"        ",
											"        console.log(\"Target score in Score history record is:\" +score);",
											"        console.log(\"Score history name is:\" +scoreHistoryName);",
											"        console.log(\"Target Attribute is:\" +targetAttribute);",
											"        console.log(\"Last Calculated date is:\" +lastCalculatedDate);",
											"        console.log(\"created on is:\" +createdOn);",
											"",
											"        var actualScoreDefintion=pm.globals.get('gscoredefinitionid');",
											"        var actualTargetAttribute=\"utcconversiontimezonecode\";",
											"        var actualcalculatedDate=pm.environment.get('timestamp');",
											"",
											"        console.log(\"actual calculated date is: \"+actualcalculatedDate);",
											"",
											"       /* pm.test(\"Last Calculated Date check\", function()",
											"        {",
											"            pm.expect(actualcalculatedDate).to.equal(convertedLastCalculatedDate);",
											"        }); */",
											"",
											"        //Autonme Workflow check for Score History Name",
											"        nameString =scoreHistoryName.split(\"-\");",
											"        ",
											"        autoname= pm.globals.get('gAppName6b')+\" \"+\"-\"+\" \"+score+\" \"+\"-\"+nameString[nameString.length-1];      ",
											"        console.log(\"Score History Autoname is: \"+autoname);",
											"               ",
											"        pm.test(\"Autonme Workflow check for Score History Name\", function()",
											"        {",
											"            pm.expect(scoreHistoryName).to.equal(autoname);",
											"        });",
											"         ",
											"        pm.test(\"Score value in Score History record\", function()",
											"        {",
											"            pm.expect(score).to.equal(95);",
											"        });",
											"",
											"        pm.test(\"Score Definition check\", function()",
											"        {",
											"            pm.expect(actualScoreDefintion).to.equal(scoreDefinition);",
											"        });",
											"",
											"        pm.test(\"Target Attribute check\", function()",
											"        {",
											"            pm.expect(actualTargetAttribute).to.equal(targetAttribute);",
											"        });   ",
											"        ",
											"    }",
											"    else",
											"    {",
											"        console.log(\"Active Score history record does't exist\");",
											"        throw new Error();",
											"    }",
											"",
											"    ",
											"});",
											"",
											"pm.globals.set('gretentionScoreHistoryId26b',retentionScoreHistoryId);",
											"pm.globals.set('gscore26b',score);",
											"pm.globals.set('lastCalculatedDate26b',lastCalculatedDate);",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											" var moment = require('moment');\r",
											"pm.environment.set(\"timestamp\", moment().format(\"YYYY-MM-DD\"));"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applications({{gAppID6b}})?$expand=cmc_application_retentionscorehistory_applica\n($filter=statecode eq 0)\n",
									"host": [
										"{{Eresource_URL}}cmc_applications({{gAppID6b}})"
									],
									"query": [
										{
											"key": "$expand",
											"value": "cmc_application_retentionscorehistory_applica\n($filter=statecode eq 0)\n"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Verify target Attribute value in Application 7",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var targetValue, applicationName;",
											"var currentretentionscoredate;",
											"pm.test(\"Fetch Target Attribute value\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    ",
											"    targetValue=jsonData.utcconversiontimezonecode;",
											"    currentretentionscoredate =jsonData.cmc_currentretentionscoredate;",
											"    applicationName= jsonData.cmc_applicationname;",
											"     ",
											"    console.log(\"Application name is: \"+applicationName);",
											"    console.log(\"Target Attribute value is: \"+targetValue);",
											"    console.log(\"currentretentionscoredate: \"+currentretentionscoredate);",
											"",
											"    pm.test(\"Scores awarded to Application 7\", function()",
											"        {",
											"            pm.expect(targetValue).to.equal(80);",
											"        });",
											" ",
											"});",
											"",
											"pm.globals.set('gtargetValue27',targetValue);",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									}
								],
								"url": {
									"raw": "{{Eresource_URL}}cmc_applications({{gAppID7}})",
									"host": [
										"{{Eresource_URL}}cmc_applications({{gAppID7}})"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Active ScoreHistories for Application 7",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var score,scoreHistoryName, retentionScoreHistoryId, targetAttribute,lastCalculatedDate, createdOn,autoname,scoreDefinition ;",
											"",
											"pm.test(\"Check the score history record for Application\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    var result=jsonData.cmc_application_retentionscorehistory_applica;",
											"",
											"    if(result.length===1)",
											"    {",
											"        retentionScoreHistoryId= result[0].cmc_retentionscorehistoryid;",
											"        score= result[0].cmc_score;",
											"        scoreHistoryName= result[0].cmc_retentionscorehistoryname;",
											"        targetAttribute= result[0].cmc_targetattribute;",
											"        lastCalculatedDate= result[0].cmc_lastcalculateddate;",
											"        createdOn= result[0].createdon;",
											"        scoreDefinition=result[0]._cmc_scoredefinitionid_value;",
											"",
											"        var dateFromResponse = new Date(lastCalculatedDate);",
											"        console.log(\"new date : \"+dateFromResponse);",
											"        var utc=dateFromResponse.toISOString();",
											"        console.log(\"utc: \"+utc);",
											"        var convertedLastCalculatedDate=utc.slice(0, -14);",
											"",
											"        console.log(\"converted Last Calculated date is:\" +convertedLastCalculatedDate);",
											"        ",
											"        console.log(\"Target score in Score history record is:\" +score);",
											"        console.log(\"Score history name is:\" +scoreHistoryName);",
											"        console.log(\"Target Attribute is:\" +targetAttribute);",
											"        console.log(\"Last Calculated date is:\" +lastCalculatedDate);",
											"        console.log(\"created on is:\" +createdOn);",
											"",
											"        var actualScoreDefintion=pm.globals.get('gscoredefinitionid');",
											"        var actualTargetAttribute=\"utcconversiontimezonecode\";",
											"        var actualcalculatedDate=pm.environment.get('timestamp');",
											"",
											"        console.log(\"actual calculated date is: \"+actualcalculatedDate);",
											"",
											"        /*pm.test(\"Last Calculated Date check\", function()",
											"        {",
											"            pm.expect(actualcalculatedDate).to.equal(convertedLastCalculatedDate);",
											"        }); */",
											"",
											"        //Autonme Workflow check for Score History Name",
											"        nameString =scoreHistoryName.split(\"-\");",
											"        ",
											"        autoname= pm.globals.get('gAppName7')+\" \"+\"-\"+\" \"+score+\" \"+\"-\"+nameString[nameString.length-1];      ",
											"        console.log(\"Score History Autoname is: \"+autoname);",
											"               ",
											"        pm.test(\"Autonme Workflow check for Score History Name\", function()",
											"        {",
											"            pm.expect(scoreHistoryName).to.equal(autoname);",
											"        });",
											"         ",
											"        pm.test(\"Score value in Score History record\", function()",
											"        {",
											"            pm.expect(score).to.equal(80);",
											"        });",
											"",
											"        pm.test(\"Score Definition check\", function()",
											"        {",
											"            pm.expect(actualScoreDefintion).to.equal(scoreDefinition);",
											"        });",
											"",
											"        pm.test(\"Target Attribute check\", function()",
											"        {",
											"            pm.expect(actualTargetAttribute).to.equal(targetAttribute);",
											"        });   ",
											"        ",
											"    }",
											"    else",
											"    {",
											"        console.log(\"Active Score history record does't exist\");",
											"        throw new Error();",
											"    }",
											"",
											"    ",
											"});",
											"",
											"pm.globals.set('gretentionScoreHistoryId27',retentionScoreHistoryId);",
											"pm.globals.set('gscore27',score);",
											"pm.globals.set('lastCalculatedDate27',lastCalculatedDate);",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											" var moment = require('moment');\r",
											"pm.environment.set(\"timestamp\", moment().format(\"YYYY-MM-DD\"));"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applications({{gAppID7}})?$expand=cmc_application_retentionscorehistory_applica\n($filter=statecode eq 0)\n",
									"host": [
										"{{Eresource_URL}}cmc_applications({{gAppID7}})"
									],
									"query": [
										{
											"key": "$expand",
											"value": "cmc_application_retentionscorehistory_applica\n($filter=statecode eq 0)\n"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Verify 'Date Last Run' & 'last recalculation date'",
					"item": [
						{
							"name": "Verify 'Date Last Run' & 'last recalculation date' in Score Definition",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var dateLastRun,lastRecalculationDate;",
											" ",
											"pm.test(\"Fetch Score definition Record\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    ",
											"    dateLastRun=jsonData.cmc_datelastrun;",
											"    lastRecalculationDate=jsonData.cmc_lastrecalculationdate;",
											"",
											"        var dateFromResponse = new Date(dateLastRun);",
											"        console.log(\"new date : \"+dateFromResponse);",
											"        var utc=dateFromResponse.toISOString();",
											"        console.log(\"utc: \"+utc);",
											"        var convertedLastCalculatedDate=utc.slice(0, -14);",
											"",
											"        console.log(\"converted Last Calculated date is:\" +convertedLastCalculatedDate);",
											"",
											"    var actualcalculatedDate=pm.environment.get('timestamp');",
											"",
											"        console.log(\"actual calculated date is: \"+actualcalculatedDate);",
											"",
											"       /* pm.test(\"Last Calculated Date check\", function()",
											"        {",
											"            pm.expect(actualcalculatedDate).to.equal(convertedLastCalculatedDate);",
											"        });*/ ",
											"",
											"",
											"        var dateFromResponse1 = new Date(lastRecalculationDate);",
											"        console.log(\"new date : \"+dateFromResponse1);",
											"        var utc1=dateFromResponse1.toISOString();",
											"        console.log(\"utc: \"+utc1);",
											"        var convertedLastRecalculationDate=utc1.slice(0, -14);",
											"",
											"    var actualcalculatedDate1=pm.environment.get('LastCalculatedDate');",
											"   ",
											"       /* pm.test(\"Last reCalculated Date check\", function()",
											"        {",
											"            pm.expect(actualcalculatedDate1).to.equal(convertedLastRecalculationDate);",
											"        });*/ ",
											"});",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											" var moment = require('moment');\r",
											"pm.environment.set(\"timestamp\", moment().format(\"YYYY-MM-DD\"));\r",
											"\r",
											"    var dt = new Date();\r",
											"    dt.setDate( dt.getDate() - 1 );\r",
											"    console.log(\"date: \"+dt);\r",
											"\tvar utc=dt.toISOString();\r",
											" \tconsole.log(\"utc: \"+utc);\r",
											"    var concatenatetime=utc.slice(0, -14);\r",
											"    console.log(\"datetime: \"+concatenatetime);\r",
											"    pm.environment.set('LastCalculatedDate',concatenatetime);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									}
								],
								"url": {
									"raw": "{{Eresource_URL}}cmc_scoredefinitions({{gscoredefinitionid}})",
									"host": [
										"{{Eresource_URL}}cmc_scoredefinitions({{gscoredefinitionid}})"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Scenario 4: Check the score definition getting skipped",
			"item": [
				{
					"name": "DCRM Admin",
					"item": [
						{
							"name": "GetToken_DCRM Admin",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = JSON.parse(responseBody);",
											"postman.setGlobalVariable('gaccess_token', data.access_token);",
											"",
											"console.log(pm.globals.get(\"gaccess_token\"));",
											"",
											"",
											"",
											"//Genarate global session value",
											"",
											"var number = Math.floor(Math.random() * 1000);",
											"pm.globals.set('globalsessionvalue',number)",
											"",
											"console.log(pm.globals.get(\"globalsessionvalue\"));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "grant_type",
											"value": "client_credentials",
											"type": "text"
										},
										{
											"key": "client_id",
											"value": "{{Eadmin_id}}",
											"type": "text"
										},
										{
											"key": "client_secret",
											"value": "{{Eadmin_secret}}",
											"type": "text"
										},
										{
											"key": "resource",
											"value": "{{Eresource}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "https://login.microsoftonline.com/{{Eredirectid}}/oauth2/token",
									"protocol": "https",
									"host": [
										"login",
										"microsoftonline",
										"com"
									],
									"path": [
										"{{Eredirectid}}",
										"oauth2",
										"token"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Pre-requisite creation",
					"item": [
						{
							"name": "Create Contact",
							"item": [
								{
									"name": "Create AcademicPeriod",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var academicperiodid,academicPeriodname;",
													"",
													"pm.test(\"Academicperiodid Created\", function() ",
													"{",
													"    pm.expect(pm.response.code).to.be.oneOf([200,201,202,204]);",
													"    var jsonData =JSON.parse(responseBody);",
													"    academicperiodid = jsonData.mshied_academicperiodid;",
													"    academicPeriodname=jsonData.mshied_name;",
													"",
													"    console.log(\"Academic Period Name: \"+academicPeriodname);",
													" ",
													"});",
													"",
													"pm.globals.set('gacademicperiodid11',academicperiodid);",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"  var moment = require('moment');\r",
													"pm.environment.set(\"timestamp\", moment().add(1, 'days').format(\"YYYY-MM-DD\"));\r",
													"\r",
													"pm.environment.set(\"timestampEndDate\", moment().add(100, 'days').format(\"YYYY-MM-DD\"));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"type": "text",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer {{gaccess_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"mshied_code\": \"{{$randomInt}}23API0011-{{$randomInt}}\",\n    \"mshied_enddate\": \"{{timestampEndDate}}\",\n    \"mshied_name\": \"API-ScoringModel-{{$randomInt}}{{$randomInt}}\",\n    \"mshied_startdate\": \"{{timestamp}}\"\n \n}\n"
										},
										"url": {
											"raw": "{{Eresource}}api/data/{{Eversion}}/mshied_academicperiods",
											"host": [
												"{{Eresource}}api"
											],
											"path": [
												"data",
												"{{Eversion}}",
												"mshied_academicperiods"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Contact 1",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var contactid;",
													"pm.test(\"Contact Created\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
													"    var jsonData = JSON.parse(responseBody);",
													"    contactid = jsonData.contactid;",
													"    var contactName = jsonData.fullname;",
													"    console.log(\"Contact name is: \" + contactName);",
													"",
													"",
													"",
													"    ",
													"});",
													"pm.globals.set('gcontactidStudent11', contactid);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											},
											{
												"key": "OData-Version",
												"value": "4.0"
											},
											{
												"key": "OData-MaxVersion",
												"value": "4.0"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"firstname\": \"Scoring {{$randomInt}}\",\r\n    \"lastname\": \"Application {{$randomInt}}{{$randomInt}}\",\r\n    \"middlename\": \"API\",\r\n    \"mshied_contacttype\": \"494280002\",\r\n    \"mshied_CurrentAcademicPeriodId@odata.bind\": \"/mshied_academicperiods({{gacademicperiodid11}})\",\r\n    \"cmc_recentsat\": 75\r\n}"
										},
										"url": {
											"raw": "{{Eresource_URL}}contacts",
											"host": [
												"{{Eresource_URL}}contacts"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Contact 2",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var contactid,contactName;",
													"pm.test(\"Contact Created\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
													"    var jsonData = JSON.parse(responseBody);",
													"    contactid = jsonData.contactid;",
													"    contactName = jsonData.fullname;",
													"    console.log(\"Contact name is: \" + contactName);",
													"",
													"",
													"",
													"    ",
													"});",
													"pm.globals.set('gcontactidStudent12', contactid);",
													"pm.globals.set('gcontactName12', contactName);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											},
											{
												"key": "OData-Version",
												"value": "4.0"
											},
											{
												"key": "OData-MaxVersion",
												"value": "4.0"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"firstname\": \"Scoring {{$randomInt}}\",\r\n    \"lastname\": \"Application {{$randomInt}}{{$randomInt}}\",\r\n    \"middlename\": \"API\",\r\n    \"mshied_contacttype\": \"494280002\",\r\n    \"cmc_recentact\": 75\r\n}"
										},
										"url": {
											"raw": "{{Eresource_URL}}contacts",
											"host": [
												"{{Eresource_URL}}contacts"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Contact 3",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var contactid;",
													"pm.test(\"Contact Created\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
													"    var jsonData = JSON.parse(responseBody);",
													"    contactid = jsonData.contactid;",
													"    var contactName = jsonData.fullname;",
													"    console.log(\"Contact name is: \" + contactName);",
													"",
													"",
													"",
													"    ",
													"});",
													"pm.globals.set('gcontactidStudent13', contactid);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											},
											{
												"key": "OData-Version",
												"value": "4.0"
											},
											{
												"key": "OData-MaxVersion",
												"value": "4.0"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"firstname\": \"Scoring {{$randomInt}}\",\r\n    \"lastname\": \"Application {{$randomInt}}{{$randomInt}}\",\r\n    \"middlename\": \"API\",\r\n    \"mshied_contacttype\": \"494280002\",\r\n    \"cmc_recentsat\": 75\r\n}"
										},
										"url": {
											"raw": "{{Eresource_URL}}contacts",
											"host": [
												"{{Eresource_URL}}contacts"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Create Application",
							"item": [
								{
									"name": "Create Application Definition 1",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var AppDefID;",
													"var AppDefinitionName;",
													"",
													"pm.test(\"Application Definition is Created\", function() ",
													"{",
													"    pm.expect(pm.response.code).to.be.oneOf([200,201,202,204]);",
													"    var jsonData =JSON.parse(responseBody);",
													"    AppDefID = jsonData.cmc_applicationdefinitionid;",
													"    console.log('Application Definition ID is: ' +AppDefID);",
													"    AppDefinitionName=jsonData.cmc_applicationdefinitionname;",
													"    console.log('Application Definition name is: '+AppDefinitionName);",
													"      ",
													"    ",
													"});",
													"pm.globals.set('gAppDefID11',AppDefID);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"cmc_applicationdefinitionname\": \"AppDefnName API {{globalsessionvalue}}{{$randomInt}}{{$randomInt}}\",\r\n    \"cmc_statusoncompletion\": 175490000,\r\n    \"cmc_statusoncreate\": 175490000,\r\n    \"cmc_statusonsave\": 175490000,\r\n    \"cmc_statusonsubmit\": 175490000\r\n}"
										},
										"url": {
											"raw": "{{Eresource_URL}}cmc_applicationdefinitions",
											"host": [
												"{{Eresource_URL}}cmc_applicationdefinitions"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Application Type",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var AppTypeID;",
													"var AppTypeName;",
													"",
													"pm.test(\"Application Type is Created\", function() ",
													"{",
													"    pm.expect(pm.response.code).to.be.oneOf([200,201,202,204]);",
													"    var jsonData =JSON.parse(responseBody);",
													"    AppTypeID = jsonData.cmc_applicationtypeid;",
													"    console.log('Application Type ID is: ' +AppTypeID);",
													"    AppTypeName=jsonData.cmc_applicationtypename;",
													"    console.log('Application Type name is: ' +AppTypeName);",
													"    ",
													"    ",
													"});",
													"pm.globals.set('gAppTypeID11',AppTypeID);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"cmc_applicationtypename\":\"ATName {{$randomInt}} API {{$randomInt}}{{$randomInt}}\",\r\n\t\"cmc_applicationgroup\": 175490001\r\n}\r\n"
										},
										"url": {
											"raw": "{{Eresource_URL}}cmc_applicationtypes",
											"host": [
												"{{Eresource_URL}}cmc_applicationtypes"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Program 1",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var programid;",
													"pm.test(\"Create Program\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
													"    var jsonData = JSON.parse(responseBody);",
													"",
													"    programid = jsonData.mshied_programid; ",
													"});",
													"pm.globals.set('gProgram11',programid);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"mshied_code\": \"{{$randomInt}}{{$randomInt}}code{{$randomInt}}\",\n    \"mshied_name\": \"{{$randomInt}}Prg1{{$randomInt}}{{$randomInt}}\"\n}"
										},
										"url": {
											"raw": "{{Eresource_URL}}mshied_programs",
											"host": [
												"{{Eresource_URL}}mshied_programs"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Program 2",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var programid;",
													"pm.test(\"create Program\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
													"    var jsonData = JSON.parse(responseBody);",
													"",
													"    programid = jsonData.mshied_programid; ",
													"});",
													"pm.globals.set('gProgram12',programid);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"mshied_code\": \"{{$randomInt}}code{{$randomInt}}{{$randomInt}}\",\n    \"mshied_name\": \"{{$randomInt}}Prg2{{$randomInt}}{{$randomInt}}\"\n}"
										},
										"url": {
											"raw": "{{Eresource_URL}}mshied_programs",
											"host": [
												"{{Eresource_URL}}mshied_programs"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Program 3",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var programid;",
													"pm.test(\"Create Program\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204]);",
													"    var jsonData = JSON.parse(responseBody);",
													"",
													"    programid = jsonData.mshied_programid; ",
													"});",
													"pm.globals.set('gProgram13',programid);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"mshied_code\": \"{{$randomInt}}{{$randomInt}}code{{$randomInt}}\",\n    \"mshied_name\": \"{{$randomInt}}Prg3{{$randomInt}}{{$randomInt}}\"\n}"
										},
										"url": {
											"raw": "{{Eresource_URL}}mshied_programs",
											"host": [
												"{{Eresource_URL}}mshied_programs"
											]
										}
									},
									"response": []
								},
								{
									"name": "Adding Program1 to Application Type",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Adding Program 1 record To Application Type\", function() ",
													"{",
													"    pm.expect(pm.response.code).to.be.oneOf([204,201,202,200]);",
													"    var jsonData =JSON.parse(responseBody);",
													"    var ProgName =jsonData.mshied_name;",
													"    console.log('Program that is added to Application Type is:' +ProgName);",
													"    ",
													"  ",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "OData-MaxVersion",
												"value": "4.0"
											},
											{
												"description": " ",
												"key": "OData-Version",
												"value": "4.0"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"@odata.id\": \"{{Eresource_URL}}mshied_programs({{gProgram11}})\"\r\n}"
										},
										"url": {
											"raw": "{{Eresource_URL}}cmc_applicationtypes({{gAppTypeID11}})/cmc_cmc_applicationtype_mshied_program/$ref",
											"host": [
												"{{Eresource_URL}}cmc_applicationtypes({{gAppTypeID11}})"
											],
											"path": [
												"cmc_cmc_applicationtype_mshied_program",
												"$ref"
											]
										}
									},
									"response": []
								},
								{
									"name": "Adding Program2 to Application Type",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Adding Program 2 record To Application Type\", function() ",
													"{",
													"    pm.expect(pm.response.code).to.be.oneOf([204,201,202,200]);",
													"    var jsonData =JSON.parse(responseBody);",
													"    var ProgName =jsonData.mshied_name;",
													"    console.log('Program that is added to Application Type is:' +ProgName);",
													"    ",
													"  ",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "OData-MaxVersion",
												"value": "4.0"
											},
											{
												"description": " ",
												"key": "OData-Version",
												"value": "4.0"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"@odata.id\": \"{{Eresource_URL}}mshied_programs({{gProgram12}})\"\r\n}"
										},
										"url": {
											"raw": "{{Eresource_URL}}cmc_applicationtypes({{gAppTypeID11}})/cmc_cmc_applicationtype_mshied_program/$ref",
											"host": [
												"{{Eresource_URL}}cmc_applicationtypes({{gAppTypeID11}})"
											],
											"path": [
												"cmc_cmc_applicationtype_mshied_program",
												"$ref"
											]
										}
									},
									"response": []
								},
								{
									"name": "Adding Program3 to Application Type",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Adding Program 3 record To Application Type\", function() ",
													"{",
													"    pm.expect(pm.response.code).to.be.oneOf([204,201,202,200]);",
													"    var jsonData =JSON.parse(responseBody);",
													"    var ProgName =jsonData.mshied_name;",
													"    console.log('Program that is added to Application Type is:' +ProgName);",
													"    ",
													"  ",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "OData-MaxVersion",
												"value": "4.0"
											},
											{
												"description": " ",
												"key": "OData-Version",
												"value": "4.0"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"@odata.id\": \"{{Eresource_URL}}mshied_programs({{gProgram13}})\"\r\n}"
										},
										"url": {
											"raw": "{{Eresource_URL}}cmc_applicationtypes({{gAppTypeID11}})/cmc_cmc_applicationtype_mshied_program/$ref",
											"host": [
												"{{Eresource_URL}}cmc_applicationtypes({{gAppTypeID11}})"
											],
											"path": [
												"cmc_cmc_applicationtype_mshied_program",
												"$ref"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Application Period",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var AppPerID;",
													"var AppPerName;",
													"",
													"pm.test(\"Application Period is Created\", function() ",
													"{",
													"    pm.expect(pm.response.code).to.be.oneOf([200,201,202,204]);",
													"    var jsonData =JSON.parse(responseBody);",
													"    AppPerID = jsonData.cmc_applicationperiodid;",
													"    console.log('Application Period ID is: ' +AppPerID);",
													"    ",
													"    AppPerName = jsonData.cmc_applicationperiodname;",
													"    console.log('Application Period name is: ' +AppPerName);",
													"    ",
													"    ",
													"});",
													"",
													"pm.globals.set('gAppPerID11',AppPerID);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"cmc_applicationperiodname\": \"{{$randomInt}} APName {{$randomInt}} API {{$randomInt}}{{$randomInt}}\",\r\n    \"cmc_AcademicPeriodId@odata.bind\": \"/mshied_academicperiods({{gacademicperiodid11}})\"\r\n}"
										},
										"url": {
											"raw": "{{Eresource_URL}}cmc_applicationperiods",
											"host": [
												"{{Eresource_URL}}cmc_applicationperiods"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Application Definition Version",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var AppDefnVerID;",
													"var AppDefnID;",
													"var AppDefnVerName;",
													"var AppTypeID;",
													"",
													"pm.test(\"Application Definition Version is Created\", function() ",
													"{",
													"    pm.expect(pm.response.code).to.be.oneOf([200,201,202,204]);",
													"    var jsonData =JSON.parse(responseBody);",
													"    AppDefnVerID = jsonData.cmc_applicationdefinitionversionid;",
													"    console.log('Application Definition version ID is: ' +AppDefnVerID);",
													"    AppDefnID = jsonData._cmc_applicationdefinitionid_value;",
													"    console.log('Application Definition ID that is linked is: ' +AppDefnID);",
													"    AppTypeID = jsonData._cmc_applicationtype_value;",
													"    console.log('Application Type ID that is linked is: ' +AppTypeID);",
													"    AppDefnVerName=jsonData.cmc_applicationdefinitionversionname;",
													"    console.log('Application Definition Version name is: ' +AppDefnVerName);",
													"    ",
													"    ",
													"});",
													"",
													"pm.globals.set('gAppDefnVerID11',AppDefnVerID);",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"cmc_applicationdefinitionversionname\": \"ADVName 1 {{globalsessionvalue}}{{$randomInt}}{{$randomInt}} \",\r\n    \"cmc_applicationdefinitionid@odata.bind\": \"/cmc_applicationdefinitions({{gAppDefID11}})\",\r\n    \"cmc_applicationtype@odata.bind\": \"/cmc_applicationtypes({{gAppTypeID11}})\",\r\n    \"cmc_createlifecycle\": true,\r\n    \"cmc_lifecycletype\": 175490001\r\n}"
										},
										"url": {
											"raw": "{{Eresource_URL}}cmc_applicationdefinitionversions",
											"host": [
												"{{Eresource_URL}}cmc_applicationdefinitionversions"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Application Definition Version Detail",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var AppDefnVerDetID;",
													"",
													"pm.test(\"Application Definition Version Detail is Created\", function() ",
													"{",
													"    pm.expect(pm.response.code).to.be.oneOf([200,201,202,204]);",
													"    var jsonData =JSON.parse(responseBody);",
													"    AppDefnVerDetID = jsonData.cmc_applicationdefinitionversiondetailid;",
													"    console.log('Application Definition version Detail ID is: ' +AppDefnVerDetID);",
													"    var AppDefVerName = jsonData.cmc_applicationdefinitionversiondetailname;",
													"    console.log('Application Definition Version Detail name: ' +AppDefVerName);",
													"  ",
													"        ",
													"});",
													"",
													" pm.globals.set('gAppDefnVerDetID11',AppDefnVerDetID); "
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"  var moment = require('moment');\r",
													"pm.environment.set(\"timestamp\", moment().add(1, 'days').format(\"YYYY-MM-DD\"));\r",
													"\r",
													"pm.environment.set(\"timestampEndDate\", moment().add(100, 'days').format(\"YYYY-MM-DD\"));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"cmc_applicationdefinitionversion@odata.bind\": \"/cmc_applicationdefinitionversions({{gAppDefnVerID11}})\",\r\n    \"cmc_applicationperiod@odata.bind\": \"/cmc_applicationperiods({{gAppPerID11}})\",\r\n    \"cmc_enddate\": \"{{timestampEndDate}}\",\r\n    \"cmc_startdate\": \"{{timestamp}}\"\r\n   \r\n}"
										},
										"url": {
											"raw": "{{Eresource_URL}}cmc_applicationdefinitionversiondetails",
											"host": [
												"{{Eresource_URL}}cmc_applicationdefinitionversiondetails"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Application Registration 1",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var AppRegID;",
													"var AppDefnVerID;",
													"var AppRegName;",
													"var ContactID;",
													"",
													"pm.test(\"Application Registration is Created\", function() ",
													"{",
													"    pm.expect(pm.response.code).to.be.oneOf([200,201,202,204]);",
													"    var jsonData =JSON.parse(responseBody);",
													"    AppRegID = jsonData.cmc_applicationregistrationid;",
													"    console.log('Application Registration ID is: ' +AppRegID);",
													"    AppDefnVerID = jsonData._cmc_applicationdefinitionversionid_value;",
													"    console.log('Application Definition version ID that is linked is: ' +AppDefnVerID);",
													"    AppRegName = jsonData.cmc_applicationregistration;",
													"    console.log('Application Registration name is: ' +AppRegName);",
													"    ContactID=jsonData._cmc_contactid_value;",
													"    console.log('Contact ID that is linked is: ' +ContactID);",
													"    ",
													"    ",
													"});",
													"",
													"pm.globals.set('gAppRegID11',AppRegID);",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"cmc_applicationdefinitionversionid@odata.bind\": \"/cmc_applicationdefinitionversions({{gAppDefnVerID11}})\",\r\n    \"cmc_contactid@odata.bind\": \"/contacts({{gcontactidStudent11}})\",\r\n    \"cmc_applicationstatus\": 175490000,\r\n    \"cmc_applicationsubmitted\": false\r\n}"
										},
										"url": {
											"raw": "{{Eresource_URL}}cmc_applicationregistrations",
											"host": [
												"{{Eresource_URL}}cmc_applicationregistrations"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Application 1",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var AppID;",
													"var AppName;",
													"",
													"pm.test(\"Application is Created\", function() ",
													"{",
													"    pm.expect(pm.response.code).to.be.oneOf([200,201,202,204]);",
													"    var jsonData =JSON.parse(responseBody);",
													"    AppID = jsonData.cmc_applicationid;",
													"    console.log('Application ID is: ' +AppID);",
													"    ",
													"    AppName = jsonData.cmc_applicationname;",
													"    console.log('Application name is: ' +AppName);",
													"    ",
													"    ",
													"});",
													"",
													"pm.globals.set('gAppID11',AppID);",
													"pm.globals.set('gAppName11',AppName);",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"cmc_applicationperiodid@odata.bind\": \"/cmc_applicationperiods({{gAppPerID11}})\",\r\n    \"cmc_applicationregistration@odata.bind\": \"/cmc_applicationregistrations({{gAppRegID11}})\",\r\n    \"cmc_contactid@odata.bind\": \"/contacts({{gcontactidStudent11}})\",\r\n    \"cmc_programid@odata.bind\": \"/mshied_programs({{gProgram11}})\",\r\n    \"cmc_applicationstatus\": 175490000\r\n}"
										},
										"url": {
											"raw": "{{Eresource_URL}}cmc_applications",
											"host": [
												"{{Eresource_URL}}cmc_applications"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Application Registration 2",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var AppRegID;",
													"var AppDefnVerID;",
													"var AppRegName;",
													"var ContactID;",
													"",
													"pm.test(\"Application Registration is Created\", function() ",
													"{",
													"    pm.expect(pm.response.code).to.be.oneOf([200,201,202,204]);",
													"    var jsonData =JSON.parse(responseBody);",
													"    AppRegID = jsonData.cmc_applicationregistrationid;",
													"    console.log('Application Registration ID is: ' +AppRegID);",
													"    AppDefnVerID = jsonData._cmc_applicationdefinitionversionid_value;",
													"    console.log('Application Definition version ID that is linked is: ' +AppDefnVerID);",
													"    AppRegName = jsonData.cmc_applicationregistration;",
													"    console.log('Application Registration name is: ' +AppRegName);",
													"    ContactID=jsonData._cmc_contactid_value;",
													"    console.log('Contact ID that is linked is: ' +ContactID);",
													"    ",
													"    ",
													"});",
													"",
													"pm.globals.set('gAppRegID12',AppRegID);",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"cmc_applicationdefinitionversionid@odata.bind\": \"/cmc_applicationdefinitionversions({{gAppDefnVerID11}})\",\r\n    \"cmc_contactid@odata.bind\": \"/contacts({{gcontactidStudent12}})\",\r\n    \"cmc_applicationstatus\": 175490000,\r\n    \"cmc_applicationsubmitted\": false\r\n}"
										},
										"url": {
											"raw": "{{Eresource_URL}}cmc_applicationregistrations",
											"host": [
												"{{Eresource_URL}}cmc_applicationregistrations"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Application 2",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var AppID;",
													"var AppName;",
													"",
													"pm.test(\"Application is Created\", function() ",
													"{",
													"    pm.expect(pm.response.code).to.be.oneOf([200,201,202,204]);",
													"    var jsonData =JSON.parse(responseBody);",
													"    AppID = jsonData.cmc_applicationid;",
													"    console.log('Application ID is: ' +AppID);",
													"    ",
													"    AppName = jsonData.cmc_applicationname;",
													"    console.log('Application name is: ' +AppName);",
													"    ",
													"    ",
													"});",
													"",
													"pm.globals.set('gAppID12',AppID);",
													"pm.globals.set('gAppName12',AppName);",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"cmc_applicationperiodid@odata.bind\": \"/cmc_applicationperiods({{gAppPerID11}})\",\r\n    \"cmc_applicationregistration@odata.bind\": \"/cmc_applicationregistrations({{gAppRegID12}})\",\r\n    \"cmc_contactid@odata.bind\": \"/contacts({{gcontactidStudent12}})\",\r\n    \"cmc_programid@odata.bind\": \"/mshied_programs({{gProgram12}})\",\r\n    \"cmc_applicationstatus\": 175490000\r\n}"
										},
										"url": {
											"raw": "{{Eresource_URL}}cmc_applications",
											"host": [
												"{{Eresource_URL}}cmc_applications"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Application Registration 3",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var AppRegID;",
													"var AppDefnVerID;",
													"var AppRegName;",
													"var ContactID;",
													"",
													"pm.test(\"Application Registration is Created\", function() ",
													"{",
													"    pm.expect(pm.response.code).to.be.oneOf([200,201,202,204]);",
													"    var jsonData =JSON.parse(responseBody);",
													"    AppRegID = jsonData.cmc_applicationregistrationid;",
													"    console.log('Application Registration ID is: ' +AppRegID);",
													"    AppDefnVerID = jsonData._cmc_applicationdefinitionversionid_value;",
													"    console.log('Application Definition version ID that is linked is: ' +AppDefnVerID);",
													"    AppRegName = jsonData.cmc_applicationregistration;",
													"    console.log('Application Registration name is: ' +AppRegName);",
													"    ContactID=jsonData._cmc_contactid_value;",
													"    console.log('Contact ID that is linked is: ' +ContactID);",
													"    ",
													"    ",
													"});",
													"",
													"pm.globals.set('gAppRegID13',AppRegID);",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"cmc_applicationdefinitionversionid@odata.bind\": \"/cmc_applicationdefinitionversions({{gAppDefnVerID11}})\",\r\n    \"cmc_contactid@odata.bind\": \"/contacts({{gcontactidStudent13}})\",\r\n    \"cmc_applicationstatus\": 175490000,\r\n    \"cmc_applicationsubmitted\": false\r\n}"
										},
										"url": {
											"raw": "{{Eresource_URL}}cmc_applicationregistrations",
											"host": [
												"{{Eresource_URL}}cmc_applicationregistrations"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Application 3",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var AppID;",
													"var AppName;",
													"",
													"pm.test(\"Application is Created\", function() ",
													"{",
													"    pm.expect(pm.response.code).to.be.oneOf([200,201,202,204]);",
													"    var jsonData =JSON.parse(responseBody);",
													"    AppID = jsonData.cmc_applicationid;",
													"    console.log('Application ID is: ' +AppID);",
													"    ",
													"    AppName = jsonData.cmc_applicationname;",
													"    console.log('Application name is: ' +AppName);",
													"    ",
													"    ",
													"});",
													"",
													"pm.globals.set('gAppID13',AppID);",
													"pm.globals.set('gAppName13',AppName);",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "return=representation"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{gaccess_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"cmc_applicationperiodid@odata.bind\": \"/cmc_applicationperiods({{gAppPerID11}})\",\r\n    \"cmc_applicationregistration@odata.bind\": \"/cmc_applicationregistrations({{gAppRegID13}})\",\r\n    \"cmc_contactid@odata.bind\": \"/contacts({{gcontactidStudent13}})\",\r\n    \"cmc_programid@odata.bind\": \"/mshied_programs({{gProgram13}})\",\r\n    \"cmc_applicationstatus\": 175490000\r\n}"
										},
										"url": {
											"raw": "{{Eresource_URL}}cmc_applications",
											"host": [
												"{{Eresource_URL}}cmc_applications"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "Marketing List",
					"item": [
						{
							"name": "GetToken_DCRM Student Advisor",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = JSON.parse(responseBody);",
											"postman.setGlobalVariable('gaccess_token', data.access_token);",
											"",
											"//pm.environment.set(\"Eaccess_token\", data.access_token);",
											"console.log(pm.globals.get(\"gaccess_token\"));",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "grant_type",
											"value": "client_credentials",
											"type": "text"
										},
										{
											"key": "client_id",
											"value": "{{Estudentadvisor_id}}",
											"type": "text"
										},
										{
											"key": "client_secret",
											"value": "{{Estudentadvisor_secret}}",
											"type": "text"
										},
										{
											"key": "resource",
											"value": "{{Eresource}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "https://login.microsoftonline.com/{{Eredirectid}}/oauth2/token",
									"protocol": "https",
									"host": [
										"login",
										"microsoftonline",
										"com"
									],
									"path": [
										"{{Eredirectid}}",
										"oauth2",
										"token"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Static Marketing List",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var listid;",
											"pm.test(\"Marketing List Created\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202,204]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    listid = jsonData.listid;",
											"    ",
											"    var SGName =jsonData.listname;   ",
											"    var stateid = jsonData.statecode;",
											"    console.log('ML name:'+SGName);",
											" ",
											"",
											"});",
											"",
											"pm.globals.set('glistid11', listid);",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"listname\": \"Static ScoringModel{{$randomFullName}}{{$randomInt}}{{$randomInt}}\",\r\n    \"type\": false,\r\n    \"createdfromcode\": 2,\r\n    \"cmc_marketinglisttype\": 175490000\r\n   \r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}lists",
									"host": [
										"{{Eresource_URL}}lists"
									]
								}
							},
							"response": []
						},
						{
							"name": "Adding Contacts 1,2 & 3 to Marketing List",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Contacts Addedd to Marketing list\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 204, 201, 202]);",
											"",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"List\": {\r\n        \"listid\": \"{{glistid}}\",\r\n        \"@odata.type\": \"Microsoft.Dynamics.CRM.list\"\r\n    },\r\n    \"Members\": [\r\n        {\r\n            \"@odata.type\": \"Microsoft.Dynamics.CRM.contact\",\r\n            \"contactid\": \"{{gcontactidStudent11}}\"\r\n        },\r\n        {\r\n            \"@odata.type\": \"Microsoft.Dynamics.CRM.contact\",\r\n            \"contactid\": \"{{gcontactidStudent12}}\"\r\n        },\r\n        {\r\n            \"@odata.type\": \"Microsoft.Dynamics.CRM.contact\",\r\n            \"contactid\": \"{{gcontactidStudent13}}\"\r\n        }\r\n    ]\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}AddListMembersList",
									"host": [
										"{{Eresource_URL}}AddListMembersList"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Scoring Factor",
					"item": [
						{
							"name": "Create Scoring Factor 1 with Query1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											" var scoringfactor1;",
											"pm.test(\"Scoring factor is Created\", function()",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    scoringfactor1 = jsonData.cmc_scoringfactorid;",
											"    console.log('Scoring factor ID:' +scoringfactor1);",
											"    var scoringfactorname= jsonData.cmc_scoringfactorname;",
											"    console.log('Scoring factor that is created is:' +scoringfactorname);",
											"",
											"});",
											"",
											"pm.globals.set('gscoringfactorid11',scoringfactor1);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "OData-MaxVersion",
										"value": "4.0"
									},
									{
										"description": " ",
										"key": "OData-Version",
										"value": "4.0"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_scoringfactorname\": \"SF-Application scenario5 {{globalsessionvalue}}{{$randomInt}}{{$randomInt}}\",\r\n    \"cmc_baseentity\": \"cmc_application\",\r\n    \"cmc_conditionxml\": \"<fetch version=\\\"1.0\\\" output-format=\\\"xml-platform\\\" mapping=\\\"logical\\\" distinct=\\\"false\\\"><entity name=\\\"cmc_application\\\"><attribute name=\\\"cmc_applicationid\\\"/><attribute name=\\\"createdon\\\"/><attribute name=\\\"cmc_contactid\\\"/><attribute name=\\\"cmc_applicationname\\\"/><order attribute=\\\"createdon\\\" descending=\\\"false\\\"/><link-entity name=\\\"contact\\\" from=\\\"contactid\\\" to=\\\"cmc_contactid\\\" link-type=\\\"inner\\\" alias=\\\"ac\\\"><filter type=\\\"and\\\"><condition attribute=\\\"cmc_recentsat\\\" operator=\\\"eq\\\" value=\\\"75\\\"/></filter></link-entity></entity></fetch>\",\r\n\r\n    \"cmc_points\": 50,\r\n    \"cmc_description\": \"Scoring factor for Application{{$randomInt}}\",\r\n    \"cmc_baseentityname\": \"Application\"\r\n}\r\n\r\n"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_scoringfactors",
									"host": [
										"{{Eresource_URL}}cmc_scoringfactors"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Score Definition",
					"item": [
						{
							"name": "Create ScoreDefinition",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var scoredefinitionid,targetAttribute,dateLastRun;",
											"pm.test(\"Score Definition for Application is Created\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202,204]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    scoredefinitionid =jsonData.cmc_scoredefinitionid;",
											"    console.log('Score definition ID:' +scoredefinitionid);",
											"    var scoredefinitionname= jsonData.cmc_scoredefinitionname;",
											"    console.log('Score Definition that is created is:' +scoredefinitionname);",
											"    var scheduleinterval=jsonData.cmc_scheduleinterval;",
											"    pm.globals.set('gscheduleinterval',scheduleinterval);",
											"",
											"    targetAttribute=jsonData.cmc_targetattributename;",
											"    dateLastRun=jsonData.cmc_datelastrun;",
											"});",
											"",
											"pm.globals.set('gscoredefinitionid11',scoredefinitionid);",
											"pm.globals.set('gtargetAttribute11',targetAttribute);",
											"pm.globals.set('gdateLastRun11',dateLastRun);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "OData-MaxVersion",
										"value": "4.0"
									},
									{
										"key": "OData-Version",
										"value": "4.0",
										"description": " "
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cmc_scoredefinitionname\": \"ScoreDefinition-Scenario5-{{globalsessionvalue}}{{$randomInt}}{{$randomInt}}\",\r\n    \"cmc_scheduleinterval\": 3,\r\n    \"cmc_baseentity\": \"cmc_application\",\r\n    \"cmc_targetattributename\": \"cmc_application.utcconversiontimezonecode\",\r\n    \"cmc_baseentityname\": \"Application\",\r\n    \"cmc_scoredefinitionbatchsize\": 100,\r\n    \"cmc_recalculaterecords\": false\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_scoredefinitions",
									"host": [
										"{{Eresource_URL}}cmc_scoredefinitions"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Association of ML and SF to ScoreDefinition",
					"item": [
						{
							"name": "Adding Marketing List 1 ToScoreDefinition",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Adding Marketing List To Score Definition\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
											"    var jsonData = JSON.parse(responseBody);",
											"    ",
											"    var listname = jsonData.listname;",
											"    console.log(\"Marketing list which is added to Score definition is:\"  +listname);",
											"",
											"  ",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "OData-MaxVersion",
										"value": "4.0"
									},
									{
										"description": " ",
										"key": "OData-Version",
										"value": "4.0"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"@odata.id\": \"{{Eresource_URL}}lists({{glistid11}})\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_scoredefinitions({{gscoredefinitionid11}})/cmc_scoredefinition_list/$ref",
									"host": [
										"{{Eresource_URL}}cmc_scoredefinitions({{gscoredefinitionid11}})"
									],
									"path": [
										"cmc_scoredefinition_list",
										"$ref"
									]
								}
							},
							"response": []
						},
						{
							"name": "Adding ScoringFactor 1 ToScoreDefinition",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Adding Scoring Factor To Score Definition\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([204,201,202,200]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    Scoringfactorname =jsonData.cmc_scoringfactorname;",
											"    console.log('Scoring factor that is added to Score definition is:' +Scoringfactorname);",
											"    ",
											"  ",
											"});",
											"",
											"setTimeout(function(){}, 130000); "
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									},
									{
										"key": "OData-MaxVersion",
										"value": "4.0"
									},
									{
										"description": " ",
										"key": "OData-Version",
										"value": "4.0"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"@odata.id\": \"{{Eresource_URL}}cmc_scoringfactors({{gscoringfactorid11}})\"\r\n}"
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_scoredefinitions({{gscoredefinitionid11}})/cmc_scoredefinition_scoringfactor/$ref",
									"host": [
										"{{Eresource_URL}}cmc_scoredefinitions({{gscoredefinitionid11}})"
									],
									"path": [
										"cmc_scoredefinition_scoringfactor",
										"$ref"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Verify 'Date Last Run' & 'last recalculation date' post 2nd time flow run",
					"item": [
						{
							"name": "Verify 'Date Last Run' & 'last recalculation date' in Score Definition",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var dateLastRun,lastRecalculationDate;",
											" ",
											"pm.test(\"Fetch Score definition Record\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    ",
											"    dateLastRun=jsonData.cmc_datelastrun;",
											"    lastRecalculationDate=jsonData.cmc_lastrecalculationdate;",
											"",
											"    var dateFromResponse = new Date(dateLastRun);",
											"    var convertedLastCalculatedDate =dateFromResponse.getFullYear()+\"-\"+(\"0\" + (dateFromResponse.getMonth() + 1)).slice(-2)+\"-\"+(\"0\" + (dateFromResponse.getDate())).slice(-2);",
											"",
											"    var actualcalculatedDate=pm.environment.get('timestamp');",
											"",
											"        console.log(\"actual calculated date is: \"+actualcalculatedDate);",
											"",
											"        pm.test(\"Last Calculated Date check\", function()",
											"        {",
											"            pm.expect(actualcalculatedDate).to.equal(convertedLastCalculatedDate);",
											"            console.log(\"Note, the flow has skipped this Score Definition record by picking as Schedule Interval is set as 3 days. Hence 'DateLastRun' is not updated as expected\");",
											"        }); ",
											"",
											"    var dateFromResponse1 = new Date(lastRecalculationDate);",
											"    var convertedLastRecalculationDate =dateFromResponse1.getFullYear()+\"-\"+(\"0\" + (dateFromResponse1.getMonth() + 1)).slice(-2)+\"-\"+(\"0\" + (dateFromResponse1.getDate())).slice(-2);",
											"   ",
											"        pm.test(\"Last reCalculated Date check\", function()",
											"        {",
											"            pm.expect(actualcalculatedDate).to.equal(convertedLastCalculatedDate);",
											"            console.log(\"Note, the flow has skipped this Score Definition record by picking as Schedule Interval is set as 3 days. Hence 'LastRecalculatedDate' is not updated as expected\");",
											"        }); ",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											" var moment = require('moment');\r",
											"pm.environment.set(\"timestamp\", moment().format(\"YYYY-MM-DD\"));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									}
								],
								"url": {
									"raw": "{{Eresource_URL}}cmc_scoredefinitions({{gscoredefinitionid11}})",
									"host": [
										"{{Eresource_URL}}cmc_scoredefinitions({{gscoredefinitionid11}})"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Verify Score History records",
					"item": [
						{
							"name": "Get Active ScoreHistories for Application 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var score,scoreHistoryName, retentionScoreHistoryId, targetAttribute,lastCalculatedDate, createdOn,autoname,scoreDefinition ;",
											"",
											"pm.test(\"Check the score history record for Application\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    var result=jsonData.cmc_application_retentionscorehistory_applica;",
											"",
											"    if(result.length===1)",
											"    {",
											"        retentionScoreHistoryId= result[0].cmc_retentionscorehistoryid;",
											"        score= result[0].cmc_score;",
											"        scoreHistoryName= result[0].cmc_retentionscorehistoryname;",
											"        targetAttribute= result[0].cmc_targetattribute;",
											"        lastCalculatedDate= result[0].cmc_lastcalculateddate;",
											"        createdOn= result[0].createdon;",
											"        scoreDefinition=result[0]._cmc_scoredefinitionid_value;",
											"",
											"        var dateFromResponse = new Date(lastCalculatedDate);",
											"        var convertedLastCalculatedDate =dateFromResponse.getFullYear()+\"-\"+(\"0\" + (dateFromResponse.getMonth() + 1)).slice(-2)+\"-\"+(\"0\" + (dateFromResponse.getDate())).slice(-2);",
											"        ",
											"        console.log(\"Target score in Score history record is:\" +score);",
											"        console.log(\"Score history name is:\" +scoreHistoryName);",
											"        console.log(\"Target Attribute is:\" +targetAttribute);",
											"        console.log(\"Last Calculated date is:\" +lastCalculatedDate);",
											"        console.log(\"created on is:\" +createdOn);",
											"",
											"        var actualScoreDefintion=pm.globals.get('gscoredefinitionid');",
											"        var actualTargetAttribute=\"utcconversiontimezonecode\";",
											"        var actualcalculatedDate=pm.environment.get('timestamp');",
											"",
											"        console.log(\"actual calculated date is: \"+actualcalculatedDate);",
											"",
											"        pm.test(\"Last Calculated Date check\", function()",
											"        {",
											"            pm.expect(actualcalculatedDate).to.equal(convertedLastCalculatedDate);",
											"        }); ",
											"",
											"        //Autonme Workflow check for Score History Name",
											"        nameString =scoreHistoryName.split(\"-\");",
											"        ",
											"        autoname= pm.globals.get('gAppName11')+\" \"+\"-\"+\" \"+score+\" \"+\"-\"+nameString[nameString.length-1];      ",
											"        console.log(\"Score History Autoname is: \"+autoname);",
											"               ",
											"        pm.test(\"Autonme Workflow check for Score History Name\", function()",
											"        {",
											"            pm.expect(scoreHistoryName).to.equal(autoname);",
											"        });",
											"         ",
											"        pm.test(\"Score value in Score History record\", function()",
											"        {",
											"            pm.expect(score).to.equal(50);",
											"        });",
											"",
											"        pm.test(\"Score Definition check\", function()",
											"        {",
											"            pm.expect(actualScoreDefintion).to.equal(scoreDefinition);",
											"        });",
											"",
											"        pm.test(\"Target Attribute check\", function()",
											"        {",
											"            pm.expect(actualTargetAttribute).to.equal(targetAttribute);",
											"        });  ",
											"        ",
											"    }",
											"    else",
											"    {",
											"        console.log(\"Active Score history record does't exist\");",
											"        throw new Error();",
											"    }",
											"",
											"    ",
											"});",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											" var moment = require('moment');\r",
											"pm.environment.set(\"timestamp\", moment().format(\"YYYY-MM-DD\"));"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applications({{gAppID11}})?$expand=cmc_application_retentionscorehistory_applica\n($filter=statecode eq 0)\n",
									"host": [
										"{{Eresource_URL}}cmc_applications({{gAppID11}})"
									],
									"query": [
										{
											"key": "$expand",
											"value": "cmc_application_retentionscorehistory_applica\n($filter=statecode eq 0)\n"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Active ScoreHistories for Application 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var score,scoreHistoryName, retentionScoreHistoryId, targetAttribute,lastCalculatedDate, createdOn,autoname,scoreDefinition ;",
											"",
											"pm.test(\"Check the score history record for Application\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    var result=jsonData.cmc_application_retentionscorehistory_applica;",
											"",
											"    if(result.length===1)",
											"    {",
											"        retentionScoreHistoryId= result[0].cmc_retentionscorehistoryid;",
											"        score= result[0].cmc_score;",
											"        scoreHistoryName= result[0].cmc_retentionscorehistoryname;",
											"        targetAttribute= result[0].cmc_targetattribute;",
											"        lastCalculatedDate= result[0].cmc_lastcalculateddate;",
											"        createdOn= result[0].createdon;",
											"        scoreDefinition=result[0]._cmc_scoredefinitionid_value;",
											"",
											"        var dateFromResponse = new Date(lastCalculatedDate);",
											"        var convertedLastCalculatedDate =dateFromResponse.getFullYear()+\"-\"+(\"0\" + (dateFromResponse.getMonth() + 1)).slice(-2)+\"-\"+(\"0\" + (dateFromResponse.getDate())).slice(-2);",
											"        ",
											"        console.log(\"Target score in Score history record is:\" +score);",
											"        console.log(\"Score history name is:\" +scoreHistoryName);",
											"        console.log(\"Target Attribute is:\" +targetAttribute);",
											"        console.log(\"Last Calculated date is:\" +lastCalculatedDate);",
											"        console.log(\"created on is:\" +createdOn);",
											"",
											"        var actualScoreDefintion=pm.globals.get('gscoredefinitionid');",
											"        var actualTargetAttribute=\"utcconversiontimezonecode\";",
											"        var actualcalculatedDate=pm.environment.get('timestamp');",
											"",
											"        console.log(\"actual calculated date is: \"+actualcalculatedDate);",
											"",
											"        pm.test(\"Last Calculated Date check\", function()",
											"        {",
											"            pm.expect(actualcalculatedDate).to.equal(convertedLastCalculatedDate);",
											"        }); ",
											"",
											"        //Autonme Workflow check for Score History Name",
											"        nameString =scoreHistoryName.split(\"-\");",
											"        ",
											"        autoname= pm.globals.get('gAppName12')+\" \"+\"-\"+\" \"+score+\" \"+\"-\"+nameString[nameString.length-1];      ",
											"        console.log(\"Score History Autoname is: \"+autoname);",
											"               ",
											"        pm.test(\"Autonme Workflow check for Score History Name\", function()",
											"        {",
											"            pm.expect(scoreHistoryName).to.equal(autoname);",
											"        });",
											"         ",
											"        pm.test(\"Score value in Score History record\", function()",
											"        {",
											"            pm.expect(score).to.equal(50);",
											"        });",
											"",
											"        pm.test(\"Score Definition check\", function()",
											"        {",
											"            pm.expect(actualScoreDefintion).to.equal(scoreDefinition);",
											"        });",
											"",
											"        pm.test(\"Target Attribute check\", function()",
											"        {",
											"            pm.expect(actualTargetAttribute).to.equal(targetAttribute);",
											"        });  ",
											"        ",
											"    }",
											"    else",
											"    {",
											"        console.log(\"Active Score history record does't exist\");",
											"        throw new Error();",
											"    }",
											"",
											"    ",
											"});",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											" var moment = require('moment');\r",
											"pm.environment.set(\"timestamp\", moment().format(\"YYYY-MM-DD\"));"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applications({{gAppID12}})?$expand=cmc_application_retentionscorehistory_applica\n($filter=statecode eq 0)\n",
									"host": [
										"{{Eresource_URL}}cmc_applications({{gAppID12}})"
									],
									"query": [
										{
											"key": "$expand",
											"value": "cmc_application_retentionscorehistory_applica\n($filter=statecode eq 0)\n"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Active ScoreHistories for Application 3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var score,scoreHistoryName, retentionScoreHistoryId, targetAttribute,lastCalculatedDate, createdOn,autoname,scoreDefinition ;",
											"",
											"pm.test(\"Check the score history record for Application\", function() ",
											"{",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
											"    var jsonData =JSON.parse(responseBody);",
											"    var result=jsonData.cmc_application_retentionscorehistory_applica;",
											"",
											"    if(result.length===1)",
											"    {",
											"        retentionScoreHistoryId= result[0].cmc_retentionscorehistoryid;",
											"        score= result[0].cmc_score;",
											"        scoreHistoryName= result[0].cmc_retentionscorehistoryname;",
											"        targetAttribute= result[0].cmc_targetattribute;",
											"        lastCalculatedDate= result[0].cmc_lastcalculateddate;",
											"        createdOn= result[0].createdon;",
											"        scoreDefinition=result[0]._cmc_scoredefinitionid_value;",
											"",
											"        var dateFromResponse = new Date(lastCalculatedDate);",
											"        var convertedLastCalculatedDate =dateFromResponse.getFullYear()+\"-\"+(\"0\" + (dateFromResponse.getMonth() + 1)).slice(-2)+\"-\"+(\"0\" + (dateFromResponse.getDate())).slice(-2);",
											"        ",
											"        console.log(\"Target score in Score history record is:\" +score);",
											"        console.log(\"Score history name is:\" +scoreHistoryName);",
											"        console.log(\"Target Attribute is:\" +targetAttribute);",
											"        console.log(\"Last Calculated date is:\" +lastCalculatedDate);",
											"        console.log(\"created on is:\" +createdOn);",
											"",
											"        var actualScoreDefintion=pm.globals.get('gscoredefinitionid');",
											"        var actualTargetAttribute=\"utcconversiontimezonecode\";",
											"        var actualcalculatedDate=pm.environment.get('timestamp');",
											"",
											"        console.log(\"actual calculated date is: \"+actualcalculatedDate);",
											"",
											"        pm.test(\"Last Calculated Date check\", function()",
											"        {",
											"            pm.expect(actualcalculatedDate).to.equal(convertedLastCalculatedDate);",
											"        }); ",
											"",
											"        //Autonme Workflow check for Score History Name",
											"        nameString =scoreHistoryName.split(\"-\");",
											"        ",
											"        autoname= pm.globals.get('gAppName13')+\" \"+\"-\"+\" \"+score+\" \"+\"-\"+nameString[nameString.length-1];      ",
											"        console.log(\"Score History Autoname is: \"+autoname);",
											"               ",
											"        pm.test(\"Autonme Workflow check for Score History Name\", function()",
											"        {",
											"            pm.expect(scoreHistoryName).to.equal(autoname);",
											"        });",
											"         ",
											"        pm.test(\"Score value in Score History record\", function()",
											"        {",
											"            pm.expect(score).to.equal(50);",
											"        });",
											"",
											"        pm.test(\"Score Definition check\", function()",
											"        {",
											"            pm.expect(actualScoreDefintion).to.equal(scoreDefinition);",
											"        });",
											"",
											"        pm.test(\"Target Attribute check\", function()",
											"        {",
											"            pm.expect(actualTargetAttribute).to.equal(targetAttribute);",
											"        });  ",
											"        ",
											"    }",
											"    else",
											"    {",
											"        console.log(\"Active Score history record does't exist\");",
											"        throw new Error();",
											"    }",
											"",
											"    ",
											"});",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{gaccess_token}}"
									},
									{
										"key": "Prefer",
										"value": "return=representation"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{Eresource_URL}}cmc_applications({{gAppID13}})?$expand=cmc_application_retentionscorehistory_applica\n($filter=statecode eq 0)\n",
									"host": [
										"{{Eresource_URL}}cmc_applications({{gAppID13}})"
									],
									"query": [
										{
											"key": "$expand",
											"value": "cmc_application_retentionscorehistory_applica\n($filter=statecode eq 0)\n"
										}
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Deactivate ScoreDefinition record",
			"item": [
				{
					"name": "Deactivate ScoreDefinition record",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var scoredefinitionid;",
									"pm.test(\"Deactivate Score Definition\", function() ",
									"{",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,202,204]);",
									"    var jsonData =JSON.parse(responseBody);",
									"    scoredefinitionid =jsonData.cmc_scoredefinitionid;",
									"    console.log('Score definition ID:' +scoredefinitionid);",
									"    var scoredefinitionname= jsonData.cmc_scoredefinitionname;",
									"    console.log('Score Definition that is created is:' +scoredefinitionname);",
									"    var scheduleinterval=jsonData.cmc_scheduleinterval;",
									"    pm.globals.set('gscheduleinterval',scheduleinterval);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{gaccess_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Prefer",
								"value": "return=representation"
							},
							{
								"key": "OData-MaxVersion",
								"value": "4.0"
							},
							{
								"description": " ",
								"key": "OData-Version",
								"value": "4.0"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"statecode\": 1,\r\n    \"statuscode\": 2\r\n}"
						},
						"url": {
							"raw": "{{Eresource_URL}}cmc_scoredefinitions({{gscoredefinitionid}})",
							"host": [
								"{{Eresource_URL}}cmc_scoredefinitions({{gscoredefinitionid}})"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}